var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,1.406,1,2.247]],["body/components/AboutPage.html",[0,1.844,1,3.26,2,2.767,3,0.113,4,0.054,5,1.924,6,1.924,7,1.924,8,1.924,9,0.049,10,3.157,11,0.972,12,3.201,13,1.711,14,4.139,15,3.663,16,2.409,17,6.275,18,2.409,19,5.264,20,0.194,21,1.1,22,3.541,23,1.266,24,0.972,25,3.549,26,3.549,27,0.729,28,0.007,29,1.348,30,0.087,31,0.22,32,0.054,33,0.163,34,4.684,35,4.655,36,5.264,37,5.264,38,5.264,39,5.264,40,5.264,41,5.264,42,5.264,43,5.264,44,5.264,45,5.264,46,3.166,47,4.154,48,2.22,49,2.316,50,2.22,51,3.679,52,2.058,53,1.988,54,4.299,55,2.134,56,2.732,57,2.949,58,4.154,59,3.925,60,5.264,61,4.175,62,4.46,63,2.22,64,2.058,65,4.342,66,2.871,67,2.134,68,5.588,69,4.015,70,3.515,71,4.342,72,2.22,73,3.515,74,2.949,75,3.774,76,5.583,77,3.228,78,3.052,79,3.549,80,2.058,81,2.058,82,2.606,83,1.988,84,3.889,85,1.988,86,1.988,87,1.924,88,4.726,89,2.949,90,2.553,91,2.553,92,3.889,93,1.865,94,4.015,95,4.301,96,4.154,97,2.9,98,2.316,99,2.949,100,3.787,101,3.515,102,3.435,103,4.662,104,2.22,105,2.425,106,5.264,107,2.949,108,3.549,109,2.949,110,3.052,111,2.134,112,2.767,113,2.22,114,2.316,115,2.9,116,2.707,117,2.9,118,3.157,119,5.264,120,2.553,121,1.474,122,2.854,123,2.854,124,1.711,125,3.764,126,1.924,127,0.487,128,1.924,129,1.711,130,1.924,131,1.865,132,1.759,133,1.924,134,1.583,135,1.924,136,1.666,137,1.924,138,1.666,139,1.241,140,2.854,141,1.666,142,1.924,143,1.666,144,1.924,145,1.624,146,1.025,147,2.854,148,1.624,149,1.924,150,1.624,151,2.854,152,1.624,153,1.744,154,1.711,155,1.624,156,1.924,157,1.624,158,1.759,159,1.865,160,1.865,161,1.666,162,1.865,163,1.924,164,0.004,165,0.004]],["title/modules/AboutPageModule.html",[166,1.743,167,3.65]],["body/modules/AboutPageModule.html",[1,4.347,3,0.097,4,0.097,9,0.087,28,0.007,30,0.23,31,0.395,32,0.097,33,0.292,121,2.638,164,0.005,165,0.005,166,2.314,167,7.227,168,2.7,169,3.339,170,4.918,171,3.683,172,3.444,173,2.834,174,5.651,175,5.651,176,5.651,177,6.66,178,4.538,179,3.683,180,3.683,181,6.352,182,3.492,183,3.581,184,4.895,185,3.82,186,5.969,187,3.241,188,4.538,189,1.832,190,3.973,191,5.651,192,4.895,193,2.834,194,2.906]],["title/modules/AboutPageRoutingModule.html",[166,1.743,177,3.442]],["body/modules/AboutPageRoutingModule.html",[0,2.048,1,3.887,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,164,0.006,165,0.006,168,2.964,173,3.111,177,5.956,182,3.111,183,3.788,191,6.203,195,6.972,196,4.193,197,4.788,198,4.979,199,3.456,200,1.219,201,3.111,202,4.361]],["title/components/AppComponent.html",[0,1.406,129,2.308]],["body/components/AppComponent.html",[0,1.542,1,1.251,2,2.22,3,0.041,4,0.041,5,1.444,6,3.238,7,1.444,8,1.444,9,0.037,13,1.285,14,3.958,15,3.496,16,1.933,18,1.933,20,0.146,21,0.883,23,0.852,24,1.202,27,0.867,28,0.007,29,1.605,30,0.146,31,0.165,32,0.041,33,0.122,34,5.313,35,4.477,47,4.934,53,1.492,54,3.043,55,1.602,56,3.279,57,1.492,58,4.219,61,4.529,62,3.592,63,1.666,64,3.463,65,3.282,66,2.401,67,3.592,68,3.039,70,3.881,71,4.71,72,1.666,73,2.94,74,2.94,75,1.602,77,2.835,78,1.545,82,1.754,83,1.492,84,3.346,85,2.366,86,2.366,87,3.238,88,4.345,92,2.366,93,1.4,94,2.032,96,3.881,97,2.177,99,3.881,101,4.75,103,1.545,104,1.666,107,2.94,109,5.002,110,3.463,111,3.916,113,1.666,121,1.106,122,2.29,123,2.29,124,1.285,125,3.238,126,1.444,127,0.505,128,1.444,129,2.88,130,1.444,131,1.4,132,1.321,133,1.444,134,1.189,135,1.444,136,1.251,137,1.444,138,1.251,139,0.931,140,2.29,141,1.251,142,1.444,143,1.251,144,1.444,145,1.219,146,0.822,147,2.29,148,1.219,149,1.444,150,1.219,151,2.29,152,1.219,153,1.459,154,1.285,155,1.219,156,1.444,157,1.219,158,1.321,159,1.4,160,1.4,161,1.251,162,1.4,163,1.444,164,0.003,165,0.003,199,1.321,203,2.37,204,0.837,205,5.248,206,4.224,207,0.505,208,2.13,209,4.072,210,5.248,211,3.758,212,6.511,213,2.664,214,4.984,215,2.905,216,5.223,217,4.224,218,0.898,219,0.327,220,0.675,221,3.758,222,0.479,223,2.664,224,3.758,225,2.664,226,2.664,227,2.664,228,2.664,229,1.189,230,0.981,231,4.224,232,2.37,233,2.664,234,2.664,235,2.664,236,2.37,237,5.972,238,5.972,239,5.972,240,3.758,241,2.756,242,4.224,243,5.972,244,4.224,245,4.224,246,4.224,247,4.224,248,4.224,249,4.224,250,4.224,251,3.043,252,3.043,253,5.32,254,4.737,255,2.664,256,5.972,257,1.917,258,1.917,259,5.248,260,6.511,261,2.177,262,6.164,263,1.917,264,7.26,265,4.497,266,5.972,267,5.32,268,3.451,269,4.21,270,2.664,271,4.224,272,3.776,273,3.463,274,1.571,275,5.972,276,2.37,277,3.776,278,2.664,279,5.248,280,2.664,281,3.451,282,1.821,283,2.664,284,1.917,285,5.248,286,1.447,287,1.251,288,2.664,289,2.664,290,1.917,291,2.177,292,2.664,293,1.821,294,2.449,295,2.664,296,2.664,297,3.758,298,2.37,299,5.248]],["title/modules/AppModule.html",[166,1.743,300,3.65]],["body/modules/AppModule.html",[3,0.06,4,0.06,9,0.054,15,1.572,28,0.007,30,0.232,31,0.246,32,0.087,33,0.182,121,1.644,129,4.344,132,1.963,153,1.858,164,0.004,165,0.004,166,1.442,168,1.683,169,2.081,170,3.876,171,3.876,172,3.092,173,1.767,178,3.307,179,2.296,180,2.296,182,2.545,183,2.609,187,2.02,188,2.296,189,1.142,190,2.477,192,2.477,193,2.982,194,1.812,199,1.963,300,6.8,301,3.523,302,3.523,303,3.523,304,3.523,305,5.808,306,5.517,307,3.235,308,5.703,309,6.684,310,5.703,311,3.523,312,3.235,313,5.703,314,5.703,315,3.959,316,4.659,317,4.659,318,4.659,319,4.659,320,4.659,321,4.659,322,4.659,323,4.659,324,4.659,325,4.659,326,5.703,327,3.744,328,3.959,329,4.35,330,4.35,331,4.35,332,4.659,333,4.659,334,4.659,335,4.659,336,4.659,337,3.092,338,3.092,339,4.659,340,4.659,341,3.959,342,5.703,343,2.167,344,3.744,345,3.959,346,4.103,347,5.074,348,4.659,349,5.947,350,3.235,351,2.435,352,5.703,353,5.703,354,3.959,355,3.523,356,5.947,357,3.959,358,3.02,359,3.523,360,4.659,361,4.659,362,5.098,363,3.959,364,3.959,365,5.074,366,1.963,367,1.724,368,2.545,369,3.959,370,3.523,371,0.483,372,1.142,373,3.959,374,3.959,375,2.584,376,3.959,377,3.959,378,7.114,379,3.523,380,3.235,381,3.523,382,7.313,383,9.008,384,3.02,385,2.296,386,1.963,387,6.684,388,3.959,389,3.959,390,3.959,391,3.959,392,3.235,393,3.959,394,3.959,395,3.959,396,6.684,397,3.959,398,3.959,399,3.959,400,3.959,401,3.959,402,3.959,403,3.959,404,3.523,405,3.959,406,3.959,407,3.523,408,3.959,409,3.235,410,3.959,411,3.523,412,3.959,413,3.523,414,3.959,415,3.959,416,3.959]],["title/modules/AppRoutingModule.html",[166,1.743,305,3.442]],["body/modules/AppRoutingModule.html",[3,0.083,4,0.083,9,0.075,28,0.007,30,0.205,31,0.34,32,0.083,33,0.251,68,3.933,159,3.74,164,0.005,165,0.005,168,2.324,173,2.439,182,2.439,183,3.256,196,3.288,197,4.29,198,4.28,199,2.71,200,0.956,201,4.185,305,5.12,385,3.17,386,2.71,417,5.467,418,7.116,419,7.411,420,5.467,421,6.464,422,5.467,423,5.467,424,5.467,425,5.467,426,7.116,427,5.467,428,5.467,429,3.933,430,9.196,431,9.07,432,5.467,433,9.07,434,5.467,435,4.17,436,5.467,437,5.467,438,3.567,439,5.467,440,5.467,441,5.467,442,5.467,443,5.467,444,5.467,445,5.467,446,5.467,447,5.467,448,5.467,449,5.467,450,5.467,451,5.467,452,5.467,453,5.467]],["title/injectables/BaseAuthenticationService.html",[215,2.135,454,0.462]],["body/injectables/BaseAuthenticationService.html",[3,0.069,4,0.069,9,0.063,11,0.841,20,0.249,21,1.315,23,1.27,24,1.717,27,1.734,28,0.007,30,0.2,31,0.283,32,0.069,33,0.209,127,0.604,164,0.004,165,0.004,204,0.902,207,0.753,208,3.636,215,2.808,218,1.655,219,0.497,220,1.243,222,0.531,274,2.683,372,2.436,454,0.607,455,1.53,456,5.855,457,3.473,458,4.766,459,5.143,460,5.143,461,5.143,462,5.143,463,4.801,464,8.511,465,4.867,466,4.107,467,5.936,468,3.937,469,5.143,470,4.554,471,3.576,472,6.294,473,3.72,474,4.554,475,4.301,476,4.554,477,1.979,478,4.801,479,4.554,480,3.473,481,4.554,482,5.6,483,4.554,484,4.051,485,5.143,486,5.894,487,3.301,488,1.983,489,4.219,490,2.576,491,3.077,492,6.358,493,4.554,494,4.051,495,5.143,496,4.554,497,5.143,498,4.554,499,5.143,500,4.051,501,5.143,502,4.554,503,1.363,504,3.786,505,4.051,506,0.902,507,2.469,508,1.058,509,2.393,510,0.919,511,4.554,512,4.554,513,4.554,514,4.554,515,4.554,516,4.554,517,4.554,518,3.72]],["title/classes/BaseMediaService.html",[33,0.22,519,2.372]],["body/classes/BaseMediaService.html",[3,0.107,4,0.107,9,0.096,20,0.383,21,1.732,24,1.29,27,1.435,28,0.007,30,0.171,32,0.107,33,0.321,127,0.542,164,0.006,165,0.006,218,1.486,219,0.383,220,1.116,456,5.185,464,8.133,477,1.88,506,1.385,519,4.11,520,4.202,521,3.672,522,6.773,523,6.773,524,4.957,525,6.987]],["title/injectables/BaseRepositoryFirebaseService.html",[454,0.462,526,3.909]],["body/injectables/BaseRepositoryFirebaseService.html",[3,0.057,4,0.057,9,0.052,11,0.693,15,1.491,20,0.206,21,1.147,23,1.107,24,1.58,27,1.628,28,0.007,30,0.209,31,0.233,32,0.057,33,0.172,66,2.511,127,0.635,164,0.004,165,0.004,200,1.386,204,0.744,207,0.656,218,1.741,219,0.448,220,1.307,222,0.657,230,1.989,338,2.037,371,1.062,454,0.53,455,1.262,458,3.409,477,1.85,503,1.124,506,0.744,508,0.873,510,0.758,526,4.485,527,6.636,528,4.085,529,2.451,530,5.771,531,4.057,532,2.885,533,2.577,534,2.721,535,2.885,536,3.216,537,4.883,538,2.8,539,2.349,540,4.948,541,1.803,542,1.912,543,4.883,544,3.183,545,2.449,546,3.146,547,3.756,548,3.537,549,2.511,550,3.756,551,1.165,552,2.104,553,1.172,554,1.809,555,3.301,556,3.046,557,3.756,558,1.978,559,2.8,560,3.756,561,4.883,562,3.756,563,3.342,564,2.449,565,3.756,566,3.342,567,2.259,568,2.259,569,2.349,570,2.702,571,2.567,572,3.069,573,3.342,574,3.342,575,3.069,576,3.342,577,3.342,578,3.342,579,3.756,580,3.342,581,4.883,582,3.342,583,2.259,584,1.844,585,3.342,586,2.449,587,1.612,588,1.597,589,3.069,590,1.974,591,1.862,592,1.458,593,1.764,594,0.645,595,0.771,596,2.702,597,3.756,598,2.178,599,2.702,600,2.349,601,2.865,602,3.342,603,3.069,604,7.134,605,3.342,606,3.756,607,3.342,608,4.883,609,3.342,610,3.342,611,3.342,612,3.342,613,3.342,614,3.342,615,3.342,616,3.342,617,5.771,618,5.771,619,2.178,620,3.756,621,5.771,622,4.433,623,4.883,624,4.883,625,3.342,626,3.069,627,1.262,628,3.342,629,3.342,630,3.342,631,3.342,632,3.342,633,3.342,634,3.342,635,3.342,636,3.756,637,3.756,638,3.342]],["title/injectables/BaseRepositoryHttpService.html",[454,0.462,639,2.774]],["body/injectables/BaseRepositoryHttpService.html",[3,0.068,4,0.068,9,0.062,11,0.829,20,0.246,21,1.303,23,1.257,24,1.552,27,1.669,28,0.007,30,0.224,31,0.279,32,0.068,33,0.206,82,1.865,127,0.653,164,0.004,165,0.004,204,0.89,215,2.003,218,1.789,219,0.461,220,1.343,222,0.688,229,2.003,343,1.706,351,2.817,366,2.226,367,1.955,368,2.003,371,0.992,454,0.601,455,1.508,458,4.271,477,1.943,503,1.344,504,4.652,506,0.89,508,1.043,510,0.906,527,6.579,528,4.05,532,3.276,533,2.927,534,3.09,535,3.276,538,3.18,541,1.733,542,1.919,545,2.781,546,3.001,548,3.451,549,2.852,551,0.946,552,2.515,553,1.042,554,1.634,555,3.749,556,3.362,558,1.369,559,3.18,564,2.781,584,1.508,586,2.781,587,1.831,588,1.909,590,2.36,591,2.226,592,1.743,593,2.108,594,0.771,595,0.922,598,2.604,639,3.614,640,3.995,641,3.068,642,2.453,643,4.065,644,3.614,645,4.49,646,3.18,647,4.49,648,4.49,649,4.49,650,4.49,651,4.49,652,2.604,653,3.068,654,2.515,655,2.808,656,1.955,657,3.068,658,2.108,659,3.669,660,3.425,661,2.808,662,1.955,663,1.508,664,2.515,665,2.808,666,2.808,667,2.808,668,2.808,669,2.003,670,3.276,671,2.808,672,2.808,673,2.808,674,3.995,675,2.054,676,1.743,677,2.434,678,4.49,679,3.23,680,4.49,681,4.49,682,4.49,683,4.49,684,4.49,685,4.49]],["title/injectables/BaseRespositoryLocalStorageService.html",[454,0.462,686,3.909]],["body/injectables/BaseRespositoryLocalStorageService.html",[3,0.065,4,0.065,9,0.059,11,0.79,20,0.382,21,1.26,23,0.864,24,1.604,27,1.701,28,0.007,30,0.208,31,0.266,32,0.065,33,0.197,82,2.504,127,0.643,164,0.004,165,0.004,200,0.749,204,0.848,207,0.721,218,1.762,219,0.466,220,1.323,222,0.673,230,1.622,286,1.467,371,0.975,372,2.013,454,0.582,455,1.438,477,1.905,490,1.839,491,2.196,503,1.281,506,0.848,508,0.995,510,0.864,527,6.739,528,4.148,532,3.169,533,2.831,534,2.989,535,3.169,538,3.076,541,1.676,542,1.871,545,2.69,546,3.037,548,3.563,549,2.759,551,1.095,552,2.398,553,1.021,554,1.729,555,3.626,556,3.277,558,1.306,559,3.076,564,2.69,586,2.69,587,1.771,588,1.82,590,2.25,591,2.122,592,1.662,593,2.01,594,0.735,595,0.879,619,2.482,627,1.438,644,2.482,654,2.398,686,4.926,687,5.314,688,2.926,689,6.029,690,6.979,691,4.281,692,4.281,693,4.281,694,4.281,695,3.809,696,4.281,697,4.281,698,4.281,699,4.281,700,4.281,701,4.281,702,4.281,703,4.281,704,4.281,705,4.281,706,4.281,707,4.281,708,4.281,709,4.281,710,4.281,711,4.281,712,4.281,713,4.281,714,4.281,715,4.281,716,4.281,717,4.281,718,4.281,719,6.979,720,6.979,721,4.281,722,6.029,723,6.029,724,4.281,725,4.281,726,3.496,727,6.029,728,6.029,729,4.281,730,4.281]],["title/injectables/BaseService.html",[454,0.462,731,3.122]],["body/injectables/BaseService.html",[3,0.073,4,0.073,9,0.066,11,0.88,20,0.261,21,1.358,23,1.311,24,1.647,27,1.8,28,0.007,30,0.215,31,0.296,32,0.073,33,0.219,127,0.68,164,0.005,165,0.005,204,0.945,218,1.865,219,0.48,220,1.4,222,0.666,286,2.226,371,1.013,454,0.627,455,1.602,456,5.659,458,2.507,477,2.005,490,1.455,491,1.737,503,1.428,506,0.945,510,0.962,528,3.051,532,3.415,533,3.051,534,4.423,535,3.415,538,3.315,545,2.899,546,3.057,548,3.705,549,2.973,551,0.977,552,3.64,553,1.202,554,1.895,555,4.445,556,3.47,558,1.982,559,3.315,564,2.899,586,3.541,588,2.028,592,1.852,593,2.24,594,0.819,595,0.979,675,2.973,677,2.586,731,4.24,732,4.244,733,3.432,734,4.77,735,4.77,736,4.77,737,4.77,738,4.77,739,4.77,740,2.983,741,4.77,742,4.77,743,4.064,744,4.77,745,2.869,746,3.897,747,3.897,748,2.182,749,4.77,750,4.77,751,4.77,752,4.77,753,4.77,754,4.77,755,4.77,756,4.244]],["title/pipes/CapitalizePipe.html",[757,2.993,758,3.909]],["body/pipes/CapitalizePipe.html",[3,0.104,4,0.104,9,0.093,11,1.254,13,3.277,21,1.42,24,1.254,27,1.395,28,0.007,30,0.166,31,0.422,32,0.104,33,0.312,127,0.678,164,0.006,165,0.006,218,1.445,219,0.372,220,1.085,222,0.682,371,0.995,491,3.182,757,5.099,758,6.661,759,5.552,760,6.045,761,8.153,762,4.25,763,8.153,764,6.795,765,7.254,766,6.795,767,6.795,768,6.795,769,6.795]],["title/injectables/CohereService.html",[454,0.462,770,3.65]],["body/injectables/CohereService.html",[3,0.075,4,0.075,9,0.067,20,0.269,21,1.385,23,0.99,24,1.482,27,1.008,28,0.007,30,0.205,31,0.305,32,0.075,33,0.225,64,2.846,82,2.038,87,2.661,112,2.58,127,0.514,153,1.842,164,0.005,165,0.005,200,1.159,204,0.973,207,0.792,218,1.409,219,0.44,220,1.058,222,0.65,230,2.007,241,4.323,267,4.01,287,2.305,290,3.531,343,1.865,351,2.925,358,3.744,359,4.367,366,2.433,367,2.884,368,3.346,371,0.809,372,1.415,392,6.127,454,0.639,455,1.649,477,1.595,490,2.021,491,2.413,506,0.973,510,0.99,584,1.649,592,1.906,641,3.354,643,3.942,646,3.38,664,4.498,757,3.07,770,5.053,771,4.367,772,5.894,773,6.625,774,6.625,775,7.144,776,4.908,777,4.766,778,6.625,779,4.908,780,6.625,781,6.625,782,4.908,783,4.01,784,3.195,785,6.625,786,2.367,787,2.367,788,4.908,789,4.908,790,6.625,791,4.908,792,4.908,793,4.908,794,5.053,795,6.672,796,4.908,797,7.499,798,4.908,799,4.908,800,4.908,801,4.908,802,7.216,803,4.908,804,4.908,805,4.908,806,4.367,807,4.908,808,4.908,809,4.908,810,4.367,811,4.908,812,7.499,813,4.908,814,4.908,815,4.908,816,4.908,817,4.367,818,4.908,819,4.908,820,4.908,821,4.908,822,4.908,823,4.908,824,4.908,825,3.744,826,4.908,827,4.908,828,4.908,829,4.908,830,4.908,831,4.908,832,4.908,833,4.908,834,4.908,835,4.908,836,4.908,837,4.908,838,4.908,839,4.908,840,4.908,841,4.908,842,4.908,843,4.908,844,4.367,845,4.908]],["title/interfaces/CollectionChange.html",[846,0.016,847,2.878]],["body/interfaces/CollectionChange.html",[3,0.099,4,0.099,9,0.09,20,0.357,28,0.007,29,2.477,30,0.195,32,0.121,164,0.006,165,0.006,207,0.951,219,0.516,220,1.27,222,0.674,477,1.691,506,1.292,546,3.061,551,1.18,592,2.531,593,3.061,846,0.027,847,4.782,848,1.06,849,4.254,850,5.327,851,2.189,852,5.598,853,5.598,854,5.598,855,3.921,856,5.327,857,5.327]],["title/interfaces/Comment.html",[846,0.016,858,2.774]],["body/interfaces/Comment.html",[3,0.096,4,0.096,9,0.087,20,0.346,28,0.007,30,0.191,32,0.096,93,4.643,164,0.005,165,0.005,207,0.933,219,0.506,220,1.245,222,0.714,274,3.52,488,3.846,592,3.284,627,2.841,846,0.022,848,1.027,858,4.521,859,5.618,860,2.424,861,3.669,862,7.218,863,3.218,864,6.912,865,4.817,866,6.315]],["title/injectables/CommentsMappingFirebaseService.html",[454,0.462,867,3.65]],["body/injectables/CommentsMappingFirebaseService.html",[3,0.061,4,0.061,9,0.055,11,0.741,20,0.22,21,1.204,23,0.81,24,1.606,27,1.715,28,0.007,30,0.204,31,0.249,32,0.088,33,0.184,93,3.54,127,0.663,164,0.004,165,0.004,200,0.702,204,0.795,207,0.689,218,1.818,219,0.427,220,1.365,222,0.542,230,1.565,338,2.176,371,1.02,372,1.158,386,2.855,454,0.556,455,1.348,458,2.11,487,3.565,488,2.932,503,1.201,508,0.933,510,0.81,529,2.619,531,4.213,539,2.51,541,2.455,542,1.544,544,3.339,551,0.761,553,1.173,554,1.779,558,1.756,567,2.414,568,2.414,569,2.51,571,2.743,583,2.414,587,1.179,591,1.99,594,1.157,595,0.824,600,2.51,622,3.936,627,1.348,846,0.014,851,2.164,858,5.237,861,2.797,862,5.503,863,2.453,864,3.279,867,4.393,868,6.736,869,3.339,870,3.339,871,3.339,872,3.339,873,3.339,874,3.339,875,3.339,876,5.759,877,2.055,878,4.014,879,2.055,880,4.014,881,2.055,882,4.014,883,3.226,884,4.213,885,4.014,886,2.055,887,4.014,888,2.055,889,4.014,890,6.638,891,2.055,892,4.014,893,4.846,894,2.743,895,4.393,896,3.062,897,3.062,898,4.705,899,6.547,900,6.547,901,4.395,902,6.013,903,5.124,904,3.571,905,4.705,906,2.203,907,3.571,908,3.571,909,3.279,910,3.571,911,1.748,912,3.279,913,4.603,914,1.558,915,3.279,916,3.062,917,3.062,918,3.905]],["title/injectables/CommentsRepositoryFirebaseService.html",[454,0.462,919,3.909]],["body/injectables/CommentsRepositoryFirebaseService.html",[3,0.051,4,0.051,9,0.046,11,0.617,15,1.327,20,0.183,21,1.052,23,1.015,24,1.561,27,1.618,28,0.007,30,0.207,31,0.208,32,0.051,33,0.153,66,2.303,127,0.63,132,3.583,164,0.004,165,0.004,200,1.479,204,0.662,207,0.602,218,1.726,219,0.444,220,1.296,222,0.641,230,1.929,286,2.075,338,1.812,371,1.062,386,2.495,454,0.486,455,1.123,458,2.646,477,1.851,490,1.847,491,2.205,503,1,506,0.662,508,0.777,510,0.674,528,4.033,529,2.181,530,5.387,531,3.787,532,2.646,533,2.364,534,2.495,535,2.646,536,3.002,537,4.478,538,2.568,539,2.091,541,1.683,542,1.806,543,2.974,544,2.919,545,2.246,548,3.389,549,2.303,551,1.15,552,1.872,553,1.217,554,1.931,555,4.347,556,3.567,558,2.317,559,2.568,561,4.478,563,2.974,564,2.246,567,2.01,568,2.01,569,2.091,570,2.405,571,2.284,572,2.731,573,2.974,574,2.974,575,2.731,576,2.974,577,4.478,578,2.974,580,2.974,581,4.478,582,2.974,583,2.01,584,2.034,585,2.974,587,1.479,588,2.14,591,1.657,594,0.574,595,0.686,596,2.405,599,2.405,600,2.091,601,2.549,602,4.478,603,2.731,605,2.974,607,2.974,608,4.478,609,4.478,610,2.974,611,2.974,612,2.974,613,2.974,614,2.974,615,4.478,616,4.478,617,5.995,618,5.995,619,1.938,621,5.387,622,4.94,623,4.478,624,4.478,625,2.974,626,2.731,627,1.123,628,2.974,629,2.974,630,2.974,631,2.974,632,2.974,633,2.974,634,2.974,635,2.974,638,2.974,858,4.571,863,1.833,868,6.552,894,2.284,919,4.113,920,3.84,921,5.033,922,3.342,923,3.342,924,3.342,925,6.055,926,3.342,927,3.84,928,3.342,929,2.974,930,3.342,931,2.731,932,3.621,933,3.342,934,3.342,935,6.738,936,3.342,937,3.342,938,5.033,939,5.033,940,3.342,941,3.342,942,3.342,943,3.342,944,5.033,945,3.342,946,3.342,947,3.342,948,3.342]],["title/injectables/CommentsService.html",[362,3.65,454,0.462]],["body/injectables/CommentsService.html",[3,0.076,4,0.076,9,0.069,11,0.926,20,0.275,21,1.405,23,1.356,24,1.666,27,1.785,28,0.007,30,0.217,31,0.312,32,0.076,33,0.23,127,0.675,164,0.005,165,0.005,204,0.994,207,0.804,218,1.849,219,0.486,220,1.389,222,0.673,230,1.762,362,5.127,371,0.612,454,0.649,455,1.685,477,1.92,503,1.501,506,0.994,510,1.012,528,3.56,532,3.533,533,3.156,534,3.759,535,3.533,538,3.429,545,2.238,546,2.89,548,3.383,549,2.295,551,1.002,553,1.172,554,1.849,558,2.471,559,2.558,564,2.238,588,2.132,663,1.685,731,5.889,733,3.608,745,3.016,748,2.295,858,2.908,860,2.089,863,1.827,894,3.427,920,5.127,927,5.127,932,6.255,949,4.462,950,7.582,951,6.722,952,5.015,953,4.386,954,4.898,955,3.825,956,4.098,957,3.825,958,3.825,959,3.825,960,3.825,961,5.127,962,5.015,963,4.098,964,5.015,965,5.015,966,3.825,967,5.015,968,5.015]],["title/classes/Country.html",[33,0.22,969,2.774]],["body/classes/Country.html",[0,2.127,3,0.059,4,0.059,9,0.053,11,0.715,12,2.864,14,1.728,15,1.537,16,1.772,18,1.772,20,0.212,22,1.976,23,0.781,24,1.219,28,0.007,29,1.472,30,0.219,31,0.241,32,0.101,33,0.303,35,1.92,82,1.609,127,0.562,134,1.728,146,1.409,150,2.568,153,2.227,157,2.568,164,0.004,165,0.004,189,1.117,193,1.728,194,1.772,200,1.266,207,0.671,208,3.641,219,0.362,220,1.28,222,0.533,230,1.92,286,1.923,287,1.819,327,2.17,344,2.17,372,1.619,385,3.255,438,2.528,477,0.824,489,3.579,491,1.411,506,0.768,520,2.33,536,3.809,551,0.957,553,0.89,594,0.665,627,2.691,676,1.504,740,2.423,969,4.197,970,3.165,971,4.947,972,3.874,973,3.874,974,4.646,975,3.874,976,4.129,977,3.836,978,2.423,979,2.647,980,2.647,981,2.647,982,2.528,983,2.17,984,3.828,985,2.33,986,3.663,987,2.246,988,2.528,989,2.423,990,2.528,991,2.647,992,3.376,993,2.528,994,2.787,995,4.586,996,2.423,997,2.787,998,3.446,999,3.165,1000,2.787,1001,3.446,1002,3.446,1003,2.647,1004,2.647,1005,2.955,1006,3.165,1007,2.647,1008,3.446,1009,3.446,1010,2.955,1011,2.647,1012,1.472,1013,2.179,1014,3.446,1015,3.446,1016,3.165,1017,2.647,1018,2.647,1019,2.787,1020,2.955,1021,2.647,1022,2.647,1023,2.647,1024,2.647,1025,2.647,1026,2.647,1027,2.955,1028,2.955,1029,2.647,1030,2.955,1031,1.382,1032,2.787,1033,5.014,1034,3.446,1035,3.663,1036,4.994,1037,5.873,1038,4.994,1039,4.994,1040,3.663,1041,3.663,1042,3.663,1043,3.446,1044,3.663,1045,3.663,1046,3.165,1047,4.994,1048,3.446,1049,4.723,1050,2.955,1051,3.446,1052,2.955,1053,3.446,1054,3.446,1055,3.446,1056,2.955,1057,2.955,1058,4.344,1059,3.446,1060,2.955,1061,3.446,1062,3.511,1063,3.836,1064,3.836,1065,3.836,1066,2.955,1067,3.446,1068,2.955,1069,3.446,1070,3.446,1071,3.446,1072,3.446,1073,3.446,1074,2.787]],["title/classes/Country-1.html",[33,0.184,286,1.372,969,2.322]],["body/classes/Country-1.html",[0,1.621,3,0.044,4,0.044,9,0.04,11,0.531,12,2.29,14,1.284,15,1.143,16,1.317,18,1.317,20,0.341,22,1.469,23,0.581,24,1.019,28,0.007,29,1.094,30,0.211,31,0.179,32,0.084,33,0.253,35,1.427,82,2.292,89,1.613,93,3.276,112,2.359,127,0.484,146,0.56,152,2.054,153,2.209,155,1.317,164,0.003,165,0.003,189,0.83,193,1.284,194,1.317,200,1.448,207,0.537,208,3.46,209,1.801,219,0.302,220,1.143,222,0.459,229,1.284,230,1.923,286,2.135,287,1.352,327,2.515,344,2.515,371,0.548,372,1.949,386,3.09,465,1.801,477,1.174,489,3.664,490,0.878,503,0.862,506,0.571,520,1.731,533,1.352,536,3.09,551,0.824,553,1.008,554,0.657,558,0.878,594,0.771,627,1.854,679,3.23,740,1.801,847,2.7,849,2.929,852,2.929,853,1.878,854,1.878,855,2.7,906,1.344,914,1.118,953,3.601,969,3.614,971,4.259,974,4.151,976,3.451,977,3.068,978,1.801,979,1.967,980,3.068,981,3.068,982,2.929,983,2.515,984,3.2,985,1.731,986,2.929,987,1.669,988,1.878,989,1.801,990,1.878,991,1.967,992,2.7,996,1.801,1003,1.967,1004,1.967,1007,1.967,1011,1.967,1012,1.094,1013,2.42,1017,1.967,1018,1.967,1019,4.484,1021,1.967,1022,1.967,1023,1.967,1024,1.967,1025,1.967,1026,1.967,1028,2.196,1029,1.967,1032,2.071,1033,4.067,1035,1.878,1040,4.067,1041,4.067,1042,4.067,1044,1.878,1045,1.878,1049,2.929,1058,4.065,1062,1.801,1063,1.967,1064,1.967,1065,1.967,1066,2.196,1068,2.196,1074,2.071,1075,2.352,1076,2.879,1077,2.879,1078,2.879,1079,2.071,1080,2.071,1081,2.196,1082,2.196,1083,3.23,1084,2.929,1085,1.731,1086,2.561,1087,2.561,1088,2.071,1089,4.259,1090,2.352,1091,2.352,1092,2.352,1093,4.484,1094,2.196,1095,4.259,1096,2.196,1097,3.068,1098,2.196,1099,2.071,1100,2.196,1101,1.801,1102,2.196,1103,2.561,1104,2.561,1105,2.196,1106,2.196,1107,3.23,1108,2.196,1109,1.967,1110,2.561,1111,2.561,1112,2.561,1113,2.561,1114,2.196,1115,2.561,1116,3.668,1117,2.196,1118,3.23,1119,3.23,1120,2.743,1121,2.196,1122,3.424,1123,3.994,1124,4.209,1125,4.209,1126,2.561,1127,3.994,1128,2.973,1129,2.561,1130,2.561,1131,2.196,1132,3.424,1133,2.561,1134,2.196,1135,2.561,1136,2.071,1137,2.071,1138,3.23,1139,2.352,1140,3.23,1141,2.561,1142,2.352,1143,3.668,1144,2.561,1145,3.09,1146,2.929,1147,3.994,1148,3.994,1149,2.352,1150,2.071,1151,2.352,1152,2.352,1153,2.352,1154,2.071,1155,2.352,1156,2.561,1157,2.352,1158,2.561,1159,2.352,1160,2.352,1161,2.561,1162,2.196,1163,2.561,1164,3.068,1165,3.771,1166,2.196,1167,2.196,1168,2.196,1169,2.561,1170,2.9,1171,3.601,1172,2.561,1173,2.196,1174,2.561,1175,2.561,1176,2.561,1177,3.424,1178,2.196,1179,2.196,1180,2.561,1181,2.196,1182,2.196,1183,2.071,1184,1.967,1185,3.068,1186,2.196,1187,2.196,1188,2.561,1189,2.196]],["title/classes/Country-2.html",[33,0.184,287,1.88,969,2.322]],["body/classes/Country-2.html",[0,1.579,3,0.042,4,0.042,9,0.038,11,0.51,12,2.217,14,1.233,15,1.096,16,1.264,18,1.264,20,0.334,22,1.409,23,0.557,24,0.992,28,0.007,29,1.05,30,0.209,31,0.172,32,0.082,33,0.247,35,1.37,82,2.232,89,1.548,93,3.203,112,2.284,127,0.473,145,1.989,146,1.485,148,1.264,153,1.208,164,0.003,165,0.003,189,0.797,193,1.233,194,1.264,200,1.432,207,0.52,208,3.427,209,1.728,219,0.294,220,1.124,222,0.449,229,1.233,230,1.903,241,2.836,286,2.088,287,1.297,327,2.435,344,2.435,367,2.34,368,2.719,371,0.531,372,1.911,385,2.52,386,2.155,409,2.257,465,1.728,477,1.143,489,3.593,490,0.843,503,0.827,506,0.547,520,1.662,533,1.297,536,3.021,551,0.876,553,0.992,554,0.631,558,0.843,594,0.747,627,1.805,679,3.127,687,1.662,740,1.728,847,2.614,849,2.836,852,2.836,853,1.802,854,1.802,855,2.614,906,1.301,914,1.073,953,3.506,969,3.533,971,4.164,974,4.08,976,3.361,977,2.97,978,1.728,979,1.888,980,2.97,981,2.97,982,2.836,983,2.435,984,3.116,985,1.662,986,2.836,987,1.602,988,1.802,989,1.728,990,1.802,991,1.888,992,2.614,993,1.802,1003,1.888,1004,1.888,1010,2.107,1011,1.888,1012,1.05,1013,2.366,1017,1.888,1018,1.888,1020,4.648,1021,1.888,1022,1.888,1023,1.888,1024,1.888,1025,1.888,1026,1.888,1027,2.107,1029,1.888,1033,3.976,1035,1.802,1040,3.976,1041,3.976,1042,3.976,1044,1.802,1045,1.802,1049,2.836,1050,2.107,1052,2.107,1056,2.107,1057,2.107,1058,4.008,1060,2.107,1062,1.728,1063,1.888,1064,1.888,1065,1.888,1080,1.987,1082,2.107,1083,3.127,1084,2.836,1085,1.662,1088,1.987,1089,3.672,1093,4.384,1094,2.107,1095,4.164,1096,2.107,1097,2.97,1098,2.107,1099,1.987,1100,2.107,1101,1.728,1102,2.107,1105,2.107,1106,2.107,1107,3.127,1108,2.107,1109,1.888,1114,2.107,1117,2.107,1118,3.127,1119,3.127,1120,2.69,1121,2.107,1122,3.315,1124,4.099,1125,4.099,1128,2.922,1131,2.107,1132,3.315,1134,2.107,1136,1.987,1137,1.987,1138,3.127,1140,3.127,1145,3.021,1146,2.836,1150,1.987,1154,1.987,1162,2.107,1164,2.97,1165,3.672,1166,2.107,1167,2.107,1168,2.107,1170,2.824,1171,3.506,1173,2.107,1177,3.315,1178,2.107,1179,2.107,1181,2.107,1182,2.107,1183,1.987,1184,1.888,1185,2.97,1186,2.107,1187,2.107,1189,2.107,1190,2.257,1191,2.762,1192,2.762,1193,2.762,1194,1.987,1195,2.107,1196,2.458,1197,2.458,1198,2.458,1199,2.458,1200,2.458,1201,2.458,1202,2.458,1203,2.458,1204,2.458,1205,2.458,1206,2.458,1207,2.458,1208,2.458,1209,3.867,1210,2.107,1211,2.458,1212,2.458,1213,2.458,1214,1.888,1215,3.127,1216,2.458,1217,5.422,1218,2.458,1219,3.867,1220,2.458,1221,4.781,1222,2.257,1223,1.802,1224,2.458,1225,2.458,1226,3.867,1227,2.458,1228,3.867,1229,2.458,1230,2.458,1231,2.458,1232,2.458,1233,2.458,1234,2.458,1235,2.458,1236,3.867,1237,3.315,1238,3.867,1239,3.867,1240,3.867,1241,2.458,1242,2.458,1243,2.458,1244,2.458,1245,2.458,1246,2.458,1247,2.458,1248,2.458,1249,2.458,1250,2.458,1251,2.458,1252,2.458,1253,2.458,1254,2.458,1255,2.458,1256,2.458,1257,2.458,1258,2.458,1259,2.458,1260,2.458]],["title/interfaces/Data.html",[846,0.016,851,1.173]],["body/interfaces/Data.html",[3,0.067,4,0.067,9,0.06,11,0.805,20,0.239,28,0.007,30,0.204,31,0.271,32,0.137,33,0.2,127,0.593,146,1.189,164,0.004,165,0.004,189,1.258,200,1.336,204,0.865,207,0.731,219,0.335,222,0.562,371,1.066,454,0.589,487,2.795,488,2.66,508,1.014,510,0.88,541,1.213,542,1.637,551,1.101,553,1.153,554,0.996,587,1.282,594,1.049,595,0.896,627,2.052,846,0.03,848,0.71,851,2.293,863,2.568,877,1.556,879,1.556,881,1.556,886,1.556,888,1.556,891,1.556,906,1.306,911,1.899,1031,1.556,1120,3.473,1128,3.553,1261,2.104,1262,2.048,1263,3.339,1264,4.519,1265,1.306,1266,2.597,1267,2.529,1268,1.854,1269,2.225,1270,2.365,1271,2.365,1272,1.306,1273,3.172,1274,2.966,1275,3.312,1276,3.07,1277,3.07,1278,3.07,1279,1.899,1280,2.11,1281,2.529,1282,1.946,1283,2.365,1284,2.529,1285,1.812,1286,2.225,1287,2.225,1288,2.225,1289,1.731,1290,2.365,1291,2.529,1292,3.422,1293,1.996,1294,1.996,1295,2.444,1296,4.961,1297,2.529,1298,2.529,1299,2.529,1300,2.444,1301,2.529,1302,2.529,1303,2.529,1304,1.694,1305,2.104,1306,1.525,1307,1.525,1308,1.731,1309,2.529,1310,1.731,1311,2.529,1312,3.542,1313,2.104,1314,2.104,1315,2.104,1316,2.104,1317,2.104,1318,2.529,1319,2.529,1320,2.529,1321,2.104,1322,2.529,1323,2.529,1324,2.529,1325,2.048,1326,2.529,1327,3.597,1328,3.4]],["title/interfaces/Data-1.html",[286,1.372,846,0.014,851,0.981]],["body/interfaces/Data-1.html",[3,0.076,4,0.076,9,0.069,11,0.924,20,0.274,28,0.007,30,0.207,31,0.311,32,0.133,33,0.23,127,0.588,146,0.975,153,1.867,164,0.005,165,0.005,200,1.325,204,0.992,207,0.803,219,0.368,222,0.494,371,1.101,454,0.648,490,1.527,508,1.163,510,1.01,541,1.392,542,1.8,551,1.149,553,1.171,554,1.143,587,1.471,594,1.153,595,1.028,846,0.029,848,0.814,851,2.299,877,1.787,879,1.787,881,1.787,886,1.787,888,1.787,891,1.787,911,2.18,1031,1.787,1120,2.032,1128,2.079,1262,2.351,1263,3.506,1265,1.499,1272,2.423,1274,3.143,1280,2.268,1282,3.767,1285,2.789,1289,1.987,1293,2.291,1294,2.291,1304,1.944,1305,2.415,1306,1.751,1307,1.751,1308,1.987,1310,1.987,1313,2.415,1314,2.415,1315,2.415,1316,2.415,1317,2.415,1321,2.415,1328,3.654,1329,2.715,1330,2.351,1331,3.132,1332,3.238,1333,3.654,1334,3.132,1335,4.589,1336,3.894,1337,2.903,1338,3.422,1339,3.267,1340,3.132,1341,3.422,1342,3.132,1343,3.422,1344,3.422,1345,4.589,1346,3.422,1347,3.422,1348,4.393]],["title/interfaces/Data-2.html",[287,1.88,846,0.014,851,0.981]],["body/interfaces/Data-2.html",[3,0.07,4,0.07,9,0.063,20,0.252,23,0.929,28,0.007,30,0.225,31,0.286,32,0.125,33,0.211,164,0.004,165,0.004,200,0.806,204,0.913,207,0.759,215,2.055,219,0.347,222,0.576,229,2.055,230,1.07,286,1.578,343,1.75,351,2.311,366,2.283,367,2.005,368,2.055,371,1.12,454,0.612,477,1.744,503,1.379,506,0.913,508,1.07,510,0.929,528,2.163,541,1.28,542,1.235,545,2.055,546,2.926,548,2.055,549,2.107,551,1.033,553,1.17,554,1.448,556,2.163,558,1.405,564,2.055,584,1.547,586,2.055,587,1.864,588,1.958,590,2.421,591,2.283,592,1.788,593,2.163,594,0.791,595,0.946,598,2.671,619,2.671,639,3.679,642,2.174,643,3.334,644,2.671,646,2.35,652,2.671,654,2.58,655,2.881,656,2.762,657,3.148,658,2.163,661,2.881,662,2.005,663,2.131,664,2.58,665,2.881,666,2.881,667,2.881,668,2.881,669,2.055,670,3.334,671,2.881,672,2.881,673,2.881,675,2.107,676,1.788,677,2.497,784,2.221,786,2.221,787,2.221,846,0.027,848,0.749,851,1.916,860,1.432,884,2.881,906,1.379,1263,3.247,1274,2.818,1349,3.148,1350,2.881,1351,2.221,1352,3.005,1353,2.107,1354,4.735,1355,3.314,1356,3.005,1357,2.35,1358,5.129,1359,3.005,1360,2.35,1361,3.5,1362,2.35,1363,2.881,1364,3.005,1365,3.005,1366,4.139,1367,3.314,1368,3.005,1369,3.005,1370,3.005,1371,4.139,1372,3.314,1373,5.221,1374,3.314,1375,3.005,1376,3.005,1377,3.314,1378,3.314,1379,3.005,1380,3.005,1381,3.005,1382,3.314,1383,3.005,1384,3.314,1385,3.005,1386,3.314,1387,3.005,1388,3.314,1389,3.314]],["title/injectables/FirebaseAuthMappingService.html",[454,0.462,1390,3.909]],["body/injectables/FirebaseAuthMappingService.html",[3,0.071,4,0.071,9,0.064,11,0.865,20,0.257,21,1.342,24,1.523,27,1.694,28,0.007,30,0.193,31,0.291,32,0.071,33,0.215,127,0.69,139,2.56,164,0.005,165,0.005,204,0.929,218,1.755,219,0.478,220,1.318,222,0.58,274,3.305,371,1.007,384,3.575,454,0.619,455,1.574,466,4.189,468,4.015,471,3.183,507,2.541,508,1.089,509,2.463,510,0.945,551,0.968,642,2.92,906,2.192,1013,2.493,1085,5.125,1146,4.778,1214,3.203,1215,3.372,1390,5.245,1391,2.717,1392,4.225,1393,4.001,1394,3.723,1395,9.118,1396,4.686,1397,3.723,1398,4.686,1399,3.723,1400,4.686,1401,5.245,1402,5.245,1403,3.723,1404,4.686,1405,3.723,1406,4.686,1407,4.169,1408,4.097,1409,3.699,1410,3.861,1411,3.861,1412,4.686,1413,3.799,1414,4.686,1415,4.686,1416,4.686,1417,3.829,1418,4.169,1419,7.323,1420,7.323,1421,8.521,1422,3.532,1423,3.183,1424,7.323,1425,4.686]],["title/injectables/FirebaseAuthenticationService.html",[454,0.462,1084,3.122]],["body/injectables/FirebaseAuthenticationService.html",[3,0.045,4,0.045,9,0.041,15,1.17,20,0.161,21,0.955,23,0.922,24,1.643,27,1.549,28,0.007,30,0.196,31,0.183,32,0.045,33,0.135,127,0.585,139,1.958,164,0.003,165,0.003,200,1.479,204,0.584,207,0.547,208,2.934,215,3.906,218,1.343,219,0.463,220,1.008,222,0.555,229,1.315,230,1.86,274,2.977,338,1.598,368,1.315,371,1.017,372,2.308,454,0.441,455,0.99,457,2.248,458,3.964,459,3.736,460,3.736,461,3.736,462,5.157,463,4.273,465,3.948,466,2.983,467,5.211,468,2.86,469,3.736,471,3.129,473,4.577,475,3.124,477,1.844,478,3.487,480,2.248,485,3.736,486,5.906,487,2.563,488,2.439,489,3.037,490,2.3,491,2.747,492,3.736,495,2.408,497,2.408,499,2.408,501,2.408,503,0.882,506,0.584,507,1.598,508,0.685,509,1.549,510,0.595,531,3.503,536,3.129,539,1.843,544,2.651,551,0.604,567,1.773,568,1.773,569,1.843,570,2.12,571,2.014,572,2.408,575,2.408,583,1.773,584,0.99,596,2.12,599,2.12,600,1.843,601,2.248,622,4.313,627,2.618,642,1.919,663,0.99,670,1.549,726,2.651,748,1.349,757,1.843,851,1.12,860,1.421,861,1.224,893,4.915,906,0.882,954,4.904,1013,2.175,1058,3.964,1084,2.983,1085,4.348,1109,2.014,1170,1.549,1279,2.439,1393,1.384,1407,2.622,1408,2.964,1409,1.384,1413,2.701,1422,2.701,1423,2.777,1426,5.601,1427,5.157,1428,4.572,1429,2.947,1430,2.947,1431,2.947,1432,2.947,1433,2.947,1434,4.068,1435,2.947,1436,2.947,1437,2.947,1438,2.947,1439,2.622,1440,2.622,1441,2.622,1442,2.622,1443,2.622,1444,2.622,1445,2.622,1446,4.068,1447,2.622,1448,3.289,1449,2.248,1450,2.947,1451,2.947,1452,2.947,1453,2.947,1454,2.947,1455,2.947,1456,2.622,1457,2.622,1458,2.947,1459,2.947,1460,2.947,1461,5.601,1462,2.947,1463,3.736,1464,4.068,1465,2.947,1466,4.572,1467,6.312,1468,4.572,1469,2.947,1470,4.572,1471,2.947,1472,2.947,1473,2.947,1474,2.622,1475,4.572,1476,4.572,1477,4.572,1478,4.572,1479,4.572,1480,2.622,1481,4.068,1482,4.068,1483,2.622,1484,2.622,1485,1.773,1486,6.312,1487,2.622,1488,4.572,1489,2.947,1490,2.12,1491,2.947,1492,2.947,1493,2.947,1494,2.947,1495,2.947,1496,2.947,1497,2.947,1498,2.947,1499,2.947,1500,2.947,1501,2.947,1502,2.947,1503,4.068,1504,2.622,1505,2.947,1506,2.947,1507,2.622,1508,4.572,1509,2.947,1510,2.947,1511,2.622,1512,2.622,1513,2.622,1514,2.947,1515,2.947,1516,2.04,1517,2.947,1518,2.947,1519,2.947,1520,4.572,1521,2.947,1522,2.947,1523,2.947,1524,2.947,1525,2.947,1526,2.947,1527,2.947,1528,2.947,1529,2.947]],["title/injectables/FirebaseCollectionSubscriptionService.html",[454,0.462,1530,3.909]],["body/injectables/FirebaseCollectionSubscriptionService.html",[3,0.065,4,0.065,9,0.059,11,0.792,15,1.704,20,0.235,21,1.262,23,1.218,24,1.572,27,1.435,28,0.007,29,2.882,30,0.216,31,0.267,32,0.065,33,0.197,127,0.542,164,0.004,165,0.004,200,1.45,204,0.851,207,0.722,218,1.487,219,0.454,220,1.116,222,0.61,230,2.054,241,2.801,338,2.327,367,1.869,371,0.737,372,2.305,454,0.583,455,1.442,458,3.175,477,1.487,490,1.842,491,2.2,503,1.285,506,0.851,508,0.997,510,0.866,531,4.371,539,2.685,540,5.785,541,1.943,542,2.033,544,3.502,546,1.532,551,0.798,567,2.582,568,2.582,569,2.685,570,6.36,583,2.582,584,2.921,590,2.256,592,1.667,593,2.015,596,3.088,598,2.489,599,3.088,600,2.685,601,3.274,603,3.507,626,3.507,746,3.507,748,1.964,847,3.633,852,2.801,853,2.801,854,3.941,855,3.633,856,4.935,857,4.935,1083,4.346,1085,5.23,1118,4.346,1170,3.175,1530,4.935,1531,3.819,1532,6.989,1533,6.989,1534,6.197,1535,5.374,1536,7.737,1537,6.04,1538,4.292,1539,4.292,1540,4.292,1541,4.292,1542,4.292,1543,6.04,1544,6.04,1545,4.292,1546,8.291,1547,6.04,1548,4.292,1549,4.292,1550,4.292,1551,4.292,1552,4.292,1553,4.292,1554,6.04,1555,4.292,1556,4.292,1557,4.292,1558,4.292,1559,4.292,1560,4.292,1561,4.292,1562,4.292,1563,4.292,1564,4.292,1565,4.292,1566,6.04,1567,4.292,1568,3.819,1569,4.292,1570,3.274,1571,4.292,1572,3.088,1573,4.292,1574,4.292,1575,4.292,1576,4.292,1577,4.292,1578,4.292]],["title/interfaces/FirebaseComment.html",[846,0.016,890,3.65]],["body/interfaces/FirebaseComment.html",[3,0.071,4,0.071,9,0.064,11,0.859,20,0.255,28,0.007,30,0.213,31,0.289,32,0.097,33,0.214,93,4.469,164,0.004,165,0.004,200,0.814,204,0.922,207,0.764,219,0.451,222,0.67,230,1.081,338,2.523,371,1.063,372,1.342,386,3.167,454,0.616,458,2.445,487,2.923,488,3.702,503,1.393,508,1.081,510,0.939,529,3.036,531,2.91,541,1.293,542,1.712,544,2.698,551,0.844,553,0.983,554,1.665,558,1.419,567,2.798,568,2.798,569,2.91,571,3.179,583,2.798,587,1.367,591,2.306,594,1.097,595,0.955,600,2.91,622,4.366,627,2.45,846,0.016,848,0.757,851,1.565,858,4.93,861,3.531,862,6.947,863,3.097,864,5.961,867,3.549,868,3.549,877,1.66,879,1.66,881,1.66,883,2.606,884,2.91,886,1.66,888,1.66,890,6.865,891,1.66,893,4.596,894,3.179,895,5.99,896,3.549,897,3.549,898,5.219,899,6.987,900,6.987,901,4.76,902,6.416,903,5.683,904,4.139,905,5.219,906,2.35,907,4.139,908,4.139,909,3.801,910,4.139,911,2.026,912,3.801,913,4.912,914,1.806,915,3.801,916,3.549,917,3.549,918,4.23]],["title/injectables/FirebaseMediaService.html",[454,0.462,1579,3.909]],["body/injectables/FirebaseMediaService.html",[3,0.082,4,0.082,9,0.074,13,2.579,15,2.123,20,0.293,21,1.466,23,1.415,24,1.445,27,1.098,28,0.007,30,0.221,31,0.332,32,0.082,33,0.246,127,0.544,164,0.005,165,0.005,200,1.453,204,1.06,207,0.839,208,3.177,218,1.492,219,0.384,220,1.12,230,1.931,274,1.989,338,2.9,371,0.856,372,1.542,454,0.677,455,1.797,458,2.811,477,1.665,503,1.601,504,4.998,505,4.759,506,1.06,510,1.079,519,4.119,521,2.811,522,5.732,523,5.732,524,4.678,539,3.345,544,4.068,567,3.217,568,3.217,584,1.797,596,3.848,599,3.848,642,2.682,653,3.655,660,4.08,662,2.329,663,1.797,726,3.101,748,2.447,860,2.18,954,3.101,1085,4.708,1268,2.274,1448,3.848,1579,5.732,1580,6.964,1581,7.015,1582,5.349,1583,5.349,1584,5.349,1585,5.349,1586,5.349,1587,7.015,1588,5.349,1589,3.101,1590,5.349,1591,5.349,1592,5.349,1593,5.349,1594,5.349,1595,4.759,1596,7.015,1597,5.349,1598,5.349,1599,5.349,1600,5.349,1601,5.349,1602,5.349,1603,5.349,1604,5.349,1605,5.349,1606,5.349,1607,5.349,1608,5.349,1609,5.349,1610,5.349]],["title/interfaces/FirebaseSeason.html",[846,0.016,1611,3.65]],["body/interfaces/FirebaseSeason.html",[3,0.099,4,0.099,9,0.09,20,0.357,28,0.007,30,0.16,32,0.099,127,0.666,164,0.006,165,0.006,207,0.951,219,0.516,220,1.27,222,0.686,274,3.191,553,1.204,583,3.921,846,0.022,848,1.06,863,3.125,895,6.544,1276,3.735,1277,3.735,1278,3.735,1279,3.462,1280,2.568,1611,6.065,1612,5.327,1613,5.8,1614,4.078,1615,4.973,1616,4.973,1617,4.973,1618,3.78,1619,6.519,1620,6.519]],["title/interfaces/FirebaseSerie.html",[846,0.016,1621,3.65]],["body/interfaces/FirebaseSerie.html",[3,0.104,4,0.104,9,0.093,20,0.372,28,0.007,32,0.104,127,0.678,139,3.167,164,0.006,165,0.006,207,0.975,219,0.507,220,1.302,222,0.7,553,1.221,846,0.023,848,1.105,1280,2.614,1332,4.212,1333,4.212,1612,5.552,1614,4.25,1618,3.94,1621,6.219,1622,6.045,1623,5.183,1624,5.183]],["title/interfaces/Formats.html",[846,0.016,1625,2.68]],["body/interfaces/Formats.html",[3,0.069,4,0.069,9,0.062,20,0.247,23,0.908,28,0.007,30,0.206,31,0.28,32,0.138,33,0.207,51,3.722,56,3.542,77,3.542,127,0.631,164,0.004,165,0.004,200,1.092,201,3.455,207,0.747,208,1.828,219,0.445,222,0.721,230,1.799,337,2.441,343,1.711,351,1.64,371,0.875,372,1.298,477,0.958,503,1.348,506,0.892,519,3.096,521,2.366,524,2.441,551,0.595,553,1.273,584,1.512,642,1.543,656,2.719,658,2.114,662,3.542,663,1.512,748,2.06,784,2.171,786,2.171,787,2.171,846,0.03,848,0.732,860,1.4,861,1.87,906,1.348,1266,1.914,1268,1.914,1351,2.171,1357,2.297,1360,2.297,1361,3.458,1362,2.297,1516,2.009,1589,2.611,1625,4.338,1626,1.96,1627,4.771,1628,4.489,1629,4.771,1630,4.771,1631,2.611,1632,2.522,1633,3.386,1634,2.708,1635,2.708,1636,2.708,1637,2.708,1638,4.893,1639,4.893,1640,4.893,1641,2.708,1642,2.114,1643,4.893,1644,4.716,1645,2.708,1646,2.708,1647,2.522,1648,2.708,1649,2.708,1650,2.611,1651,2.708,1652,4.158,1653,2.708,1654,2.611,1655,2.708,1656,2.708,1657,2.708,1658,2.708]],["title/modules/HomePageModule.html",[166,1.743,1659,3.65]],["body/modules/HomePageModule.html",[3,0.097,4,0.097,9,0.087,28,0.007,30,0.23,31,0.395,32,0.097,33,0.292,121,2.638,134,4.131,164,0.005,165,0.005,166,2.314,168,2.7,169,3.339,170,4.918,171,3.683,172,3.444,173,2.834,178,4.538,179,3.683,180,3.683,182,3.492,183,3.581,184,4.895,185,3.82,188,4.538,189,1.832,190,3.973,192,3.973,193,2.834,194,2.906,438,4.145,1659,7.227,1660,5.651,1661,5.651,1662,5.651,1663,6.66,1664,6.352,1665,5.651,1666,7.826,1667,6.352,1668,4.845]],["title/modules/HomePageRoutingModule.html",[166,1.743,1663,3.442]],["body/modules/HomePageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,134,3.694,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.979,199,3.456,200,1.219,201,3.111,202,4.361,1663,5.956,1665,6.203,1669,6.972]],["title/interfaces/IAuthMapping.html",[471,2.372,846,0.016]],["body/interfaces/IAuthMapping.html",[3,0.094,4,0.094,9,0.085,20,0.337,21,1.604,24,1.663,27,1.85,28,0.007,30,0.188,32,0.094,127,0.699,146,1.199,164,0.005,165,0.005,218,1.916,219,0.493,220,1.439,274,3.257,466,5.009,468,4.801,471,3.806,509,3.236,846,0.021,848,1.002,1146,5.457,1265,1.843,1392,4.467,1393,4.23,1394,3.57,1397,3.57,1399,3.57,1401,6.272,1403,3.57,1405,3.57,1670,8.173,1671,5.031,1672,5.478,1673,5.478,1674,6.157,1675,5.478,1676,6.157,1677,6.157,1678,6.157,1679,6.157,1680,6.157,1681,6.157]],["title/interfaces/IAuthentication.html",[504,2.878,846,0.016]],["body/interfaces/IAuthentication.html",[3,0.1,4,0.1,9,0.091,20,0.361,21,1.672,24,1.695,27,1.886,28,0.007,30,0.161,32,0.1,127,0.621,164,0.006,165,0.006,218,1.702,219,0.438,220,1.278,465,5.39,466,5.22,467,6.574,468,5.004,475,4.501,477,1.954,478,5.024,480,5.024,482,5.86,484,5.86,504,4.812,506,1.305,518,5.381,846,0.023,848,1.071,1682,5.86,1683,6.586,1684,6.586,1685,6.586,1686,6.586,1687,6.586,1688,6.586,1689,6.586,1690,6.586,1691,6.586]],["title/interfaces/IBaseMapping.html",[542,1.283,846,0.016]],["body/interfaces/IBaseMapping.html",[3,0.085,4,0.085,9,0.077,20,0.307,21,1.51,24,1.684,27,1.873,28,0.007,30,0.196,32,0.085,127,0.708,164,0.005,165,0.005,218,1.94,219,0.5,220,1.457,477,1.191,506,1.11,542,1.937,546,3.199,553,1.229,554,1.827,558,1.708,592,2.174,593,2.63,594,1.242,595,1.15,846,0.019,848,0.911,851,2.265,869,4.191,870,4.191,871,4.191,872,4.191,873,4.191,874,4.191,875,4.191,877,1.998,879,1.998,881,1.998,883,3.137,886,1.998,888,1.998,891,1.998,914,2.806,1031,1.998,1304,2.174,1671,4.576,1672,4.982,1673,4.982,1675,4.982,1692,7.05,1693,5.6,1694,5.6,1695,5.6,1696,5.6,1697,5.6,1698,5.6,1699,5.6,1700,5.6,1701,5.6,1702,5.6,1703,5.6]],["title/interfaces/IBaseRepository.html",[586,2.135,846,0.016]],["body/interfaces/IBaseRepository.html",[3,0.084,4,0.084,9,0.076,20,0.302,21,1.495,24,1.608,27,1.789,28,0.007,30,0.194,32,0.109,127,0.676,164,0.005,165,0.005,218,1.853,219,0.477,220,1.391,222,0.697,366,2.733,367,3.115,477,2.012,506,1.093,532,3.761,533,3.36,534,3.547,535,3.761,538,3.65,545,3.193,546,3.185,548,3.751,549,3.274,551,1.111,552,3.089,553,1.133,554,1.633,555,4.304,556,3.73,558,1.682,559,3.65,564,3.193,586,3.193,592,2.141,593,2.589,594,0.947,595,1.132,675,2.523,676,2.141,677,2.99,846,0.024,848,0.897,1214,3.768,1692,6.81,1704,3.598,1705,5.514,1706,5.514,1707,5.514,1708,5.514,1709,5.514,1710,3.967,1711,4.206,1712,4.905,1713,4.905,1714,3.768,1715,4.905,1716,4.905,1717,4.905]],["title/interfaces/IBaseService.html",[743,2.993,846,0.016]],["body/interfaces/IBaseService.html",[3,0.082,4,0.082,9,0.074,20,0.295,21,1.474,24,1.669,27,1.856,28,0.007,30,0.192,32,0.082,127,0.689,164,0.005,165,0.005,218,1.888,219,0.486,220,1.417,222,0.683,477,2.038,506,1.069,532,3.707,533,3.312,534,4.482,535,3.707,538,3.598,545,3.147,546,3.166,548,3.72,549,3.227,551,1.039,552,3.951,553,1.236,554,1.903,555,4.242,556,3.691,558,2.151,559,3.598,564,3.147,588,2.293,594,0.927,595,1.107,675,3.227,676,2.739,677,2.924,743,4.412,746,4.407,846,0.018,848,0.877,1718,8.159,1719,3.686,1720,5.393,1721,5.393,1722,5.393,1723,4.799,1724,5.393,1725,5.393,1726,5.393,1727,5.393]],["title/interfaces/ICollectionSubscription.html",[846,0.016,855,2.878]],["body/interfaces/ICollectionSubscription.html",[3,0.099,4,0.099,9,0.089,20,0.355,21,1.656,24,1.462,27,1.627,28,0.007,29,3.01,30,0.194,32,0.121,127,0.615,164,0.006,165,0.006,218,1.685,219,0.469,220,1.265,222,0.694,477,1.82,506,1.284,540,6.043,546,2.312,551,0.856,592,2.516,593,3.043,846,0.027,847,3.897,848,1.054,849,5.583,850,5.294,851,1.588,852,4.228,853,4.228,854,4.228,855,4.765,856,6.473,857,6.473,1535,7.048,1536,7.048,1728,6.48,1729,6.48]],["title/interfaces/ICommentsRepository.html",[846,0.016,932,3.442]],["body/interfaces/ICommentsRepository.html",[3,0.101,4,0.101,9,0.091,20,0.363,21,1.678,24,1.223,27,1.361,28,0.007,30,0.211,32,0.101,127,0.514,164,0.006,165,0.006,218,1.41,219,0.363,220,1.058,222,0.636,477,1.838,506,1.313,553,1.26,554,1.973,558,2.635,586,3.856,588,2.817,663,2.226,846,0.023,848,1.078,858,3.843,860,2.496,863,2.414,894,4.529,920,6.126,927,6.126,932,5.778,953,5.24,1704,4.324,1730,7.145,1731,6.627]],["title/interfaces/ICommentsService.html",[846,0.016,961,3.65]],["body/interfaces/ICommentsService.html",[3,0.101,4,0.101,9,0.091,20,0.363,21,1.678,24,1.223,27,1.361,28,0.007,30,0.211,32,0.101,127,0.514,164,0.006,165,0.006,218,1.41,219,0.363,220,1.058,222,0.636,477,1.838,506,1.313,553,1.26,554,1.973,558,2.635,663,2.226,743,5.405,745,3.986,846,0.023,848,1.078,858,3.843,860,2.496,863,2.414,894,4.529,920,6.126,927,6.126,953,5.24,961,6.126,1719,4.529,1732,7.145,1733,6.627]],["title/interfaces/ISeasonsRepository.html",[846,0.016,1734,3.65]],["body/interfaces/ISeasonsRepository.html",[3,0.111,4,0.111,9,0.1,28,0.007,30,0.208,32,0.111,146,1.416,164,0.006,165,0.006,586,4.01,588,3.091,663,2.442,846,0.025,848,1.183,860,2.638,1265,2.176,1704,4.744,1734,6.473,1735,6.469]],["title/interfaces/ISeasonsService.html",[846,0.016,1736,3.65]],["body/interfaces/ISeasonsService.html",[3,0.103,4,0.103,9,0.093,20,0.369,21,1.695,24,1.244,27,1.383,28,0.007,30,0.213,32,0.103,127,0.523,146,1.312,164,0.006,165,0.006,218,1.433,219,0.369,220,1.076,222,0.641,477,1.851,488,2.934,506,1.335,663,2.263,743,5.444,745,4.053,846,0.023,848,1.096,860,2.521,1223,4.396,1265,2.017,1714,4.605,1719,4.605,1723,5.995,1736,6.188,1737,7.217,1738,7.217,1739,7.217,1740,5.505,1741,5.505,1742,5.505]],["title/interfaces/ISeriesRepository.html",[846,0.016,1743,3.65]],["body/interfaces/ISeriesRepository.html",[3,0.11,4,0.11,9,0.099,28,0.007,30,0.219,32,0.11,146,1.4,153,1.999,164,0.006,165,0.006,586,3.991,588,3.056,663,2.415,846,0.025,848,1.169,860,2.621,1265,2.152,1330,3.376,1704,4.691,1743,6.431,1744,6.397]],["title/interfaces/ISeriesService.html",[846,0.016,1745,3.65]],["body/interfaces/ISeriesService.html",[3,0.108,4,0.108,9,0.097,28,0.007,30,0.217,32,0.108,146,1.378,153,1.968,164,0.006,165,0.006,663,2.378,743,5.559,745,4.258,846,0.024,848,1.151,860,2.597,1223,4.619,1265,2.119,1330,3.324,1714,4.838,1719,4.838,1740,5.784,1741,5.784,1742,5.784,1745,6.372,1746,6.298]],["title/interfaces/IStrapiAuthentication.html",[656,2.083,846,0.016]],["body/interfaces/IStrapiAuthentication.html",[3,0.107,4,0.107,9,0.096,20,0.384,21,1.737,24,1.295,27,1.441,28,0.007,30,0.203,32,0.107,164,0.006,165,0.006,222,0.517,477,1.493,504,5.326,506,1.391,627,2.792,656,3.618,658,3.295,846,0.024,848,1.141,860,2.583,1427,7.235,1747,7.394,1748,6.243,1749,7.017,1750,7.017]],["title/interfaces/ITasksRepository.html",[846,0.016,1751,3.65]],["body/interfaces/ITasksRepository.html",[3,0.111,4,0.111,9,0.1,28,0.007,30,0.208,32,0.111,164,0.006,165,0.006,586,4.01,588,3.091,663,2.442,846,0.025,848,1.183,860,2.638,1704,4.744,1751,6.473,1752,6.469,1753,4.969,1754,5.941]],["title/interfaces/ITasksService.html",[846,0.016,1755,3.65]],["body/interfaces/ITasksService.html",[3,0.109,4,0.109,9,0.098,28,0.007,30,0.206,32,0.109,164,0.006,165,0.006,663,2.404,743,5.585,745,4.305,846,0.024,848,1.164,860,2.614,1223,4.67,1714,4.892,1719,4.892,1740,5.848,1741,5.848,1742,5.848,1753,4.892,1754,5.848,1755,6.414,1756,6.368]],["title/injectables/JsonServerRepositoryService.html",[454,0.462,1757,3.65]],["body/injectables/JsonServerRepositoryService.html",[3,0.064,4,0.064,9,0.057,20,0.229,21,1.239,23,1.196,24,1.517,27,1.625,28,0.007,30,0.221,31,0.26,32,0.09,33,0.192,66,1.913,127,0.638,164,0.004,165,0.004,204,0.829,215,1.865,218,1.749,219,0.45,220,1.313,222,0.676,229,1.865,286,1.432,343,1.589,351,2.73,366,2.073,367,1.82,368,1.865,371,1.072,454,0.572,455,1.404,477,1.869,490,1.275,491,1.523,503,1.251,504,4.509,506,0.829,508,0.971,510,0.843,528,1.963,532,3.116,533,2.784,534,2.939,535,3.116,538,3.025,541,1.915,542,1.847,545,2.645,546,3.016,548,3.345,549,1.913,551,0.91,552,2.342,553,1.164,554,1.573,555,3.566,556,3.235,558,1.275,559,2.133,564,2.645,584,1.404,586,1.865,587,1.742,588,1.777,590,2.197,591,2.073,592,1.623,593,1.963,594,0.718,595,0.858,598,2.424,619,2.424,639,5.008,641,2.857,642,2.568,643,3.94,644,3.995,646,3.025,652,2.424,653,2.857,654,2.342,655,2.615,659,3.416,660,3.189,661,2.615,662,1.82,663,1.991,664,2.342,665,2.615,666,2.615,667,2.615,668,2.615,669,1.865,670,3.116,671,2.615,672,2.615,673,2.615,675,1.913,676,1.623,677,2.267,846,0.014,851,1.025,860,1.843,914,1.623,954,4.589,1145,2.073,1350,2.615,1352,2.728,1353,1.913,1358,4.309,1359,2.728,1363,2.615,1364,2.728,1365,2.728,1366,3.869,1368,2.728,1369,2.728,1370,2.728,1371,3.869,1375,2.728,1376,2.728,1379,2.728,1380,2.728,1381,2.728,1383,2.728,1385,2.728,1387,2.728,1757,4.522,1758,4.844,1759,4.522,1760,4.181,1761,4.181,1762,4.181,1763,4.181,1764,4.181,1765,3.72,1766,2.615,1767,2.615,1768,3.708,1769,2.342,1770,3.72,1771,3.72,1772,5.275,1773,3.72,1774,3.72,1775,3.72,1776,3.72,1777,3.72]],["title/injectables/LanguageService.html",[214,3.442,454,0.462]],["body/injectables/LanguageService.html",[3,0.083,4,0.083,9,0.075,20,0.297,21,1.481,23,1.095,24,1.671,27,1.716,28,0.007,29,2.996,30,0.173,31,0.337,32,0.083,33,0.249,35,3.512,127,0.612,164,0.005,165,0.005,193,2.423,194,2.484,200,1.239,204,1.076,207,0.847,211,6.303,214,5.097,218,1.677,219,0.475,220,1.259,221,6.303,222,0.699,224,7.016,230,2.066,371,0.865,454,0.684,455,1.824,490,2.161,491,2.581,510,1.095,783,4.436,992,5.027,1778,4.831,1779,7.885,1780,7.885,1781,7.885,1782,8.358,1783,8.358,1784,7.084,1785,5.43,1786,7.084,1787,5.43,1788,5.43,1789,5.43,1790,7.084,1791,5.43,1792,7.885,1793,7.084,1794,5.43,1795,5.43,1796,5.43,1797,5.43,1798,7.084,1799,5.43,1800,5.43,1801,5.43,1802,5.43,1803,5.43,1804,5.43,1805,5.43,1806,5.43,1807,5.43,1808,5.43]],["title/interfaces/Large.html",[846,0.016,1627,2.594]],["body/interfaces/Large.html",[3,0.065,4,0.065,9,0.059,20,0.234,23,0.86,28,0.007,30,0.202,31,0.265,32,0.136,33,0.196,51,3.972,56,3.78,77,3.78,127,0.674,164,0.004,165,0.004,200,1.052,201,3.793,207,0.719,208,1.731,219,0.495,222,0.726,230,1.757,337,2.312,343,1.62,351,1.553,371,0.85,372,1.23,477,0.907,503,1.276,506,0.845,519,2.98,521,2.241,524,2.312,551,0.564,553,1.292,584,1.432,642,1.461,656,2.618,658,2.002,662,3.78,663,1.432,748,1.951,784,2.056,786,2.056,787,2.056,846,0.03,848,0.694,860,1.325,861,1.771,906,1.276,1266,1.813,1268,1.813,1351,2.056,1357,2.175,1360,2.175,1361,3.358,1362,2.175,1516,1.902,1589,2.472,1625,3.901,1626,1.856,1627,4.1,1628,3.553,1629,3.776,1630,3.776,1631,2.472,1632,2.389,1633,3.26,1634,2.565,1635,2.565,1636,2.565,1637,2.565,1638,5.221,1639,5.221,1640,5.221,1641,2.565,1642,2.002,1643,5.221,1644,4.863,1645,2.565,1646,2.565,1647,2.389,1648,2.565,1649,2.565,1650,2.472,1651,2.565,1652,4.038,1653,2.565,1654,2.472,1655,2.565,1656,2.565,1657,2.565,1658,2.565]],["title/components/LoginPage.html",[0,1.406,136,2.247]],["body/components/LoginPage.html",[0,1.598,1,1.322,2,2.319,3,0.043,4,0.043,5,1.527,6,1.527,7,1.527,8,1.527,9,0.039,13,1.358,14,3.996,15,3.554,16,2.019,18,2.019,20,0.154,21,0.922,23,0.89,24,1.49,27,1.373,28,0.007,29,2.34,30,0.164,31,0.175,32,0.043,33,0.129,46,3.272,47,4.422,48,1.761,49,1.837,50,1.761,51,3.393,52,1.633,53,2.472,54,3.155,56,2.681,57,2.472,58,4.154,59,4.183,61,3.272,62,3.704,63,2.76,64,2.558,65,1.761,66,1.288,67,3.272,70,1.577,73,3.048,74,2.472,75,1.693,77,2.681,78,2.558,80,1.633,81,1.633,82,2.777,83,2.472,84,3.746,85,1.577,86,1.577,87,2.392,88,4.154,90,2.026,91,2.026,92,3.746,93,1.48,95,3.605,96,4.154,98,1.837,99,2.472,100,3.174,101,4.686,103,4.3,104,1.761,105,1.924,107,2.472,109,4.524,110,2.558,111,1.693,112,1.48,113,1.761,114,1.837,115,2.301,117,2.301,120,2.026,121,1.169,122,2.392,123,2.392,124,1.358,125,4.021,126,1.527,127,0.519,128,1.527,129,1.358,130,1.527,131,1.48,132,1.396,133,1.527,134,1.256,135,1.527,136,2.891,137,1.527,138,1.322,139,0.984,140,2.392,141,1.322,142,1.527,143,1.322,144,1.527,145,1.288,146,0.859,147,2.392,148,1.288,149,1.527,150,1.288,151,2.392,152,1.288,153,1.512,154,1.358,155,1.288,156,1.527,157,1.288,158,1.396,159,1.48,160,1.48,161,1.322,162,1.48,163,1.527,164,0.003,165,0.003,187,1.436,189,0.812,199,1.396,200,0.952,207,0.528,209,2.76,215,2.427,216,5.335,218,0.938,219,0.366,220,0.705,222,0.492,229,1.256,230,1.554,251,3.571,252,3.155,253,3.605,261,3.605,263,2.026,265,1.633,269,3.155,272,2.026,273,1.633,281,2.301,284,2.026,294,1.633,368,2.427,371,0.539,429,3.914,435,2.148,438,2.879,456,1.761,490,0.859,491,1.026,536,3.053,794,3.366,802,5.796,1058,2.859,1095,1.924,1145,1.396,1170,2.859,1171,1.837,1184,1.924,1185,1.924,1325,1.322,1408,3.706,1409,3.706,1628,2.251,1711,2.148,1769,1.577,1809,2.505,1810,5.44,1811,4.412,1812,5.44,1813,4.84,1814,6.158,1815,6.158,1816,4.43,1817,3.925,1818,5.479,1819,3.174,1820,2.148,1821,4.43,1822,3.605,1823,4.84,1824,5.656,1825,4.412,1826,3.366,1827,2.816,1828,2.816,1829,2.816,1830,3.925,1831,5.031,1832,4.43,1833,2.816,1834,3.914,1835,2.816,1836,3.914,1837,2.816,1838,2.301,1839,2.816,1840,2.505,1841,2.816,1842,2.026,1843,2.816,1844,2.505,1845,2.816,1846,2.148,1847,3.174,1848,2.301,1849,2.148,1850,2.301,1851,2.148,1852,2.148,1853,1.837,1854,2.505,1855,2.148,1856,3.925,1857,2.816,1858,2.816,1859,2.505,1860,2.816,1861,6.83,1862,2.505,1863,3.605,1864,3.925,1865,2.816,1866,3.925,1867,2.816,1868,2.816,1869,2.816,1870,2.816,1871,2.301,1872,4.84,1873,2.816,1874,2.816,1875,2.816,1876,2.816,1877,2.301,1878,2.816,1879,2.816,1880,2.816,1881,2.816,1882,7.093,1883,3.605,1884,3.925,1885,4.412,1886,6.311,1887,5.479,1888,3.925,1889,1.924,1890,2.301,1891,3.174,1892,2.301,1893,2.505,1894,2.505,1895,2.301,1896,2.301,1897,2.026,1898,1.837,1899,1.633,1900,2.026,1901,3.174,1902,3.174,1903,2.505,1904,2.505,1905,2.505]],["title/modules/LoginPageModule.html",[166,1.743,1906,3.65]],["body/modules/LoginPageModule.html",[3,0.098,4,0.098,9,0.088,28,0.007,30,0.227,31,0.398,32,0.098,33,0.294,121,2.659,136,4.355,164,0.006,165,0.006,166,2.332,168,2.722,169,3.365,170,4.935,171,3.713,172,3.472,173,2.857,178,4.56,179,3.713,180,3.713,182,3.509,183,3.598,184,4.919,185,3.851,186,5.998,187,3.266,188,4.56,189,1.846,190,4.005,346,5.658,429,4.606,1906,7.237,1907,5.696,1908,5.696,1909,5.696,1910,6.673,1911,6.403,1912,5.696]],["title/modules/LoginPageRoutingModule.html",[166,1.743,1910,3.442]],["body/modules/LoginPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,136,3.887,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.979,199,3.456,200,1.219,201,3.111,202,4.361,1910,5.956,1912,6.203,1913,6.972]],["title/interfaces/MediaRaw.html",[846,0.016,1270,2.594]],["body/interfaces/MediaRaw.html",[3,0.067,4,0.067,9,0.061,11,0.813,20,0.241,28,0.007,30,0.205,31,0.274,32,0.137,33,0.202,127,0.595,146,1.197,164,0.004,165,0.004,189,1.27,200,1.342,204,0.873,207,0.736,219,0.241,222,0.565,371,1.068,454,0.593,487,2.814,488,2.678,508,1.023,510,0.888,541,1.224,542,1.648,551,0.937,553,1.087,554,1.005,587,1.294,594,1.056,595,0.904,627,2.066,846,0.03,848,0.716,851,2.318,863,2.581,877,1.571,879,1.571,881,1.571,886,1.571,888,1.571,891,1.571,906,1.318,911,1.917,1031,1.571,1120,3.482,1128,3.563,1261,2.124,1262,2.068,1263,2.554,1264,4.159,1265,1.318,1266,3.261,1267,2.554,1268,1.872,1269,2.247,1270,3.334,1271,2.388,1272,1.318,1273,3.185,1274,2.978,1275,3.334,1276,3.085,1277,3.085,1278,3.085,1279,1.917,1280,2.121,1281,2.554,1282,1.965,1283,2.388,1284,2.554,1285,1.829,1286,2.247,1287,2.247,1288,2.247,1289,1.748,1290,2.388,1291,2.554,1292,3.445,1293,2.015,1294,2.015,1295,2.467,1296,4.975,1297,2.554,1298,2.554,1299,2.554,1300,2.467,1301,2.554,1302,2.554,1303,2.554,1304,1.71,1305,2.124,1306,1.54,1307,1.54,1308,1.748,1309,2.554,1310,1.748,1311,2.554,1312,3.566,1313,2.124,1314,2.124,1315,2.124,1316,2.124,1317,2.124,1318,2.554,1319,2.554,1320,2.554,1321,2.124,1322,2.554,1323,2.554,1324,2.554,1325,2.068,1326,2.554,1327,3.615,1328,3.417]],["title/interfaces/Medium.html",[846,0.016,1628,2.441]],["body/interfaces/Medium.html",[3,0.065,4,0.065,9,0.059,20,0.234,23,0.86,28,0.007,30,0.202,31,0.265,32,0.136,33,0.196,51,3.972,56,3.78,77,3.78,127,0.674,164,0.004,165,0.004,200,1.052,201,3.793,207,0.719,208,1.731,219,0.495,222,0.726,230,1.757,337,2.312,343,1.62,351,1.553,371,0.85,372,1.23,477,0.907,503,1.276,506,0.845,519,2.98,521,2.241,524,2.312,551,0.564,553,1.292,584,1.432,642,1.461,656,2.618,658,2.002,662,3.78,663,1.432,748,1.951,784,2.056,786,2.056,787,2.056,846,0.03,848,0.694,860,1.325,861,1.771,906,1.276,1266,1.813,1268,1.813,1351,2.056,1357,2.175,1360,2.175,1361,3.358,1362,2.175,1516,1.902,1589,2.472,1625,3.901,1626,1.856,1627,3.776,1628,3.858,1629,3.776,1630,3.776,1631,2.472,1632,2.389,1633,3.26,1634,2.565,1635,2.565,1636,2.565,1637,2.565,1638,5.221,1639,5.221,1640,5.221,1641,2.565,1642,2.002,1643,5.221,1644,4.863,1645,2.565,1646,2.565,1647,2.389,1648,2.565,1649,2.565,1650,2.472,1651,2.565,1652,4.038,1653,2.565,1654,2.472,1655,2.565,1656,2.565,1657,2.565,1658,2.565]],["title/interfaces/Meta.html",[846,0.016,1274,1.858]],["body/interfaces/Meta.html",[3,0.068,4,0.068,9,0.061,11,0.824,28,0.007,30,0.205,31,0.277,32,0.138,33,0.205,127,0.599,146,1.209,164,0.004,165,0.004,189,1.288,200,1.35,204,0.885,222,0.568,371,1.072,454,0.599,487,2.841,488,2.703,508,1.037,510,0.901,541,1.241,542,1.664,551,0.943,553,1.093,554,1.019,587,1.312,594,1.067,595,0.917,627,2.086,846,0.031,848,0.726,851,2.287,863,2.6,877,1.593,879,1.593,881,1.593,886,1.593,888,1.593,891,1.593,906,1.336,911,1.944,1031,1.593,1120,3.496,1128,3.577,1261,2.153,1262,2.097,1263,2.579,1264,4.184,1265,1.336,1266,2.64,1267,2.589,1268,1.898,1269,2.278,1270,2.421,1271,2.421,1272,1.336,1273,3.205,1274,3.149,1275,3.367,1276,3.108,1277,3.108,1278,3.108,1279,1.944,1280,2.137,1281,2.589,1282,1.992,1283,2.421,1284,2.589,1285,1.854,1286,2.278,1287,2.278,1288,2.278,1289,1.772,1290,2.421,1291,2.589,1292,3.478,1293,2.043,1294,2.043,1295,2.501,1296,4.994,1297,2.589,1298,2.589,1299,2.589,1300,2.501,1301,2.589,1302,2.589,1303,2.589,1304,1.734,1305,2.153,1306,1.561,1307,1.561,1308,1.772,1309,2.589,1310,1.772,1311,2.589,1312,3.6,1313,2.153,1314,2.153,1315,2.153,1316,2.153,1317,2.153,1318,2.589,1319,2.589,1320,2.589,1321,2.153,1322,2.589,1323,2.589,1324,2.589,1325,2.097,1326,2.589,1327,3.642,1328,3.443]],["title/interfaces/Meta-1.html",[286,1.372,846,0.014,1274,1.555]],["body/interfaces/Meta-1.html",[3,0.078,4,0.078,9,0.071,11,0.949,28,0.007,30,0.208,31,0.319,32,0.134,33,0.236,127,0.596,146,1.001,153,1.9,164,0.005,165,0.005,200,1.343,204,1.019,222,0.503,371,1.108,454,0.66,490,1.569,508,1.195,510,1.038,541,1.43,542,1.832,551,1.015,553,1.103,554,1.174,587,1.511,594,1.174,595,1.056,846,0.029,848,0.837,851,2.292,877,1.835,879,1.835,881,1.835,886,1.835,888,1.835,891,1.835,911,2.239,1031,1.835,1120,2.088,1128,2.136,1262,2.415,1263,2.839,1265,1.539,1272,2.449,1274,3.307,1280,2.298,1282,3.426,1285,2.839,1289,2.041,1293,2.353,1294,2.353,1304,1.997,1305,2.48,1306,1.798,1307,1.798,1308,2.041,1310,2.041,1313,2.48,1314,2.48,1315,2.48,1316,2.48,1317,2.48,1321,2.48,1328,3.703,1329,2.789,1330,2.415,1331,3.217,1332,3.297,1333,3.703,1334,3.217,1335,4.672,1336,3.964,1337,2.982,1338,3.515,1339,3.356,1340,3.217,1341,3.515,1342,3.217,1343,3.515,1344,3.515,1345,4.672,1346,3.515,1347,3.515,1348,4.452]],["title/interfaces/Meta-2.html",[287,1.88,846,0.014,1274,1.555]],["body/interfaces/Meta-2.html",[3,0.071,4,0.071,9,0.064,20,0.255,23,0.939,28,0.007,30,0.225,31,0.289,32,0.125,33,0.214,164,0.004,165,0.004,200,0.814,204,0.922,207,0.764,215,2.076,219,0.255,222,0.578,229,2.076,230,1.081,286,1.594,343,1.768,351,2.327,366,2.306,367,2.026,368,2.076,371,1.122,454,0.616,477,1.751,503,1.393,506,0.922,508,1.081,510,0.939,528,2.185,541,1.293,542,1.247,545,2.076,546,2.603,548,2.076,549,2.129,551,0.615,553,1.109,554,1.458,556,2.185,558,1.419,564,2.076,584,1.563,586,2.076,587,1.877,588,1.978,590,2.445,591,2.306,592,1.806,593,2.185,594,0.799,595,0.955,598,2.698,619,2.698,639,3.704,642,2.189,643,3.357,644,2.698,646,2.373,652,2.698,654,2.606,655,2.91,656,2.781,657,3.179,658,2.185,661,2.91,662,2.026,663,2.146,664,2.606,665,2.91,666,2.91,667,2.91,668,2.91,669,2.076,670,3.357,671,2.91,672,2.91,673,2.91,675,2.129,676,1.806,677,2.523,784,2.244,786,2.244,787,2.244,846,0.027,848,0.757,851,1.788,860,1.446,884,2.91,906,1.393,1263,1.932,1274,3.049,1349,3.179,1350,2.91,1351,2.244,1352,3.036,1353,2.129,1354,5.788,1355,3.347,1356,3.036,1357,2.373,1358,5.148,1359,3.036,1360,2.373,1361,3.518,1362,2.373,1363,2.91,1364,3.036,1365,3.036,1366,4.168,1367,3.347,1368,3.036,1369,3.036,1370,3.036,1371,4.168,1372,3.347,1373,5.249,1374,3.347,1375,3.036,1376,3.036,1377,3.347,1378,3.347,1379,3.036,1380,3.036,1381,3.036,1382,3.347,1383,3.036,1384,3.347,1385,3.036,1386,3.347,1387,3.036,1388,3.347,1389,3.347]],["title/interfaces/Model.html",[592,1.858,846,0.016]],["body/interfaces/Model.html",[3,0.107,4,0.107,9,0.097,20,0.385,28,0.007,32,0.107,164,0.006,165,0.006,207,0.995,219,0.485,220,1.463,222,0.698,551,1.171,592,3.231,846,0.024,848,1.144,861,3.681,913,4.399,1516,3.955,1914,6.257,1915,7.032,1916,7.032]],["title/injectables/MySeasonsService.html",[454,0.462,1917,3.442]],["body/injectables/MySeasonsService.html",[3,0.085,4,0.085,9,0.076,20,0.304,21,1.5,23,1.448,24,1.47,27,1.138,28,0.007,30,0.214,31,0.344,32,0.121,33,0.254,66,2.536,127,0.618,146,1.079,164,0.005,165,0.005,207,0.859,218,1.527,219,0.436,220,1.147,222,0.643,230,1.957,343,2.106,351,2.901,371,0.972,454,0.693,455,1.862,477,1.694,490,1.69,491,2.019,506,1.098,534,3.559,546,1.977,551,0.732,552,3.105,553,1.267,554,1.639,558,1.69,584,1.862,594,0.952,595,1.138,641,3.787,643,3.773,646,2.827,675,2.536,676,2.152,846,0.025,851,1.358,863,2.019,914,2.152,1145,2.748,1265,1.659,1273,2.302,1276,2.413,1277,2.413,1278,2.413,1279,2.413,1280,1.659,1306,1.938,1307,1.938,1353,2.536,1766,3.466,1767,3.466,1768,4.49,1769,3.105,1917,5.165,1918,5.496,1919,4.227,1920,7.179,1921,5.542,1922,5.866,1923,3.787,1924,3.787,1925,3.616,1926,3.787,1927,3.787,1928,4.528,1929,3.787,1930,3.787,1931,4.528,1932,4.528,1933,4.528,1934,3.787,1935,4.528]],["title/injectables/MySeriesService.html",[454,0.462,1936,3.442]],["body/injectables/MySeriesService.html",[3,0.085,4,0.085,9,0.076,20,0.304,21,1.502,23,1.45,24,1.471,27,1.14,28,0.007,30,0.219,31,0.345,32,0.122,33,0.255,66,2.54,127,0.619,146,1.081,153,1.543,164,0.005,165,0.005,207,0.86,218,1.529,219,0.436,220,1.148,222,0.621,230,1.958,343,2.109,351,2.903,371,0.973,454,0.694,455,1.865,477,1.695,490,1.693,491,2.022,506,1.1,534,3.563,546,1.981,551,0.734,552,3.11,553,1.267,554,1.641,558,1.693,584,1.865,594,0.954,595,1.14,641,3.794,643,3.778,646,2.832,675,2.54,676,2.156,846,0.025,851,1.36,914,2.156,1145,2.752,1265,1.662,1272,1.662,1280,1.662,1306,1.941,1307,1.941,1330,2.607,1332,2.677,1333,2.677,1353,2.54,1766,3.472,1767,3.472,1768,4.495,1769,3.11,1918,5.5,1923,3.794,1924,3.794,1925,3.622,1926,3.794,1927,3.794,1929,3.794,1930,3.794,1934,3.794,1936,5.171,1937,4.235,1938,7.187,1939,5.552,1940,5.872,1941,4.536,1942,4.536,1943,4.536]],["title/directives/OnlyAllowedCharactersDirective.html",[124,2.308,161,2.247]],["body/directives/OnlyAllowedCharactersDirective.html",[3,0.089,4,0.089,9,0.08,13,2.818,14,3.314,20,0.32,21,1.552,23,1.179,24,1.586,27,1.2,28,0.007,29,2.822,30,0.143,31,0.363,32,0.089,33,0.268,124,3.582,127,0.577,160,3.072,161,3.488,162,4.516,164,0.005,165,0.005,200,1.428,218,1.58,219,0.447,220,1.186,222,0.547,367,3.234,372,1.685,407,5.2,490,1.782,491,2.129,783,4.775,976,5.374,1899,4.982,1944,7.248,1945,7.248,1946,5.2,1947,7.428,1948,5.344,1949,7.428,1950,5.844,1951,7.428,1952,5.844,1953,7.026,1954,7.428,1955,7.428,1956,5.2,1957,7.428,1958,5.844,1959,5.844,1960,5.844,1961,5.844,1962,4.775,1963,5.844,1964,5.844,1965,8.166,1966,5.844,1967,7.428,1968,5.2]],["title/interfaces/Paginated.html",[594,0.822,846,0.016]],["body/interfaces/Paginated.html",[3,0.106,4,0.106,9,0.096,20,0.382,28,0.007,32,0.106,164,0.006,165,0.006,207,0.99,219,0.5,546,2.954,553,1.275,554,2.016,558,2.693,594,1.422,676,2.707,846,0.024,848,1.134,851,2.164,914,3.429,1030,5.318,1031,2.488,1969,6.203,1970,6.972]],["title/interfaces/PaginatedRaw.html",[846,0.016,1353,2.189]],["body/interfaces/PaginatedRaw.html",[3,0.083,4,0.083,9,0.075,20,0.3,23,1.105,28,0.007,30,0.213,31,0.34,32,0.121,33,0.251,66,3.837,127,0.425,146,1.066,164,0.005,165,0.005,207,0.852,219,0.497,222,0.617,230,1.655,343,2.081,351,1.995,371,0.966,454,0.687,477,1.515,506,1.085,546,2.825,551,0.724,553,1.31,584,1.839,594,0.941,595,1.124,627,2.817,675,2.506,676,2.126,846,0.024,848,0.891,851,2.055,863,1.995,914,3.256,1145,4.157,1265,1.639,1273,2.274,1276,2.384,1277,2.384,1278,2.384,1279,2.384,1280,1.639,1306,1.914,1307,1.914,1353,3.259,1766,5.245,1767,5.245,1768,4.456,1769,4.697,1917,3.94,1918,3.573,1919,4.177,1922,4.474,1923,3.742,1924,3.742,1925,3.573,1926,3.742,1927,3.742,1928,4.474,1929,3.742,1930,3.742,1931,4.474,1932,4.474,1933,4.474,1934,3.742,1935,4.474]],["title/interfaces/PaginatedRaw-1.html",[286,1.372,846,0.014,1353,1.832]],["body/interfaces/PaginatedRaw-1.html",[3,0.084,4,0.084,9,0.075,20,0.3,23,1.107,28,0.007,30,0.218,31,0.341,32,0.121,33,0.252,66,3.839,127,0.426,146,1.068,153,1.525,164,0.005,165,0.005,207,0.853,219,0.497,222,0.583,230,1.657,343,2.084,351,1.998,371,0.967,454,0.688,477,1.517,506,1.087,546,2.827,551,0.725,553,1.311,584,1.843,594,0.942,595,1.126,627,2.818,675,2.51,676,2.13,846,0.024,848,0.892,851,2.056,914,3.258,1145,4.16,1265,1.642,1272,1.642,1280,1.642,1306,1.918,1307,1.918,1330,2.576,1332,2.645,1333,2.645,1353,3.263,1766,5.248,1767,5.248,1768,4.461,1769,4.7,1918,3.579,1923,3.749,1924,3.749,1925,3.579,1926,3.749,1927,3.749,1929,3.749,1930,3.749,1934,3.749,1936,3.947,1937,4.184,1940,4.482,1941,4.482,1942,4.482,1943,4.482]],["title/interfaces/PaginatedRaw-2.html",[287,1.88,846,0.014,1353,1.832]],["body/interfaces/PaginatedRaw-2.html",[3,0.071,4,0.071,9,0.064,20,0.256,23,0.941,28,0.007,30,0.225,31,0.29,32,0.098,33,0.214,66,3.598,164,0.004,165,0.004,204,0.925,207,0.766,215,2.082,219,0.477,222,0.538,229,2.082,286,1.599,343,1.773,351,2.331,366,2.313,367,2.031,368,2.082,371,1.099,454,0.618,477,1.672,503,1.397,504,3.85,506,0.925,508,1.084,510,0.941,528,2.191,541,1.297,542,1.251,545,2.082,546,2.94,548,2.082,553,1.279,554,1.065,556,2.191,564,2.082,584,1.567,586,2.082,587,1.88,588,1.983,590,2.452,591,2.313,592,1.812,593,2.191,594,0.802,595,0.958,598,2.705,619,2.705,627,2.641,639,3.711,642,2.193,643,3.364,644,2.705,646,2.38,652,2.705,653,3.189,654,2.614,655,2.918,659,3.812,660,3.559,661,2.918,662,2.031,663,2.15,664,2.614,665,2.918,666,2.918,667,2.918,668,2.918,669,2.082,670,3.364,671,2.918,672,2.918,673,2.918,675,2.135,676,1.812,677,2.53,846,0.016,848,0.759,851,1.927,860,1.45,914,3.053,1145,3.898,1350,2.918,1352,3.044,1353,2.929,1358,4.57,1359,3.044,1363,2.918,1364,3.044,1365,3.044,1366,4.176,1368,3.044,1369,3.044,1370,3.044,1371,4.176,1375,3.044,1376,3.044,1379,3.044,1380,3.044,1381,3.044,1383,3.044,1385,3.044,1387,3.044,1757,3.559,1758,3.812,1759,3.559,1766,4.918,1767,4.918,1768,4.003,1769,4.405,1770,4.151,1771,4.151,1772,5.695,1773,4.151,1774,4.151,1775,4.151,1776,4.151,1777,4.151]],["title/interfaces/PaginatedRaw-3.html",[290,2.881,846,0.014,1353,1.832]],["body/interfaces/PaginatedRaw-3.html",[3,0.07,4,0.07,9,0.063,20,0.252,23,0.929,28,0.007,30,0.225,31,0.286,32,0.125,33,0.211,164,0.004,165,0.004,200,0.806,204,0.913,207,0.759,215,2.055,219,0.347,222,0.576,229,2.055,230,1.07,286,1.578,343,1.75,351,2.311,366,2.283,367,2.005,368,2.055,371,1.12,454,0.612,477,1.744,503,1.379,506,0.913,508,1.07,510,0.929,528,2.163,541,1.28,542,1.235,545,2.055,546,2.589,548,2.055,549,2.107,551,0.609,553,1.105,554,1.448,556,2.163,558,1.405,564,2.055,584,1.547,586,2.055,587,1.864,588,1.958,590,2.421,591,2.283,592,1.788,593,2.163,594,0.791,595,0.946,598,2.671,619,2.671,639,3.679,642,2.174,643,3.334,644,2.671,646,2.35,652,2.671,654,2.58,655,2.881,656,2.762,657,3.148,658,2.163,661,2.881,662,2.005,663,2.131,664,2.58,665,2.881,666,2.881,667,2.881,668,2.881,669,2.055,670,3.334,671,2.881,672,2.881,673,2.881,675,2.107,676,1.788,677,2.497,784,2.221,786,2.221,787,2.221,846,0.027,848,0.749,851,2.168,860,1.432,884,2.881,906,1.379,1263,1.913,1274,3.436,1349,3.148,1350,2.881,1351,2.221,1352,3.005,1353,2.903,1354,4.735,1355,3.314,1356,3.005,1357,2.35,1358,5.129,1359,3.005,1360,2.35,1361,3.5,1362,2.35,1363,2.881,1364,3.005,1365,3.005,1366,4.139,1367,3.314,1368,3.005,1369,3.005,1370,3.005,1371,4.139,1372,3.314,1373,5.221,1374,3.314,1375,3.005,1376,3.005,1377,3.314,1378,3.314,1379,3.005,1380,3.005,1381,3.005,1382,3.314,1383,3.005,1384,3.314,1385,3.005,1386,3.314,1387,3.005,1388,3.314,1389,3.314]],["title/interfaces/Pagination.html",[846,0.016,1354,3.122]],["body/interfaces/Pagination.html",[3,0.069,4,0.069,9,0.062,20,0.247,23,0.911,28,0.007,30,0.224,31,0.28,32,0.124,33,0.207,164,0.004,165,0.004,200,0.79,204,0.895,207,0.748,215,2.015,219,0.425,222,0.571,229,2.015,230,1.049,286,1.547,343,1.716,351,2.279,366,2.238,367,1.966,368,2.015,371,1.116,454,0.604,477,1.732,503,1.351,506,0.895,508,1.049,510,0.911,528,2.12,541,1.255,542,1.21,545,2.015,546,2.562,548,2.015,549,2.066,551,0.597,553,1.252,554,1.859,556,2.12,558,2.365,564,2.015,584,1.517,586,2.015,587,1.838,588,1.919,590,2.373,591,2.238,592,1.753,593,2.12,594,0.776,595,0.927,598,2.618,619,2.618,639,3.628,642,2.144,643,3.289,644,2.618,646,2.303,652,2.618,654,2.529,655,2.824,656,2.724,657,3.086,658,2.12,661,2.824,662,1.966,663,2.102,664,2.529,665,2.824,666,2.824,667,2.824,668,2.824,669,2.015,670,3.289,671,2.824,672,2.824,673,2.824,675,2.066,676,1.753,677,2.448,784,2.178,786,2.178,787,2.178,846,0.027,848,0.734,851,1.76,860,1.403,884,4.85,906,1.351,1263,1.875,1274,2.788,1349,3.086,1350,2.824,1351,2.178,1352,2.946,1353,2.066,1354,5.059,1355,5.578,1356,2.946,1357,2.303,1358,5.093,1359,2.946,1360,2.303,1361,3.463,1362,2.303,1363,2.824,1364,2.946,1365,2.946,1366,4.083,1367,3.249,1368,2.946,1369,2.946,1370,2.946,1371,4.083,1372,3.249,1373,5.167,1374,3.249,1375,2.946,1376,2.946,1377,3.249,1378,3.249,1379,2.946,1380,2.946,1381,2.946,1382,3.249,1383,2.946,1384,3.249,1385,2.946,1386,3.249,1387,2.946,1388,3.249,1389,3.249]],["title/components/PictureSelectableComponent.html",[0,1.406,138,2.247]],["body/components/PictureSelectableComponent.html",[0,1.633,1,1.368,2,2.381,3,0.044,4,0.044,5,1.579,6,1.579,7,1.579,8,1.579,9,0.062,11,0.836,12,2.836,13,1.405,14,4.018,15,3.551,16,2.073,18,2.073,20,0.159,21,0.947,22,3.2,23,0.914,24,1.627,27,1.674,28,0.007,29,3.319,30,0.153,31,0.181,32,0.069,33,0.134,47,3.806,52,1.689,53,1.632,55,1.752,56,2.958,57,2.538,58,3.514,61,1.752,62,1.752,64,2.627,65,1.822,66,1.333,67,1.752,70,3.114,73,3.514,74,3.114,77,1.972,78,1.689,80,1.689,81,1.689,82,3.119,83,1.632,84,1.632,85,3.114,86,3.114,87,2.456,88,2.538,92,2.538,96,3.514,99,1.632,101,1.632,107,1.632,109,4.03,121,1.21,122,2.456,123,2.456,124,1.405,125,3.901,126,1.579,127,0.644,128,1.579,129,1.405,130,1.579,131,1.531,132,1.444,133,1.579,134,1.3,135,1.579,136,1.368,137,1.579,138,3.19,139,3.023,140,2.456,141,1.368,142,1.579,143,1.368,144,1.579,145,1.333,146,0.882,147,2.456,148,1.333,149,1.579,150,1.333,151,2.456,152,1.333,153,1.545,154,1.405,155,1.333,156,1.579,157,1.333,158,1.444,159,1.531,160,1.531,161,1.368,162,1.531,163,1.579,164,0.003,165,0.003,172,1.579,187,1.486,189,0.84,200,0.509,207,0.542,208,2.257,218,1.652,219,0.446,220,1.302,222,0.409,230,1.457,251,1.689,252,1.689,254,1.9,263,3.259,265,2.627,269,2.627,272,3.259,273,1.689,276,2.591,277,2.095,282,1.99,284,2.095,294,1.689,372,1.603,378,2.222,489,3.014,490,2.072,491,2.475,506,0.577,558,0.888,762,2.833,978,1.822,983,3.114,1000,2.095,1012,2.582,1013,2.435,1170,1.531,1325,1.368,1485,2.725,1534,5.124,1853,4.092,1889,1.99,1890,2.38,1899,1.689,1953,5.487,1962,3.701,1968,4.03,1971,7.258,1972,6.776,1973,2.222,1974,4.946,1975,4.946,1976,3.701,1977,4.03,1978,4.946,1979,4.03,1980,5.559,1981,4.53,1982,5.58,1983,4.946,1984,4.53,1985,4.53,1986,4.53,1987,4.03,1988,4.03,1989,4.03,1990,4.03,1991,2.913,1992,4.03,1993,2.913,1994,2.913,1995,2.913,1996,2.913,1997,2.591,1998,2.591,1999,2.913,2000,4.53,2001,2.913,2002,2.913,2003,2.913,2004,4.03,2005,2.913,2006,4.946,2007,4.03,2008,2.913,2009,2.591,2010,2.913,2011,4.03,2012,2.913,2013,4.03,2014,2.913,2015,2.591,2016,4.53,2017,2.913,2018,2.591,2019,3.701,2020,3.701,2021,2.38,2022,2.38,2023,2.913,2024,2.913,2025,2.913,2026,2.913,2027,2.913,2028,2.913,2029,4.53,2030,2.913,2031,2.591,2032,2.591,2033,2.913,2034,2.913,2035,2.913,2036,2.913,2037,2.913,2038,2.913,2039,2.913,2040,2.913,2041,2.913,2042,2.913,2043,2.591,2044,2.591,2045,2.913,2046,2.913,2047,2.913,2048,2.591,2049,2.913,2050,2.913,2051,2.913,2052,2.913,2053,2.913,2054,4.03,2055,4.542,2056,3.701,2057,2.38,2058,2.38,2059,2.38,2060,2.222,2061,2.591,2062,2.222,2063,2.38,2064,2.913,2065,2.913,2066,2.913,2067,2.913,2068,2.913,2069,2.913,2070,3.259]],["title/classes/Port.html",[33,0.22,974,2.774]],["body/classes/Port.html",[0,2.127,3,0.059,4,0.059,9,0.053,11,0.715,12,2.864,14,1.728,15,1.537,16,1.772,18,1.772,20,0.212,22,1.976,23,0.781,24,1.219,28,0.007,29,1.472,30,0.219,31,0.241,32,0.101,33,0.303,35,1.92,82,1.609,127,0.562,134,1.728,146,1.409,150,2.568,153,2.227,157,2.568,164,0.004,165,0.004,189,1.117,193,1.728,194,1.772,200,1.266,207,0.671,208,3.641,219,0.362,220,1.28,222,0.533,230,1.92,286,1.923,287,1.819,327,2.17,344,2.17,372,1.619,385,3.255,438,2.528,477,0.824,489,3.579,491,1.411,506,0.768,520,2.33,536,3.809,551,0.957,553,0.89,594,0.665,627,2.691,676,1.504,740,2.423,969,4.646,970,3.165,971,3.836,974,4.646,976,4.129,977,3.836,978,2.423,979,2.647,980,2.647,981,2.647,982,2.528,983,2.17,984,3.828,985,2.33,986,3.663,987,2.246,988,2.528,989,2.423,990,2.528,991,2.647,992,3.376,993,2.528,994,2.787,995,4.586,996,2.423,997,2.787,998,3.446,999,3.165,1000,2.787,1001,3.446,1002,3.446,1003,2.647,1004,2.647,1005,2.955,1006,3.165,1007,2.647,1008,3.446,1009,3.446,1010,2.955,1011,2.647,1012,1.472,1013,2.179,1014,3.446,1015,3.446,1016,3.165,1017,2.647,1018,2.647,1019,2.787,1020,2.955,1021,2.647,1022,2.647,1023,2.647,1024,2.647,1025,2.647,1026,2.647,1027,2.955,1028,2.955,1029,2.647,1030,2.955,1031,1.382,1032,2.787,1033,5.014,1034,3.446,1035,3.663,1036,4.994,1037,5.873,1038,4.994,1039,4.994,1040,3.663,1041,3.663,1042,3.663,1043,3.446,1044,3.663,1045,3.663,1046,3.165,1047,4.994,1048,3.446,1049,4.723,1050,2.955,1051,3.446,1052,2.955,1053,3.446,1054,3.446,1055,3.446,1056,2.955,1057,2.955,1058,4.344,1059,3.446,1060,2.955,1061,3.446,1062,3.511,1063,3.836,1064,3.836,1065,3.836,1066,2.955,1067,3.446,1068,2.955,1069,3.446,1070,3.446,1071,3.446,1072,3.446,1073,3.446,1074,2.787,2071,3.874,2072,3.874,2073,3.874]],["title/classes/Port-1.html",[33,0.184,286,1.372,974,2.322]],["body/classes/Port-1.html",[0,1.621,3,0.044,4,0.044,9,0.04,11,0.531,12,2.29,14,1.284,15,1.143,16,1.317,18,1.317,20,0.341,22,1.469,23,0.581,24,1.019,28,0.007,29,1.094,30,0.211,31,0.179,32,0.084,33,0.253,35,1.427,82,2.292,89,1.613,93,3.276,112,2.359,127,0.484,146,0.56,152,2.054,153,2.209,155,1.317,164,0.003,165,0.003,189,0.83,193,1.284,194,1.317,200,1.448,207,0.537,208,3.46,209,1.801,219,0.302,220,1.143,222,0.459,229,1.284,230,1.923,286,2.135,287,1.352,327,2.515,344,2.515,371,0.548,372,1.949,386,3.09,465,1.801,477,1.174,489,3.664,490,0.878,503,0.862,506,0.571,520,1.731,533,1.352,536,3.09,551,0.824,553,1.008,554,0.657,558,0.878,594,0.771,627,1.854,679,3.23,740,1.801,847,2.7,849,2.929,852,2.929,853,1.878,854,1.878,855,2.7,906,1.344,914,1.118,953,3.601,969,4.151,971,3.068,974,4.151,976,3.451,977,3.068,978,1.801,979,1.967,980,3.068,981,3.068,982,2.929,983,2.515,984,3.2,985,1.731,986,2.929,987,1.669,988,1.878,989,1.801,990,1.878,991,1.967,992,2.7,996,1.801,1003,1.967,1004,1.967,1007,1.967,1011,1.967,1012,1.094,1013,2.42,1017,1.967,1018,1.967,1019,4.484,1021,1.967,1022,1.967,1023,1.967,1024,1.967,1025,1.967,1026,1.967,1028,2.196,1029,1.967,1032,2.071,1033,4.067,1035,1.878,1040,4.067,1041,4.067,1042,4.067,1044,1.878,1045,1.878,1049,2.929,1058,4.065,1062,1.801,1063,1.967,1064,1.967,1065,1.967,1066,2.196,1068,2.196,1074,2.071,1075,2.352,1079,2.071,1080,2.071,1081,2.196,1082,2.196,1083,3.23,1084,2.929,1085,1.731,1086,2.561,1087,2.561,1088,2.071,1089,4.259,1090,2.352,1091,2.352,1092,2.352,1093,4.484,1094,2.196,1095,4.259,1096,2.196,1097,3.068,1098,2.196,1099,2.071,1100,2.196,1101,1.801,1102,2.196,1103,2.561,1104,2.561,1105,2.196,1106,2.196,1107,3.23,1108,2.196,1109,1.967,1110,2.561,1111,2.561,1112,2.561,1113,2.561,1114,2.196,1115,2.561,1116,3.668,1117,2.196,1118,3.23,1119,3.23,1120,2.743,1121,2.196,1122,3.424,1123,3.994,1124,4.209,1125,4.209,1126,2.561,1127,3.994,1128,2.973,1129,2.561,1130,2.561,1131,2.196,1132,3.424,1133,2.561,1134,2.196,1135,2.561,1136,2.071,1137,2.071,1138,3.23,1139,2.352,1140,3.23,1141,2.561,1142,2.352,1143,3.668,1144,2.561,1145,3.09,1146,2.929,1147,3.994,1148,3.994,1149,2.352,1150,2.071,1151,2.352,1152,2.352,1153,2.352,1154,2.071,1155,2.352,1156,2.561,1157,2.352,1158,2.561,1159,2.352,1160,2.352,1161,2.561,1162,2.196,1163,2.561,1164,3.068,1165,3.771,1166,2.196,1167,2.196,1168,2.196,1169,2.561,1170,2.9,1171,3.601,1172,2.561,1173,2.196,1174,2.561,1175,2.561,1176,2.561,1177,3.424,1178,2.196,1179,2.196,1180,2.561,1181,2.196,1182,2.196,1183,2.071,1184,1.967,1185,3.068,1186,2.196,1187,2.196,1188,2.561,1189,2.196,2074,2.879,2075,2.879,2076,2.879]],["title/classes/Port-2.html",[33,0.184,287,1.88,974,2.322]],["body/classes/Port-2.html",[0,1.579,3,0.042,4,0.042,9,0.038,11,0.51,12,2.217,14,1.233,15,1.096,16,1.264,18,1.264,20,0.334,22,1.409,23,0.557,24,0.992,28,0.007,29,1.05,30,0.209,31,0.172,32,0.082,33,0.247,35,1.37,82,2.232,89,1.548,93,3.203,112,2.284,127,0.473,145,1.989,146,1.485,148,1.264,153,1.208,164,0.003,165,0.003,189,0.797,193,1.233,194,1.264,200,1.432,207,0.52,208,3.427,209,1.728,219,0.294,220,1.124,222,0.449,229,1.233,230,1.903,241,2.836,286,2.088,287,1.297,327,2.435,344,2.435,367,2.34,368,2.719,371,0.531,372,1.911,385,2.52,386,2.155,409,2.257,465,1.728,477,1.143,489,3.593,490,0.843,503,0.827,506,0.547,520,1.662,533,1.297,536,3.021,551,0.876,553,0.992,554,0.631,558,0.843,594,0.747,627,1.805,679,3.127,687,1.662,740,1.728,847,2.614,849,2.836,852,2.836,853,1.802,854,1.802,855,2.614,906,1.301,914,1.073,953,3.506,969,4.08,971,2.97,974,4.08,976,3.361,977,2.97,978,1.728,979,1.888,980,2.97,981,2.97,982,2.836,983,2.435,984,3.116,985,1.662,986,2.836,987,1.602,988,1.802,989,1.728,990,1.802,991,1.888,992,2.614,993,1.802,1003,1.888,1004,1.888,1010,2.107,1011,1.888,1012,1.05,1013,2.366,1017,1.888,1018,1.888,1020,4.648,1021,1.888,1022,1.888,1023,1.888,1024,1.888,1025,1.888,1026,1.888,1027,2.107,1029,1.888,1033,3.976,1035,1.802,1040,3.976,1041,3.976,1042,3.976,1044,1.802,1045,1.802,1049,2.836,1050,2.107,1052,2.107,1056,2.107,1057,2.107,1058,4.008,1060,2.107,1062,1.728,1063,1.888,1064,1.888,1065,1.888,1080,1.987,1082,2.107,1083,3.127,1084,2.836,1085,1.662,1088,1.987,1089,3.672,1093,4.384,1094,2.107,1095,4.164,1096,2.107,1097,2.97,1098,2.107,1099,1.987,1100,2.107,1101,1.728,1102,2.107,1105,2.107,1106,2.107,1107,3.127,1108,2.107,1109,1.888,1114,2.107,1117,2.107,1118,3.127,1119,3.127,1120,2.69,1121,2.107,1122,3.315,1124,4.099,1125,4.099,1128,2.922,1131,2.107,1132,3.315,1134,2.107,1136,1.987,1137,1.987,1138,3.127,1140,3.127,1145,3.021,1146,2.836,1150,1.987,1154,1.987,1162,2.107,1164,2.97,1165,3.672,1166,2.107,1167,2.107,1168,2.107,1170,2.824,1171,3.506,1173,2.107,1177,3.315,1178,2.107,1179,2.107,1181,2.107,1182,2.107,1183,1.987,1184,1.888,1185,2.97,1186,2.107,1187,2.107,1189,2.107,1190,2.257,1194,1.987,1195,2.107,1196,2.458,1197,2.458,1198,2.458,1199,2.458,1200,2.458,1201,2.458,1202,2.458,1203,2.458,1204,2.458,1205,2.458,1206,2.458,1207,2.458,1208,2.458,1209,3.867,1210,2.107,1211,2.458,1212,2.458,1213,2.458,1214,1.888,1215,3.127,1216,2.458,1217,5.422,1218,2.458,1219,3.867,1220,2.458,1221,4.781,1222,2.257,1223,1.802,1224,2.458,1225,2.458,1226,3.867,1227,2.458,1228,3.867,1229,2.458,1230,2.458,1231,2.458,1232,2.458,1233,2.458,1234,2.458,1235,2.458,1236,3.867,1237,3.315,1238,3.867,1239,3.867,1240,3.867,1241,2.458,1242,2.458,1243,2.458,1244,2.458,1245,2.458,1246,2.458,1247,2.458,1248,2.458,1249,2.458,1250,2.458,1251,2.458,1252,2.458,1253,2.458,1254,2.458,1255,2.458,1256,2.458,1257,2.458,1258,2.458,1259,2.458,1260,2.458,2077,2.762,2078,2.762,2079,2.762]],["title/components/ProfilePage.html",[0,1.406,141,2.247]],["body/components/ProfilePage.html",[0,1.217,1,0.89,2,1.68,3,0.029,4,0.029,5,1.027,6,1.027,7,1.027,8,1.027,9,0.044,11,0.59,12,2.114,13,0.914,14,3.695,15,3.253,16,1.462,18,1.462,20,0.104,21,0.668,22,2.482,23,0.645,24,1.456,27,1.116,28,0.007,29,0.72,30,0.161,31,0.118,32,0.029,33,0.087,35,4.213,46,2.492,47,4.083,48,1.999,49,1.236,50,1.185,51,1.462,52,1.853,53,3.512,54,2.403,55,1.14,56,2.118,57,2.321,58,3.044,59,1.185,61,1.922,62,1.14,63,1.999,64,2.403,67,1.14,68,5.099,69,1.445,70,3.512,71,3.043,72,1.999,73,3.3,74,2.726,77,1.391,80,2.403,81,2.403,82,2.847,83,2.726,84,3.044,85,3.044,86,3.044,87,1.733,88,3.97,89,1.062,92,3.84,94,1.445,96,4.183,97,1.548,98,1.236,99,3.044,101,4.183,102,1.236,103,2.403,104,1.999,105,1.295,107,1.062,109,3.3,110,1.099,111,1.14,112,0.996,116,1.445,121,0.787,122,1.733,123,1.733,124,0.914,125,2.946,126,1.027,127,0.566,128,1.027,129,0.914,130,1.027,131,0.996,132,0.939,133,1.027,134,0.846,135,1.027,136,0.89,137,1.027,138,0.89,139,1.9,140,1.733,141,2.285,142,1.027,143,0.89,144,1.027,145,0.867,146,0.622,147,1.733,148,0.867,149,1.027,150,0.867,151,1.733,152,0.867,153,1.152,154,0.914,155,0.867,156,1.027,157,0.867,158,0.939,159,0.996,160,0.996,161,0.89,162,0.996,163,1.027,164,0.002,165,0.002,187,0.967,189,0.546,193,0.846,194,0.867,200,1.497,207,0.382,215,2.171,218,0.881,219,0.361,220,0.868,222,0.462,229,0.846,230,1.369,240,2.843,241,1.236,251,2.403,252,2.403,265,1.853,269,3.416,273,2.403,274,2.711,282,2.184,284,1.363,293,1.295,294,1.099,366,1.584,367,1.391,368,2.171,371,0.719,372,0.922,456,1.999,475,2.184,487,0.867,490,1.264,491,1.509,506,0.376,519,2.412,524,1.027,536,3.701,538,0.967,627,1.979,762,1.999,777,1.363,985,1.14,992,3.771,1000,1.363,1012,1.214,1013,1.241,1058,4.711,1109,2.184,1170,2.557,1210,1.445,1215,1.363,1222,1.548,1223,2.704,1237,2.438,1268,0.806,1325,0.89,1408,2.551,1413,2.62,1422,2.62,1423,2.412,1463,1.548,1464,1.686,1474,1.686,1485,1.922,1490,2.981,1507,2.843,1568,1.686,1572,1.363,1710,1.363,1816,3.5,1819,2.299,1821,4.239,1824,4.782,1831,1.548,1832,2.981,1834,4.932,1836,2.981,1838,1.548,1842,1.363,1847,3.5,1848,1.548,1849,4.494,1850,4.814,1851,4.782,1852,1.445,1855,4.494,1889,1.295,1891,2.299,1896,1.548,1897,1.363,1899,1.853,1900,1.363,1901,2.299,1902,2.299,1953,3.711,1962,1.548,2043,1.686,2044,1.686,2048,1.686,2055,1.548,2056,1.548,2057,1.548,2058,1.548,2059,1.548,2060,1.445,2062,1.445,2063,1.548,2070,2.299,2080,1.686,2081,4.144,2082,3.196,2083,4.144,2084,5.433,2085,3.687,2086,4.144,2087,2.843,2088,3.196,2089,4.865,2090,1.895,2091,3.687,2092,4.144,2093,5.578,2094,1.895,2095,2.843,2096,1.895,2097,1.686,2098,1.895,2099,3.196,2100,1.895,2101,1.895,2102,1.895,2103,2.843,2104,1.895,2105,1.895,2106,1.895,2107,1.895,2108,1.895,2109,1.686,2110,1.895,2111,1.445,2112,1.895,2113,1.686,2114,1.895,2115,1.895,2116,1.686,2117,3.196,2118,1.895,2119,1.895,2120,1.895,2121,4.144,2122,1.895,2123,1.895,2124,1.895,2125,1.686,2126,1.895,2127,4.834,2128,1.686,2129,1.895,2130,3.196,2131,1.686,2132,4.144,2133,1.895,2134,4.144,2135,1.895,2136,2.843,2137,1.686,2138,1.686,2139,1.686,2140,1.686,2141,1.686,2142,1.686,2143,1.686,2144,1.686,2145,1.686,2146,1.686,2147,3.687,2148,3.196,2149,2.843,2150,2.843,2151,1.895,2152,2.843,2153,2.843,2154,1.686,2155,1.895,2156,1.895,2157,3.196,2158,1.895,2159,1.895,2160,1.895,2161,1.895,2162,1.686,2163,1.895,2164,5.242,2165,3.196,2166,3.687,2167,1.686,2168,4.144,2169,2.843,2170,1.895,2171,3.196,2172,1.686,2173,1.895,2174,1.895,2175,1.895,2176,1.895,2177,2.843,2178,1.895,2179,1.895,2180,1.686,2181,1.686,2182,1.895,2183,1.895,2184,1.895,2185,1.895,2186,3.196,2187,1.895,2188,1.895,2189,1.895,2190,1.895,2191,1.895,2192,1.895,2193,1.895,2194,1.895,2195,1.895,2196,1.895,2197,1.895,2198,1.895,2199,1.895,2200,1.686,2201,1.895,2202,1.895,2203,1.895,2204,3.196,2205,1.895,2206,1.895,2207,1.895,2208,1.895,2209,1.895,2210,1.895,2211,1.895,2212,1.895,2213,1.686,2214,1.686,2215,1.686,2216,1.686,2217,3.196,2218,3.196,2219,3.196,2220,3.196,2221,3.196,2222,4.865,2223,3.196,2224,3.196,2225,3.196,2226,3.196,2227,3.196,2228,3.196,2229,3.196,2230,1.686,2231,1.895,2232,1.686,2233,1.686,2234,1.295,2235,1.548,2236,1.295,2237,1.686,2238,1.445,2239,1.895]],["title/modules/ProfilePageModule.html",[166,1.743,2240,3.65]],["body/modules/ProfilePageModule.html",[3,0.091,4,0.091,9,0.082,28,0.007,30,0.231,31,0.371,32,0.091,33,0.274,68,4.298,121,2.481,141,4.281,161,4.281,164,0.005,165,0.005,166,2.176,168,2.54,169,3.14,170,4.783,171,3.464,172,3.239,173,2.666,178,4.368,179,3.464,180,3.464,182,3.361,183,3.446,184,4.711,185,3.593,186,5.746,187,3.048,188,4.368,189,1.723,190,3.737,192,4.711,193,2.666,194,2.734,306,6.231,346,5.419,1944,4.881,1945,4.881,2240,7.341,2241,5.316,2242,5.316,2243,5.316,2244,6.56,2245,5.974,2246,5.316,2247,5.974,2248,5.974]],["title/modules/ProfilePageRoutingModule.html",[166,1.743,2244,3.442]],["body/modules/ProfilePageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,141,3.887,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.979,199,3.456,200,1.219,201,3.111,202,4.361,2244,5.956,2246,6.203,2249,6.972]],["title/interfaces/ProviderMetadata.html",[846,0.016,1644,2.68]],["body/interfaces/ProviderMetadata.html",[3,0.07,4,0.07,9,0.063,20,0.252,23,0.926,28,0.007,30,0.207,31,0.285,32,0.138,33,0.211,51,3.749,56,3.567,77,3.567,127,0.636,164,0.004,165,0.004,200,1.107,201,3.485,207,0.757,208,1.864,219,0.397,222,0.725,230,1.815,337,2.49,343,1.745,351,1.673,371,0.884,372,1.324,477,0.977,503,1.375,506,0.91,519,3.139,521,2.414,524,2.49,551,0.607,553,1.276,584,1.543,642,1.574,656,2.757,658,2.156,662,3.567,663,1.543,748,2.101,784,2.215,786,2.215,787,2.215,846,0.03,848,0.747,860,1.428,861,1.907,906,1.375,1266,1.952,1268,1.952,1351,2.215,1357,2.343,1360,2.343,1361,3.494,1362,2.343,1516,2.049,1589,2.663,1625,4.059,1626,2,1627,3.929,1628,3.697,1629,3.929,1630,3.929,1631,2.663,1632,2.573,1633,3.433,1634,2.762,1635,2.762,1636,2.762,1637,2.762,1638,4.927,1639,4.927,1640,4.927,1641,2.762,1642,2.156,1643,4.927,1644,4.862,1645,4.697,1646,4.697,1647,2.573,1648,2.762,1649,2.762,1650,2.663,1651,2.762,1652,4.202,1653,2.762,1654,2.663,1655,2.762,1656,2.762,1657,2.762,1658,2.762]],["title/components/RegisterPage.html",[0,1.406,143,2.247]],["body/components/RegisterPage.html",[0,1.236,1,0.909,2,1.709,3,0.03,4,0.03,5,1.049,6,1.049,7,1.049,8,1.049,9,0.027,11,0.6,12,2.146,13,0.933,14,3.713,15,3.303,16,1.488,18,1.488,20,0.106,21,0.68,22,2.515,23,0.656,24,1.587,27,1.419,28,0.007,29,2.406,30,0.155,31,0.12,32,0.03,33,0.089,46,2.53,47,4.001,48,1.21,50,1.21,51,3.163,52,1.122,53,1.822,54,3.188,55,1.164,56,2.147,57,1.084,58,3.547,59,3.725,61,3.307,62,3.808,63,2.631,64,2.439,65,2.631,66,1.925,67,2.53,70,1.084,73,2.357,74,1.822,75,1.164,77,2.147,78,1.886,80,1.122,81,1.122,82,2.629,83,1.822,84,3.547,85,1.084,86,1.084,87,1.763,88,4.113,90,2.34,91,1.392,92,3.336,93,2.211,95,2.657,96,4.113,98,1.263,99,1.822,100,2.34,101,4.211,103,4.008,104,1.21,105,1.322,107,1.822,109,4.298,110,1.886,111,1.956,112,1.017,113,1.21,114,1.263,115,1.581,117,1.581,120,1.392,121,0.804,122,1.763,123,1.763,124,0.933,125,3.433,126,1.049,127,0.583,128,1.049,129,0.933,130,1.049,131,1.017,132,0.959,133,1.049,134,0.863,135,1.049,136,0.909,137,1.049,138,0.909,139,0.676,140,1.763,141,0.909,142,1.049,143,2.315,144,1.049,145,0.885,146,0.633,147,1.763,148,0.885,149,1.049,150,0.885,151,1.763,152,0.885,153,1.169,154,0.933,155,0.885,156,1.049,157,0.885,158,0.959,159,1.017,160,1.017,161,0.909,162,1.017,163,1.049,164,0.002,165,0.002,187,0.987,189,0.558,199,0.959,200,1.284,207,0.389,209,2.631,215,2.2,216,4.555,218,1.049,219,0.402,220,0.787,222,0.565,229,0.863,230,1.544,236,1.721,251,2.859,252,2.439,253,2.657,257,1.392,258,1.392,261,2.657,263,1.392,265,1.122,268,1.581,269,2.439,272,1.392,273,1.122,274,1.21,281,1.581,284,1.392,291,1.581,294,1.122,367,2.147,368,1.877,371,0.844,372,0.558,429,1.392,435,3.209,438,1.263,456,1.21,475,2.223,490,1.677,491,2.421,536,3.427,664,1.822,669,2.2,762,1.21,794,5.069,802,6.73,817,5.298,825,2.481,906,0.579,1012,2.089,1013,1.263,1058,2.592,1088,3.027,1095,1.322,1107,2.34,1145,0.959,1170,1.709,1171,1.263,1184,1.322,1185,1.322,1325,0.909,1408,3.246,1409,3.825,1413,2.652,1422,2.652,1423,2.444,1485,1.164,1490,3.547,1570,2.481,1572,4.973,1628,1.659,1710,1.392,1769,1.084,1813,3.743,1816,3.547,1817,2.894,1818,4.387,1819,2.34,1820,1.476,1821,3.547,1822,3.437,1823,4.387,1824,4.829,1826,2.481,1830,2.894,1831,4.029,1832,3.956,1834,3.027,1836,3.027,1838,1.581,1840,1.721,1842,2.34,1846,1.476,1847,4.285,1848,1.581,1849,1.476,1850,1.581,1851,1.476,1852,1.476,1853,1.263,1854,1.721,1855,1.476,1856,2.894,1859,1.721,1861,2.894,1862,1.721,1863,3.437,1864,1.721,1872,2.894,1877,1.581,1883,2.657,1884,5.913,1886,6.948,1887,6.355,1888,2.894,1889,1.322,1890,1.581,1891,2.34,1892,1.581,1893,1.721,1894,1.721,1895,1.581,1896,1.581,1897,1.392,1898,1.263,1899,1.886,1900,1.392,1901,2.34,1902,2.34,1903,1.721,1904,1.721,1905,1.721,2085,3.743,2087,2.894,2095,2.894,2097,1.721,2103,2.894,2109,1.721,2111,1.476,2113,1.721,2116,1.721,2125,1.721,2127,4.892,2136,2.894,2137,1.721,2138,1.721,2139,1.721,2140,1.721,2141,1.721,2142,1.721,2143,1.721,2144,1.721,2145,1.721,2146,1.721,2167,1.721,2169,1.721,2172,1.721,2180,2.894,2181,1.721,2213,1.721,2214,1.721,2215,1.721,2216,1.721,2250,1.721,2251,4.207,2252,3.252,2253,4.207,2254,4.207,2255,4.207,2256,4.931,2257,3.252,2258,4.931,2259,4.931,2260,4.931,2261,3.252,2262,1.935,2263,1.935,2264,1.935,2265,1.935,2266,1.935,2267,3.252,2268,1.935,2269,1.935,2270,1.935,2271,1.935,2272,1.935,2273,1.935,2274,1.935,2275,1.935,2276,1.935,2277,1.935,2278,1.935,2279,1.935,2280,1.935,2281,1.935,2282,1.935,2283,1.935,2284,1.935,2285,1.935,2286,2.657,2287,2.657,2288,1.935,2289,3.437,2290,1.935,2291,1.935,2292,1.935,2293,1.935,2294,1.935,2295,1.935,2296,1.935,2297,1.935,2298,3.252,2299,3.252,2300,1.935,2301,1.935,2302,4.931,2303,1.935,2304,3.252,2305,1.935,2306,1.935,2307,1.935,2308,1.935,2309,1.935,2310,1.935,2311,1.935,2312,1.935,2313,1.935,2314,1.935,2315,1.935,2316,1.935,2317,1.721,2318,1.935,2319,1.935,2320,1.935,2321,1.935,2322,1.935,2323,1.935,2324,1.935,2325,1.935,2326,5.955,2327,3.252,2328,3.252,2329,4.931,2330,3.252,2331,4.387,2332,6.646,2333,5.955,2334,6.646,2335,4.931,2336,4.931,2337,3.252,2338,2.894,2339,3.252,2340,3.252,2341,3.252,2342,3.252,2343,3.252,2344,1.935,2345,3.252,2346,3.252,2347,1.935,2348,1.935,2349,1.935,2350,1.935,2351,1.935,2352,3.252,2353,3.252,2354,1.935,2355,1.581,2356,1.935]],["title/modules/RegisterPageModule.html",[166,1.743,2357,3.65]],["body/modules/RegisterPageModule.html",[3,0.096,4,0.096,9,0.087,28,0.007,30,0.229,31,0.392,32,0.096,33,0.29,121,2.622,143,4.341,164,0.005,165,0.005,166,2.3,168,2.684,169,3.319,170,4.905,171,3.662,172,3.424,173,2.818,178,4.521,179,3.662,180,3.662,182,3.479,183,3.568,184,4.877,185,3.798,186,5.948,187,3.221,188,4.521,189,1.821,190,3.95,192,4.877,193,2.818,194,2.889,346,5.61,435,4.817,2357,7.219,2358,5.618,2359,5.618,2360,5.618,2361,6.651,2362,6.315,2363,5.618]],["title/modules/RegisterPageRoutingModule.html",[166,1.743,2361,3.442]],["body/modules/RegisterPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,143,3.887,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.979,199,3.456,200,1.219,201,3.111,202,4.361,2361,5.956,2363,6.203,2364,6.972]],["title/interfaces/SearchParams.html",[556,2.247,846,0.016]],["body/interfaces/SearchParams.html",[3,0.1,4,0.1,9,0.09,24,1.211,28,0.007,30,0.21,32,0.122,164,0.006,165,0.006,222,0.695,366,3.252,367,3.475,477,1.984,506,1.3,545,2.927,546,2.848,548,2.927,549,3.001,551,0.867,556,3.747,559,3.346,564,2.927,586,2.927,592,2.547,593,3.08,594,1.127,595,1.347,675,3.001,676,2.547,677,3.556,846,0.027,848,1.067,1214,4.483,1692,6.088,1704,4.28,1710,5.742,1711,5.003,1712,5.836,1713,5.836,1714,4.483,1715,5.836,1716,5.836,1717,5.836,2365,6.559,2366,6.559]],["title/interfaces/Season.html",[146,0.932,846,0.016]],["body/interfaces/Season.html",[3,0.098,4,0.098,9,0.089,20,0.353,28,0.007,30,0.158,32,0.098,127,0.663,146,1.539,164,0.006,165,0.006,207,0.945,219,0.515,220,1.422,222,0.7,488,3.719,553,1.2,592,3.316,846,0.022,848,1.05,860,2.456,863,3.111,865,4.923,1276,3.719,1277,3.719,1278,3.719,1279,3.441,1280,2.557,1614,4.037,1615,4.923,1616,4.923,1617,4.923,1618,3.742,2367,5.742,2368,6.454,2369,6.454]],["title/interfaces/SeasonAttributes.html",[846,0.016,1264,2.594]],["body/interfaces/SeasonAttributes.html",[3,0.063,4,0.063,9,0.057,11,0.761,20,0.226,28,0.007,30,0.2,31,0.256,32,0.135,33,0.189,127,0.653,146,1.143,164,0.004,165,0.004,189,1.189,200,1.303,204,0.817,207,0.702,219,0.461,222,0.654,274,2.543,371,1.05,454,0.566,487,2.686,488,2.555,508,0.958,510,0.831,541,1.146,542,1.573,551,0.903,553,1.211,554,0.941,587,1.211,594,1.008,595,0.846,627,2.502,846,0.03,848,0.67,851,2.259,863,2.98,877,1.471,879,1.471,881,1.471,886,1.471,888,1.471,891,1.471,906,1.234,911,1.795,1031,1.471,1120,3.417,1128,3.496,1261,1.988,1262,1.935,1263,2.437,1264,4.268,1265,1.234,1266,2.495,1267,2.39,1268,1.752,1269,2.103,1270,2.235,1271,3.706,1272,1.234,1273,3.093,1274,2.892,1275,3.182,1276,3.562,1277,3.562,1278,3.562,1279,2.976,1280,2.449,1281,2.39,1282,1.839,1283,2.235,1284,2.39,1285,1.712,1286,2.103,1287,2.103,1288,2.103,1289,1.636,1290,2.235,1291,2.39,1292,3.288,1293,1.886,1294,1.886,1295,2.309,1296,4.882,1297,2.39,1298,2.39,1299,2.39,1300,2.309,1301,2.39,1302,2.39,1303,2.39,1304,1.6,1305,1.988,1306,1.441,1307,1.441,1308,1.636,1309,2.39,1310,1.636,1311,2.39,1312,3.403,1313,1.988,1314,1.988,1315,1.988,1316,1.988,1317,1.988,1318,2.39,1319,2.39,1320,2.39,1321,1.988,1322,2.39,1323,2.39,1324,2.39,1325,1.935,1326,2.39,1327,3.487,1328,3.296]],["title/interfaces/SeasonData.html",[846,0.016,1275,2.594]],["body/interfaces/SeasonData.html",[3,0.067,4,0.067,9,0.061,11,0.813,20,0.241,28,0.007,30,0.205,31,0.274,32,0.137,33,0.202,127,0.595,146,1.197,164,0.004,165,0.004,189,1.27,200,1.342,204,0.873,207,0.736,219,0.241,222,0.565,371,1.068,454,0.593,487,2.814,488,2.678,508,1.023,510,0.888,541,1.224,542,1.648,551,0.937,553,1.087,554,1.005,587,1.294,594,1.056,595,0.904,627,2.066,846,0.03,848,0.716,851,2.318,863,2.581,877,1.571,879,1.571,881,1.571,886,1.571,888,1.571,891,1.571,906,1.318,911,1.917,1031,1.571,1120,3.482,1128,3.563,1261,2.124,1262,2.068,1263,2.554,1264,4.532,1265,1.318,1266,2.614,1267,2.554,1268,1.872,1269,2.247,1270,2.388,1271,2.388,1272,1.318,1273,3.185,1274,2.978,1275,3.842,1276,3.085,1277,3.085,1278,3.085,1279,1.917,1280,2.121,1281,2.554,1282,1.965,1283,2.388,1284,2.554,1285,1.829,1286,2.247,1287,2.247,1288,2.247,1289,1.748,1290,2.388,1291,2.554,1292,3.445,1293,2.015,1294,2.015,1295,2.467,1296,4.975,1297,2.554,1298,2.554,1299,2.554,1300,2.467,1301,2.554,1302,2.554,1303,2.554,1304,1.71,1305,2.124,1306,1.54,1307,1.54,1308,1.748,1309,2.554,1310,1.748,1311,2.554,1312,3.566,1313,2.124,1314,2.124,1315,2.124,1316,2.124,1317,2.124,1318,2.554,1319,2.554,1320,2.554,1321,2.124,1322,2.554,1323,2.554,1324,2.554,1325,2.068,1326,2.554,1327,3.615,1328,3.417]],["title/components/SeasonModalComponent.html",[0,1.406,145,2.189]],["body/components/SeasonModalComponent.html",[0,1.434,1,1.123,2,2.036,3,0.036,4,0.036,5,1.296,6,1.296,7,1.296,8,1.296,9,0.033,11,0.715,12,2.49,13,1.153,14,3.88,15,3.424,16,1.772,18,1.772,20,0.131,21,0.809,22,2.863,23,0.781,24,1.617,27,1.355,28,0.007,29,2.343,30,0.162,31,0.149,32,0.036,33,0.11,35,4.524,46,2.936,47,4.304,48,1.495,49,1.56,50,1.495,51,2.822,52,1.386,53,1.339,54,1.386,55,1.438,56,2.125,57,1.339,58,3.144,59,3.51,70,3.455,71,2.422,72,1.495,73,3.144,74,2.735,75,1.438,77,1.041,78,1.386,80,2.246,81,2.246,82,2.561,83,3.144,84,2.735,85,3.144,86,3.144,87,1.296,88,3.698,89,1.339,92,1.339,96,3.894,99,2.735,101,3.894,102,1.56,103,3.254,107,1.339,109,3.455,110,2.246,111,1.438,112,1.257,113,1.495,114,1.56,116,1.824,121,0.993,122,2.1,123,2.1,124,1.153,125,3.343,126,1.296,127,0.61,128,1.296,129,1.153,130,1.296,131,1.257,132,1.185,133,1.296,134,1.067,135,1.296,136,1.123,137,1.296,138,1.123,139,0.836,140,2.1,141,1.123,142,1.296,143,1.123,144,1.296,145,2.568,146,1.693,147,2.1,148,1.094,149,1.296,150,1.094,151,2.1,152,1.094,153,1.932,154,1.153,155,1.094,156,1.296,157,1.094,158,1.185,159,1.257,160,1.257,161,1.123,162,1.257,163,1.296,164,0.003,165,0.003,187,1.22,189,0.689,200,0.677,207,0.463,208,1.981,218,1.194,219,0.43,220,0.896,230,1.534,251,3.254,252,3.254,254,2.527,265,2.831,269,2.831,273,2.246,282,2.647,291,1.953,293,1.634,294,2.246,371,0.848,372,1.778,386,3.446,477,0.824,489,3.043,490,1.712,491,2.044,506,0.474,863,2.044,983,2.735,984,4.03,987,1.386,989,1.495,993,5.755,1005,1.824,1006,1.953,1007,2.647,1012,1.472,1013,1.504,1016,1.953,1062,2.422,1089,2.647,1097,2.647,1101,2.422,1164,2.647,1165,2.647,1170,1.257,1194,6.345,1276,2.444,1277,2.444,1278,2.444,1280,1.68,1816,4.038,1819,2.786,1820,1.824,1821,3.512,1826,1.824,1832,1.72,1834,1.72,1836,5.208,1842,1.72,1846,1.824,1847,4.749,1853,1.56,1891,4.749,1897,1.72,1898,1.56,1899,3.254,1900,1.72,1901,2.786,1902,2.786,1948,2.786,2070,1.72,2111,1.824,2234,1.634,2235,3.164,2236,1.634,2238,1.824,2289,1.953,2355,1.953,2370,1.953,2371,4.343,2372,3.446,2373,4.704,2374,4.281,2375,3.446,2376,2.391,2377,3.873,2378,3.873,2379,2.127,2380,3.446,2381,2.391,2382,2.391,2383,2.391,2384,2.127,2385,2.391,2386,2.127,2387,2.391,2388,2.127,2389,2.391,2390,2.391,2391,2.391,2392,2.391,2393,2.391,2394,2.391,2395,2.391,2396,2.391,2397,2.391,2398,2.391,2399,2.127,2400,2.391,2401,2.391,2402,2.391,2403,2.391,2404,2.127,2405,2.127,2406,2.391,2407,2.391,2408,2.391,2409,2.391,2410,2.391,2411,3.446,2412,2.391,2413,2.391,2414,2.391,2415,2.391,2416,2.391,2417,2.391,2418,2.391,2419,1.824,2420,1.824,2421,1.824,2422,2.127,2423,2.127,2424,2.391,2425,2.391,2426,2.391,2427,2.127,2428,2.391,2429,3.446,2430,2.127,2431,1.953,2432,2.127,2433,2.127,2434,2.127,2435,2.127,2436,2.127,2437,2.954,2438,2.391,2439,2.127,2440,2.127,2441,2.391,2442,2.391,2443,2.127,2444,3.873,2445,3.873,2446,3.873,2447,3.873,2448,3.873,2449,3.873,2450,3.873,2451,3.873,2452,3.873,2453,3.873,2454,3.873,2455,3.873,2456,3.873,2457,3.873,2458,2.127]],["title/interfaces/SeasonRaw.html",[846,0.016,1273,1.987]],["body/interfaces/SeasonRaw.html",[3,0.085,4,0.085,9,0.076,20,0.304,23,1.12,28,0.007,30,0.214,31,0.345,32,0.122,33,0.255,66,2.54,127,0.654,146,1.081,164,0.005,165,0.005,207,0.86,219,0.499,222,0.701,230,1.67,343,2.109,351,2.022,371,0.973,454,0.694,477,1.529,506,1.1,546,1.981,551,1.114,553,1.267,584,1.865,594,0.954,595,1.14,675,2.54,676,2.156,846,0.025,848,0.903,851,1.36,863,3.07,914,2.156,1145,2.752,1265,1.662,1273,2.985,1276,3.67,1277,3.67,1278,3.67,1279,3.47,1280,2.523,1306,1.941,1307,1.941,1353,2.54,1766,3.472,1767,3.472,1768,4.495,1769,3.11,1917,3.994,1918,3.622,1919,4.235,1922,4.536,1923,3.794,1924,3.794,1925,3.622,1926,3.794,1927,3.794,1928,4.536,1929,3.794,1930,3.794,1931,4.536,1932,4.536,1933,4.536,1934,3.794,1935,4.536]],["title/interfaces/SeasonRaw-1.html",[286,1.372,846,0.014,1273,1.663]],["body/interfaces/SeasonRaw-1.html",[3,0.078,4,0.078,9,0.07,11,0.943,20,0.28,28,0.007,30,0.2,31,0.317,32,0.104,33,0.235,127,0.66,146,0.995,164,0.005,165,0.005,204,1.013,207,0.814,219,0.489,220,1.087,222,0.693,371,1.106,375,3.335,454,0.657,490,1.559,508,1.187,510,1.031,541,1.421,542,1.825,551,1.079,553,1.178,554,1.167,587,1.501,594,1.169,595,1.049,846,0.017,848,0.831,863,3.184,877,1.824,879,1.824,881,1.824,886,1.824,888,1.824,891,1.824,901,3.335,918,4.438,1031,1.824,1120,3.548,1128,3.63,1261,2.465,1265,1.53,1273,2.827,1276,3.701,1277,3.701,1278,3.701,1279,3.332,1280,2.443,1285,2.827,1286,3.473,1287,3.473,1288,3.473,1289,2.702,1290,2.771,1293,2.338,1294,2.338,1304,1.984,1306,1.787,1307,1.787,1308,2.028,1310,2.028,1327,4.164,1342,3.197,1618,2.963,2459,3.677,2460,3.898,2461,6.056,2462,4.547,2463,4.547,2464,4.547,2465,4.547,2466,4.547,2467,4.547,2468,4.547,2469,4.547,2470,3.898,2471,3.197]],["title/interfaces/SeasonRaw-2.html",[287,1.88,846,0.014,1273,1.663]],["body/interfaces/SeasonRaw-2.html",[3,0.083,4,0.083,9,0.075,11,1.007,20,0.299,28,0.007,30,0.212,31,0.339,32,0.083,33,0.251,127,0.614,146,1.384,164,0.005,165,0.005,189,1.574,204,1.082,207,0.85,219,0.497,222,0.684,371,1.087,372,2.05,454,0.686,508,1.268,510,1.101,541,1.517,542,1.905,551,1.045,553,1.129,587,1.603,594,1.221,595,1.121,676,2.119,687,3.282,688,3.73,726,4.122,846,0.019,848,0.888,851,1.337,863,3.163,877,1.947,879,1.947,881,1.947,886,1.947,888,1.947,891,1.947,901,3.561,913,3.414,918,4.584,1031,1.947,1261,2.632,1265,1.634,1269,2.784,1273,3.283,1276,3.442,1277,3.442,1278,3.442,1279,3.095,1280,2.366,1285,2.266,1286,2.784,1287,2.784,1288,2.784,1289,2.166,1304,2.119,1306,1.908,1307,1.908,1308,2.166,1310,2.166,1327,4.272,1614,3.414,1615,4.163,1616,4.163,1617,4.163,1618,3.165,2470,4.163,2471,3.414,2472,4.163,2473,4.858,2474,4.638]],["title/interfaces/SeasonRaw-3.html",[290,2.881,846,0.014,1273,1.663]],["body/interfaces/SeasonRaw-3.html",[3,0.067,4,0.067,9,0.06,11,0.805,20,0.239,28,0.007,30,0.204,31,0.271,32,0.137,33,0.2,127,0.593,146,1.189,164,0.004,165,0.004,189,1.258,200,1.336,204,0.865,207,0.731,219,0.335,222,0.562,371,1.066,454,0.589,487,2.795,488,2.66,508,1.014,510,0.88,541,1.213,542,1.637,551,0.932,553,1.084,554,0.996,587,1.282,594,1.049,595,0.896,627,2.052,846,0.03,848,0.71,851,2.333,863,2.568,877,1.556,879,1.556,881,1.556,886,1.556,888,1.556,891,1.556,906,1.306,911,1.899,1031,1.556,1120,3.473,1128,3.553,1261,2.104,1262,2.048,1263,2.537,1264,4.142,1265,1.306,1266,2.597,1267,2.529,1268,1.854,1269,2.225,1270,2.365,1271,2.365,1272,1.306,1273,3.339,1274,3.445,1275,3.312,1276,3.07,1277,3.07,1278,3.07,1279,1.899,1280,2.11,1281,2.529,1282,1.946,1283,2.365,1284,2.529,1285,1.812,1286,2.225,1287,2.225,1288,2.225,1289,1.731,1290,2.365,1291,2.529,1292,3.422,1293,1.996,1294,1.996,1295,2.444,1296,4.961,1297,2.529,1298,2.529,1299,2.529,1300,2.444,1301,2.529,1302,2.529,1303,2.529,1304,1.694,1305,2.104,1306,1.525,1307,1.525,1308,1.731,1309,2.529,1310,1.731,1311,2.529,1312,3.542,1313,2.104,1314,2.104,1315,2.104,1316,2.104,1317,2.104,1318,2.529,1319,2.529,1320,2.529,1321,2.104,1322,2.529,1323,2.529,1324,2.529,1325,2.048,1326,2.529,1327,3.597,1328,3.4]],["title/components/SeasonViewComponent.html",[0,1.406,150,2.189]],["body/components/SeasonViewComponent.html",[0,1.715,1,1.479,2,2.529,3,0.048,4,0.048,5,1.708,6,1.708,7,1.708,8,1.708,9,0.043,13,1.519,14,4.068,15,3.597,16,2.201,18,2.201,20,0.172,21,1.006,23,0.971,24,1.206,27,0.647,28,0.007,29,1.197,30,0.143,31,0.196,32,0.048,33,0.145,35,4.129,46,2.894,47,4.326,48,1.97,49,2.055,50,1.97,51,3.397,52,1.826,53,1.764,54,3.79,55,1.894,56,1.371,57,1.764,58,4.461,59,4.643,61,3.931,62,4.79,63,1.97,64,2.79,65,4.404,66,3.222,67,2.894,69,3.67,70,3.662,71,3.009,72,1.97,73,3.662,74,3.271,75,1.894,77,1.371,78,1.826,80,1.826,81,1.826,82,3.083,83,3.662,84,3.945,85,3.271,86,3.271,87,2.609,88,4.665,89,3.271,90,2.266,91,2.266,92,3.945,96,4.461,98,2.055,99,3.271,100,3.462,101,4.461,102,3.139,103,4.304,104,1.97,105,2.152,107,2.695,109,3.662,110,3.385,111,3.512,112,1.655,113,1.97,114,2.055,120,2.266,121,1.308,122,2.609,123,2.609,124,1.519,125,3.544,126,1.708,127,0.507,128,1.708,129,1.519,130,1.708,131,1.655,132,1.561,133,1.708,134,1.405,135,1.708,136,1.479,137,1.708,138,1.479,139,1.101,140,2.609,141,1.479,142,1.708,143,1.479,144,1.708,145,1.441,146,1.775,147,2.609,148,1.441,149,1.708,150,2.991,151,2.609,152,1.441,153,1.623,154,1.519,155,1.441,156,1.708,157,1.441,158,1.561,159,1.655,160,1.655,161,1.479,162,1.655,163,1.708,164,0.003,165,0.003,189,0.908,207,0.575,218,0.67,219,0.32,220,0.503,230,1.118,251,2.79,252,2.79,254,3.81,257,2.266,258,2.266,265,1.826,269,2.79,273,1.826,277,2.266,286,1.079,293,3.288,294,2.79,490,0.961,491,1.147,670,1.655,762,1.97,777,2.266,983,3.662,984,4.478,989,1.97,993,4.594,994,5.066,1012,1.828,1013,1.868,1101,3.009,1280,0.943,1853,2.055,1898,2.055,1899,2.79,1948,3.462,2234,2.152,2236,2.152,2373,5.371,2374,4.986,2419,2.402,2420,2.402,2421,2.402,2437,2.402,2475,2.573,2476,4.281,2477,5.195,2478,4.281,2479,2.802,2480,4.281,2481,2.802,2482,2.802,2483,4.811,2484,7.423,2485,4.811,2486,6.536,2487,6.536,2488,6.536,2489,2.573,2490,6.265,2491,2.802,2492,2.802,2493,5.195,2494,2.802,2495,2.802,2496,2.802]],["title/injectables/SeasonsLocalStorageMapping.html",[454,0.462,2472,3.65]],["body/injectables/SeasonsLocalStorageMapping.html",[3,0.072,4,0.072,9,0.065,11,0.869,20,0.258,21,1.346,24,1.612,27,1.794,28,0.007,29,2.447,30,0.202,31,0.292,32,0.072,33,0.216,127,0.678,146,1.732,164,0.005,165,0.005,189,1.357,204,0.933,218,1.858,219,0.478,220,1.395,222,0.347,371,1.042,372,1.857,454,0.621,455,1.581,508,1.094,510,0.95,541,2.472,542,1.726,553,1.15,554,1.47,558,1.436,587,1.383,594,1.261,595,0.966,676,1.828,687,5.35,688,3.217,726,3.734,846,0.016,851,2.211,863,2.345,869,3.734,870,3.734,871,3.734,872,3.734,873,3.734,874,3.734,875,3.734,877,2.298,879,2.298,881,2.298,883,2.637,886,2.298,888,2.298,891,2.298,901,3.071,913,2.944,914,2.5,918,4.256,1031,1.679,1261,4.289,1265,1.409,1269,2.401,1273,3.857,1285,1.955,1286,2.401,1287,2.401,1288,2.401,1289,1.868,1304,1.828,1306,1.646,1307,1.646,1308,1.868,1310,1.868,1327,4.026,1614,2.944,1615,3.59,1616,3.59,1617,3.59,1618,2.729,2470,3.59,2471,2.944,2472,4.912,2473,4.4,2474,4.202,2497,4.707,2498,4.707,2499,4.707,2500,4.188,2501,4.707,2502,4.707,2503,4.707]],["title/injectables/SeasonsMappingFirebaseService.html",[454,0.462,2504,3.909]],["body/injectables/SeasonsMappingFirebaseService.html",[3,0.061,4,0.061,9,0.055,11,0.735,20,0.218,21,1.197,23,0.804,24,1.603,27,1.711,28,0.007,30,0.209,31,0.247,32,0.061,33,0.183,127,0.684,146,1.756,164,0.004,165,0.004,200,0.697,204,0.79,207,0.685,218,1.814,219,0.425,220,1.362,222,0.293,230,1.558,274,1.482,338,2.16,371,1.017,386,2.84,454,0.553,455,1.338,458,2.094,487,3.069,488,1.735,503,1.192,508,0.926,510,0.804,529,2.6,531,4.195,539,2.492,541,2.451,542,1.535,544,3.321,551,0.757,553,1.171,554,1.774,558,1.747,566,3.545,567,2.396,568,2.396,569,2.492,571,2.723,583,2.396,587,1.17,591,1.975,594,1.152,595,0.818,600,2.492,622,3.915,851,2.16,863,2.087,869,3.321,870,3.321,871,3.321,872,3.321,873,3.321,874,3.321,875,3.321,877,2.044,879,2.044,881,2.044,883,3.209,884,4.195,886,2.044,888,2.044,891,2.044,893,4.825,895,3.039,896,3.039,897,3.039,898,3.255,901,4.785,902,5.48,905,4.68,906,1.192,909,3.255,911,1.735,912,3.255,913,4.587,914,1.547,915,3.255,916,3.039,917,3.039,918,3.889,1261,4.252,1265,1.192,1276,2.494,1277,2.494,1278,2.494,1280,1.715,1340,4.587,1611,6.725,2504,4.68,2505,5.096,2506,3.984,2507,3.984,2508,3.545,2509,3.984,2510,3.984,2511,3.545,2512,3.545,2513,3.255,2514,3.984,2515,6.525,2516,7.334,2517,7.334,2518,7.334,2519,3.984,2520,3.984,2521,3.984,2522,3.984,2523,3.984,2524,3.984,2525,3.984]],["title/injectables/SeasonsMappingJsonServer.html",[454,0.462,2460,3.65]],["body/injectables/SeasonsMappingJsonServer.html",[3,0.068,4,0.068,9,0.061,11,0.821,20,0.244,21,1.294,24,1.588,27,1.766,28,0.007,30,0.188,31,0.276,32,0.094,33,0.204,127,0.692,146,1.735,164,0.004,165,0.004,204,0.881,218,1.83,219,0.471,220,1.374,222,0.567,371,1.071,375,5.724,454,0.597,455,1.494,490,1.356,508,1.033,510,0.897,541,2.439,542,1.66,551,0.588,553,1.182,554,1.626,558,1.356,587,1.306,594,1.224,595,0.913,846,0.015,851,2.15,863,2.595,869,3.59,870,3.59,871,3.59,872,3.59,873,3.59,874,3.59,875,3.59,877,2.209,879,2.209,881,2.209,883,2.491,886,2.209,888,2.209,891,2.209,901,2.901,914,2.404,918,4.13,1031,1.587,1120,3.403,1128,3.482,1261,4.231,1265,1.331,1273,3.849,1276,2.696,1277,2.696,1278,2.696,1279,1.936,1280,1.331,1285,2.571,1286,3.159,1287,3.159,1288,3.159,1289,2.457,1290,2.411,1293,2.035,1294,2.035,1304,1.726,1306,1.555,1307,1.555,1308,1.765,1310,1.765,1327,3.929,1342,2.781,1618,2.578,2459,3.199,2460,4.723,2461,5.508,2462,3.956,2463,3.956,2464,3.956,2465,3.956,2466,3.956,2467,3.956,2468,3.956,2469,3.956,2470,3.392,2471,2.781,2526,4.447,2527,4.447,2528,4.447,2529,4.447,2530,4.447,2531,3.956,2532,4.447]],["title/injectables/SeasonsMappingStrapi.html",[454,0.462,1283,2.594]],["body/injectables/SeasonsMappingStrapi.html",[3,0.057,4,0.057,9,0.051,11,0.686,20,0.204,21,1.138,24,1.506,27,1.675,28,0.007,30,0.193,31,0.231,32,0.132,33,0.171,127,0.683,146,1.629,164,0.004,165,0.004,189,1.072,200,1.242,204,0.737,218,1.736,219,0.447,220,1.303,222,0.523,371,1.021,454,0.526,455,1.249,487,3.248,488,2.372,508,0.864,510,0.75,541,2.326,542,1.46,551,0.852,553,1.185,554,1.472,558,1.134,587,1.092,594,1.108,595,0.763,627,1.83,846,0.029,851,2.34,863,2.348,869,3.158,870,3.158,871,3.158,872,3.158,873,3.158,874,3.158,875,3.158,877,1.943,879,1.943,881,1.943,883,2.082,886,1.943,888,1.943,891,1.943,906,1.113,911,1.618,914,2.115,1031,1.326,1120,3.312,1128,3.389,1261,4.036,1262,1.745,1263,2.262,1264,3.849,1265,1.113,1266,2.316,1267,2.155,1268,1.58,1269,1.896,1270,2.015,1271,2.015,1272,1.113,1273,3.695,1274,2.756,1275,3.849,1276,2.807,1277,2.807,1278,2.807,1279,1.618,1280,1.93,1281,2.155,1282,1.658,1283,2.953,1284,2.155,1285,1.544,1286,1.896,1287,1.896,1288,1.896,1289,1.475,1290,2.015,1291,2.155,1292,3.051,1293,1.701,1294,1.701,1295,2.082,1296,4.731,1297,2.155,1298,2.155,1299,2.155,1300,2.082,1301,2.155,1302,2.155,1303,2.155,1304,1.443,1305,1.793,1306,1.299,1307,1.299,1308,1.475,1309,2.155,1310,1.475,1311,2.155,1312,3.158,1313,1.793,1314,1.793,1315,1.793,1316,1.793,1317,1.793,1318,2.155,1319,2.155,1320,2.155,1321,1.793,1322,2.155,1323,2.155,1324,2.155,1325,1.745,1326,2.155,1327,3.289,1328,3.109,2533,3.717,2534,3.717,2535,3.717,2536,3.717,2537,3.717,2538,3.717,2539,3.717]],["title/modules/SeasonsPageModule.html",[166,1.743,2540,3.65]],["body/modules/SeasonsPageModule.html",[3,0.098,4,0.098,9,0.088,28,0.007,30,0.227,31,0.398,32,0.098,33,0.294,121,2.659,148,4.244,164,0.006,165,0.006,166,2.332,168,2.722,169,3.365,170,4.935,171,3.713,172,3.472,173,2.857,178,4.56,179,3.713,180,3.713,182,3.509,183,3.598,184,4.919,185,3.851,188,4.56,189,1.846,190,4.005,192,4.005,193,2.857,194,2.93,385,3.713,1668,4.884,2540,7.237,2541,5.696,2542,5.696,2543,5.696,2544,6.673,2545,6.403,2546,5.696]],["title/modules/SeasonsPageRoutingModule.html",[166,1.743,2544,3.442]],["body/modules/SeasonsPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,148,3.788,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.979,199,3.456,200,1.219,201,3.111,202,4.361,2544,5.956,2546,6.203,2547,6.972]],["title/injectables/SeasonsService.html",[327,2.68,454,0.462]],["body/injectables/SeasonsService.html",[3,0.079,4,0.079,9,0.071,11,0.951,20,0.282,21,1.43,23,1.38,24,1.65,27,1.799,28,0.007,30,0.219,31,0.32,32,0.079,33,0.237,127,0.68,146,1.003,164,0.005,165,0.005,204,1.021,218,1.864,219,0.48,220,1.399,222,0.677,274,1.916,286,1.765,327,3.834,371,0.629,454,0.66,455,1.73,477,1.931,488,2.243,503,1.542,506,1.021,510,1.039,528,3.213,532,3.597,533,3.213,534,3.81,535,3.597,538,3.491,545,2.299,546,2.921,548,3.429,549,2.357,551,1.016,559,2.628,564,2.299,584,1.73,588,2.19,627,2.299,663,1.73,731,5.924,733,3.706,745,3.098,748,2.357,860,2.127,954,4.942,955,3.93,956,4.209,957,3.93,958,3.93,959,3.93,960,3.93,966,3.93,1265,1.542,1734,6.245,1736,5.22,1738,6.088,1739,6.088,2548,4.583,2549,5.152,2550,5.152,2551,5.152,2552,3.93,2553,5.152,2554,5.152,2555,5.152,2556,5.152,2557,5.152,2558,5.152,2559,5.152,2560,5.152]],["title/interfaces/Serie.html",[153,1.33,846,0.016]],["body/interfaces/Serie.html",[3,0.095,4,0.095,9,0.086,20,0.342,28,0.007,30,0.19,32,0.095,127,0.654,139,3.078,146,1.714,153,2.154,164,0.005,165,0.005,207,0.927,219,0.517,220,1.406,222,0.648,385,5.105,553,1.186,592,3.27,846,0.021,848,1.017,860,2.409,865,4.77,906,2.709,1280,2.521,1332,4.062,1333,4.062,1402,6.332,1614,3.911,1618,3.626,1623,4.77,1624,4.77,2513,5.109,2561,5.564,2562,5.109,2563,5.109,2564,5.109,2565,5.109,2566,5.109]],["title/interfaces/SerieAttributes.html",[846,0.016,1282,2.135]],["body/interfaces/SerieAttributes.html",[3,0.067,4,0.067,9,0.061,11,0.813,20,0.241,28,0.007,30,0.205,31,0.274,32,0.137,33,0.202,127,0.666,146,1.197,164,0.004,165,0.004,189,1.27,200,1.342,204,0.873,207,0.736,219,0.241,222,0.615,371,1.068,454,0.593,487,2.814,488,2.678,508,1.023,510,0.888,541,1.224,542,1.648,551,0.937,553,1.087,554,1.005,587,1.294,594,1.056,595,0.904,627,2.066,846,0.03,848,0.716,851,2.283,863,2.581,877,1.571,879,1.571,881,1.571,886,1.571,888,1.571,891,1.571,906,1.318,911,1.917,1031,1.571,1120,3.482,1128,3.563,1261,2.124,1262,2.068,1263,2.554,1264,4.159,1265,1.318,1266,2.614,1267,2.554,1268,1.872,1269,2.247,1270,2.388,1271,2.388,1272,1.318,1273,3.185,1274,2.978,1275,3.334,1276,3.085,1277,3.085,1278,3.085,1279,1.917,1280,2.121,1281,2.554,1282,2.744,1283,2.388,1284,2.554,1285,1.829,1286,2.247,1287,2.247,1288,2.247,1289,1.748,1290,2.388,1291,2.554,1292,3.445,1293,2.015,1294,2.015,1295,2.467,1296,4.975,1297,2.554,1298,2.554,1299,2.554,1300,2.467,1301,2.554,1302,2.554,1303,2.554,1304,1.71,1305,2.124,1306,1.54,1307,1.54,1308,1.748,1309,2.554,1310,1.748,1311,2.554,1312,3.566,1313,2.124,1314,2.124,1315,2.124,1316,2.124,1317,2.124,1318,2.554,1319,2.554,1320,2.554,1321,2.124,1322,2.554,1323,2.554,1324,2.554,1325,2.068,1326,2.554,1327,3.615,1328,3.417]],["title/interfaces/SerieAttributes-1.html",[286,1.372,846,0.014,1282,1.787]],["body/interfaces/SerieAttributes-1.html",[3,0.075,4,0.075,9,0.067,11,0.905,20,0.268,28,0.007,30,0.205,31,0.304,32,0.132,33,0.225,127,0.67,146,0.954,153,1.84,164,0.005,165,0.005,200,1.311,204,0.971,207,0.792,219,0.439,222,0.636,371,1.096,454,0.639,490,1.495,508,1.139,510,0.989,541,1.362,542,1.774,551,0.99,553,1.21,554,1.119,587,1.44,594,1.137,595,1.006,846,0.029,848,0.797,851,2.274,877,1.749,879,1.749,881,1.749,886,1.749,888,1.749,891,1.749,911,2.134,1031,1.749,1120,1.989,1128,2.035,1262,2.301,1263,2.748,1265,1.467,1272,2.402,1274,3.116,1280,2.585,1282,3.58,1285,2.748,1289,1.945,1293,2.242,1294,2.242,1304,1.903,1305,2.363,1306,1.713,1307,1.713,1308,1.945,1310,1.945,1313,2.363,1314,2.363,1315,2.363,1316,2.363,1317,2.363,1321,2.363,1328,3.614,1329,2.657,1330,2.301,1331,3.065,1332,4.042,1333,4.165,1334,3.065,1335,4.523,1336,3.837,1337,2.842,1338,3.349,1339,3.198,1340,3.065,1341,3.349,1342,3.065,1343,3.349,1344,3.349,1345,4.523,1346,3.349,1347,3.349,1348,4.345]],["title/interfaces/SerieData.html",[846,0.016,1331,2.993]],["body/interfaces/SerieData.html",[3,0.077,4,0.077,9,0.07,11,0.934,20,0.277,28,0.007,30,0.207,31,0.314,32,0.133,33,0.232,127,0.591,146,0.986,153,1.88,164,0.005,165,0.005,200,1.332,204,1.003,207,0.809,219,0.277,222,0.498,371,1.104,454,0.653,490,1.544,508,1.176,510,1.021,541,1.407,542,1.813,551,1.007,553,1.096,554,1.156,587,1.487,594,1.162,595,1.039,846,0.029,848,0.823,851,2.329,877,1.806,879,1.806,881,1.806,886,1.806,888,1.806,891,1.806,911,2.204,1031,1.806,1120,2.055,1128,2.102,1262,2.377,1263,2.809,1265,1.515,1272,2.434,1274,3.157,1280,2.28,1282,3.781,1285,2.809,1289,2.009,1293,2.316,1294,2.316,1304,1.966,1305,2.441,1306,1.77,1307,1.77,1308,2.009,1310,2.009,1313,2.441,1314,2.441,1315,2.441,1316,2.441,1317,2.441,1321,2.441,1328,3.674,1329,2.745,1330,2.377,1331,4.231,1332,3.262,1333,3.674,1334,3.166,1335,4.623,1336,3.922,1337,2.935,1338,3.46,1339,3.303,1340,3.166,1341,3.46,1342,3.166,1343,3.46,1344,3.46,1345,4.623,1346,3.46,1347,3.46,1348,4.417]],["title/components/SerieModalComponent.html",[0,1.406,152,2.189]],["body/components/SerieModalComponent.html",[0,1.351,1,1.03,2,1.897,3,0.033,4,0.033,5,1.189,6,1.189,7,1.189,8,1.189,9,0.03,11,0.666,12,2.347,13,1.058,14,3.815,15,3.363,16,1.652,18,1.652,20,0.12,21,0.754,22,2.72,23,0.728,24,1.549,27,1.376,28,0.007,29,2.026,30,0.171,31,0.136,32,0.033,33,0.101,35,4.385,46,2.767,47,4.183,48,1.372,49,1.431,50,1.372,51,2.696,52,1.272,53,1.229,54,1.272,55,1.319,56,2.003,57,1.229,58,2.987,59,3.334,70,3.301,71,2.258,72,1.372,73,2.987,74,2.577,75,1.319,77,0.955,78,1.272,80,2.093,81,2.093,82,2.447,83,2.987,84,2.577,85,2.987,86,2.987,87,1.189,88,3.551,89,1.229,92,1.229,96,3.754,99,2.987,101,4.183,102,1.431,103,3.091,107,1.229,109,3.551,110,2.093,111,1.319,112,1.153,113,1.372,114,1.431,116,1.673,121,0.911,122,1.957,123,1.957,124,1.058,125,3.195,126,1.189,127,0.594,128,1.189,129,1.058,130,1.189,131,1.153,132,1.087,133,1.189,134,0.979,135,1.189,136,1.03,137,1.189,138,1.03,139,1.864,140,1.957,141,1.03,142,1.189,143,1.03,144,1.189,145,1.004,146,0.703,147,1.957,148,1.004,149,1.189,150,1.004,151,1.957,152,2.439,153,2.396,154,1.058,155,1.004,156,1.189,157,1.004,158,1.087,159,1.153,160,1.153,161,1.03,162,1.153,163,1.189,164,0.003,165,0.003,187,1.119,189,0.633,193,0.979,194,1.004,200,1.268,207,0.432,214,4.821,218,1.134,219,0.397,220,0.851,222,0.339,230,1.626,232,1.952,251,3.091,252,3.091,254,2.355,265,2.667,269,2.667,273,2.093,282,2.467,293,2.467,294,2.093,371,0.774,372,1.537,490,1.403,491,1.676,506,0.435,536,3.322,662,1.572,670,1.153,770,5.111,772,4.743,775,1.952,777,2.597,795,1.952,906,0.657,983,2.987,984,3.885,985,1.319,987,1.272,992,4.03,996,5.3,1012,2.026,1013,2.461,1058,3.812,1062,2.258,1079,6.096,1097,1.499,1101,2.877,1145,1.087,1164,2.467,1165,2.467,1170,2.802,1280,1.596,1332,2.842,1333,2.571,1485,1.319,1572,1.578,1652,1.272,1710,1.578,1816,3.836,1819,2.597,1820,1.673,1821,3.836,1824,4.067,1826,2.754,1832,2.597,1834,4.56,1836,5.036,1842,1.578,1846,1.673,1847,3.836,1849,2.754,1851,2.754,1852,1.673,1853,1.431,1855,2.754,1866,1.952,1891,4.56,1897,2.597,1898,1.431,1899,2.667,1900,1.578,1901,2.597,1902,2.597,1948,2.597,2070,1.578,2093,4.743,2111,1.673,2147,1.952,2149,1.952,2150,1.952,2153,1.952,2162,1.952,2164,1.952,2166,3.212,2233,1.952,2234,1.499,2235,2.95,2236,1.499,2238,1.673,2289,1.792,2355,1.792,2370,1.792,2371,4.093,2372,3.212,2373,4.495,2374,4.067,2375,3.212,2379,1.952,2380,3.212,2384,1.952,2386,1.952,2388,1.952,2399,1.952,2404,1.952,2405,1.952,2411,4.093,2419,1.673,2420,1.673,2421,1.673,2422,1.952,2423,1.952,2427,1.952,2429,3.212,2430,1.952,2431,1.792,2432,1.952,2433,1.952,2434,3.212,2435,4.093,2436,1.952,2437,1.673,2439,1.952,2440,1.952,2443,1.952,2458,1.952,2489,1.792,2567,4.6,2568,3.61,2569,4.6,2570,4.6,2571,2.194,2572,3.61,2573,2.194,2574,2.194,2575,2.194,2576,2.194,2577,3.61,2578,2.194,2579,2.194,2580,2.194,2581,2.194,2582,2.194,2583,2.194,2584,2.194,2585,2.194,2586,2.194,2587,2.194,2588,2.194,2589,2.194,2590,2.194,2591,2.194,2592,2.194,2593,2.194,2594,2.194,2595,2.194,2596,2.194,2597,2.194,2598,2.194,2599,2.194,2600,3.61,2601,2.194,2602,2.194,2603,2.194,2604,2.194,2605,4.6,2606,2.194,2607,2.194,2608,2.194,2609,2.194,2610,2.194,2611,2.194,2612,2.194,2613,2.194,2614,2.194,2615,3.61,2616,2.194,2617,3.61,2618,3.61,2619,3.61,2620,3.61,2621,3.61,2622,3.61,2623,3.61,2624,3.61,2625,3.61,2626,3.61,2627,3.61,2628,2.194]],["title/interfaces/SerieRaw.html",[846,0.016,1272,1.432]],["body/interfaces/SerieRaw.html",[3,0.087,4,0.087,9,0.078,20,0.312,23,1.15,28,0.007,30,0.22,31,0.354,32,0.123,33,0.262,66,2.608,127,0.661,146,1.11,153,1.584,164,0.005,165,0.005,207,0.874,219,0.482,222,0.69,230,1.698,343,2.166,351,2.076,371,0.985,454,0.705,477,1.555,506,1.13,546,2.034,551,1.125,553,1.273,584,1.914,594,0.979,595,1.17,675,2.608,676,2.213,846,0.025,848,0.927,851,1.397,914,2.213,1145,2.825,1265,1.706,1272,2.188,1280,2.548,1306,1.993,1307,1.993,1330,2.676,1332,4.105,1333,4.105,1353,2.608,1766,3.565,1767,3.565,1768,4.572,1769,3.193,1918,3.719,1923,3.895,1924,3.895,1925,3.719,1926,3.895,1927,3.895,1929,3.895,1930,3.895,1934,3.895,1936,4.1,1937,4.347,1940,4.657,1941,4.657,1942,4.657,1943,4.657]],["title/interfaces/SerieRaw-1.html",[286,1.372,846,0.014,1272,1.199]],["body/interfaces/SerieRaw-1.html",[3,0.067,4,0.067,9,0.061,11,0.815,20,0.242,28,0.007,30,0.205,31,0.274,32,0.137,33,0.203,127,0.596,146,1.2,164,0.004,165,0.004,189,1.274,200,1.343,204,0.875,207,0.737,219,0.242,222,0.565,371,1.069,454,0.595,487,2.819,488,2.683,508,1.026,510,0.891,541,1.228,542,1.652,551,0.938,553,1.089,554,1.008,587,1.297,594,1.058,595,0.907,627,2.07,846,0.03,848,0.718,851,2.319,863,2.585,877,1.576,879,1.576,881,1.576,886,1.576,888,1.576,891,1.576,906,1.322,911,1.923,1031,1.576,1120,3.485,1128,3.566,1261,2.13,1262,2.074,1263,2.559,1264,4.164,1265,1.322,1266,2.619,1267,2.561,1268,1.877,1269,2.253,1270,2.394,1271,2.394,1272,1.844,1273,3.189,1274,2.982,1275,3.341,1276,3.09,1277,3.09,1278,3.09,1279,1.923,1280,2.124,1281,2.561,1282,1.97,1283,2.394,1284,2.561,1285,1.834,1286,2.253,1287,2.253,1288,2.253,1289,1.753,1290,2.394,1291,2.561,1292,3.452,1293,2.021,1294,2.021,1295,2.474,1296,4.978,1297,2.561,1298,2.561,1299,2.561,1300,2.474,1301,2.561,1302,2.561,1303,2.561,1304,1.715,1305,2.13,1306,1.544,1307,1.544,1308,1.753,1309,2.561,1310,1.753,1311,2.561,1312,3.573,1313,2.13,1314,2.13,1315,2.13,1316,2.13,1317,2.13,1318,2.561,1319,2.561,1320,2.561,1321,2.13,1322,2.561,1323,2.561,1324,2.561,1325,2.074,1326,2.561,1327,3.62,1328,3.422]],["title/interfaces/SerieRaw-2.html",[287,1.88,846,0.014,1272,1.199]],["body/interfaces/SerieRaw-2.html",[3,0.084,4,0.084,9,0.076,11,1.019,20,0.302,28,0.007,30,0.213,31,0.343,32,0.109,33,0.254,146,1.075,153,1.991,164,0.005,165,0.005,204,1.095,207,0.857,219,0.477,222,0.686,371,0.97,372,2.514,375,3.604,454,0.691,508,1.283,510,1.114,541,1.535,542,1.92,551,1.112,553,1.225,554,1.261,587,1.623,594,1.231,595,1.134,669,3.754,726,5.054,846,0.019,848,0.898,877,1.971,879,1.971,881,1.971,886,1.971,888,1.971,891,1.971,1031,1.971,1265,1.653,1272,2.144,1280,2.518,1289,2.192,1304,2.144,1306,1.931,1307,1.931,1308,2.192,1310,2.192,1329,2.995,1330,2.593,1332,4.057,1333,4.057,1336,3.203,1337,3.203,1348,3.203,2459,3.974,2471,3.455,2473,5.957,2474,5.687,2629,4.213,2630,4.914,2631,4.213,2632,4.914,2633,7.073]],["title/interfaces/SerieRaw-3.html",[290,2.881,846,0.014,1272,1.199]],["body/interfaces/SerieRaw-3.html",[3,0.082,4,0.082,9,0.074,11,0.994,20,0.295,28,0.007,30,0.217,31,0.334,32,0.082,33,0.247,127,0.61,139,3.023,146,1.048,153,1.959,164,0.005,165,0.005,189,1.553,204,1.067,207,0.843,219,0.502,222,0.653,371,1.083,372,2.032,454,0.68,508,1.251,510,1.086,541,1.497,542,1.889,551,1.038,553,1.123,587,1.582,594,1.21,595,1.106,676,2.091,687,3.239,688,3.68,726,4.085,846,0.018,848,0.876,851,1.319,877,1.921,879,1.921,881,1.921,886,1.921,888,1.921,891,1.921,913,3.368,918,4.554,1031,1.921,1265,1.612,1269,2.747,1272,2.351,1280,2.351,1285,2.236,1289,2.137,1304,2.091,1306,1.882,1307,1.882,1308,2.137,1310,2.137,1329,2.919,1330,2.528,1332,3.787,1333,3.787,1336,3.122,1337,3.122,1348,4.831,1402,5.757,1614,3.368,1618,3.122,1623,4.107,1624,4.107,2471,3.368,2473,4.815,2474,4.597,2562,4.399,2563,4.399,2564,4.399,2565,4.399,2566,4.399,2631,4.107,2634,4.107,2635,4.791,2636,4.791,2637,4.791,2638,4.791,2639,4.791]],["title/interfaces/SerieRaw-4.html",[846,0.014,1272,1.199,2640,4.005]],["body/interfaces/SerieRaw-4.html",[3,0.076,4,0.076,9,0.069,11,0.924,20,0.274,28,0.007,30,0.207,31,0.311,32,0.133,33,0.23,127,0.588,146,0.975,153,1.867,164,0.005,165,0.005,200,1.325,204,0.992,207,0.803,219,0.368,222,0.494,371,1.101,454,0.648,490,1.527,508,1.163,510,1.01,541,1.392,542,1.8,551,1.001,553,1.091,554,1.143,587,1.471,594,1.153,595,1.028,846,0.029,848,0.814,851,2.345,877,1.787,879,1.787,881,1.787,886,1.787,888,1.787,891,1.787,911,2.18,1031,1.787,1120,2.032,1128,2.079,1262,2.351,1263,2.789,1265,1.499,1272,2.527,1274,3.548,1280,2.268,1282,3.38,1285,2.789,1289,1.987,1293,2.291,1294,2.291,1304,1.944,1305,2.415,1306,1.751,1307,1.751,1308,1.987,1310,1.987,1313,2.415,1314,2.415,1315,2.415,1316,2.415,1317,2.415,1321,2.415,1328,3.654,1329,2.715,1330,2.351,1331,3.132,1332,3.238,1333,3.654,1334,3.132,1335,4.589,1336,3.894,1337,2.903,1338,3.422,1339,3.267,1340,3.132,1341,3.422,1342,3.132,1343,3.422,1344,3.422,1345,4.589,1346,3.422,1347,3.422,1348,4.393]],["title/interfaces/SerieRaw-5.html",[118,3.563,846,0.014,1272,1.199]],["body/interfaces/SerieRaw-5.html",[3,0.076,4,0.076,9,0.068,11,0.916,20,0.272,28,0.007,30,0.197,31,0.308,32,0.132,33,0.228,127,0.626,139,2.333,164,0.005,165,0.005,204,0.983,207,0.798,219,0.365,222,0.723,274,3.224,371,1.027,454,0.644,471,3.308,507,2.69,508,1.153,509,2.607,510,1.001,551,1.145,553,0.899,594,0.852,595,1.019,642,1.7,669,3.598,846,0.03,848,0.807,861,2.771,1012,3.064,1013,2.928,1272,1.997,1391,2.877,1392,2.459,1393,3.133,1394,2.877,1397,2.877,1399,2.877,1403,2.877,1405,2.877,1408,3.787,1409,3.133,1410,2.984,1411,2.984,1413,4.271,1422,3.889,1423,3.738,1516,2.977,1626,2.16,1642,3.133,2641,3.738,2642,4.174,2643,4.174,2644,3.738,2645,4.013,2646,4.224,2647,3.738,2648,2.877,2649,3.103,2650,3.103,2651,3.869,2652,2.877,2653,3.103,2654,3.103,2655,3.103,2656,3.103,2657,3.103,2658,3.103,2659,4.174,2660,4.174,2661,4.174,2662,4.174,2663,4.174,2664,3.103,2665,3.103,2666,3.103,2667,3.103,2668,3.103,2669,3.103]],["title/components/SerieSelectableComponent.html",[0,1.406,154,2.308]],["body/components/SerieSelectableComponent.html",[0,1.217,1,0.889,2,1.679,3,0.029,4,0.029,5,1.027,6,1.027,7,1.027,8,1.027,9,0.026,11,0.59,12,2.113,13,0.913,14,3.792,15,3.253,16,1.461,18,1.461,20,0.175,21,0.668,22,2.481,23,0.644,24,1.634,27,1.619,28,0.007,29,3.146,30,0.153,31,0.118,32,0.029,33,0.087,35,2.411,46,1.139,47,3.84,51,0.867,52,1.098,53,1.061,54,2.402,56,2.365,57,2.725,58,3.299,61,1.921,62,1.921,63,1.185,64,2.402,65,2.591,66,1.461,67,1.139,70,3.84,71,3.042,72,1.998,73,3.969,74,3.299,75,1.139,76,2.842,77,2.729,78,1.852,80,1.098,81,1.098,82,2.446,83,1.789,84,3.299,85,3.511,86,3.511,87,2.246,88,3.043,89,1.789,92,2.725,93,2.556,94,3.159,96,2.725,98,3.173,99,3.969,101,4.348,102,3.173,103,1.852,104,1.185,107,1.061,109,3.299,110,2.402,121,0.787,122,1.732,123,1.732,124,0.913,125,2.637,126,1.027,127,0.612,128,1.027,129,0.913,130,1.027,131,0.995,132,0.939,133,1.027,134,0.845,135,1.027,136,0.889,137,1.027,138,0.889,139,0.662,140,1.732,141,0.889,142,1.027,143,0.889,144,1.027,145,0.867,146,0.622,147,1.732,148,0.867,149,1.027,150,0.867,151,1.732,152,0.867,153,2.324,154,2.84,155,0.867,156,1.027,157,0.867,158,0.939,159,0.995,160,0.995,161,0.889,162,0.995,163,1.027,164,0.003,165,0.002,172,1.732,187,0.966,189,0.546,200,1.03,207,0.382,208,2.391,218,1.588,219,0.469,220,1.239,222,0.358,230,1.368,251,1.852,252,1.852,254,2.703,257,1.363,258,1.363,262,2.842,263,1.363,265,1.098,267,1.547,268,1.547,269,3.415,272,1.363,273,1.852,277,1.363,286,1.419,287,0.889,294,1.852,297,5.576,344,2.725,371,0.231,372,1.403,378,2.436,386,2.693,477,0.881,489,3.57,490,2.367,491,2.827,506,0.375,536,2.053,551,0.25,553,0.558,554,0.729,558,0.974,594,0.549,627,2.56,676,0.735,740,1.998,762,1.185,825,1.445,906,1.456,914,1.24,976,1.185,978,1.185,982,2.703,985,1.139,986,1.236,987,1.098,988,1.236,990,1.236,996,5.561,1005,1.445,1007,2.183,1012,2.238,1013,0.735,1019,1.363,1030,1.445,1031,0.676,1032,3.499,1033,3.173,1035,1.236,1040,2.084,1041,2.084,1042,2.084,1044,1.236,1045,1.236,1046,1.547,1049,2.084,1058,0.995,1074,1.363,1089,2.183,1090,3.384,1091,3.384,1092,2.61,1093,4.237,1116,1.547,1136,2.298,1137,1.363,1138,2.298,1139,1.547,1140,2.298,1142,1.547,1143,2.61,1149,1.547,1150,1.363,1151,1.547,1152,1.547,1153,1.547,1154,2.298,1155,1.547,1157,1.547,1159,1.547,1160,1.547,1183,1.363,1325,0.889,1363,1.998,1417,1.547,1418,1.685,1485,3.542,1534,3.974,1769,1.061,1889,1.294,1892,1.547,1895,1.547,1898,2.703,1899,1.852,1953,4.143,1956,1.685,1973,1.445,1974,3.685,1975,3.685,1977,2.842,1978,3.685,1979,2.842,1982,2.842,1983,3.685,1987,2.842,1988,2.842,1989,2.842,1990,2.842,1992,1.685,1997,1.685,1998,1.685,2004,2.842,2006,3.685,2007,2.842,2009,1.685,2011,2.842,2013,2.842,2015,1.685,2018,1.685,2019,3.384,2020,3.384,2021,2.61,2022,2.61,2031,1.685,2032,1.685,2055,3.384,2056,2.61,2057,1.547,2058,1.547,2059,1.547,2060,1.445,2062,1.445,2070,1.363,2128,1.685,2200,1.685,2230,1.685,2232,2.842,2234,2.183,2236,1.294,2237,1.685,2238,2.436,2670,7.265,2671,4.864,2672,3.194,2673,4.142,2674,3.194,2675,3.194,2676,3.194,2677,4.864,2678,3.194,2679,3.194,2680,3.194,2681,3.194,2682,1.894,2683,3.194,2684,1.894,2685,6.854,2686,1.894,2687,3.194,2688,1.894,2689,1.894,2690,1.894,2691,1.894,2692,1.894,2693,1.894,2694,1.894,2695,1.894,2696,1.894,2697,1.894,2698,1.894,2699,1.894,2700,1.894,2701,1.894,2702,1.894,2703,1.894,2704,3.194,2705,1.894,2706,1.894,2707,1.894,2708,1.894,2709,1.894,2710,1.894,2711,1.894,2712,3.194,2713,3.194,2714,1.894,2715,1.894,2716,1.894,2717,1.894,2718,1.894,2719,1.894,2720,1.894,2721,1.894,2722,1.894,2723,1.894,2724,1.894,2725,1.894,2726,1.894,2727,1.894,2728,1.894,2729,1.894,2730,1.894,2731,4.142,2732,1.894,2733,1.894,2734,1.894,2735,1.894,2736,1.894,2737,1.894,2738,1.894,2739,1.894,2740,3.194,2741,1.894,2742,1.894,2743,1.894,2744,1.894,2745,1.894,2746,1.894,2747,1.894,2748,3.194,2749,3.194,2750,3.194,2751,2.842,2752,3.194,2753,1.894,2754,4.142,2755,1.894,2756,1.685,2757,1.894,2758,1.894,2759,1.894,2760,1.894,2761,1.894,2762,1.894,2763,1.894,2764,3.194,2765,1.894,2766,3.194,2767,3.194]],["title/components/SerieViewComponent.html",[0,1.406,157,2.189]],["body/components/SerieViewComponent.html",[0,1.681,1,1.431,2,2.466,3,0.046,4,0.046,5,1.653,6,1.653,7,1.653,8,1.653,9,0.042,13,1.47,14,4.047,15,3.578,16,2.147,18,2.147,20,0.167,21,0.981,23,0.947,24,1.186,27,0.626,28,0.007,29,1.158,30,0.14,31,0.189,32,0.046,33,0.14,35,3.907,46,3.441,47,4.277,48,3.578,49,1.989,50,1.906,51,3.353,52,3.317,53,1.707,54,4.023,55,1.833,56,2.043,57,2.629,58,4.529,59,4.583,61,4.173,62,4.862,63,2.935,64,3.317,65,4.339,66,3.174,67,2.822,69,3.579,70,3.887,71,2.935,72,1.906,73,3.887,74,3.6,75,2.822,77,2.491,78,1.767,80,2.721,81,2.721,82,3.17,83,3.887,84,4.105,85,3.6,86,3.6,87,2.544,88,4.706,89,3.205,90,2.193,91,2.193,92,4.105,96,4.529,98,1.989,99,3.205,100,3.376,101,4.415,102,3.062,103,4.249,104,1.906,105,2.083,107,2.629,109,3.6,110,3.317,111,3.441,112,1.602,113,1.906,114,1.989,120,2.193,121,1.266,122,2.544,123,2.544,124,1.47,125,3.484,126,1.653,127,0.499,128,1.653,129,1.47,130,1.653,131,1.602,132,1.511,133,1.653,134,1.36,135,1.653,136,1.431,137,1.653,138,1.431,139,1.066,140,2.544,141,1.431,142,1.653,143,1.431,144,1.653,145,1.395,146,1.427,147,2.544,148,1.395,149,1.653,150,1.395,151,2.544,152,1.395,153,2.506,154,1.47,155,1.395,156,1.653,157,2.94,158,1.511,159,1.602,160,1.602,161,1.431,162,1.602,163,1.653,164,0.003,165,0.003,189,0.879,207,0.561,218,0.648,219,0.313,220,0.487,230,1.09,251,2.721,252,2.721,254,3.733,257,2.193,258,2.193,265,1.767,269,2.721,273,2.721,277,2.193,282,2.083,286,1.044,293,3.207,294,2.721,298,2.712,490,0.93,491,1.11,670,1.602,762,3.578,777,2.193,983,3.6,984,4.427,987,1.767,996,4.339,997,4.992,1012,1.783,1013,1.822,1101,2.935,1280,0.912,1325,1.431,1853,1.989,1889,2.083,1898,1.989,1899,2.721,1948,3.376,2054,2.712,2060,2.325,2061,2.712,2062,2.325,2063,2.49,2234,2.083,2236,2.083,2373,5.292,2374,4.901,2419,2.325,2420,2.325,2421,2.325,2437,2.325,2475,2.49,2476,4.175,2477,5.09,2478,4.175,2479,2.712,2480,4.175,2481,2.712,2482,2.712,2489,2.49,2490,6.173,2491,2.712,2492,2.712,2493,5.09,2494,2.712,2495,2.712,2496,2.712,2751,6.519,2756,2.712,2768,4.692,2769,4.692,2770,6.425,2771,6.425]],["title/injectables/SeriesLocalStorageMapping.html",[454,0.462,2634,3.65]],["body/injectables/SeriesLocalStorageMapping.html",[3,0.07,4,0.07,9,0.064,11,0.853,20,0.253,21,1.328,24,1.604,27,1.785,28,0.007,29,2.415,30,0.208,31,0.287,32,0.07,33,0.212,127,0.675,139,2.222,146,0.899,153,2.461,164,0.004,165,0.004,189,1.332,204,0.915,218,1.849,219,0.476,220,1.388,371,1.036,372,1.833,454,0.613,455,1.551,508,1.073,510,0.932,541,2.461,542,1.704,553,1.143,554,1.451,558,1.409,587,1.357,594,1.248,595,0.948,676,1.793,687,5.326,688,3.157,695,4.109,726,3.686,846,0.016,851,2.202,869,3.686,870,3.686,871,3.686,872,3.686,873,3.686,874,3.686,875,3.686,877,2.268,879,2.268,881,2.268,883,2.588,886,2.268,888,2.268,891,2.268,913,2.889,914,2.468,918,4.214,1031,1.648,1265,1.383,1269,2.356,1272,2.771,1285,1.918,1289,1.833,1304,1.793,1306,1.615,1307,1.615,1308,1.833,1310,1.833,1329,4.801,1330,2.169,1336,2.678,1337,2.678,1348,4.54,1614,2.889,1618,2.678,1623,3.523,1624,3.523,2471,2.889,2473,4.344,2474,4.148,2500,4.109,2562,3.774,2563,3.774,2564,3.774,2565,3.774,2566,3.774,2631,3.523,2634,4.849,2635,4.109,2636,4.109,2637,4.109,2638,4.109,2639,4.109,2772,4.619,2773,4.619,2774,4.619,2775,4.619,2776,4.619]],["title/injectables/SeriesMappingFirebaseService.html",[454,0.462,2777,3.909]],["body/injectables/SeriesMappingFirebaseService.html",[3,0.061,4,0.061,9,0.055,11,0.734,20,0.218,21,1.195,23,0.802,24,1.602,27,1.71,28,0.007,30,0.209,31,0.247,32,0.061,33,0.182,127,0.684,139,1.999,153,2.506,164,0.004,165,0.004,200,0.695,204,0.788,207,0.684,218,1.813,219,0.425,220,1.361,222,0.572,230,1.556,338,2.155,371,1.017,454,0.552,455,1.335,458,2.089,487,3.698,503,1.19,508,0.923,510,0.802,529,2.593,531,4.189,539,2.486,541,2.449,542,1.533,544,3.316,551,1.068,553,1.17,554,1.672,558,1.744,567,2.39,568,2.39,569,2.486,583,2.39,587,1.168,591,1.97,594,1.151,595,0.816,600,2.486,662,1.73,851,2.159,869,3.316,870,3.316,871,3.316,872,3.316,873,3.316,874,3.316,875,3.316,877,2.04,879,2.04,881,2.04,883,3.203,886,2.04,888,2.04,891,2.04,893,4.819,896,3.031,897,3.031,906,2.419,911,1.73,914,2.844,916,3.031,917,3.031,918,3.884,929,3.536,1280,1.712,1292,3.203,1295,2.226,1300,2.226,1329,4.778,1330,1.866,1332,2.758,1333,2.758,1339,4.78,1340,4.582,1621,6.501,1627,2.155,1628,2.027,1629,2.155,1630,2.155,2505,5.087,2508,3.536,2511,3.536,2512,3.536,2515,6.517,2777,4.672,2778,3.974,2779,3.974,2780,3.974,2781,3.974,2782,3.974,2783,7.325,2784,8.329,2785,3.974,2786,3.974,2787,3.974,2788,3.974,2789,3.974]],["title/injectables/SeriesMappingJsonServer.html",[454,0.462,2629,3.65]],["body/injectables/SeriesMappingJsonServer.html",[3,0.072,4,0.072,9,0.065,11,0.868,20,0.257,21,1.344,24,1.612,27,1.793,28,0.007,29,2.444,30,0.202,31,0.292,32,0.098,33,0.216,127,0.678,146,0.915,153,2.472,164,0.005,165,0.005,204,0.931,218,1.857,219,0.478,220,1.395,222,0.54,371,0.895,372,2.382,375,5.802,454,0.621,455,1.579,508,1.092,510,0.948,541,2.472,542,1.724,551,0.621,553,1.215,554,1.674,558,1.433,587,1.381,594,1.26,595,0.965,669,2.097,726,4.789,846,0.016,851,2.179,869,3.73,870,3.73,871,3.73,872,3.73,873,3.73,874,3.73,875,3.73,877,2.295,879,2.295,881,2.295,883,2.633,886,2.295,888,2.295,891,2.295,914,2.498,1031,1.677,1265,1.407,1272,2.472,1280,1.407,1289,1.865,1304,1.825,1306,1.643,1307,1.643,1308,1.865,1310,1.865,1329,4.821,1330,2.207,1332,2.267,1333,2.267,1336,2.725,1337,2.725,1348,2.725,2459,3.381,2471,2.94,2473,5.645,2474,5.39,2531,4.182,2629,4.907,2630,4.182,2631,3.585,2632,4.182,2633,6.525,2790,4.7,2791,4.7,2792,4.7,2793,4.7,2794,4.7,2795,4.7]],["title/injectables/SeriesMappingStrapi.html",[454,0.462,1334,2.993]],["body/injectables/SeriesMappingStrapi.html",[3,0.064,4,0.064,9,0.057,11,0.771,20,0.229,21,1.238,24,1.56,27,1.735,28,0.007,30,0.194,31,0.259,32,0.125,33,0.192,127,0.691,146,0.813,153,2.476,164,0.004,165,0.004,200,1.204,204,0.827,218,1.797,219,0.463,220,1.35,222,0.436,371,1.054,454,0.572,455,1.402,490,1.273,508,0.97,510,0.842,541,2.4,542,1.588,551,0.91,553,1.2,554,1.571,558,1.273,587,1.227,594,1.183,595,0.857,846,0.027,851,2.35,869,3.435,870,3.435,871,3.435,872,3.435,873,3.435,874,3.435,875,3.435,877,2.113,879,2.113,881,2.113,883,2.339,886,2.113,888,2.113,891,2.113,911,1.818,914,2.3,1031,1.49,1120,1.695,1128,1.734,1262,1.961,1263,2.46,1265,1.25,1272,2.723,1274,2.909,1280,2.061,1282,3.072,1285,2.46,1289,1.657,1293,1.91,1294,1.91,1304,1.621,1305,2.014,1306,1.46,1307,1.46,1308,1.657,1310,1.657,1313,2.014,1314,2.014,1315,2.014,1316,2.014,1317,2.014,1321,2.014,1328,3.32,1329,4.682,1330,1.961,1331,4.306,1332,2.857,1333,3.32,1334,3.705,1335,4.048,1336,3.435,1337,2.421,1338,2.853,1339,2.724,1340,2.612,1341,2.853,1342,2.612,1343,2.853,1344,2.853,1345,4.048,1346,2.853,1347,2.853,1348,3.992,2796,4.175,2797,4.175,2798,4.175,2799,4.175,2800,4.175,2801,4.175,2802,4.175]],["title/modules/SeriesPageModule.html",[166,1.743,2803,3.65]],["body/modules/SeriesPageModule.html",[3,0.098,4,0.098,9,0.088,28,0.007,30,0.227,31,0.398,32,0.098,33,0.294,121,2.659,155,4.244,164,0.006,165,0.006,166,2.332,168,2.722,169,3.365,170,4.935,171,3.713,172,3.472,173,2.857,178,4.56,179,3.713,180,3.713,182,3.509,183,3.598,184,4.919,185,3.851,188,4.56,189,1.846,190,4.005,192,4.005,193,2.857,194,2.93,386,3.174,1668,4.884,2803,7.237,2804,5.696,2805,5.696,2806,5.696,2807,6.673,2808,6.403,2809,5.696]],["title/modules/SeriesPageRoutingModule.html",[166,1.743,2807,3.442]],["body/modules/SeriesPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,155,3.788,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.979,199,3.456,200,1.219,201,3.111,202,4.361,2807,5.956,2809,6.203,2810,6.972]],["title/injectables/SeriesService.html",[344,2.68,454,0.462]],["body/injectables/SeriesService.html",[3,0.065,4,0.065,9,0.059,11,0.788,20,0.234,21,1.258,23,1.214,24,1.57,27,1.699,28,0.007,30,0.219,31,0.265,32,0.065,33,0.196,82,1.773,127,0.642,146,1.473,153,1.673,164,0.004,165,0.004,200,1.219,204,0.846,218,1.761,219,0.453,220,1.322,222,0.626,230,0.992,286,1.463,327,4.239,344,3.371,366,2.117,367,1.859,371,1.01,385,4.387,454,0.581,455,1.434,477,1.878,503,1.278,506,0.846,510,0.861,528,2.826,532,3.163,533,3.272,534,3.455,535,3.163,538,3.07,545,1.905,546,2.7,548,3.109,549,2.753,551,1.054,553,1.115,554,1.591,558,1.302,559,2.178,564,1.905,584,1.434,588,1.815,594,1.034,595,0.877,663,1.434,731,5.666,733,3.072,745,2.568,748,1.954,756,5.354,851,1.046,860,1.87,954,4.626,955,3.257,957,3.257,958,3.257,959,3.257,960,3.257,966,3.257,1099,5.014,1265,1.278,1330,2.005,1358,2.67,1448,4.329,1570,3.257,1743,5.772,1745,4.59,2552,3.257,2811,3.799,2812,6.018,2813,4.269,2814,4.269,2815,6.018,2816,4.269,2817,3.488,2818,4.269,2819,4.269,2820,4.269,2821,4.269,2822,4.269,2823,4.269,2824,6.018,2825,4.269,2826,6.018,2827,4.269,2828,4.269,2829,4.269,2830,6.018,2831,4.269,2832,6.969,2833,4.269,2834,4.269,2835,4.269,2836,4.269,2837,4.269,2838,4.269,2839,4.269,2840,4.269,2841,3.799,2842,4.269,2843,4.269,2844,4.269,2845,4.269,2846,4.269,2847,4.269,2848,4.269,2849,4.269,2850,4.269,2851,4.269,2852,4.269,2853,4.269]],["title/modules/SharedModule.html",[166,1.743,306,3.27]],["body/modules/SharedModule.html",[3,0.079,4,0.079,9,0.071,28,0.007,30,0.229,31,0.32,32,0.079,33,0.237,121,2.139,138,4.424,145,4.311,150,4.311,152,4.311,154,4.544,157,4.311,164,0.005,165,0.005,166,1.876,168,2.19,169,2.708,170,4.456,171,2.987,172,2.793,173,3.429,178,3.968,179,2.987,180,2.987,182,2.299,183,3.131,184,4.28,185,3.098,187,2.628,188,3.968,189,1.486,192,3.222,193,2.299,194,2.357,306,6.667,346,4.923,994,3.706,995,5.591,997,3.706,1079,3.706,1080,4.923,1194,3.706,1668,3.93,1972,3.93,2670,4.209,2854,4.583,2855,4.583,2856,4.583,2857,5.152,2858,7.684,2859,6.843,2860,5.152,2861,6.843]],["title/interfaces/SignInPayload.html",[846,0.016,1392,2.372]],["body/interfaces/SignInPayload.html",[3,0.101,4,0.101,9,0.091,20,0.362,28,0.007,32,0.132,127,0.623,139,2.312,164,0.006,165,0.006,207,0.959,219,0.439,222,0.728,274,2.983,551,0.874,846,0.03,848,1.076,1012,3.048,1392,3.976,1393,3.105,1408,4.389,1409,4.318,1413,3.868,1422,3.868,1423,3.976,2862,5.045]],["title/interfaces/SignUpPayload.html",[846,0.016,1393,2.247]],["body/interfaces/SignUpPayload.html",[3,0.094,4,0.094,9,0.085,20,0.338,28,0.007,32,0.128,127,0.7,139,2.157,164,0.005,165,0.005,207,0.919,219,0.51,222,0.732,274,3.353,551,0.815,846,0.029,848,1.004,1012,3.329,1392,3.058,1393,3.609,1408,4.316,1409,4.233,1413,4.347,1422,4.347,1423,4.469,2862,4.706]],["title/interfaces/Small.html",[846,0.016,1629,2.594]],["body/interfaces/Small.html",[3,0.065,4,0.065,9,0.059,20,0.234,23,0.86,28,0.007,30,0.202,31,0.265,32,0.136,33,0.196,51,3.972,56,3.78,77,3.78,127,0.674,164,0.004,165,0.004,200,1.052,201,3.793,207,0.719,208,1.731,219,0.495,222,0.726,230,1.757,337,2.312,343,1.62,351,1.553,371,0.85,372,1.23,477,0.907,503,1.276,506,0.845,519,2.98,521,2.241,524,2.312,551,0.564,553,1.292,584,1.432,642,1.461,656,2.618,658,2.002,662,3.78,663,1.432,748,1.951,784,2.056,786,2.056,787,2.056,846,0.03,848,0.694,860,1.325,861,1.771,906,1.276,1266,1.813,1268,1.813,1351,2.056,1357,2.175,1360,2.175,1361,3.358,1362,2.175,1516,1.902,1589,2.472,1625,3.901,1626,1.856,1627,3.776,1628,3.553,1629,4.1,1630,3.776,1631,2.472,1632,2.389,1633,3.26,1634,2.565,1635,2.565,1636,2.565,1637,2.565,1638,5.221,1639,5.221,1640,5.221,1641,2.565,1642,2.002,1643,5.221,1644,4.863,1645,2.565,1646,2.565,1647,2.389,1648,2.565,1649,2.565,1650,2.472,1651,2.565,1652,4.038,1653,2.565,1654,2.472,1655,2.565,1656,2.565,1657,2.565,1658,2.565]],["title/components/SplashPage.html",[0,1.406,158,2.372]],["body/components/SplashPage.html",[0,2.124,1,2.147,2,3.318,3,0.07,4,0.07,5,2.479,6,2.479,7,2.479,8,2.479,9,0.063,11,1.165,12,3.688,13,2.205,14,4.27,15,3.786,16,2.888,18,2.888,20,0.25,21,1.319,22,3.977,23,1.273,24,1.439,27,1.296,28,0.007,29,2.747,30,0.212,31,0.284,32,0.07,33,0.21,121,1.899,122,3.423,123,3.423,124,2.205,125,4.227,126,2.479,127,0.635,128,2.479,129,2.205,130,2.479,131,2.404,132,2.267,133,2.479,134,2.04,135,2.479,136,2.147,137,2.479,138,2.147,139,1.599,140,3.423,141,2.147,142,2.479,143,2.147,144,2.479,145,2.092,146,1.229,147,3.423,148,2.092,149,2.479,150,2.092,151,3.423,152,2.092,153,2.01,154,2.205,155,2.092,156,2.479,157,2.092,158,3.865,159,3.8,160,2.404,161,2.147,162,2.404,163,2.479,164,0.004,165,0.004,182,2.817,188,4.192,189,1.319,193,2.04,199,2.267,201,2.817,207,0.755,209,3.948,215,3.226,216,5.609,218,1.343,219,0.396,220,1.008,229,2.04,230,1.467,347,4.069,348,5.158,349,4.069,350,3.736,368,2.817,456,2.86,490,1.395,491,1.666,506,0.906,810,5.616,1485,2.75,1844,4.069,2317,4.069,2863,4.069,2864,4.573,2865,7.23,2866,7.23,2867,6.313,2868,7.23,2869,6.313,2870,4.573,2871,4.573,2872,4.573,2873,6.313,2874,8.458,2875,4.573,2876,7.23,2877,6.313,2878,6.313,2879,6.313,2880,6.313,2881,4.573,2882,4.573,2883,4.573,2884,4.573,2885,4.573,2886,4.573,2887,4.573]],["title/modules/SplashPageRoutingModule.html",[166,1.743,2888,3.909]],["body/modules/SplashPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,158,4.104,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.979,199,3.456,200,1.219,201,3.111,202,4.361,2888,6.764,2889,6.972,2890,6.972]],["title/injectables/StrapiAuthMappingService.html",[454,0.462,2652,2.774]],["body/injectables/StrapiAuthMappingService.html",[3,0.068,4,0.068,9,0.061,11,0.822,20,0.244,21,1.295,24,1.495,27,1.664,28,0.007,30,0.189,31,0.277,32,0.128,33,0.204,127,0.692,139,2.167,164,0.004,165,0.004,204,0.882,218,1.723,219,0.444,220,1.294,222,0.712,274,3.315,371,0.989,454,0.598,455,1.496,466,4.044,468,3.876,471,3.072,507,2.414,508,1.035,509,2.34,510,0.898,551,0.942,553,0.835,594,0.765,595,0.914,642,2.874,669,1.987,846,0.029,861,2.574,1012,2.928,1013,2.768,1146,4.651,1272,1.333,1391,2.582,1392,4.017,1393,3.939,1394,3.593,1397,3.593,1399,3.593,1401,5.063,1403,3.593,1405,3.593,1408,3.619,1409,2.91,1410,2.678,1411,2.678,1413,4.15,1422,3.717,1423,3.534,1516,2.765,1626,3.652,1642,2.91,2641,4.318,2642,3.876,2643,3.876,2644,4.318,2645,3.727,2646,3.993,2647,4.318,2648,3.593,2649,2.785,2650,2.785,2651,4.133,2652,3.593,2653,2.785,2654,2.785,2655,2.785,2656,2.785,2657,2.785,2658,2.785,2659,3.876,2660,3.876,2661,3.876,2662,3.876,2663,3.876,2664,2.785,2665,2.785,2666,2.785,2667,2.785,2668,2.785,2669,2.785,2891,4.453,2892,4.453,2893,4.453,2894,4.453,2895,4.453]],["title/injectables/StrapiAuthenticationService.html",[454,0.462,2896,3.909]],["body/injectables/StrapiAuthenticationService.html",[3,0.052,4,0.052,9,0.047,11,0.635,20,0.189,21,1.075,23,1.038,24,1.676,27,1.635,28,0.007,30,0.205,31,0.214,32,0.052,33,0.158,127,0.568,164,0.004,165,0.004,200,0.602,204,0.682,207,0.616,208,3.118,215,4.021,218,1.455,219,0.48,220,1.092,222,0.673,229,1.536,230,1.85,274,2.292,329,2.626,330,2.626,331,2.626,343,1.308,351,2.666,371,1.021,372,1.777,454,0.497,455,1.156,457,2.626,458,4.398,459,4.205,460,4.205,461,4.205,462,4.205,463,4.701,465,4.277,466,3.358,467,5.216,468,3.219,469,4.205,471,3.39,473,5.036,475,3.517,477,1.883,478,3.926,480,2.626,485,4.205,486,5.587,487,2.82,488,1.499,489,3.342,490,2.428,491,2.9,492,4.205,494,3.063,495,2.813,497,2.813,499,2.813,500,4.579,501,2.813,503,1.03,506,0.682,507,1.867,508,0.8,509,1.809,510,0.694,518,2.813,536,3.055,584,1.156,627,2.459,642,1.18,643,3.239,656,2.241,658,1.616,663,1.156,674,3.063,748,1.575,757,2.153,784,1.66,786,1.66,787,2.482,844,3.063,860,1.6,954,5.079,1058,1.809,1170,1.809,1171,2.246,1361,2.482,1393,3.437,1408,1.616,1409,1.616,1413,1.66,1422,1.66,1427,5.587,1434,4.579,1439,3.063,1440,3.063,1441,3.063,1442,3.063,1443,3.063,1444,3.063,1445,3.063,1446,3.063,1447,3.063,1448,2.477,1449,2.626,1456,3.063,1457,3.063,1480,5.483,1481,4.579,1482,4.579,1483,4.579,1484,3.063,1485,2.07,1487,3.063,1503,3.063,1504,3.063,1511,3.063,1512,3.063,1513,3.063,1626,3.187,1631,1.996,1650,1.996,1654,2.984,2641,1.928,2644,1.928,2645,4.113,2646,2.883,2647,1.928,2896,4.205,2897,5.146,2898,3.442,2899,6.163,2900,5.483,2901,5.146,2902,3.442,2903,3.442,2904,3.442,2905,3.442,2906,3.442,2907,3.442,2908,3.442,2909,3.442,2910,3.063,2911,3.442,2912,3.442,2913,3.442,2914,3.442,2915,3.442,2916,3.442,2917,7.96,2918,3.442,2919,3.442,2920,3.442,2921,3.442,2922,3.442,2923,3.442,2924,3.442,2925,5.146,2926,5.146,2927,5.146,2928,3.442,2929,3.442,2930,3.442,2931,3.442,2932,3.442,2933,3.442,2934,3.442,2935,5.146,2936,3.442,2937,3.442,2938,3.442,2939,3.442,2940,3.442]],["title/interfaces/StrapiMeResponse.html",[846,0.016,2641,2.68]],["body/interfaces/StrapiMeResponse.html",[3,0.069,4,0.069,9,0.062,11,0.832,20,0.247,28,0.007,30,0.19,31,0.28,32,0.128,33,0.207,127,0.67,139,2.845,164,0.004,165,0.004,204,0.894,207,0.748,219,0.501,220,0.998,222,0.727,274,3.132,371,0.993,454,0.603,471,3.099,507,2.445,508,1.048,509,2.37,510,0.91,551,1.113,553,1.044,594,0.775,595,0.926,642,1.545,669,2.012,846,0.03,848,0.733,861,3.38,1012,3.345,1013,2.786,1272,1.35,1391,2.614,1392,2.235,1393,2.935,1394,2.614,1397,2.614,1399,2.614,1403,2.614,1405,2.614,1408,4.055,1409,2.935,1410,2.712,1411,2.712,1413,4.364,1422,4.164,1423,3.557,1516,3.631,1626,1.963,1642,3.822,2641,4.02,2642,5.091,2643,5.091,2644,3.502,2645,3.76,2646,4.02,2647,3.502,2648,2.614,2649,2.82,2650,2.82,2651,3.625,2652,2.614,2653,2.82,2654,2.82,2655,2.82,2656,2.82,2657,2.82,2658,2.82,2659,3.91,2660,3.91,2661,3.91,2662,3.91,2663,3.91,2664,2.82,2665,2.82,2666,2.82,2667,2.82,2668,2.82,2669,2.82]],["title/interfaces/StrapiMedia.html",[846,0.016,1266,2.034]],["body/interfaces/StrapiMedia.html",[3,0.07,4,0.07,9,0.063,20,0.252,23,0.926,28,0.007,30,0.207,31,0.285,32,0.138,33,0.211,51,3.749,56,3.567,77,3.567,127,0.636,164,0.004,165,0.004,200,1.107,201,3.485,207,0.757,208,1.864,219,0.397,222,0.722,230,1.815,337,2.49,343,1.745,351,1.673,371,0.884,372,1.324,477,0.977,503,1.375,506,0.91,519,3.139,521,2.414,524,2.49,551,1.032,553,1.286,584,1.543,642,1.574,656,2.757,658,2.156,662,3.567,663,1.543,748,2.101,784,2.215,786,2.215,787,2.215,846,0.03,848,0.747,860,1.428,861,1.907,906,1.375,1263,3.009,1266,2.692,1268,1.952,1351,2.215,1357,2.343,1360,2.343,1361,3.494,1362,2.343,1516,2.049,1589,2.663,1625,4.059,1626,2,1627,3.929,1628,3.697,1629,3.929,1630,3.929,1631,2.663,1632,2.573,1633,4.235,1634,2.762,1635,2.762,1636,2.762,1637,2.762,1638,4.927,1639,4.927,1640,4.927,1641,2.762,1642,2.156,1643,4.927,1644,4.744,1645,2.762,1646,2.762,1647,2.573,1648,2.762,1649,2.762,1650,2.663,1651,2.762,1652,4.202,1653,2.762,1654,2.663,1655,2.762,1656,2.762,1657,2.762,1658,2.762]],["title/interfaces/StrapiMediaData.html",[846,0.016,1633,2.594]],["body/interfaces/StrapiMediaData.html",[3,0.061,4,0.061,9,0.055,20,0.22,23,0.812,28,0.007,30,0.199,31,0.25,32,0.135,33,0.185,51,3.913,56,3.723,77,3.723,127,0.664,164,0.004,165,0.004,200,1.009,201,3.287,207,0.69,208,1.633,219,0.514,222,0.727,230,1.712,337,2.182,343,1.529,351,1.466,371,0.823,372,1.16,477,0.856,503,1.204,506,0.797,519,2.86,521,2.115,524,2.182,551,0.974,553,1.291,584,1.352,642,1.379,656,2.512,658,1.889,662,3.723,663,1.352,748,1.841,784,1.941,786,1.941,787,1.941,846,0.029,848,0.655,860,1.251,861,3.06,906,1.204,1266,1.711,1268,1.711,1351,1.941,1357,2.053,1360,2.053,1361,3.253,1362,2.053,1516,3.287,1589,2.333,1625,4.791,1626,1.752,1627,3.657,1628,3.441,1629,3.657,1630,3.657,1631,2.333,1632,2.254,1633,3.657,1634,2.42,1635,2.42,1636,4.431,1637,4.431,1638,5.143,1639,5.143,1640,5.143,1641,4.431,1642,3.459,1643,5.143,1644,4.791,1645,2.42,1646,2.42,1647,2.254,1648,2.42,1649,2.42,1650,2.333,1651,2.42,1652,3.911,1653,2.42,1654,2.333,1655,2.42,1656,2.42,1657,2.42,1658,2.42]],["title/classes/StrapiMediaService.html",[33,0.22,1647,2.68]],["body/classes/StrapiMediaService.html",[3,0.066,4,0.066,9,0.059,20,0.236,21,1.266,23,1.222,24,1.293,27,1.244,28,0.007,30,0.203,31,0.268,32,0.137,33,0.198,51,3.663,56,3.485,77,3.485,127,0.662,164,0.004,165,0.004,200,1.059,201,3.39,208,2.843,218,1.288,219,0.384,220,0.967,222,0.721,230,1.929,337,2.337,343,1.637,351,2.916,371,0.855,372,1.243,477,1.288,503,1.29,506,0.854,519,3.767,520,2.592,521,2.265,522,4.949,523,3.521,524,4.12,551,0.57,553,1.265,584,1.448,642,2.4,656,3.308,658,2.024,662,3.485,663,1.448,748,1.972,784,2.921,786,2.921,787,2.078,846,0.03,860,1.883,861,1.79,906,1.29,954,2.499,1266,1.832,1268,1.832,1351,2.078,1357,2.199,1360,3.876,1361,3.378,1362,2.199,1516,1.923,1589,2.499,1625,3.924,1626,3.049,1627,3.798,1628,3.573,1629,3.798,1630,3.798,1631,2.499,1632,2.414,1633,3.284,1634,2.592,1635,2.592,1636,2.592,1637,2.592,1638,4.815,1639,4.815,1640,4.815,1641,2.592,1642,2.024,1643,4.815,1644,4.651,1645,2.592,1646,2.592,1647,3.393,1648,2.592,1649,3.643,1650,2.499,1651,2.592,1652,4.061,1653,2.592,1654,2.499,1655,2.592,1656,2.592,1657,2.592,1658,2.592,2941,4.31,2942,4.31,2943,4.31,2944,4.31]],["title/injectables/StrapiRepositoryService.html",[454,0.462,1356,3.122]],["body/injectables/StrapiRepositoryService.html",[3,0.059,4,0.059,9,0.053,20,0.21,21,1.166,23,1.125,24,1.522,27,1.64,28,0.007,30,0.217,31,0.239,32,0.117,33,0.176,127,0.62,164,0.004,165,0.004,200,0.672,204,0.761,215,1.714,218,1.699,219,0.437,220,1.276,222,0.676,229,1.714,230,1.527,286,1.316,343,1.46,351,2.626,366,1.904,367,1.672,368,1.714,371,1.081,454,0.538,455,1.29,477,1.86,490,1.172,491,1.399,503,1.15,506,0.761,508,0.893,510,0.775,528,1.804,532,2.932,533,2.62,534,2.766,535,2.932,538,2.846,541,1.826,542,1.761,545,2.489,546,2.941,548,3.217,549,2.553,551,0.953,552,2.152,553,1.16,554,1.646,555,3.356,556,3.085,558,1.702,559,1.96,564,2.489,584,1.29,586,1.714,587,1.639,588,1.633,590,2.019,591,1.904,592,1.491,593,1.804,594,0.66,595,0.789,598,2.227,619,2.227,639,4.897,641,2.625,642,2.471,643,3.79,644,3.81,646,2.846,652,2.227,654,2.152,655,2.403,656,3.139,657,2.625,658,1.804,661,2.403,662,1.672,663,1.874,664,2.152,665,2.403,666,2.403,667,2.403,668,2.403,669,1.714,670,2.932,671,2.403,672,2.403,673,2.403,675,1.758,676,1.491,677,2.083,784,2.691,786,2.691,787,1.852,846,0.025,851,1.61,860,1.734,884,2.403,906,1.15,954,4.441,1263,1.595,1274,2.551,1349,4.49,1350,2.403,1351,1.852,1352,2.506,1353,1.758,1354,4.287,1355,2.764,1356,3.64,1357,1.96,1358,4.79,1359,2.506,1360,3.678,1361,3.168,1362,1.96,1363,2.403,1364,2.506,1365,2.506,1366,3.64,1367,2.764,1368,2.506,1369,2.506,1370,2.506,1371,3.64,1372,2.764,1373,4.727,1374,2.764,1375,2.506,1376,2.506,1377,2.764,1378,2.764,1379,2.506,1380,2.506,1381,2.506,1382,2.764,1383,2.506,1384,2.764,1385,2.506,1386,2.764,1387,2.506,1388,2.764,1389,2.764,1765,3.418,2945,3.841,2946,3.841,2947,3.841,2948,3.841,2949,3.841,2950,3.841]],["title/interfaces/StrapiSignIn.html",[846,0.016,2648,2.774]],["body/interfaces/StrapiSignIn.html",[3,0.076,4,0.076,9,0.068,11,0.916,20,0.272,28,0.007,30,0.197,31,0.308,32,0.132,33,0.228,127,0.626,139,2.333,164,0.005,165,0.005,204,0.983,207,0.798,219,0.365,222,0.723,274,3.224,371,1.027,454,0.644,471,3.308,507,2.69,508,1.153,509,2.607,510,1.001,551,0.997,553,0.899,594,0.852,595,1.019,642,1.7,669,2.214,846,0.03,848,0.807,861,2.771,1012,3.064,1013,2.928,1272,1.485,1391,2.877,1392,2.459,1393,3.133,1394,2.877,1397,2.877,1399,2.877,1403,2.877,1405,2.877,1408,3.787,1409,3.952,1410,2.984,1411,2.984,1413,4.271,1422,3.889,1423,3.738,1516,2.977,1626,2.16,1642,3.133,1871,6.161,2641,3.738,2642,4.174,2643,4.174,2644,3.738,2645,4.013,2646,4.224,2647,3.738,2648,3.869,2649,3.103,2650,3.103,2651,3.869,2652,2.877,2653,3.103,2654,3.103,2655,3.103,2656,3.103,2657,3.103,2658,3.103,2659,4.174,2660,4.174,2661,4.174,2662,4.174,2663,4.174,2664,3.103,2665,3.103,2666,3.103,2667,3.103,2668,3.103,2669,3.103]],["title/interfaces/StrapiSignInResponse.html",[846,0.016,2644,2.68]],["body/interfaces/StrapiSignInResponse.html",[3,0.076,4,0.076,9,0.068,11,0.916,20,0.272,28,0.007,30,0.197,31,0.308,32,0.132,33,0.228,127,0.626,139,2.333,164,0.005,165,0.005,204,0.983,207,0.798,219,0.365,222,0.721,274,3.393,371,1.027,454,0.644,471,3.308,507,2.69,508,1.153,509,2.607,510,1.001,551,0.997,553,0.899,594,0.852,595,1.019,642,1.7,669,2.214,846,0.03,848,0.807,861,2.771,1012,3.064,1013,2.928,1272,1.485,1391,2.877,1392,2.459,1393,3.133,1394,2.877,1397,2.877,1399,2.877,1403,2.877,1405,2.877,1408,3.787,1409,3.133,1410,2.984,1411,2.984,1413,4.271,1422,3.889,1423,3.738,1516,2.977,1626,2.16,1642,3.133,2641,3.738,2642,4.174,2643,4.174,2644,4.224,2645,5.062,2646,4.714,2647,3.738,2648,2.877,2649,3.103,2650,3.103,2651,3.869,2652,2.877,2653,3.103,2654,3.103,2655,3.103,2656,3.103,2657,3.103,2658,3.103,2659,4.174,2660,4.174,2661,4.174,2662,4.174,2663,4.174,2664,3.103,2665,3.103,2666,3.103,2667,3.103,2668,3.103,2669,3.103]],["title/interfaces/StrapiSignUp.html",[846,0.016,2651,2.774]],["body/interfaces/StrapiSignUp.html",[3,0.073,4,0.073,9,0.066,11,0.887,20,0.263,28,0.007,30,0.195,31,0.298,32,0.131,33,0.221,127,0.682,139,2.283,164,0.005,165,0.005,204,0.952,207,0.781,219,0.456,222,0.726,274,3.194,371,1.016,454,0.63,471,3.238,507,2.605,508,1.117,509,2.526,510,0.969,551,0.98,553,0.88,594,0.825,595,0.987,642,1.646,669,2.144,846,0.03,848,0.782,861,2.712,1012,3.024,1013,2.88,1272,1.438,1391,2.786,1392,2.382,1393,3.067,1394,2.786,1397,2.786,1399,2.786,1403,2.786,1405,2.786,1408,4.124,1409,3.909,1410,2.89,1411,2.89,1413,4.419,1422,4.236,1423,3.678,1516,2.914,1626,2.092,1642,3.067,2641,3.659,2642,4.085,2643,4.085,2644,3.659,2645,3.928,2646,4.156,2647,3.659,2648,2.786,2649,3.006,2650,3.006,2651,4.302,2652,2.786,2653,3.006,2654,3.006,2655,3.006,2656,3.006,2657,3.006,2658,3.006,2659,4.085,2660,4.085,2661,4.085,2662,4.085,2663,4.085,2664,3.006,2665,3.006,2666,3.006,2667,3.006,2668,3.006,2669,3.006]],["title/interfaces/StrapiSignUpResponse.html",[846,0.016,2647,2.68]],["body/interfaces/StrapiSignUpResponse.html",[3,0.076,4,0.076,9,0.068,11,0.916,20,0.272,28,0.007,30,0.197,31,0.308,32,0.132,33,0.228,127,0.626,139,2.333,164,0.005,165,0.005,204,0.983,207,0.798,219,0.365,222,0.721,274,3.393,371,1.027,454,0.644,471,3.308,507,2.69,508,1.153,509,2.607,510,1.001,551,0.997,553,0.899,594,0.852,595,1.019,642,1.7,669,2.214,846,0.03,848,0.807,861,2.771,1012,3.064,1013,2.928,1272,1.485,1391,2.877,1392,2.459,1393,3.133,1394,2.877,1397,2.877,1399,2.877,1403,2.877,1405,2.877,1408,3.787,1409,3.133,1410,2.984,1411,2.984,1413,4.271,1422,3.889,1423,3.738,1516,2.977,1626,2.16,1642,3.133,2641,3.738,2642,4.174,2643,4.174,2644,3.738,2645,5.062,2646,4.714,2647,4.224,2648,2.877,2649,3.103,2650,3.103,2651,3.869,2652,2.877,2653,3.103,2654,3.103,2655,3.103,2656,3.103,2657,3.103,2658,3.103,2659,4.174,2660,4.174,2661,4.174,2662,4.174,2663,4.174,2664,3.103,2665,3.103,2666,3.103,2667,3.103,2668,3.103,2669,3.103]],["title/interfaces/StrapiUser.html",[846,0.016,2646,2.68]],["body/interfaces/StrapiUser.html",[3,0.07,4,0.07,9,0.063,11,0.843,20,0.25,28,0.007,30,0.191,31,0.284,32,0.129,33,0.21,127,0.673,139,2.205,164,0.004,165,0.004,204,0.905,207,0.754,219,0.497,222,0.727,274,3.145,371,0.998,454,0.609,471,3.127,507,2.476,508,1.061,509,2.4,510,0.921,551,1.117,553,1.05,594,0.784,595,0.938,642,1.565,669,2.038,846,0.03,848,0.743,861,3.395,1012,3.355,1013,2.805,1272,1.367,1391,2.648,1392,2.264,1393,2.961,1394,2.648,1397,2.648,1399,2.648,1403,2.648,1405,2.648,1408,4.069,1409,2.961,1410,2.747,1411,2.747,1413,4.375,1422,4.179,1423,3.581,1516,3.648,1626,1.988,1642,3.839,2641,3.533,2642,5.114,2643,5.114,2644,3.533,2645,3.793,2646,4.365,2647,3.533,2648,2.648,2649,2.856,2650,2.856,2651,3.657,2652,2.648,2653,2.856,2654,2.856,2655,2.856,2656,2.856,2657,2.856,2658,2.856,2659,3.945,2660,3.945,2661,3.945,2662,3.945,2663,3.945,2664,2.856,2665,2.856,2666,2.856,2667,2.856,2668,2.856,2669,2.856]],["title/interfaces/Task.html",[846,0.016,1753,3.27]],["body/interfaces/Task.html",[3,0.107,4,0.107,9,0.096,20,0.383,28,0.007,30,0.203,32,0.107,146,1.723,164,0.006,165,0.006,207,0.993,219,0.455,592,3.435,846,0.024,848,1.139,860,2.58,865,5.341,1279,4.066,1753,5.672,2513,5.721,2951,6.23,2952,8.847,2953,7.002,2954,7.002]],["title/injectables/TasksService.html",[454,0.462,2955,3.909]],["body/injectables/TasksService.html",[3,0.085,4,0.085,9,0.076,11,1.023,20,0.304,21,1.5,23,1.448,24,1.65,27,1.792,28,0.007,30,0.219,31,0.344,32,0.085,33,0.254,127,0.677,164,0.005,165,0.005,204,1.098,218,1.856,219,0.478,220,1.394,222,0.658,454,0.693,455,1.862,477,1.856,503,1.659,510,1.118,528,3.371,532,3.773,533,3.371,534,3.948,535,3.773,538,3.663,545,2.473,546,3.006,548,3.553,549,2.536,551,1.052,559,2.827,564,2.473,588,2.356,663,1.862,731,6.018,733,3.987,745,3.333,748,2.536,860,2.232,954,5.06,955,4.227,956,4.528,957,4.227,958,4.227,959,4.227,960,4.227,966,4.227,1751,6.425,1753,3.787,1754,4.528,1755,5.476,2955,5.866,2956,4.931,2957,5.542,2958,4.528,2959,5.542,2960,5.542,2961,5.542]],["title/interfaces/Thumbnail.html",[846,0.016,1630,2.594]],["body/interfaces/Thumbnail.html",[3,0.065,4,0.065,9,0.059,20,0.234,23,0.86,28,0.007,30,0.202,31,0.265,32,0.136,33,0.196,51,3.972,56,3.78,77,3.78,127,0.674,164,0.004,165,0.004,200,1.052,201,3.793,207,0.719,208,1.731,219,0.495,222,0.726,230,1.757,337,2.312,343,1.62,351,1.553,371,0.85,372,1.23,477,0.907,503,1.276,506,0.845,519,2.98,521,2.241,524,2.312,551,0.564,553,1.292,584,1.432,642,1.461,656,2.618,658,2.002,662,3.78,663,1.432,748,1.951,784,2.056,786,2.056,787,2.056,846,0.03,848,0.694,860,1.325,861,1.771,906,1.276,1266,1.813,1268,1.813,1351,2.056,1357,2.175,1360,2.175,1361,3.358,1362,2.175,1516,1.902,1589,2.472,1625,3.901,1626,1.856,1627,3.776,1628,3.553,1629,3.776,1630,4.1,1631,2.472,1632,2.389,1633,3.26,1634,2.565,1635,2.565,1636,2.565,1637,2.565,1638,5.221,1639,5.221,1640,5.221,1641,2.565,1642,2.002,1643,5.221,1644,4.863,1645,2.565,1646,2.565,1647,2.389,1648,2.565,1649,2.565,1650,2.472,1651,2.565,1652,4.038,1653,2.565,1654,2.472,1655,2.565,1656,2.565,1657,2.565,1658,2.565]],["title/pipes/TogglePasswordPipe.html",[757,2.993,2962,3.909]],["body/pipes/TogglePasswordPipe.html",[3,0.104,4,0.104,9,0.094,11,1.26,13,3.291,21,1.426,24,1.26,27,1.401,28,0.007,30,0.167,31,0.424,32,0.104,33,0.313,93,3.586,127,0.679,164,0.006,165,0.006,218,1.451,219,0.374,220,1.09,222,0.602,371,0.833,757,5.112,759,5.575,762,4.268,765,7.272,1012,3.325,1409,3.204,2962,6.678,2963,7.272,2964,6.071,2965,8.174,2966,8.174,2967,6.824,2968,8.174]],["title/interfaces/User.html",[274,1.78,846,0.016]],["body/interfaces/User.html",[3,0.094,4,0.094,9,0.084,20,0.337,28,0.007,32,0.127,127,0.699,139,3.059,164,0.005,165,0.005,207,0.917,219,0.51,220,1.224,222,0.732,274,3.108,551,1.156,846,0.029,848,1,1012,3.325,1392,3.047,1393,2.886,1408,4.312,1409,3.6,1413,4.342,1422,4.342,1423,4.464,2862,4.688]],["title/interfaces/UserRaw.html",[846,0.016,1271,2.594]],["body/interfaces/UserRaw.html",[3,0.067,4,0.067,9,0.061,11,0.815,20,0.242,28,0.007,30,0.205,31,0.274,32,0.137,33,0.203,127,0.596,146,1.2,164,0.004,165,0.004,189,1.274,200,1.343,204,0.875,207,0.737,219,0.242,222,0.565,371,1.069,454,0.595,487,2.819,488,2.683,508,1.026,510,0.891,541,1.228,542,1.652,551,0.938,553,1.089,554,1.008,587,1.297,594,1.058,595,0.907,627,2.07,846,0.03,848,0.718,851,2.319,863,2.585,877,1.576,879,1.576,881,1.576,886,1.576,888,1.576,891,1.576,906,1.322,911,1.923,1031,1.576,1120,3.485,1128,3.566,1261,2.13,1262,2.074,1263,2.559,1264,4.164,1265,1.322,1266,2.619,1267,2.561,1268,1.877,1269,2.253,1270,2.394,1271,3.341,1272,1.322,1273,3.189,1274,2.982,1275,3.341,1276,3.09,1277,3.09,1278,3.09,1279,1.923,1280,2.124,1281,2.561,1282,1.97,1283,2.394,1284,2.561,1285,1.834,1286,2.253,1287,2.253,1288,2.253,1289,1.753,1290,2.394,1291,2.561,1292,3.452,1293,2.021,1294,2.021,1295,2.474,1296,4.978,1297,2.561,1298,2.561,1299,2.561,1300,2.474,1301,2.561,1302,2.561,1303,2.561,1304,1.715,1305,2.13,1306,1.544,1307,1.544,1308,1.753,1309,2.561,1310,1.753,1311,2.561,1312,3.573,1313,2.13,1314,2.13,1315,2.13,1316,2.13,1317,2.13,1318,2.561,1319,2.561,1320,2.561,1321,2.13,1322,2.561,1323,2.561,1324,2.561,1325,2.074,1326,2.561,1327,3.62,1328,3.422]],["title/coverage.html",[2969,5.794]],["body/coverage.html",[0,2.345,1,0.882,9,0.026,10,1.67,28,0.007,33,0.301,82,4.134,124,0.905,129,0.905,131,0.987,134,0.838,136,0.882,138,0.882,141,0.882,143,0.882,145,0.859,146,0.366,148,0.859,150,0.859,152,0.859,153,0.522,154,0.905,155,0.859,157,0.859,158,0.931,161,0.882,164,0.002,165,0.002,203,1.67,214,1.351,215,0.838,219,0.174,274,0.698,307,1.534,316,1.534,317,1.534,318,1.534,319,1.534,320,1.534,321,1.534,322,1.534,323,1.534,324,1.534,325,1.534,327,1.052,329,1.432,330,1.432,331,1.432,332,1.534,333,1.534,334,1.534,335,1.534,336,1.534,337,1.018,338,1.018,339,1.534,340,1.534,344,1.052,358,2.418,360,1.534,361,1.534,362,1.432,365,5.836,372,0.541,375,3.156,380,1.534,419,1.534,421,1.534,454,0.86,456,2.574,457,3.139,471,0.931,504,1.129,519,0.931,521,3.912,526,1.534,527,3.139,528,2.271,529,3.826,541,2.446,542,0.503,556,0.882,570,1.351,586,0.838,589,1.534,590,0.987,592,0.729,594,0.322,639,1.089,640,1.67,642,2.34,652,1.089,653,1.283,654,1.052,656,0.817,686,1.534,687,3.25,688,3.693,731,1.225,732,1.67,743,1.174,747,1.534,757,1.983,758,1.534,760,1.67,770,1.432,771,1.67,846,0.033,847,1.129,849,2.069,850,2.59,851,1.009,855,1.129,858,1.089,859,1.67,867,1.432,868,3.139,890,1.432,919,1.534,931,1.534,932,1.351,949,1.67,961,1.432,963,1.534,969,2.386,970,3.363,974,2.386,993,2.069,994,1.351,996,2.574,997,1.351,1075,3.363,1079,1.351,1081,1.432,1084,1.225,1085,2.909,1190,3.363,1194,1.351,1195,1.432,1261,3.794,1262,3.747,1264,1.018,1266,0.798,1270,1.018,1271,1.018,1272,1.755,1273,2.008,1274,1.598,1275,1.018,1282,1.415,1283,1.018,1329,3.939,1331,1.174,1334,1.174,1349,3.693,1350,3.904,1351,0.905,1353,2.213,1354,1.225,1356,1.225,1390,1.534,1391,3.96,1392,0.931,1393,0.882,1449,1.432,1530,1.534,1531,1.67,1579,1.534,1611,1.432,1612,2.59,1613,1.67,1621,1.432,1622,1.67,1625,1.052,1626,3.598,1627,1.018,1628,0.958,1629,1.018,1630,1.018,1632,1.052,1633,1.018,1644,1.052,1647,1.052,1670,1.67,1671,2.59,1682,1.67,1692,3.139,1704,3.826,1718,1.67,1719,3.693,1730,1.67,1732,1.67,1734,1.432,1735,1.67,1736,1.432,1737,1.67,1743,1.432,1744,1.67,1745,1.432,1746,1.67,1747,1.67,1748,1.67,1751,1.432,1752,1.67,1753,1.283,1755,1.432,1756,1.67,1757,1.432,1758,2.59,1759,2.418,1778,1.67,1809,1.67,1871,1.534,1914,1.67,1917,1.351,1918,3.826,1919,3.139,1936,1.351,1937,3.139,1944,1.534,1945,1.534,1946,1.67,1969,1.67,1971,2.59,1972,2.418,1973,3.139,1976,1.534,2080,1.67,2250,1.67,2286,1.534,2287,1.534,2367,1.67,2370,2.59,2459,3.479,2460,1.432,2472,1.432,2475,2.59,2504,1.534,2548,1.67,2552,1.432,2561,1.67,2629,1.432,2634,1.432,2641,1.052,2644,1.052,2646,1.052,2647,1.052,2648,1.089,2651,1.089,2652,1.089,2670,1.534,2777,1.534,2811,1.67,2817,1.534,2862,3.139,2863,1.67,2896,1.534,2951,1.67,2955,1.534,2956,1.67,2958,1.534,2962,1.534,2963,1.67,2964,1.67,2969,1.67,2970,1.877,2971,1.877,2972,1.67,2973,9.36,2974,1.67,2975,9.575,2976,7.265,2977,1.67,2978,1.67,2979,7.981,2980,8.602,2981,7.443,2982,5.863,2983,6.829,2984,4.836,2985,4.836,2986,5.863,2987,7.443,2988,6.521,2989,1.67,2990,1.534,2991,1.67,2992,1.534,2993,7.964,2994,1.67,2995,1.67,2996,1.67,2997,1.67,2998,1.67,2999,1.877,3000,3.17,3001,3.17,3002,4.115,3003,1.877,3004,1.67,3005,1.67,3006,2.821,3007,1.877,3008,1.877,3009,1.877,3010,3.17,3011,3.17,3012,1.877,3013,1.67,3014,1.67,3015,1.877,3016,1.877]],["title/dependencies.html",[169,3.022,3017,3.563]],["body/dependencies.html",[28,0.007,31,0.383,164,0.005,165,0.005,169,3.242,185,3.711,187,3.147,189,1.779,193,3.735,194,2.823,199,3.058,311,6.838,312,6.279,348,6.279,350,5.041,355,5.489,356,5.489,384,4.706,506,1.223,646,3.147,999,5.041,1000,4.439,3018,6.169,3019,9.501,3020,6.169,3021,6.169,3022,6.169,3023,6.169,3024,6.169,3025,6.169,3026,8.371,3027,6.169,3028,6.169,3029,8.371,3030,6.169,3031,6.169,3032,6.169,3033,6.169,3034,6.169,3035,6.169,3036,5.489,3037,6.169,3038,6.169,3039,6.169,3040,6.169,3041,6.169,3042,6.169,3043,6.169,3044,6.169,3045,6.169,3046,6.169,3047,6.169,3048,6.169,3049,6.169,3050,6.169,3051,6.169,3052,6.169,3053,6.169,3054,6.169,3055,6.169,3056,6.169]],["title/miscellaneous/functions.html",[3057,2.737,3058,5.116]],["body/miscellaneous/functions.html",[20,0.315,27,1.854,28,0.007,127,0.721,153,1.598,164,0.005,165,0.005,169,4.745,218,1.977,219,0.509,220,1.484,222,0.629,307,4.698,351,2.678,370,5.116,380,6.007,540,4.386,627,2.469,646,2.934,1361,3.908,2286,6.007,2287,6.007,2431,4.698,2988,4.698,2989,6.541,2990,6.007,2991,6.541,2992,6.007,3004,5.116,3005,6.541,3006,5.116,3057,3.93,3058,5.116,3059,7.599,3060,5.75,3061,5.75,3062,7.352,3063,5.75,3064,9.459,3065,7.599,3066,5.75,3067,7.352,3068,5.75,3069,5.75,3070,7.352,3071,7.352,3072,5.75,3073,7.352,3074,5.75,3075,5.75,3076,8.541,3077,7.352,3078,5.75]],["title/index.html",[20,0.219,3079,4.005,3080,4.005]],["body/index.html",[28,0.005,164,0.005,165,0.005,241,4.01,366,3.047,368,3.904,386,4.617,664,3.443,670,4.948,794,4.688,806,5.468,825,6.374,1223,4.01,1237,4.688,1417,5.021,1490,4.422,1570,4.688,1711,4.688,1714,4.2,1883,5.021,2131,5.468,2152,5.468,2154,7.785,2331,5.468,2841,7.435,3036,5.468,3081,6.146,3082,6.146,3083,6.821,3084,6.146,3085,6.146,3086,6.146,3087,7.667,3088,6.146,3089,7.667,3090,6.146,3091,6.146,3092,7.667,3093,7.667,3094,6.146,3095,8.357,3096,7.667,3097,6.146,3098,6.146,3099,7.667,3100,7.667,3101,6.146,3102,6.146,3103,6.146,3104,6.146,3105,6.146,3106,6.146,3107,6.146,3108,6.146,3109,6.146,3110,7.667,3111,8.357,3112,5.468,3113,8.357,3114,6.146,3115,7.667,3116,6.146,3117,6.146,3118,6.146,3119,6.146,3120,6.146,3121,6.146,3122,6.146,3123,6.146,3124,6.146,3125,6.146]],["title/modules.html",[168,2.768]],["body/modules.html",[28,0.006,164,0.006,165,0.006,167,4.923,168,2.744,177,4.643,300,4.923,305,4.643,306,4.411,312,7.822,1659,4.923,1663,4.643,1906,4.923,1910,4.643,2240,4.923,2244,4.643,2357,4.923,2361,4.643,2540,4.923,2544,4.643,2803,4.923,2807,4.643,2888,5.273,3126,9.574,3127,9.574,3128,9.872,3129,9.574,3130,9.574]],["title/overview.html",[3131,5.794]],["body/overview.html",[1,3.46,2,2.492,28,0.007,121,1.969,124,2.287,129,4.221,134,3.287,136,3.46,138,4.11,141,3.46,143,3.46,145,4.005,148,3.371,150,4.005,152,4.005,154,4.221,155,3.371,157,4.005,161,3.46,164,0.005,165,0.005,166,1.727,167,6.523,168,2.016,169,2.492,170,2.749,171,2.749,172,2.571,173,2.116,174,4.219,175,4.219,176,4.219,177,5.301,178,3.753,179,2.749,180,2.749,197,2.571,286,1.625,287,2.226,300,6.892,301,4.219,302,4.219,303,4.219,304,4.219,305,5.301,306,6.618,455,1.593,520,2.852,759,3.874,848,0.771,1659,6.523,1660,4.219,1661,4.219,1662,4.219,1663,5.301,1906,6.523,1907,4.219,1908,4.219,1909,4.219,1910,5.301,2240,6.971,2241,4.219,2242,4.219,2243,4.219,2244,5.301,2338,4.219,2357,6.523,2358,4.219,2359,4.219,2360,4.219,2361,5.301,2540,6.523,2541,4.219,2542,4.219,2543,4.219,2544,5.301,2803,6.523,2804,4.219,2805,4.219,2806,4.219,2807,5.301,2854,4.219,2855,4.219,2856,4.219,3131,4.219,3132,4.741,3133,4.741,3134,4.741,3135,4.741,3136,4.741]],["title/properties.html",[207,0.688,3017,3.563]],["body/properties.html",[28,0.007,134,3.327,164,0.006,165,0.006,207,0.892,3083,7.661,3137,7.456,3138,7.456,3139,7.456,3140,7.456,3141,7.456,3142,7.456,3143,7.456]],["title/routes.html",[197,3.531]],["body/routes.html",[28,0.006,164,0.006,165,0.006,197,4.178]],["title/miscellaneous/typealiases.html",[3057,2.737,3144,5.75]],["body/miscellaneous/typealiases.html",[20,0.412,28,0.006,164,0.006,165,0.006,219,0.412,521,4.55,1626,3.277,1632,4.85,1633,4.081,3057,5.143,3145,7.526,3146,7.526]],["title/miscellaneous/variables.html",[3057,2.737,3147,5.116]],["body/miscellaneous/variables.html",[20,0.142,28,0.007,132,2.054,138,1.221,146,0.506,153,0.723,164,0.003,165,0.003,200,1.03,215,3.058,216,2.98,219,0.449,222,0.38,316,3.384,317,3.384,318,3.384,319,3.384,320,3.384,321,3.384,322,3.384,323,3.384,324,3.384,325,3.384,329,3.939,330,3.939,331,3.939,332,6.579,333,4.219,334,4.219,335,4.219,336,4.219,337,2.8,338,4.276,339,4.219,340,4.219,351,2.497,358,4.493,360,3.384,361,3.384,367,2.564,368,1.848,371,0.983,372,2.763,375,2.703,378,4.493,379,4.594,381,4.594,384,3.939,385,1.507,386,1.289,392,3.384,404,2.313,411,2.313,413,3.685,419,3.384,421,3.384,429,1.87,438,1.696,463,3.16,468,1.626,490,2.945,491,3.507,519,1.289,541,1.637,542,0.697,544,1.507,589,3.384,590,2.177,642,1.769,643,1.366,644,1.507,646,3.282,652,2.402,653,2.831,654,2.32,656,1.132,687,2.491,726,4.461,747,3.384,858,1.507,931,5.256,963,4.219,1013,2.005,1081,3.939,1119,1.87,1120,3.268,1195,3.939,1210,3.16,1214,2.831,1215,1.87,1325,1.945,1351,1.998,1448,2.98,1449,3.939,1463,3.384,1485,4.49,1490,4.238,1572,2.98,1580,3.685,1595,5.24,1759,3.16,1822,3.384,1863,2.124,1877,2.124,1925,2.703,1971,2.124,1972,1.983,1973,3.16,1976,3.384,2019,2.124,2020,2.124,2021,2.124,2022,2.124,2091,3.685,2177,3.685,2474,5.02,2552,3.16,2817,3.384,2900,2.313,2910,3.685,2958,3.384,2972,3.685,2974,3.685,2977,2.313,2978,2.313,2988,2.124,2990,4.219,2992,4.219,2993,2.313,2994,3.685,2995,4.594,2996,5.723,2997,5.723,2998,3.685,3013,2.313,3014,2.313,3057,1.776,3059,7.291,3065,6.098,3112,3.685,3147,2.313,3148,9.337,3149,2.599,3150,2.599,3151,2.599,3152,2.599,3153,2.599,3154,2.599,3155,2.599,3156,2.599,3157,2.599,3158,2.599,3159,2.599,3160,2.599,3161,2.599,3162,2.599,3163,2.599,3164,2.599,3165,2.599,3166,2.599,3167,2.599,3168,2.599,3169,2.599,3170,2.599,3171,2.599,3172,2.599,3173,2.599,3174,2.599,3175,2.599,3176,2.599,3177,2.599,3178,2.599,3179,2.599,3180,2.599,3181,2.599,3182,2.599,3183,2.599,3184,2.599,3185,2.599,3186,4.142,3187,4.142,3188,2.599,3189,2.599,3190,2.599,3191,2.599,3192,4.142,3193,7.693,3194,2.599,3195,2.599,3196,2.599,3197,2.599,3198,2.599,3199,2.599,3200,2.599,3201,2.599,3202,2.599,3203,2.599,3204,4.142,3205,4.142,3206,4.142,3207,4.142,3208,4.142,3209,4.142,3210,4.142,3211,4.142,3212,4.142,3213,4.142,3214,5.89,3215,4.142,3216,4.142,3217,4.142,3218,4.142,3219,4.142,3220,4.142,3221,4.142,3222,4.142,3223,2.599,3224,2.599,3225,2.599,3226,2.599,3227,2.599,3228,2.599,3229,2.599,3230,4.142,3231,2.599,3232,2.599,3233,4.142,3234,2.599,3235,2.599,3236,2.599,3237,2.599]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["0')).join",{"_index":2146,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["0.0.1",{"_index":3138,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":2234,"title":{},"body":{"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["0.1",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/CohereService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["0.14.2",{"_index":3056,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["0.24.0",{"_index":3032,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":2230,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["0.3s",{"_index":2061,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["0.5",{"_index":108,"title":{},"body":{"components/AboutPage.html":{}}}],["0.6",{"_index":2232,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["0.75",{"_index":839,"title":{},"body":{"injectables/CohereService.html":{}}}],["0.9",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["0/1",{"_index":2975,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2984,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2986,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3001,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3011,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2999,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3002,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3000,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2987,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":3008,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2979,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":3012,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":3009,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":3010,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2981,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2983,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2976,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2982,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2980,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2985,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["0px",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["1",{"_index":286,"title":{"classes/Country-1.html":{},"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PaginatedRaw-1.html":{},"classes/Port-1.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieRaw-1.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsService.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"overview.html":{}}}],["1.8.3",{"_index":3037,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":925,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["100",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["100).pipe",{"_index":2844,"title":{},"body":{"injectables/SeriesService.html":{}}}],["100px",{"_index":119,"title":{},"body":{"components/AboutPage.html":{}}}],["100vh",{"_index":2347,"title":{},"body":{"components/RegisterPage.html":{}}}],["11.2.0",{"_index":3038,"title":{},"body":{"dependencies.html":{}}}],["12.0.0",{"_index":3044,"title":{},"body":{"dependencies.html":{}}}],["120px",{"_index":95,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["12px",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["14px",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["150",{"_index":836,"title":{},"body":{"injectables/CohereService.html":{}}}],["150px",{"_index":2229,"title":{},"body":{"components/ProfilePage.html":{}}}],["15fb6",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["15fb6.firebaseapp.com",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["15fb6.firebasestorage.app",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["15px",{"_index":2756,"title":{},"body":{"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["16",{"_index":3133,"title":{},"body":{"overview.html":{}}}],["16.0.0",{"_index":3035,"title":{},"body":{"dependencies.html":{}}}],["16.0.3",{"_index":3034,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":96,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["17.18.12",{"_index":3047,"title":{},"body":{"dependencies.html":{}}}],["17px",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["18",{"_index":3132,"title":{},"body":{"overview.html":{}}}],["18.0.0",{"_index":3019,"title":{},"body":{"dependencies.html":{}}}],["1:282424850144:web:a72ef0bae5e4fcecec4285",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["1px",{"_index":1895,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["2",{"_index":287,"title":{"classes/Country-2.html":{},"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"classes/Port-2.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SerieRaw-2.html":{}},"body":{"components/AppComponent.html":{},"injectables/CohereService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":3054,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":1852,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["200px",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/SerieViewComponent.html":{}}}],["20px",{"_index":75,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["24",{"_index":3136,"title":{},"body":{"overview.html":{}}}],["24px",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["25",{"_index":740,"title":{},"body":{"injectables/BaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["255",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["256",{"_index":2140,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["282424850144",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["28px",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["2px",{"_index":1898,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["3",{"_index":290,"title":{"interfaces/PaginatedRaw-3.html":{},"interfaces/SeasonRaw-3.html":{},"interfaces/SerieRaw-3.html":{}},"body":{"components/AppComponent.html":{},"injectables/CohereService.html":{}}}],["3.0.3",{"_index":3041,"title":{},"body":{"dependencies.html":{}}}],["3.11.8",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":2164,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["300px",{"_index":2054,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["31",{"_index":3134,"title":{},"body":{"overview.html":{}}}],["32px",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/SerieSelectableComponent.html":{}}}],["333",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["34",{"_index":86,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["3px",{"_index":97,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["3rem",{"_index":2239,"title":{},"body":{"components/ProfilePage.html":{}}}],["4",{"_index":2640,"title":{"interfaces/SerieRaw-4.html":{}},"body":{}}],["400px",{"_index":1892,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["40px",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["48px",{"_index":2238,"title":{},"body":{"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["4px",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["5",{"_index":118,"title":{"interfaces/SerieRaw-5.html":{}},"body":{"components/AboutPage.html":{}}}],["5.12.2",{"_index":3043,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":2237,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["500px",{"_index":2760,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["57",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["576px",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["600",{"_index":105,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["600px",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["60px",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["64",{"_index":2344,"title":{},"body":{"components/RegisterPage.html":{}}}],["666",{"_index":2496,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["7.0.0",{"_index":3029,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":3026,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":3052,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":3135,"title":{},"body":{"overview.html":{}}}],["768px",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":2338,"title":{},"body":{"components/RegisterPage.html":{},"overview.html":{}}}],["8.0.0",{"_index":3033,"title":{},"body":{"dependencies.html":{}}}],["8.4.0",{"_index":3050,"title":{},"body":{"dependencies.html":{}}}],["80vh",{"_index":2069,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["87",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["8px",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["9l59hyrs5x",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["_authenticated",{"_index":459,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_authenticated:behaviorsubject",{"_index":511,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["_filteredseasons",{"_index":1199,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["_filteredseries",{"_index":1090,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["_items",{"_index":689,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["_items:t",{"_index":700,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["_picture",{"_index":1980,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_ready",{"_index":460,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_ready:behaviorsubject",{"_index":515,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["_season",{"_index":2391,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["_season.id",{"_index":2410,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["_seasons",{"_index":1198,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["_seasons:behaviorsubject",{"_index":1008,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["_serie",{"_index":2581,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["_serie.id",{"_index":2592,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["_serie.picture",{"_index":2597,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["_series",{"_index":1089,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["_series:behaviorsubject",{"_index":1005,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["_token",{"_index":1426,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["_user",{"_index":461,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_user:behaviorsubject",{"_index":513,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["a.name",{"_index":1041,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825",{"_index":2103,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["aa",{"_index":2222,"title":{},"body":{"components/ProfilePage.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":703,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["about'},{'name",{"_index":128,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["about.email",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["about.email2",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["about.github",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["about.github2",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["about.info",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["about.info2",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["about.name",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["about.name2",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["about.number",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["about.number2",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page",{"_index":191,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["aboutpagemodule",{"_index":167,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules.html":{},"overview.html":{}}}],["aboutpageroutingmodule",{"_index":177,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["abstract",{"_index":464,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{}}}],["abstractcontrol",{"_index":3076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["accept",{"_index":789,"title":{},"body":{"injectables/CohereService.html":{}}}],["acceso",{"_index":3221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":1819,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["activated",{"_index":1900,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["activatedroute",{"_index":1823,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["actual",{"_index":3216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual_component",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["actualizar",{"_index":1237,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"index.html":{}}}],["add",{"_index":532,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["add(entity",{"_index":545,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["adddoc",{"_index":574,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["added",{"_index":852,"title":{},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["adicionales",{"_index":1465,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["admin",{"_index":1423,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["admin:false",{"_index":1425,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["administrador",{"_index":2329,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkey",{"_index":2127,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["adminkeycontrol",{"_index":2292,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeycontrol?.clearvalidators",{"_index":2295,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeycontrol?.setvalidators([validators.required",{"_index":2294,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeycontrol?.setvalue",{"_index":2296,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeycontrol?.updatevalueandvalidity",{"_index":2297,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeyfieldtype",{"_index":2253,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeyhash",{"_index":2254,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeyhashed",{"_index":2083,"title":{},"body":{"components/ProfilePage.html":{}}}],["adminsecret123",{"_index":2290,"title":{},"body":{"components/RegisterPage.html":{}}}],["ai",{"_index":3031,"title":{},"body":{"dependencies.html":{}}}],["aizasyc1gvclvvr7jadn4t",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["al",{"_index":1572,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{},"miscellaneous/variables.html":{}}}],["alert",{"_index":1177,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alert.present",{"_index":1189,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alertcontroller",{"_index":980,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alertctrl",{"_index":1102,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alertyesnobuttons",{"_index":1094,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alguna",{"_index":3121,"title":{},"body":{"index.html":{}}}],["alias",{"_index":3003,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":3145,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["allowed",{"_index":1945,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"modules/ProfilePageModule.html":{},"coverage.html":{}}}],["allowedcharacters",{"_index":1960,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["alternativetext",{"_index":1636,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["amigable",{"_index":3106,"title":{},"body":{"index.html":{}}}],["analizar",{"_index":833,"title":{},"body":{"injectables/CohereService.html":{}}}],["angular",{"_index":3036,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3018,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["angular/compiler",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3021,"title":{},"body":{"dependencies.html":{}}}],["angular/material/card",{"_index":1667,"title":{},"body":{"modules/HomePageModule.html":{}}}],["angular/platform",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":199,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"dependencies.html":{}}}],["angular2trimestre.netlify.app",{"_index":3118,"title":{},"body":{"index.html":{}}}],["animación",{"_index":2880,"title":{},"body":{"components/SplashPage.html":{}}}],["animatedavatar",{"_index":1024,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["animatedavatarcontainer",{"_index":1026,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["animationcontroller",{"_index":981,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["animationctrl",{"_index":1098,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["animationitem",{"_index":2874,"title":{},"body":{"components/SplashPage.html":{}}}],["animationoptions",{"_index":2876,"title":{},"body":{"components/SplashPage.html":{}}}],["anonymous",{"_index":1605,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["any):serie",{"_index":2633,"title":{},"body":{"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["apellido/s",{"_index":2336,"title":{},"body":{"components/RegisterPage.html":{}}}],["api",{"_index":665,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["api_url_token",{"_index":652,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"injectables/CohereService.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":643,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["apiurl:\"http://localhost:1337",{"_index":3234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl:\"https://seasons",{"_index":3231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl:string",{"_index":1924,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["aplicación",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["apollo/client",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["app.component",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":129,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":785,"title":{},"body":{"injectables/CohereService.html":{}}}],["appmodule",{"_index":300,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":3227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apponlyallowedcharacters",{"_index":162,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["approutingmodule",{"_index":305,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archivo",{"_index":2879,"title":{},"body":{"components/SplashPage.html":{}}}],["arguments",{"_index":1952,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["array",{"_index":1225,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["array.from(new",{"_index":2142,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["array.isarray(res",{"_index":2558,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["array.isarray(seasonsdata",{"_index":2846,"title":{},"body":{"injectables/SeriesService.html":{}}}],["asegurarse",{"_index":2195,"title":{},"body":{"components/ProfilePage.html":{}}}],["asociadas",{"_index":2842,"title":{},"body":{"injectables/SeriesService.html":{}}}],["assets/i18n",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/icon/fav.png",{"_index":2747,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["assets/lotties/splash.json",{"_index":2877,"title":{},"body":{"components/SplashPage.html":{}}}],["async",{"_index":536,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["async)?.name",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["async)?.username",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["atractiva",{"_index":826,"title":{},"body":{"injectables/CohereService.html":{}}}],["attachment",{"_index":2349,"title":{},"body":{"components/RegisterPage.html":{}}}],["attributes",{"_index":1263,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/StrapiMedia.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{}}}],["attributes.name",{"_index":1317,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["attributes.numepisodes",{"_index":1319,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.numseason",{"_index":1318,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.rating",{"_index":1321,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["attributes.releasedate",{"_index":1320,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.releaseyear",{"_index":1347,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["attributes.serieid",{"_index":1322,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.synopsis",{"_index":1346,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["attributes.user",{"_index":1324,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.user?.data?.id.tostring",{"_index":1326,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes:strapimediadata",{"_index":1635,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["autenticación",{"_index":3217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autenticado",{"_index":1595,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":642,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.model",{"_index":866,"title":{},"body":{"interfaces/Comment.html":{}}}],["auth:iauthentication",{"_index":3199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_mapping_token",{"_index":1449,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_me_api_url_token",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_sign_in_api_url_token",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_sign_up_api_url_token",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token",{"_index":653,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdomain",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticated",{"_index":462,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authenticated$:observable",{"_index":512,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.interface",{"_index":658,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["authentication.interface.ts",{"_index":1748,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{},"coverage.html":{}}}],["authentication.interface.ts:5",{"_index":1749,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["authentication.service",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryHttpService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["authentication.service.ts",{"_index":457,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{}}}],["authentication.service.ts:12",{"_index":493,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:13",{"_index":498,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:15",{"_index":496,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:159",{"_index":1430,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:16",{"_index":502,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:17",{"_index":494,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:18",{"_index":500,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:19",{"_index":472,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:25",{"_index":474,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:26",{"_index":479,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:27",{"_index":483,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:28",{"_index":481,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:29",{"_index":476,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:30",{"_index":1438,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:31",{"_index":1437,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:32",{"_index":1428,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:48",{"_index":2903,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authenticationservicefactory",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmapping",{"_index":473,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authmapping:iauthmapping",{"_index":517,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authmappingfactory",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":3142,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":786,"title":{},"body":{"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["authpayload",{"_index":480,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authservice",{"_index":2091,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["authservice.authenticated",{"_index":3215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.ready$.pipe",{"_index":3208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authsvc",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["authsvc.user",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["authsvc:baseauthenticationservice",{"_index":1844,"title":{},"body":{"components/LoginPage.html":{},"components/SplashPage.html":{}}}],["authuser",{"_index":1486,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authuser.id",{"_index":1492,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["auto",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["available",{"_index":3130,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["avatars",{"_index":1022,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["await",{"_index":1058,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["b",{"_index":1040,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["b.tostring(16).padstart(2",{"_index":2145,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["backend",{"_index":2177,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["backend:string",{"_index":3186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend_token",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["badge",{"_index":2491,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["base",{"_index":663,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["base.model",{"_index":865,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Season.html":{},"interfaces/Serie.html":{},"interfaces/Task.html":{}}}],["base64response",{"_index":2201,"title":{},"body":{"components/ProfilePage.html":{}}}],["base64response.blob",{"_index":2203,"title":{},"body":{"components/ProfilePage.html":{}}}],["baseauthenticationservice",{"_index":215,"title":{"injectables/BaseAuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseauthenticationservice:107",{"_index":2904,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:109",{"_index":1435,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:12",{"_index":1439,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:13",{"_index":1442,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:139",{"_index":1433,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:148",{"_index":1431,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:15",{"_index":1441,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:16",{"_index":1444,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:163",{"_index":1436,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:17",{"_index":1440,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:18",{"_index":1443,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:52",{"_index":2902,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:57",{"_index":2905,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:69",{"_index":2907,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:72",{"_index":1429,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:87",{"_index":2906,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:95",{"_index":2908,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:99",{"_index":1432,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["basemediaservice",{"_index":519,"title":{"classes/BaseMediaService.html":{}},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basemediaservice:116",{"_index":2944,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["basemediaservice:27",{"_index":1582,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["baserepositoryfirebaseservice",{"_index":526,"title":{"injectables/BaseRepositoryFirebaseService.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"coverage.html":{}}}],["baserepositoryhttpservice",{"_index":639,"title":{"injectables/BaseRepositoryHttpService.html":{}},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["baserepositoryhttpservice:35",{"_index":1765,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:39",{"_index":1762,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:47",{"_index":1764,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:59",{"_index":2948,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:62",{"_index":1761,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:69",{"_index":1763,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:81",{"_index":2946,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:89",{"_index":2950,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:97",{"_index":2947,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserespositorylocalstorageservice",{"_index":686,"title":{"injectables/BaseRespositoryLocalStorageService.html":{}},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"coverage.html":{}}}],["baseservice",{"_index":731,"title":{"injectables/BaseService.html":{}},"body":{"injectables/BaseService.html":{},"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["baseservice:18",{"_index":957,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["baseservice:24",{"_index":958,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["baseservice:28",{"_index":955,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["baseservice:32",{"_index":959,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["baseservice:36",{"_index":956,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/TasksService.html":{}}}],["baseservice:49",{"_index":2814,"title":{},"body":{"injectables/SeriesService.html":{}}}],["bearer",{"_index":787,"title":{},"body":{"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["behaviorsubject",{"_index":489,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["behaviorsubject(false",{"_index":492,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["behaviorsubject(undefined",{"_index":495,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["between",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["blob",{"_index":524,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["blob.type",{"_index":1601,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["block",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["blocked",{"_index":2643,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["bold",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":1012,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":171,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["bottom",{"_index":92,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["box",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["brand",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1128,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["breve",{"_index":796,"title":{},"body":{"injectables/CohereService.html":{}}}],["browse",{"_index":3128,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browserlang",{"_index":1798,"title":{},"body":{"injectables/LanguageService.html":{}}}],["browsermodule",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer",{"_index":2136,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["button",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["button.picture",{"_index":2064,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["buttons",{"_index":1184,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["callback",{"_index":3073,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cambio",{"_index":2197,"title":{},"body":{"components/ProfilePage.html":{}}}],["cambios",{"_index":1212,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["campo",{"_index":2175,"title":{},"body":{"components/ProfilePage.html":{}}}],["campos",{"_index":2187,"title":{},"body":{"components/ProfilePage.html":{}}}],["canactivate",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":3204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":1185,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["capacitor.config.ts",{"_index":2972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":3025,"title":{},"body":{"dependencies.html":{}}}],["capacitor/cli",{"_index":3027,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":3028,"title":{},"body":{"dependencies.html":{}}}],["capacitor/screen",{"_index":999,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"dependencies.html":{}}}],["capacitorconfig",{"_index":3225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalize",{"_index":761,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["capitalizepipe",{"_index":758,"title":{"pipes/CapitalizePipe.html":{}},"body":{"pipes/CapitalizePipe.html":{},"coverage.html":{}}}],["caption",{"_index":1637,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["caracter",{"_index":2342,"title":{},"body":{"components/RegisterPage.html":{}}}],["caracteres",{"_index":2334,"title":{},"body":{"components/RegisterPage.html":{}}}],["características",{"_index":3090,"title":{},"body":{"index.html":{}}}],["card",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/ProfilePage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["cards",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["cargados",{"_index":1217,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["cargando",{"_index":2151,"title":{},"body":{"components/ProfilePage.html":{}}}],["case",{"_index":1120,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":1109,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{}}}],["catch(error",{"_index":1521,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["center",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["change.data",{"_index":1131,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["change.doc.data",{"_index":1556,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["change.doc.id",{"_index":1554,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["change.id",{"_index":1125,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["change.type",{"_index":1118,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["changedata",{"_index":1553,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["changedata.data",{"_index":1555,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["changelanguage",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{}}}],["changepicture",{"_index":1984,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":1994,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture:string",{"_index":2034,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["char",{"_index":768,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["char.touppercase",{"_index":769,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["characters.directive",{"_index":2248,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["characters.directive.ts",{"_index":1946,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"coverage.html":{}}}],["characters.directive.ts:11",{"_index":1954,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["characters.directive.ts:7",{"_index":1951,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["checkbox",{"_index":2353,"title":{},"body":{"components/RegisterPage.html":{}}}],["chevron",{"_index":2759,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["circles",{"_index":2150,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["class",{"_index":33,"title":{"classes/BaseMediaService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"classes/StrapiMediaService.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["classes",{"_index":520,"title":{},"body":{"classes/BaseMediaService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"classes/StrapiMediaService.html":{},"overview.html":{}}}],["clave",{"_index":2180,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["clear",{"_index":2763,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["close",{"_index":1853,"title":{},"body":{"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":174,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":175,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":176,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":1660,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1662,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":1661,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule",{"_index":1907,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":1908,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_imports",{"_index":1909,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule",{"_index":2241,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":2242,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_imports",{"_index":2243,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule",{"_index":2358,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":2360,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_imports",{"_index":2359,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_seasonspagemodule",{"_index":2541,"title":{},"body":{"modules/SeasonsPageModule.html":{},"overview.html":{}}}],["cluster_seasonspagemodule_declarations",{"_index":2542,"title":{},"body":{"modules/SeasonsPageModule.html":{},"overview.html":{}}}],["cluster_seasonspagemodule_imports",{"_index":2543,"title":{},"body":{"modules/SeasonsPageModule.html":{},"overview.html":{}}}],["cluster_seriespagemodule",{"_index":2804,"title":{},"body":{"modules/SeriesPageModule.html":{},"overview.html":{}}}],["cluster_seriespagemodule_declarations",{"_index":2806,"title":{},"body":{"modules/SeriesPageModule.html":{},"overview.html":{}}}],["cluster_seriespagemodule_imports",{"_index":2805,"title":{},"body":{"modules/SeriesPageModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2854,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2855,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2856,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":704,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["cohereservice",{"_index":770,"title":{"injectables/CohereService.html":{}},"body":{"injectables/CohereService.html":{},"components/SerieModalComponent.html":{},"coverage.html":{}}}],["coinciden",{"_index":2346,"title":{},"body":{"components/RegisterPage.html":{}}}],["col",{"_index":1905,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["collection",{"_index":570,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{}}}],["collection(this.db",{"_index":603,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["collection_subscription_token",{"_index":2994,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["collectionchange",{"_index":847,"title":{"interfaces/CollectionChange.html":{}},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["collectionname",{"_index":540,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"miscellaneous/functions.html":{}}}],["collectionref",{"_index":530,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["collectionsubscriptiontoken",{"_index":3071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["color",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["column",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["command",{"_index":791,"title":{},"body":{"injectables/CohereService.html":{}}}],["comment",{"_index":858,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["comments.map(comment",{"_index":941,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["comments_api_url_token",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments_collection_subscription_token",{"_index":2995,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments_repository_mapping_token",{"_index":931,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments_repository_token",{"_index":963,"title":{},"body":{"injectables/CommentsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments_resource_name_token",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentscollectionsubscriptionfactory",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentsmappingfactory",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentsmappingfirebaseservice",{"_index":867,"title":{"injectables/CommentsMappingFirebaseService.html":{}},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"coverage.html":{}}}],["commentspage",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{}}}],["commentsrepository",{"_index":950,"title":{},"body":{"injectables/CommentsService.html":{}}}],["commentsrepositoryfactory",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentsrepositoryfirebaseservice",{"_index":919,"title":{"injectables/CommentsRepositoryFirebaseService.html":{}},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"coverage.html":{}}}],["commentsrepositoryfirebaseservice(firebaseconfig",{"_index":3197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commentsservice",{"_index":362,"title":{"injectables/CommentsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CommentsService.html":{},"coverage.html":{}}}],["commonmodule",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{}}}],["complete",{"_index":2922,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["completos",{"_index":2155,"title":{},"body":{"components/ProfilePage.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"modules/SeasonsPageRoutingModule.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SeriesPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["componentprops",{"_index":1064,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"overview.html":{}}}],["components/picture",{"_index":2860,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/season",{"_index":2861,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/serie",{"_index":2858,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":2154,"title":{},"body":{"components/ProfilePage.html":{},"index.html":{}}}],["concisa",{"_index":820,"title":{},"body":{"injectables/CohereService.html":{}}}],["config",{"_index":2974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmed",{"_index":2642,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["confirmpassword",{"_index":2260,"title":{},"body":{"components/RegisterPage.html":{}}}],["conjunto",{"_index":1220,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["console.error('error",{"_index":2162,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["console.error(`error",{"_index":1558,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["console.error(err",{"_index":2318,"title":{},"body":{"components/RegisterPage.html":{}}}],["console.error(error",{"_index":2211,"title":{},"body":{"components/ProfilePage.html":{}}}],["console.log('animación",{"_index":2884,"title":{},"body":{"components/SplashPage.html":{}}}],["console.log('formulario",{"_index":2441,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["console.log(enteredkeyhash",{"_index":2305,"title":{},"body":{"components/RegisterPage.html":{}}}],["console.log(error",{"_index":2047,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["const",{"_index":200,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"modules/HomePageRoutingModule.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageRoutingModule.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":608,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["constraints.push(startafter(lastdoc",{"_index":611,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["constraints.push(where('serieid",{"_index":945,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["constructor(@inject(firebase_config_token",{"_index":896,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["constructor(authmapping",{"_index":470,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["constructor(el",{"_index":1950,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["constructor(fb",{"_index":1820,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["constructor(firebaseconfig",{"_index":539,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["constructor(formbuilder",{"_index":2090,"title":{},"body":{"components/ProfilePage.html":{}}}],["constructor(http",{"_index":641,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["constructor(languageservice",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(modalctrl",{"_index":2479,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["constructor(picturemodal",{"_index":1991,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":783,"title":{},"body":{"injectables/CohereService.html":{},"injectables/LanguageService.html":{},"directives/OnlyAllowedCharactersDirective.html":{}}}],["constructor(repository",{"_index":733,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["constructor(resource",{"_index":691,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["constructor(router",{"_index":2870,"title":{},"body":{"components/SplashPage.html":{}}}],["constructor(seriessvc",{"_index":2682,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["constructor(signinurl",{"_index":2898,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["constructor(translate",{"_index":1785,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructor(uploadurl",{"_index":2941,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["contact",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["contactarme",{"_index":3125,"title":{},"body":{"index.html":{}}}],["contain",{"_index":1890,"title":{},"body":{"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{}}}],["container",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["content",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/CohereService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["contenttype",{"_index":1600,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["continuar",{"_index":2179,"title":{},"body":{"components/ProfilePage.html":{}}}],["contraseña",{"_index":1872,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["contraseñas",{"_index":2345,"title":{},"body":{"components/RegisterPage.html":{}}}],["control",{"_index":2431,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"miscellaneous/functions.html":{}}}],["control.value",{"_index":2435,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["control?.dirty",{"_index":2433,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["controlvalueaccessor",{"_index":1974,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["core/guards/auth.guard",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/logged.guard",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/repositories/repository.factory",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["core/repositories/repository.tokens",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/base",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["core/services/impl/comments.service",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/seasons.service",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/series.service",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/language.service",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["correcto",{"_index":1888,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["country",{"_index":969,"title":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{}},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["cover",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["coverage",{"_index":2969,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":3093,"title":{},"body":{"index.html":{}}}],["creación",{"_index":3092,"title":{},"body":{"index.html":{}}}],["creada",{"_index":2885,"title":{},"body":{"components/SplashPage.html":{}}}],["creadas",{"_index":3098,"title":{},"body":{"index.html":{}}}],["creador",{"_index":3101,"title":{},"body":{"index.html":{}}}],["crear",{"_index":2326,"title":{},"body":{"components/RegisterPage.html":{}}}],["createbaseauthmappingfactory",{"_index":2989,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createbaseauthmappingfactory(auth_mapping_token",{"_index":3196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaseauthmappingfactory(token",{"_index":3063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbasemappingfactory",{"_index":2990,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbasemappingfactory(token",{"_index":3066,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbaserepositoryfactory",{"_index":2991,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createbaserepositoryfactory(seasons_repository_token",{"_index":3202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(series_repository_token",{"_index":3203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(token",{"_index":3068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcollectionsubscriptionfactory",{"_index":2992,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createcollectionsubscriptionfactory(collectionname",{"_index":3069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":861,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Model.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["createdat?:string",{"_index":1915,"title":{},"body":{"interfaces/Model.html":{}}}],["createtranslateloader",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1452,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":1502,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["crypto.subtle.digest('sha",{"_index":2139,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["cssclass",{"_index":1182,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["cualquier",{"_index":808,"title":{},"body":{"injectables/CohereService.html":{}}}],["cuenta",{"_index":1884,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["currentlang",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["currentseasons",{"_index":1208,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.findindex",{"_index":1226,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.findindex((p",{"_index":1229,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.push(change.data",{"_index":1227,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.sort((a",{"_index":1228,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.splice(removeindex",{"_index":1231,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons[index",{"_index":1230,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseries",{"_index":1115,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.findindex",{"_index":1123,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.findindex((p",{"_index":1129,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.push(change.data",{"_index":1126,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.sort((a",{"_index":1127,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.splice(removeindex",{"_index":1133,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries[index",{"_index":1130,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentvalue",{"_index":2119,"title":{},"body":{"components/ProfilePage.html":{}}}],["currentvalue.tolowercase",{"_index":2124,"title":{},"body":{"components/ProfilePage.html":{}}}],["currentvalue.touppercase",{"_index":2123,"title":{},"body":{"components/ProfilePage.html":{}}}],["cursor",{"_index":2058,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["custom",{"_index":1183,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["custom_elements_schema",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["custommetadata",{"_index":1602,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["danger",{"_index":1832,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["data",{"_index":851,"title":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{}},"body":{"interfaces/CollectionChange.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["data.attributes",{"_index":1314,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data.createdat",{"_index":903,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["data.data.attributes",{"_index":1313,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data.data.id",{"_index":1315,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data.id",{"_index":911,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data.map(item",{"_index":916,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["data.name",{"_index":2515,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["data.numepisodes",{"_index":2517,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.numseason",{"_index":2516,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.picture",{"_index":2784,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["data.picture.url",{"_index":2789,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["data.picture?.url",{"_index":2785,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["data.rating",{"_index":1340,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["data.reaction",{"_index":900,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["data.releasedate",{"_index":2518,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.releaseyear",{"_index":1339,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["data.serieid",{"_index":901,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["data.serieid?.id",{"_index":912,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.synopsis",{"_index":2783,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["data.text",{"_index":899,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["data.user",{"_index":2525,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.userid",{"_index":902,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["data:any):paginated",{"_index":1697,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["data:data",{"_index":1305,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data:data.map((d:data",{"_index":1343,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["data:data.map((d:data|seasonraw",{"_index":1309,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["data:data.map((d:seasonraw",{"_index":2470,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["data:data.map((d:serieraw",{"_index":2631,"title":{},"body":{"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["data:res.data.map((d:seasonraw",{"_index":1928,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["data:res.data.map((d:serieraw",{"_index":1941,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{}}}],["data:seasonraw",{"_index":2469,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["data:serieraw",{"_index":2630,"title":{},"body":{"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["data:t",{"_index":1970,"title":{},"body":{"interfaces/Paginated.html":{}}}],["data[key",{"_index":1296,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["datamapping",{"_index":898,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["datamapping:firebaseseason",{"_index":2514,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["dataurl",{"_index":3074,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":3005,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":3072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":1279,"title":{},"body":{"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/Task.html":{},"interfaces/UserRaw.html":{}}}],["date()).toisostring",{"_index":717,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["date().toisostring",{"_index":904,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["date:date",{"_index":2954,"title":{},"body":{"interfaces/Task.html":{}}}],["datos",{"_index":1464,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{}}}],["daulrgtqsx0mbyolsxcpllhnnrzl1jmdtzlndcuh",{"_index":3233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":531,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["de",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":802,"title":{},"body":{"injectables/CohereService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["debe/n",{"_index":2337,"title":{},"body":{"components/RegisterPage.html":{}}}],["declarations",{"_index":170,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decorators",{"_index":1956,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/SerieSelectableComponent.html":{}}}],["default",{"_index":490,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-1.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingStrapi.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":1779,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defecto",{"_index":1418,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"components/SerieSelectableComponent.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{}}}],["del",{"_index":670,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{}}}],["delete",{"_index":533,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["delete(id",{"_index":549,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["deletedoc",{"_index":576,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["deletedoc(docref",{"_index":637,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["deleteoperations",{"_index":2849,"title":{},"body":{"injectables/SeriesService.html":{}}}],["deleteoperations.length",{"_index":2852,"title":{},"body":{"injectables/SeriesService.html":{}}}],["dependencies",{"_index":169,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["deps",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["desarrollada",{"_index":3082,"title":{},"body":{"index.html":{}}}],["desc",{"_index":939,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["description",{"_index":3139,"title":{},"body":{"properties.html":{}}}],["desde",{"_index":1491,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["deselect",{"_index":2674,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["deselect(popover",{"_index":2684,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["deselect(popover:ionpopover|null=null",{"_index":2741,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["desktop",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["destruir",{"_index":1573,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["detail",{"_index":2493,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["details",{"_index":2490,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["detallada",{"_index":798,"title":{},"body":{"injectables/CohereService.html":{}}}],["direction",{"_index":90,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["directive",{"_index":124,"title":{"directives/OnlyAllowedCharactersDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":160,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["dirtyvalues",{"_index":2429,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["dirtyvalues[key",{"_index":2434,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["disabled",{"_index":2671,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["disabled:boolean",{"_index":2719,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["diseñada",{"_index":3107,"title":{},"body":{"index.html":{}}}],["dislike",{"_index":864,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["dismiss",{"_index":2374,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["display",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["div.user",{"_index":2053,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["doc",{"_index":571,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["doc(this.db",{"_index":622,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["doc.data",{"_index":618,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["doc.exists",{"_index":625,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["doc.id",{"_index":617,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["docref",{"_index":621,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["docref.id",{"_index":632,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["docsnap.data",{"_index":1528,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["documentation",{"_index":2970,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1545,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["documentos",{"_index":1213,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["documentreference",{"_index":895,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["donde",{"_index":3102,"title":{},"body":{"index.html":{}}}],["dos",{"_index":2333,"title":{},"body":{"components/RegisterPage.html":{}}}],["dudes",{"_index":3124,"title":{},"body":{"index.html":{}}}],["duration",{"_index":1851,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["dynamic",{"_index":3022,"title":{},"body":{"dependencies.html":{}}}],["dígito",{"_index":2341,"title":{},"body":{"components/RegisterPage.html":{}}}],["e",{"_index":2131,"title":{},"body":{"components/ProfilePage.html":{},"index.html":{}}}],["e.target?.result",{"_index":2133,"title":{},"body":{"components/ProfilePage.html":{}}}],["ease",{"_index":2062,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["edit",{"_index":1165,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["el",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":123,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["elementref",{"_index":976,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["eliminar",{"_index":2839,"title":{},"body":{"injectables/SeriesService.html":{}}}],["email",{"_index":1408,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["email:response.email",{"_index":2668,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["email:response.user.email",{"_index":2663,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["en",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"injectables/CohereService.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"index.html":{}}}],["end",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["enteredkey",{"_index":2169,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["enteredkeyhash",{"_index":2304,"title":{},"body":{"components/RegisterPage.html":{}}}],["entity",{"_index":548,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["entity).pipe(map(res=>this.mapping.getadded(res",{"_index":682,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["entity).pipe(map(res=>this.mapping.getupdated(res",{"_index":684,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["entity.createdat",{"_index":716,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["entity.id",{"_index":714,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["enviar",{"_index":2176,"title":{},"body":{"components/ProfilePage.html":{}}}],["environment",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"injectables/CohereService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apikey",{"_index":778,"title":{},"body":{"injectables/CohereService.html":{}}}],["environment.apiurl}/api",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/auth/local",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/auth/local/register",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/upload",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/users/me",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["eres",{"_index":2328,"title":{},"body":{"components/RegisterPage.html":{}}}],["err",{"_index":1171,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["err.error.error.message",{"_index":1869,"title":{},"body":{"components/LoginPage.html":{}}}],["err.error?.error?.message",{"_index":1868,"title":{},"body":{"components/LoginPage.html":{}}}],["error",{"_index":1170,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["error(\"backend",{"_index":3193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(\"id",{"_index":727,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["error(\"method",{"_index":2473,"title":{},"body":{"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["error('no",{"_index":1488,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["error('usuario",{"_index":1594,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["errormessage",{"_index":1866,"title":{},"body":{"components/LoginPage.html":{},"components/SerieModalComponent.html":{}}}],["es",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["escribe",{"_index":793,"title":{},"body":{"injectables/CohereService.html":{}}}],["español",{"_index":1792,"title":{},"body":{"injectables/LanguageService.html":{}}}],["especial",{"_index":2343,"title":{},"body":{"components/RegisterPage.html":{}}}],["específicos",{"_index":1741,"title":{},"body":{"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{}}}],["esperar",{"_index":3211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esta",{"_index":3081,"title":{},"body":{"index.html":{}}}],["estar",{"_index":807,"title":{},"body":{"injectables/CohereService.html":{}}}],["estas",{"_index":3097,"title":{},"body":{"index.html":{}}}],["estilos",{"_index":2489,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["ev",{"_index":2697,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["event",{"_index":1953,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["event.stoppropagation",{"_index":1968,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{}}}],["event.target",{"_index":2128,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["event.target.value.tolowercase",{"_index":1137,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["exactamente",{"_index":818,"title":{},"body":{"injectables/CohereService.html":{}}}],["excepto",{"_index":2189,"title":{},"body":{"components/ProfilePage.html":{}}}],["existe",{"_index":1224,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["existing",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["existingindex",{"_index":1122,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["exitoso",{"_index":1862,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["experiencia",{"_index":3108,"title":{},"body":{"index.html":{}}}],["explicar",{"_index":830,"title":{},"body":{"injectables/CohereService.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}}}],["exports",{"_index":173,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageRoutingModule.html":{},"overview.html":{}}}],["ext",{"_index":1639,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["extendidos",{"_index":1489,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["extends",{"_index":860,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Season.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["f44336",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["f4511e",{"_index":1901,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["fab",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["factory",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["factoryprovider",{"_index":3065,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":1013,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/variables.html":{}}}],["favoritas",{"_index":3089,"title":{},"body":{"index.html":{}}}],["fb",{"_index":1826,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["fb8c00",{"_index":1902,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["fb:formbuilder",{"_index":2418,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["fetch(this.selectedimage",{"_index":2202,"title":{},"body":{"components/ProfilePage.html":{}}}],["ff5722",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["ff9800",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["ffe9e2",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["fff",{"_index":2492,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["fff5f2",{"_index":1894,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["ffffff",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["field",{"_index":2356,"title":{},"body":{"components/RegisterPage.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["fileloader",{"_index":2000,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":2049,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files?.length>0",{"_index":2041,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":2042,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":2039,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader:htmlinputelement",{"_index":2038,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":1596,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["filereader",{"_index":2043,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["filter",{"_index":1445,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["filter(isready",{"_index":3209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtered",{"_index":1140,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["filteredseasons",{"_index":1200,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["filteredseries",{"_index":1091,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["filteredvalue",{"_index":1965,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["filters",{"_index":555,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filters)).pipe",{"_index":943,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["filters:searchparams",{"_index":677,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filters[${k}]=${v",{"_index":1367,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filters['serieid",{"_index":944,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["finally",{"_index":2165,"title":{},"body":{"components/ProfilePage.html":{}}}],["firebase",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthMappingService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.service.ts",{"_index":529,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"coverage.html":{}}}],["firebase.service.ts:112",{"_index":926,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:124",{"_index":922,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:130",{"_index":930,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:138",{"_index":923,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:14",{"_index":2505,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:18",{"_index":2511,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:22",{"_index":876,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:27",{"_index":889,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:30",{"_index":566,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:31",{"_index":543,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:32",{"_index":921,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:34",{"_index":2779,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:38",{"_index":892,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:41",{"_index":562,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:42",{"_index":2508,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:43",{"_index":928,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:49",{"_index":882,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:51",{"_index":2781,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:53",{"_index":557,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:54",{"_index":2509,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:60",{"_index":885,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:62",{"_index":2506,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:63",{"_index":929,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:65",{"_index":2510,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:67",{"_index":2780,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:68",{"_index":2507,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:69",{"_index":878,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:71",{"_index":2778,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:73",{"_index":887,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:76",{"_index":560,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:77",{"_index":880,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:82",{"_index":924,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:87",{"_index":547,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:92",{"_index":565,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:99",{"_index":550,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase/app",{"_index":568,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase/auth",{"_index":1407,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["firebase/firestore",{"_index":583,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase/storage",{"_index":1588,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["firebase_collection_token",{"_index":589,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebase_config_token",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseauthenticationservice",{"_index":1084,"title":{"injectables/FirebaseAuthenticationService.html":{}},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["firebaseauthenticationservice(firebaseconfig",{"_index":3195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseauthmappingservice",{"_index":1390,"title":{"injectables/FirebaseAuthMappingService.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{},"coverage.html":{}}}],["firebasecollectionsubscriptionservice",{"_index":1530,"title":{"injectables/FirebaseCollectionSubscriptionService.html":{}},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{}}}],["firebasecomment",{"_index":890,"title":{"interfaces/FirebaseComment.html":{}},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"coverage.html":{}}}],["firebaseconfig",{"_index":544,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"miscellaneous/variables.html":{}}}],["firebaseconfig:any",{"_index":3187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasemediaservice",{"_index":1579,"title":{"injectables/FirebaseMediaService.html":{}},"body":{"injectables/FirebaseMediaService.html":{},"coverage.html":{}}}],["firebasemediaservice(firebaseconfig",{"_index":3200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseseason",{"_index":1611,"title":{"interfaces/FirebaseSeason.html":{}},"body":{"interfaces/FirebaseSeason.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"coverage.html":{}}}],["firebaseserie",{"_index":1621,"title":{"interfaces/FirebaseSerie.html":{}},"body":{"interfaces/FirebaseSerie.html":{},"injectables/SeriesMappingFirebaseService.html":{},"coverage.html":{}}}],["firebasesignout",{"_index":1453,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["firebaseuser",{"_index":1395,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["firestore",{"_index":893,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["first",{"_index":1766,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["firstvaluefrom",{"_index":1447,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this._ready.pipe(filter(ready",{"_index":1484,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this._user",{"_index":1487,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["fit",{"_index":1889,"title":{},"body":{"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["fixed",{"_index":2350,"title":{},"body":{"components/RegisterPage.html":{}}}],["flex",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["fn",{"_index":2006,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["focused",{"_index":2755,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["font",{"_index":103,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["for(let",{"_index":706,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["forkjoin",{"_index":2820,"title":{},"body":{"injectables/SeriesService.html":{}}}],["forkjoin(deleteoperations).pipe",{"_index":2853,"title":{},"body":{"injectables/SeriesService.html":{}}}],["forkjoin(serieswithseasons$).pipe",{"_index":2834,"title":{},"body":{"injectables/SeriesService.html":{}}}],["form",{"_index":1891,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formats",{"_index":1625,"title":{"interfaces/Formats.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["formbuilder",{"_index":1821,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formcontrol",{"_index":2403,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["formdata",{"_index":1652,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"components/SerieModalComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["formdata.append('files",{"_index":1653,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["formgroup",{"_index":1836,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formgroup.get(key",{"_index":2432,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formgroup:formgroup",{"_index":2404,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formsmodule",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["formvalue",{"_index":2300,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.adminkey",{"_index":2314,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.adminkey?.trim",{"_index":2303,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.email",{"_index":2310,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.name",{"_index":2312,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.password",{"_index":2311,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.surname",{"_index":2313,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.username",{"_index":2309,"title":{},"body":{"components/RegisterPage.html":{}}}],["forwardref",{"_index":2019,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":728,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["framework",{"_index":3143,"title":{},"body":{"properties.html":{}}}],["frase",{"_index":829,"title":{},"body":{"injectables/CohereService.html":{}}}],["from(adddoc(this.collectionref",{"_index":628,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(deletedoc(docref)).pipe",{"_index":948,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(firebasesignout(this.auth)).pipe",{"_index":1522,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(getdoc(docref)).pipe",{"_index":623,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(getdoc(userref",{"_index":1526,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(getdocs(q)).pipe",{"_index":940,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":1497,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(this.auth.getcurrentuser()).pipe",{"_index":1592,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["from(this.getlastdocumentofpreviouspage(page",{"_index":605,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(updatedoc(docref",{"_index":633,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(updatedoc(userref",{"_index":1525,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(uploadbytes(storageref",{"_index":1606,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["full",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":3058,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"directives/OnlyAllowedCharactersDirective.html":{}}}],["gap",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["generado",{"_index":1717,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["generar",{"_index":2610,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["generatesynopsis",{"_index":772,"title":{},"body":{"injectables/CohereService.html":{},"components/SerieModalComponent.html":{}}}],["generatesynopsis(title",{"_index":774,"title":{},"body":{"injectables/CohereService.html":{}}}],["gestionar",{"_index":3086,"title":{},"body":{"index.html":{}}}],["get('seasons.messages.delete_confirm",{"_index":1259,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["get('series.messages.delete_confirm",{"_index":1180,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["getadded",{"_index":869,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getadded(data",{"_index":877,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getadded(data:any):t",{"_index":1699,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getadminkey",{"_index":2284,"title":{},"body":{"components/RegisterPage.html":{}}}],["getall",{"_index":534,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["getall():observable",{"_index":1727,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["getall(page",{"_index":552,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["getall(page:number",{"_index":675,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"injectables/StrapiRepositoryService.html":{}}}],["getauth",{"_index":1450,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getauth(app",{"_index":1459,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getbyid",{"_index":535,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["getbyid(id",{"_index":559,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["getbyuserid",{"_index":1738,"title":{},"body":{"interfaces/ISeasonsService.html":{},"injectables/SeasonsService.html":{}}}],["getbyuserid(userid",{"_index":1739,"title":{},"body":{"interfaces/ISeasonsService.html":{},"injectables/SeasonsService.html":{}}}],["getcommentsbyserieid",{"_index":920,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{}}}],["getcommentsbyserieid(serieid",{"_index":927,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{}}}],["getconfirmpassword",{"_index":2282,"title":{},"body":{"components/RegisterPage.html":{}}}],["getcurrentlang",{"_index":1782,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrentuser",{"_index":465,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["getcurrentuser():promise",{"_index":1691,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["getdeleted",{"_index":870,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getdeleted(data",{"_index":879,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getdeleted(data:any):t",{"_index":1701,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getdirtyvalues",{"_index":2375,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["getdirtyvalues(formgroup",{"_index":2380,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["getdoc",{"_index":572,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["getdoc(userdoc",{"_index":1470,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getdocs",{"_index":573,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["getdocs(q",{"_index":614,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["getdownloadurl",{"_index":1586,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getdownloadurl(snapshot.ref",{"_index":1609,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getemail",{"_index":1838,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["getfirestore",{"_index":569,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["getfirestore(app",{"_index":601,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["getfirestore(initializeapp(firebaseconfig",{"_index":897,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["getheaders",{"_index":1360,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["getlastdocumentofpreviouspage",{"_index":537,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["getlastdocumentofpreviouspage(page",{"_index":561,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["getname",{"_index":2111,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["getnumepisodes",{"_index":2395,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["getnumseason",{"_index":2393,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["getone",{"_index":871,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getone(data",{"_index":881,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getone(data:any):t",{"_index":1698,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getpaginated",{"_index":872,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getpaginated(page",{"_index":883,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getpaginated(page:number",{"_index":1304,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getpassword",{"_index":1840,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["getrating",{"_index":2399,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["getreleasedate",{"_index":2397,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["getreleaseyear",{"_index":2585,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["getserieid",{"_index":2401,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["getserieswithseasons",{"_index":2812,"title":{},"body":{"injectables/SeriesService.html":{}}}],["getserieswithseasons(page",{"_index":2815,"title":{},"body":{"injectables/SeriesService.html":{}}}],["getstorage",{"_index":1583,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getstorage(app",{"_index":1591,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getstoredlanguage",{"_index":1783,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getsurname",{"_index":2113,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["getsynopsis",{"_index":2583,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["getting",{"_index":3079,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1427,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["gettoken():string",{"_index":1750,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["getupdated",{"_index":873,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getupdated(data",{"_index":886,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getupdated(data:any):t",{"_index":1700,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getusername",{"_index":2109,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["google/generative",{"_index":3030,"title":{},"body":{"dependencies.html":{}}}],["gracias",{"_index":3119,"title":{},"body":{"index.html":{}}}],["gradient(145deg",{"_index":1893,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["gradient(45deg",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["graph",{"_index":3129,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":2757,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["grid",{"_index":115,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["group",{"_index":2355,"title":{},"body":{"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["grow",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["guardar",{"_index":2196,"title":{},"body":{"components/ProfilePage.html":{}}}],["h1",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["h2",{"_index":2495,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["handleimageerror",{"_index":2675,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["handleimageerror(event",{"_index":2687,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["handler",{"_index":1187,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["hash",{"_index":1638,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["hasharray",{"_index":2141,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hasharray.map((b",{"_index":2144,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hashbuffer",{"_index":2138,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hashed",{"_index":2171,"title":{},"body":{"components/ProfilePage.html":{}}}],["hashstring",{"_index":2087,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hashstring(str",{"_index":2095,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hasvalue",{"_index":1981,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["hasvalue:boolean",{"_index":2025,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["hay",{"_index":1742,"title":{},"body":{"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{}}}],["header",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["headers",{"_index":784,"title":{},"body":{"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["height",{"_index":56,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["hidden",{"_index":2056,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["highlight",{"_index":1897,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["hkcgyuovhgcesese",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["home",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Country.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"classes/Port.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["home.page",{"_index":1665,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":1001,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["home.page.scss",{"_index":1002,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["homepage",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{},"properties.html":{}}}],["homepagemodule",{"_index":1659,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":1663,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["hostlistener",{"_index":1958,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["hostlistener('input",{"_index":1957,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["hostlisteners",{"_index":1949,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["hover",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["html",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["htmlimageelement",{"_index":2745,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["htmlinputelement",{"_index":1962,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["htmlioninfinitescrollelement",{"_index":1154,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["http",{"_index":646,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["http.service",{"_index":1352,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["http.service.ts",{"_index":640,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"coverage.html":{}}}],["http.service.ts:18",{"_index":645,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:31",{"_index":649,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:35",{"_index":650,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:39",{"_index":647,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:43",{"_index":651,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:47",{"_index":648,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http://localhost:3000/seasons",{"_index":1922,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["http://localhost:3000/series",{"_index":1940,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{}}}],["http:httpclient",{"_index":1925,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpclient:httpclient",{"_index":1650,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["httpclientmodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":781,"title":{},"body":{"injectables/CohereService.html":{}}}],["https://api.cohere.ai/v1/generate",{"_index":780,"title":{},"body":{"injectables/CohereService.html":{}}}],["https://ionicframework.com",{"_index":3141,"title":{},"body":{"properties.html":{}}}],["https://youtu.be/mquyndeqhjq",{"_index":3114,"title":{},"body":{"index.html":{}}}],["https://youtu.be/zyzx6fsg_wc",{"_index":3116,"title":{},"body":{"index.html":{}}}],["iauthentication",{"_index":504,"title":{"interfaces/IAuthentication.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthentication.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{}}}],["iauthmapping",{"_index":471,"title":{"interfaces/IAuthMapping.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["ibasemapping",{"_index":542,"title":{"interfaces/IBaseMapping.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ibaserepository",{"_index":586,"title":{"interfaces/IBaseRepository.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ITasksRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["ibaseservice",{"_index":743,"title":{"interfaces/IBaseService.html":{}},"body":{"injectables/BaseService.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"coverage.html":{}}}],["icollectionsubscription",{"_index":855,"title":{"interfaces/ICollectionSubscription.html":{}},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["icommentsrepository",{"_index":932,"title":{"interfaces/ICommentsRepository.html":{}},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/ICommentsRepository.html":{},"coverage.html":{}}}],["icommentsservice",{"_index":961,"title":{"interfaces/ICommentsService.html":{}},"body":{"injectables/CommentsService.html":{},"interfaces/ICommentsService.html":{},"coverage.html":{}}}],["icon",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["id",{"_index":551,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Formats.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}}}],["id.tostring",{"_index":1316,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["id:d.id",{"_index":1929,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["id:data.id",{"_index":2471,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["id:number",{"_index":1634,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["id:response.id.tostring",{"_index":2664,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["id:response.user.id.tostring",{"_index":2659,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["id:string",{"_index":913,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Model.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["identifier",{"_index":1871,"title":{},"body":{"components/LoginPage.html":{},"interfaces/StrapiSignIn.html":{},"coverage.html":{}}}],["identifier:payload.email",{"_index":2654,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["identifier:string",{"_index":2649,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["idioma",{"_index":809,"title":{},"body":{"injectables/CohereService.html":{}}}],["ids",{"_index":1221,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["if(_season",{"_index":2409,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["if(_serie",{"_index":2591,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["if(fileloader.files",{"_index":2040,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["if(id",{"_index":2730,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["if(index>=0",{"_index":723,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["if(obj",{"_index":2028,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["if(page",{"_index":1370,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["if(popover",{"_index":2743,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["if(propagate",{"_index":2733,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["if(this.page",{"_index":1047,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["image",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["imagen",{"_index":2200,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["img",{"_index":2057,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["imgelement",{"_index":2744,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["imgelement.src",{"_index":2746,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["implemented",{"_index":2474,"title":{},"body":{"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{}}}],["import('./pages/about/about.module').then",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/comments/comments.page').then(m",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/login/login.module').then",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/profile/profile.module').then",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/register/register.module').then",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/seasons/seasons.module').then",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/series/series.module').then",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/splash/splash.page').then(m",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":2066,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["imports",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{}}}],["incluir",{"_index":821,"title":{},"body":{"injectables/CohereService.html":{}}}],["incorrecta",{"_index":2181,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["incorrectos",{"_index":1873,"title":{},"body":{"components/LoginPage.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2365,"title":{},"body":{"interfaces/SearchParams.html":{}}}],["infinite",{"_index":2766,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["infinitescrollcustomevent",{"_index":982,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}}}],["información",{"_index":3095,"title":{},"body":{"index.html":{}}}],["ingles",{"_index":1796,"title":{},"body":{"injectables/LanguageService.html":{}}}],["inherited",{"_index":954,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["inicia",{"_index":2327,"title":{},"body":{"components/RegisterPage.html":{}}}],["iniciar",{"_index":1882,"title":{},"body":{"components/LoginPage.html":{}}}],["inicio",{"_index":1867,"title":{},"body":{"components/LoginPage.html":{}}}],["initializeapp",{"_index":567,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["initializeapp(firebaseconfig",{"_index":599,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["inject",{"_index":503,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["inject(api_url_token",{"_index":661,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(auth_mapping_token",{"_index":1456,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_me_api_url_token",{"_index":2915,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_sign_in_api_url_token",{"_index":2913,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_sign_up_api_url_token",{"_index":2914,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_token",{"_index":660,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["inject(baseauthenticationservice",{"_index":3206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(comments_repository_mapping_token",{"_index":934,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["inject(comments_repository_token",{"_index":965,"title":{},"body":{"injectables/CommentsService.html":{}}}],["inject(firebase_collection_token",{"_index":597,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["inject(firebase_config_token",{"_index":596,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["inject(repository_mapping_token",{"_index":598,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(repository_token",{"_index":749,"title":{},"body":{"injectables/BaseService.html":{}}}],["inject(resource_name_token",{"_index":667,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(router",{"_index":3207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(seasons_collection_subscription_token",{"_index":1202,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["inject(seasons_repository_token",{"_index":2554,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["inject(series_collection_subscription_token",{"_index":1103,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["inject(series_repository_token",{"_index":2822,"title":{},"body":{"injectables/SeriesService.html":{}}}],["inject(strapi_auth_token",{"_index":1357,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["inject(tasks_repository_token",{"_index":2961,"title":{},"body":{"injectables/TasksService.html":{}}}],["inject(upload_api_url_token",{"_index":1648,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["injectable",{"_index":454,"title":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["injectables",{"_index":455,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":3064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectiontoken('apiurl",{"_index":3154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authmeapiurl",{"_index":3156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authsigninapiurl",{"_index":3157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authsignupapiurl",{"_index":3158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('backend",{"_index":3160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('commentsapiurl",{"_index":3162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('commentsresourcename",{"_index":3166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('firebase_collection_token",{"_index":3167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('firebase_config_token",{"_index":3168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iauthentication",{"_index":3159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('icommentsrepository",{"_index":3165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iseasonsrepository",{"_index":3175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iseriesrepository",{"_index":3180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('istrapiauthentication",{"_index":3182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('itasksrepository",{"_index":3184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('resourcename",{"_index":3171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('seasonsapiurl",{"_index":3172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('seasonsresourcename",{"_index":3176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('seriesapiurl",{"_index":3177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('seriesresourcename",{"_index":3181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('tasksapiurl",{"_index":3183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('uploadapiurl",{"_index":3185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('collectionsubscriptiontoken",{"_index":3161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('commentscollectionsubscriptiontoken",{"_index":3163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iauthmapping",{"_index":3155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('ibaserepositorymapping",{"_index":3169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('icommentsrepositorymapping",{"_index":3164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iseasonsrepositorymapping",{"_index":3174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iseriesrepositorymapping",{"_index":3179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('repository_token",{"_index":3170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('seasonscollectionsubscriptiontoken",{"_index":3173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('seriescollectionsubscriptiontoken",{"_index":3178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inner",{"_index":2068,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["input",{"_index":1899,"title":{},"body":{"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["input('apponlyallowedcharacters",{"_index":1959,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["input.files",{"_index":2129,"title":{},"body":{"components/ProfilePage.html":{}}}],["input.files[0",{"_index":2130,"title":{},"body":{"components/ProfilePage.html":{}}}],["input.value",{"_index":1967,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["input.value.replace(regex",{"_index":1966,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["inputs",{"_index":1948,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["intefaces/base",{"_index":587,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{}}}],["intefaces/comments",{"_index":933,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["interface",{"_index":846,"title":{"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}},"body":{"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["interfaces",{"_index":848,"title":{},"body":{"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"overview.html":{}}}],["interfaces/auth",{"_index":507,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["interfaces/authentication.interface",{"_index":505,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{}}}],["interfaces/base",{"_index":744,"title":{},"body":{"injectables/BaseService.html":{}}}],["interfaces/collection",{"_index":1547,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["interfaces/comments",{"_index":962,"title":{},"body":{"injectables/CommentsService.html":{}}}],["interfaces/strapi",{"_index":1631,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["interfaces/tasks",{"_index":2960,"title":{},"body":{"injectables/TasksService.html":{}}}],["interfaz",{"_index":3105,"title":{},"body":{"index.html":{}}}],["intrigante",{"_index":824,"title":{},"body":{"injectables/CohereService.html":{}}}],["introducir",{"_index":1886,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["invalid",{"_index":1870,"title":{},"body":{"components/LoginPage.html":{}}}],["inválido",{"_index":2442,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["io.ionic.starter",{"_index":3226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["ionic",{"_index":3083,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ionic/angular",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"interfaces/SerieAttributes.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"interfaces/UserRaw.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{}}}],["ionicmodule.forroot",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":3042,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["ioninput",{"_index":2717,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["ionpopover",{"_index":2685,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["isadmin",{"_index":1088,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["isanimating",{"_index":1029,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["isdisabled",{"_index":1982,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["isdisabled:boolean",{"_index":2024,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["iseasonsrepository",{"_index":1734,"title":{"interfaces/ISeasonsRepository.html":{}},"body":{"interfaces/ISeasonsRepository.html":{},"injectables/SeasonsService.html":{},"coverage.html":{}}}],["iseasonsservice",{"_index":1736,"title":{"interfaces/ISeasonsService.html":{}},"body":{"interfaces/ISeasonsService.html":{},"injectables/SeasonsService.html":{},"coverage.html":{}}}],["iseriesrepository",{"_index":1743,"title":{"interfaces/ISeriesRepository.html":{}},"body":{"interfaces/ISeriesRepository.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["iseriesservice",{"_index":1745,"title":{"interfaces/ISeriesService.html":{}},"body":{"interfaces/ISeriesService.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["isgeneratingsynopsis",{"_index":2567,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["isloggedin",{"_index":3219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ismobile",{"_index":2373,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["isready",{"_index":3210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isseasonraw",{"_index":1311,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["isseasonraw(data",{"_index":1312,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["isserieraw",{"_index":1344,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["isserieraw(data",{"_index":1345,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["istrapiauthentication",{"_index":656,"title":{"interfaces/IStrapiAuthentication.html":{}},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isuppercase",{"_index":2084,"title":{},"body":{"components/ProfilePage.html":{}}}],["isweb",{"_index":1011,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["itasksrepository",{"_index":1751,"title":{"interfaces/ITasksRepository.html":{}},"body":{"interfaces/ITasksRepository.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["itasksservice",{"_index":1755,"title":{"interfaces/ITasksService.html":{}},"body":{"interfaces/ITasksService.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["item",{"_index":107,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["items",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"interfaces/SeasonRaw.html":{},"components/SeasonViewComponent.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["items.length",{"_index":946,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["js",{"_index":3049,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(this._items",{"_index":720,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["jsonserverrepositoryservice",{"_index":1757,"title":{"injectables/JsonServerRepositoryService.html":{}},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{}}}],["justify",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["jwt",{"_index":2645,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["jwt_token",{"_index":2897,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["jwt_token:string|null",{"_index":2912,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["k",{"_index":838,"title":{},"body":{"injectables/CohereService.html":{}}}],["key",{"_index":1710,"title":{},"body":{"interfaces/IBaseRepository.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"components/SerieModalComponent.html":{}}}],["keyof",{"_index":2193,"title":{},"body":{"components/ProfilePage.html":{}}}],["k}_like=${v",{"_index":1770,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["la",{"_index":664,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/RegisterPage.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{}}}],["label",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{}}}],["lang",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{}}}],["lang_key",{"_index":1781,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languageservice",{"_index":214,"title":{"injectables/LanguageService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{},"components/SerieModalComponent.html":{},"coverage.html":{}}}],["languague",{"_index":775,"title":{},"body":{"injectables/CohereService.html":{},"components/SerieModalComponent.html":{}}}],["languague).subscribe",{"_index":2607,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["large",{"_index":1627,"title":{"interfaces/Large.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["large:data.picture.large",{"_index":2636,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["large:string",{"_index":2563,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["las",{"_index":1570,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/RegisterPage.html":{},"injectables/SeriesService.html":{},"index.html":{}}}],["last",{"_index":1769,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"components/RegisterPage.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{}}}],["lastdoc",{"_index":610,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["lastvaluefrom",{"_index":985,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["lastvaluefrom(this.authservice.updateuser(this.user.id",{"_index":2209,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.mediaservice.upload(blob",{"_index":2205,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.seriessvc.getbyid(id",{"_index":2732,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["lastvaluefrom(this.seriesvc.getall",{"_index":1166,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["lastvaluefrom(this.translateservice.get('common.error.load",{"_index":2163,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.translateservice.get('common.error.save",{"_index":2212,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.translateservice.get('ia.error",{"_index":2611,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["lastvaluefrom(this.translateservice.get('ia.generating",{"_index":2604,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["lastvaluefrom(this.translateservice.get('ia.name_required",{"_index":2601,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["left",{"_index":116,"title":{},"body":{"components/AboutPage.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["legend",{"_index":121,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"modules/SeasonsPageModule.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"overview.html":{}}}],["limit",{"_index":578,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["limit(pagesize",{"_index":609,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["limpiar",{"_index":1568,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/ProfilePage.html":{}}}],["linear",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["list",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["literal",{"_index":1402,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{}}}],["lo",{"_index":1415,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["loadchildren",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadcomponent",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadedids",{"_index":1096,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["loader",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loading",{"_index":2147,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["loading.dismiss",{"_index":2166,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["loading.present",{"_index":2153,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["loadingcontroller",{"_index":2093,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["loadingctrl",{"_index":2569,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["loadmoreseasons(notify",{"_index":1244,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["loadmoreseasons(notify:htmlioninfinitescrollelement",{"_index":1054,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["loadmoreseries",{"_index":2676,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["loadmoreseries(notify",{"_index":1153,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["loadmoreseries(notify:htmlioninfinitescrollelement",{"_index":1046,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SerieSelectableComponent.html":{}}}],["loadseasons",{"_index":1050,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["loadseries",{"_index":1032,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["local",{"_index":687,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"classes/Country-2.html":{},"classes/Port-2.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localecompare(b.name",{"_index":1042,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["localstorage.getitem('seasons",{"_index":2918,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.getitem(this.lang_key",{"_index":1806,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.removeitem('seasons",{"_index":2934,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.setitem(\"seasons",{"_index":2925,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.setitem(this.lang_key",{"_index":1808,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem(this.resource",{"_index":719,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["loggedguard",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["login.page",{"_index":1912,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":1811,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1810,"title":{},"body":{"components/LoginPage.html":{}}}],["loginform",{"_index":1812,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":136,"title":{"components/LoginPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpagemodule",{"_index":1906,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules.html":{},"overview.html":{}}}],["loginpageroutingmodule",{"_index":1910,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["logo",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["logout",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["los",{"_index":1714,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"interfaces/SearchParams.html":{},"index.html":{}}}],["lottie",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["lottiecomponent",{"_index":2865,"title":{},"body":{"components/SplashPage.html":{}}}],["m",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.aboutpagemodule",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.commentspage",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.registerpagemodule",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.seasonspagemodule",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.seriespagemodule",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.splashpage",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["maneja",{"_index":1416,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["manejo",{"_index":2199,"title":{},"body":{"components/ProfilePage.html":{}}}],["map",{"_index":584,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieRaw.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["map(([k",{"_index":1365,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["map((response",{"_index":844,"title":{},"body":{"injectables/CohereService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["map(doc",{"_index":624,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["map(docref",{"_index":630,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["map(docsnap",{"_index":1527,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["map(entity",{"_index":636,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(isloggedin",{"_index":3218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(lastdoc",{"_index":607,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["map(res",{"_index":2557,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["map(seasonspaginated",{"_index":2829,"title":{},"body":{"injectables/SeriesService.html":{}}}],["map(serieswithseasons",{"_index":2835,"title":{},"body":{"injectables/SeriesService.html":{}}}],["map(snapshot",{"_index":615,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["map(url",{"_index":1610,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["map(user",{"_index":1524,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["map(usercredential",{"_index":1499,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["mappeddata",{"_index":1292,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.name",{"_index":1295,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.numepisodes",{"_index":1298,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.numseason",{"_index":1297,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.picture",{"_index":2788,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["mappeddata.rating",{"_index":1300,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.releasedate",{"_index":1299,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.releaseyear",{"_index":2787,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["mappeddata.serieid",{"_index":1301,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.synopsis",{"_index":2786,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["mappeddata.user",{"_index":1302,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mapping",{"_index":541,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapping.interface",{"_index":508,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserRaw.html":{}}}],["mapping.interface.ts",{"_index":1671,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{},"coverage.html":{}}}],["mapping.interface.ts:10",{"_index":1694,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:11",{"_index":1693,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:12",{"_index":1695,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:13",{"_index":1696,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:5",{"_index":1674,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["mapping.interface.ts:6",{"_index":1676,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["mapping.interface.ts:7",{"_index":1673,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:8",{"_index":1675,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:9",{"_index":1672,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.service",{"_index":2911,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["mapping.service.ts",{"_index":1391,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["mapping.service.ts:10",{"_index":1400,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:102",{"_index":2891,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:17",{"_index":1406,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:25",{"_index":1398,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:37",{"_index":1404,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:49",{"_index":1396,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:66",{"_index":2893,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:72",{"_index":2895,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:81",{"_index":2892,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:91",{"_index":2894,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping:iauthmapping",{"_index":3191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapping:ibasemapping",{"_index":673,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["mappingtoken",{"_index":3070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["margin",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["matcardmodule",{"_index":1666,"title":{},"body":{"modules/HomePageModule.html":{}}}],["matching",{"_index":165,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this._items.length",{"_index":707,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["math.ceil(total",{"_index":915,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["math.min",{"_index":710,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["max",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["max_tokens",{"_index":835,"title":{},"body":{"injectables/CohereService.html":{}}}],["mayúscula",{"_index":2339,"title":{},"body":{"components/RegisterPage.html":{}}}],["me():observable",{"_index":518,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["me(response",{"_index":1394,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["me(response:any):user",{"_index":1681,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["measurementid",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":113,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["media.service",{"_index":1268,"title":{},"body":{"interfaces/Data.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{}}}],["media.service.ts",{"_index":521,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["media.service.ts:109",{"_index":2943,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["media.service.ts:18",{"_index":1581,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["media.service.ts:4",{"_index":525,"title":{},"body":{"classes/BaseMediaService.html":{}}}],["media.service.ts:99",{"_index":2942,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["mediaraw",{"_index":1270,"title":{"interfaces/MediaRaw.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["mediaservice",{"_index":2092,"title":{},"body":{"components/ProfilePage.html":{}}}],["mediaservicefactory",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":1628,"title":{"interfaces/Medium.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["medium:data.picture.medium",{"_index":2637,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["medium:string",{"_index":2564,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["menos",{"_index":2332,"title":{},"body":{"components/RegisterPage.html":{}}}],["mensaje",{"_index":2183,"title":{},"body":{"components/ProfilePage.html":{}}}],["menu",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.about",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["menu.home",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.logout",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.profile",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.seasons",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.series",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.title",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap",{"_index":585,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["mergemap(entity",{"_index":947,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["mergemap(q",{"_index":613,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["message",{"_index":1834,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["messagingsenderid",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":1274,"title":{"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/FirebaseMediaService.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"pipes/TogglePasswordPipe.html":{}}}],["metadata)).pipe",{"_index":1607,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{}}}],["meurl",{"_index":2900,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["meurl.replace('/users/me",{"_index":2916,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["meurl:string",{"_index":3190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mi",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware",{"_index":3040,"title":{},"body":{"dependencies.html":{}}}],["mime",{"_index":1640,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["min",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["minúscula",{"_index":2340,"title":{},"body":{"components/RegisterPage.html":{}}}],["miscellaneous",{"_index":3057,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mitad",{"_index":828,"title":{},"body":{"injectables/CohereService.html":{}}}],["mobile",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["mockuplist:any",{"_index":705,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["modal",{"_index":1062,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal'},{'name",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["modal.auto",{"_index":2067,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modal.component",{"_index":1080,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"modules/SharedModule.html":{}}}],["modal.component.html",{"_index":2372,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.scss",{"_index":2371,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts",{"_index":2370,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:104",{"_index":2379,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts:106",{"_index":2582,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:110",{"_index":2584,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:114",{"_index":2586,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:118",{"_index":2587,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:122",{"_index":2575,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:14",{"_index":2385,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:141",{"_index":2576,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:15",{"_index":2387,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:156",{"_index":2573,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:16",{"_index":2386,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts:17",{"_index":2384,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts:18",{"_index":2388,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts:19",{"_index":2579,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:20",{"_index":2378,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:21",{"_index":2572,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:24",{"_index":2377,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:32",{"_index":2571,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:34",{"_index":2376,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:53",{"_index":2382,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:55",{"_index":2392,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:56",{"_index":2574,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:59",{"_index":2394,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:63",{"_index":2396,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:67",{"_index":2398,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:71",{"_index":2400,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:75",{"_index":2402,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:79",{"_index":2381,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:92",{"_index":2383,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:95",{"_index":2578,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.ondiddismiss().then((response",{"_index":1167,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["modal.present",{"_index":1065,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["modal/season",{"_index":1194,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["modal/serie",{"_index":1079,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieModalComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["modalcontroller",{"_index":983,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["modalctrl",{"_index":1101,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["modalctrl:modalcontroller",{"_index":1016,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SeasonModalComponent.html":{}}}],["mode",{"_index":1164,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["mode:'new'|'edit",{"_index":2405,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["mode=='edit",{"_index":2443,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["mode==\\'edit",{"_index":2458,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["model",{"_index":592,"title":{"interfaces/Model.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/Serie.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["modelo",{"_index":666,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["models/auth.model",{"_index":509,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["models/base.model",{"_index":593,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["models/comment.model",{"_index":894,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{}}}],["models/firebase/firebase",{"_index":2512,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["models/paginated.model",{"_index":595,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserRaw.html":{}}}],["models/season.model",{"_index":1265,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/IAuthMapping.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/UserRaw.html":{}}}],["models/serie.model",{"_index":1330,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{}}}],["models/task.model",{"_index":1754,"title":{},"body":{"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/TasksService.html":{}}}],["modeltype",{"_index":3067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modificados",{"_index":2188,"title":{},"body":{"components/ProfilePage.html":{}}}],["modified",{"_index":853,"title":{},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["module",{"_index":166,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":168,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mostrar",{"_index":2182,"title":{},"body":{"components/ProfilePage.html":{}}}],["multi",{"_index":2022,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["myseasonsservice",{"_index":1917,"title":{"injectables/MySeasonsService.html":{}},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{},"coverage.html":{}}}],["myseriesservice",{"_index":1936,"title":{"injectables/MySeriesService.html":{}},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{},"coverage.html":{}}}],["método",{"_index":2838,"title":{},"body":{"injectables/SeriesService.html":{}}}],["métodos",{"_index":1740,"title":{},"body":{"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{}}}],["n\\n",{"_index":841,"title":{},"body":{"injectables/CohereService.html":{}}}],["name",{"_index":127,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"miscellaneous/functions.html":{}}}],["name:d.name",{"_index":1930,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["name:data.name",{"_index":1285,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["name:data.nombre",{"_index":2632,"title":{},"body":{"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["name:response.name",{"_index":2666,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["name:response.user.name",{"_index":2661,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["name:string",{"_index":1614,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["native",{"_index":2065,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["nav",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["necesario",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["necesitamos",{"_index":1412,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["necesites",{"_index":1713,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["netlify",{"_index":3117,"title":{},"body":{"index.html":{}}}],["new",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":690,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["newid():string",{"_index":701,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["next",{"_index":1145,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{},"interfaces/SeasonRaw.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{}}}],["next:(resp",{"_index":2920,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["next:(response",{"_index":2724,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["next:(response:paginated",{"_index":1036,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["ng_value_accessor",{"_index":2020,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["ngondestroy",{"_index":1534,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SplashPage.html":{}}}],["ngx",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"modules/HomePageModule.html":{},"injectables/LanguageService.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"components/SerieModalComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["nombre",{"_index":669,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["none",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"injectables/CohereService.html":{},"components/SerieSelectableComponent.html":{}}}],["nos",{"_index":1414,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["notify",{"_index":2690,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["notify?.complete",{"_index":1049,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["nuestro",{"_index":1219,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["nuevo",{"_index":1218,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["null",{"_index":627,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/UserRaw.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":553,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{}}}],["number(data[key",{"_index":1303,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["number|null",{"_index":1768,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["numepisodes",{"_index":1277,"title":{},"body":{"interfaces/Data.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["numepisodes:d.numepisodes",{"_index":1932,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["numepisodes:data.numepisodes",{"_index":1287,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["numepisodes:number",{"_index":1616,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{}}}],["numericvalueaccessor",{"_index":1269,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"interfaces/UserRaw.html":{}}}],["numseason",{"_index":1276,"title":{},"body":{"interfaces/Data.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["numseason:d.numseason",{"_index":1931,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["numseason:data.numseason",{"_index":1286,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["numseason:string",{"_index":1615,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{}}}],["o",{"_index":1711,"title":{},"body":{"interfaces/IBaseRepository.html":{},"components/LoginPage.html":{},"interfaces/SearchParams.html":{},"index.html":{}}}],["obj",{"_index":2013,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["object",{"_index":1325,"title":{},"body":{"interfaces/Data.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/UserRaw.html":{},"miscellaneous/variables.html":{}}}],["object.entries(filters",{"_index":1364,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["object.keys(data).foreach(key",{"_index":1293,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["object.keys(formgroup.controls).foreach(key",{"_index":2430,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["object.keys(this.registerform.controls).foreach(key",{"_index":2190,"title":{},"body":{"components/ProfilePage.html":{}}}],["observable",{"_index":477,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["observable(observer",{"_index":1501,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["observer.complete",{"_index":1518,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["observer.error(error",{"_index":1520,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["observer.next(this.authmapping.signup(usercredential.user",{"_index":1517,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["obtener",{"_index":1463,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["of(this.auth.currentuser).pipe",{"_index":1523,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["of(this.mapping.getadded(entity",{"_index":721,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(this.mapping.getdeleted(entity",{"_index":730,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(this.mapping.getone(this._items.find(item=>item.id",{"_index":713,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(this.mapping.getupdated(this._items[index",{"_index":725,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(true).pipe(tap(_",{"_index":2933,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["ok",{"_index":1186,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["onaddseason",{"_index":1256,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["onaddserie",{"_index":1174,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["onanimationcreated",{"_index":2869,"title":{},"body":{"components/SplashPage.html":{}}}],["onanimationcreated(animationitem",{"_index":2873,"title":{},"body":{"components/SplashPage.html":{}}}],["onauthstatechanged",{"_index":1454,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["onauthstatechanged(this.auth",{"_index":1460,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["onchangepicture",{"_index":1985,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":1999,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event:event",{"_index":2037,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture",{"_index":1986,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":2002,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event:event",{"_index":2050,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeleteseason(season",{"_index":1258,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["ondeleteserie(serie",{"_index":1176,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["ondestroy",{"_index":1975,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["onforgotpassword",{"_index":1814,"title":{},"body":{"components/LoginPage.html":{}}}],["onimageselected",{"_index":2088,"title":{},"body":{"components/ProfilePage.html":{}}}],["onimageselected(event",{"_index":2099,"title":{},"body":{"components/ProfilePage.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SplashPage.html":{}}}],["oninput",{"_index":1947,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["oninput(event",{"_index":1955,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["onioninfinite(ev",{"_index":1162,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["onioninfinite(ev:infinitescrollcustomevent",{"_index":1073,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["onloadseries",{"_index":2677,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onlogin",{"_index":2256,"title":{},"body":{"components/RegisterPage.html":{}}}],["onlyallowedcharactersdirective",{"_index":161,"title":{"directives/OnlyAllowedCharactersDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["onmoreseries",{"_index":2678,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onmoreseries(ev",{"_index":2695,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onmoreseries(ev:infinitescrollcustomevent",{"_index":2727,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onregister",{"_index":1815,"title":{},"body":{"components/LoginPage.html":{}}}],["onsearch",{"_index":2679,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onsearch(event",{"_index":1136,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["onserieclicked",{"_index":2680,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onserieclicked(popover",{"_index":2699,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onserieclicked(popover:ionpopover",{"_index":2737,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onsnapshot",{"_index":1543,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["onsubmit",{"_index":1816,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["openseasondetail(season",{"_index":1057,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["openseriedetail(serie",{"_index":1066,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{}}}],["optimizada",{"_index":3109,"title":{},"body":{"index.html":{}}}],["option",{"_index":2764,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["optional",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-1.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":2868,"title":{},"body":{"components/SplashPage.html":{}}}],["oraciones",{"_index":819,"title":{},"body":{"injectables/CohereService.html":{}}}],["order",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["orderby",{"_index":582,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["orderby('createdat",{"_index":938,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["otros",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["outline",{"_index":1854,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["overflow",{"_index":2055,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["override",{"_index":1358,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["overview",{"_index":3131,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":2952,"title":{},"body":{"interfaces/Task.html":{}}}],["owner:season",{"_index":2953,"title":{},"body":{"interfaces/Task.html":{}}}],["p",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"injectables/CohereService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["p.id",{"_index":1124,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["package",{"_index":3017,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["page",{"_index":558,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["page'},{'name",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["page*pagesize",{"_index":709,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["page+1)*pagesize",{"_index":711,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["page:number",{"_index":1030,"title":{},"body":{"classes/Country.html":{},"interfaces/Paginated.html":{},"classes/Port.html":{},"components/SerieSelectableComponent.html":{}}}],["page:page",{"_index":1306,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["page_",{"_index":1003,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["pagecount",{"_index":1355,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["pages",{"_index":914,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["pages:number",{"_index":1031,"title":{},"body":{"classes/Country.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Paginated.html":{},"classes/Port.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["pages:pages",{"_index":1308,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["pages:res.pages",{"_index":1927,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["pagesize",{"_index":554,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{}}}],["pagesize)).pipe",{"_index":606,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["pagesize).pipe",{"_index":2824,"title":{},"body":{"injectables/SeriesService.html":{}}}],["pagesize:number",{"_index":676,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"classes/Country.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-3.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/StrapiRepositoryService.html":{}}}],["pagesize:number):observable",{"_index":750,"title":{},"body":{"injectables/BaseService.html":{}}}],["pagesize:number=25",{"_index":751,"title":{},"body":{"injectables/BaseService.html":{}}}],["pagesize:pagesize",{"_index":1307,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["pagina",{"_index":3100,"title":{},"body":{"index.html":{}}}],["paginated",{"_index":594,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["paginatedraw",{"_index":1353,"title":{"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{}},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["pagination",{"_index":1354,"title":{"interfaces/Pagination.html":{}},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["para",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"interfaces/SearchParams.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{}}}],["parameters",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":487,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"components/ProfilePage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/UserRaw.html":{}}}],["password",{"_index":1409,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{}}}],["password)).pipe",{"_index":1498,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["password.pipe.ts",{"_index":2964,"title":{},"body":{"pipes/TogglePasswordPipe.html":{},"coverage.html":{}}}],["password.pipe.ts:7",{"_index":2967,"title":{},"body":{"pipes/TogglePasswordPipe.html":{}}}],["password:payload.password",{"_index":2655,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["password:string",{"_index":2650,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["passwordfieldtype",{"_index":1813,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["passwordfieldtype2",{"_index":2255,"title":{},"body":{"components/RegisterPage.html":{}}}],["passwordsmatchvalidator",{"_index":2286,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordsmatchvalidator(serie",{"_index":3075,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordvalidator",{"_index":2287,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordvalidator(control",{"_index":3078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":201,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Formats.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/Large.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["pathmatch",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern.svg",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["payload",{"_index":1401,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{}}}],["payload.email",{"_index":1410,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["payload.name",{"_index":2657,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["payload.password",{"_index":1411,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["payload.surname",{"_index":2658,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["payload.username",{"_index":2656,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["perfil",{"_index":2152,"title":{},"body":{"components/ProfilePage.html":{},"index.html":{}}}],["permite",{"_index":3084,"title":{},"body":{"index.html":{}}}],["permitir",{"_index":3220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pero",{"_index":797,"title":{},"body":{"injectables/CohereService.html":{}}}],["person.errors.email_invalid",{"_index":2226,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.email_required",{"_index":2225,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.name_min_length",{"_index":2219,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.name_required",{"_index":2218,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.surname_min_length",{"_index":2221,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.surname_required",{"_index":2220,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.username_min_length",{"_index":2224,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.username_required",{"_index":2223,"title":{},"body":{"components/ProfilePage.html":{}}}],["pestaña",{"_index":3099,"title":{},"body":{"index.html":{}}}],["picture",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseSerie.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"interfaces/Serie.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["picture_selectable_value_accessor",{"_index":1976,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":1993,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["picturemodal:modalcontroller",{"_index":2026,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":138,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":757,"title":{"pipes/CapitalizePipe.html":{},"pipes/TogglePasswordPipe.html":{}},"body":{"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"pipes/TogglePasswordPipe.html":{},"coverage.html":{}}}],["pipe(map((resp:strapisignupresponse",{"_index":2931,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["pipe(map((response:strapiuploadresponse",{"_index":1657,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["pipe(map(res",{"_index":1772,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["pipes",{"_index":759,"title":{},"body":{"pipes/CapitalizePipe.html":{},"pipes/TogglePasswordPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":765,"title":{},"body":{"pipes/CapitalizePipe.html":{},"pipes/TogglePasswordPipe.html":{}}}],["placeholder",{"_index":2754,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["platform",{"_index":984,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["player",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{}}}],["pointer",{"_index":2059,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["popover",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["popover.dismiss",{"_index":2740,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["por",{"_index":1417,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"components/SerieSelectableComponent.html":{},"index.html":{}}}],["port",{"_index":974,"title":{"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["ports",{"_index":971,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["portssubscription",{"_index":1004,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["position",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["pregunta",{"_index":3122,"title":{},"body":{"index.html":{}}}],["preloadallmodules",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["premisa",{"_index":822,"title":{},"body":{"injectables/CohereService.html":{}}}],["presentmodalseason",{"_index":1253,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["presentmodalseason(season:season|undefined=undefined",{"_index":1061,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["presentmodalserie",{"_index":1163,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["presentmodalserie(serie:serie|undefined=undefined",{"_index":1069,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["presenttoast",{"_index":1817,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["presenttoast(message",{"_index":1830,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["prev",{"_index":1767,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["previewurl",{"_index":1641,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["primary",{"_index":2185,"title":{},"body":{"components/ProfilePage.html":{}}}],["primeicons",{"_index":3045,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":3046,"title":{},"body":{"dependencies.html":{}}}],["primer",{"_index":3112,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["primera",{"_index":815,"title":{},"body":{"injectables/CohereService.html":{}}}],["principal",{"_index":823,"title":{},"body":{"injectables/CohereService.html":{}}}],["principales",{"_index":3091,"title":{},"body":{"index.html":{}}}],["private",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["procesar",{"_index":1211,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["production",{"_index":3230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{}}}],["profile'},{'name",{"_index":142,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["profile.already_admin",{"_index":2227,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.page",{"_index":2246,"title":{},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":2082,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":2081,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.title",{"_index":2217,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.update",{"_index":2228,"title":{},"body":{"components/ProfilePage.html":{}}}],["profilepage",{"_index":141,"title":{"components/ProfilePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["profilepagemodule",{"_index":2240,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepageroutingmodule",{"_index":2244,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["project",{"_index":3140,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["promise",{"_index":475,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["prompt",{"_index":792,"title":{},"body":{"injectables/CohereService.html":{}}}],["propagate",{"_index":2704,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["propagate:boolean=false",{"_index":2729,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["propagatechange",{"_index":1983,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["properties",{"_index":207,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"properties.html":{}}}],["protected",{"_index":458,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["provide",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":510,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/UserRaw.html":{}}}],["providedin:'root",{"_index":1923,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["providehttpclient",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["providelottieoptions",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{}}}],["provider",{"_index":1642,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["provider_metadata",{"_index":1643,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["providermetadata",{"_index":1644,"title":{"interfaces/ProviderMetadata.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["providers",{"_index":172,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"components/SerieSelectableComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["providers:[picture_selectable_value_accessor",{"_index":2023,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["proxy",{"_index":3039,"title":{},"body":{"dependencies.html":{}}}],["proyecto",{"_index":3111,"title":{},"body":{"index.html":{}}}],["public",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["public_id",{"_index":1645,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["puede",{"_index":806,"title":{},"body":{"injectables/CohereService.html":{},"index.html":{}}}],["pusher",{"_index":3048,"title":{},"body":{"dependencies.html":{}}}],["p}${v",{"_index":1369,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["públicas",{"_index":3236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["q",{"_index":936,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["qu",{"_index":831,"title":{},"body":{"injectables/CohereService.html":{}}}],["que",{"_index":1214,"title":{},"body":{"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"interfaces/IBaseRepository.html":{},"classes/Port-2.html":{},"interfaces/SearchParams.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":577,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["query(this.collectionref",{"_index":612,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["queryconstraint",{"_index":581,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["querylist",{"_index":977,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["queryparams",{"_index":1877,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["querysnapshot",{"_index":1544,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["radius",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["rating",{"_index":1280,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["rating:d.rating",{"_index":1934,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["rating:data.rating",{"_index":1289,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["rating:number",{"_index":1618,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["rc2",{"_index":3051,"title":{},"body":{"dependencies.html":{}}}],["reaction",{"_index":862,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["reactiveformsmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":2713,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["reader",{"_index":1000,"title":{},"body":{"classes/Country.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"dependencies.html":{}}}],["reader.onerror",{"_index":2046,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":2044,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["reader.readasdataurl(file",{"_index":2048,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["readonly",{"_index":1780,"title":{},"body":{"injectables/LanguageService.html":{}}}],["readserietitle(serietitle",{"_index":1070,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["ready",{"_index":463,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["ready$:observable",{"_index":516,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["recuerda",{"_index":804,"title":{},"body":{"injectables/CohereService.html":{}}}],["recurso",{"_index":671,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["red",{"_index":1904,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["redactada",{"_index":813,"title":{},"body":{"injectables/CohereService.html":{}}}],["redactarse",{"_index":803,"title":{},"body":{"injectables/CohereService.html":{}}}],["redirectto",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirigir",{"_index":3222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((p",{"_index":1368,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["ref",{"_index":1584,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["ref(this.storage",{"_index":1599,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["regex",{"_index":1963,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["regexp(`[^${this.allowedcharacters",{"_index":1964,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["register",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{}}}],["register'},{'name",{"_index":144,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["register.page",{"_index":2363,"title":{},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{}}}],["register.page.html",{"_index":2252,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":2251,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerform",{"_index":2085,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["registeronchange",{"_index":1987,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["registeronchange(fn",{"_index":2004,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["registerontouched",{"_index":1988,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["registerontouched(fn",{"_index":2007,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["registerpage",{"_index":143,"title":{"components/RegisterPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["registerpagemodule",{"_index":2357,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpageroutingmodule",{"_index":2361,"title":{"modules/RegisterPageRoutingModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpayload",{"_index":484,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{}}}],["registrar",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["registrarse",{"_index":2320,"title":{},"body":{"components/RegisterPage.html":{}}}],["registro",{"_index":1238,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["regla",{"_index":816,"title":{},"body":{"injectables/CohereService.html":{}}}],["reglas",{"_index":801,"title":{},"body":{"injectables/CohereService.html":{}}}],["regístrate",{"_index":1885,"title":{},"body":{"components/LoginPage.html":{}}}],["relative",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["releasedate",{"_index":1278,"title":{},"body":{"interfaces/Data.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["releasedate:d.releasedate",{"_index":1933,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["releasedate:data.releasedate",{"_index":1288,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["releasedate:date",{"_index":1617,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{}}}],["releaseyear",{"_index":1333,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["releaseyear:d.releaseyear",{"_index":1943,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{}}}],["releaseyear:data.releaseyear",{"_index":1337,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["releaseyear:number",{"_index":1624,"title":{},"body":{"interfaces/FirebaseSerie.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["relevante",{"_index":3096,"title":{},"body":{"index.html":{}}}],["removed",{"_index":854,"title":{},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["removeindex",{"_index":1132,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["replace(/\\b\\w/g",{"_index":767,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["replaceurl",{"_index":2322,"title":{},"body":{"components/RegisterPage.html":{}}}],["replaceurl:true",{"_index":1879,"title":{},"body":{"components/LoginPage.html":{}}}],["repositories/intefaces/base",{"_index":746,"title":{},"body":{"injectables/BaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseService.html":{}}}],["repositories/intefaces/comments",{"_index":964,"title":{},"body":{"injectables/CommentsService.html":{}}}],["repositories/intefaces/seasons",{"_index":2553,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["repositories/intefaces/series",{"_index":2819,"title":{},"body":{"injectables/SeriesService.html":{}}}],["repositories/intefaces/tasks",{"_index":2959,"title":{},"body":{"injectables/TasksService.html":{}}}],["repositories/repository.tokens",{"_index":748,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["repositorio",{"_index":672,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["repositorios",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":528,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["repository.interface",{"_index":588,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ITasksRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["repository.interface.ts",{"_index":1704,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ITasksRepository.html":{},"interfaces/SearchParams.html":{},"coverage.html":{}}}],["repository.interface.ts:10",{"_index":1708,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:11",{"_index":1705,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:12",{"_index":1709,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:13",{"_index":1706,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:5",{"_index":2366,"title":{},"body":{"interfaces/SearchParams.html":{}}}],["repository.interface.ts:6",{"_index":1731,"title":{},"body":{"interfaces/ICommentsRepository.html":{}}}],["repository.interface.ts:9",{"_index":1707,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.service.ts",{"_index":1350,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:27",{"_index":1760,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["repository.service.ts:40",{"_index":2945,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:52",{"_index":2949,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.tokens",{"_index":591,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["repository_mapping_token",{"_index":590,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository_token",{"_index":747,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requestbody",{"_index":790,"title":{},"body":{"injectables/CohereService.html":{}}}],["res",{"_index":679,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["res.data",{"_index":1375,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.data.map((elem:data",{"_index":1378,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.data[0",{"_index":2560,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["res.map((elem:any",{"_index":1774,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["res.meta.pagination.total",{"_index":1374,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.pages",{"_index":1773,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["res[0",{"_index":2559,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["reset",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resource",{"_index":644,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["resource:string",{"_index":668,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["resource_name_token",{"_index":654,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource_type",{"_index":1646,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["resp",{"_index":1859,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["resp.jwt",{"_index":2927,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["response",{"_index":1146,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/StrapiAuthMappingService.html":{}}}],["response.data",{"_index":1056,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["response.data).subscribe",{"_index":1173,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["response.data.foreach((season",{"_index":1239,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["response.data.foreach((serie",{"_index":1147,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["response.data.map(serie",{"_index":1038,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["response.data.sort((a",{"_index":1150,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["response.data].sort",{"_index":1156,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["response.data].sort((a",{"_index":2725,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["response.displayname",{"_index":1420,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.email",{"_index":1421,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.generations[0].text.trim",{"_index":845,"title":{},"body":{"injectables/CohereService.html":{}}}],["response.map(media=>media.id",{"_index":1658,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["response.pages",{"_index":1045,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["response.photourl",{"_index":1424,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.picture",{"_index":2669,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["response.role",{"_index":1168,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["response.uid",{"_index":1419,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.user.username",{"_index":2660,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["response.username",{"_index":2665,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["respuesta",{"_index":811,"title":{},"body":{"injectables/CohereService.html":{}}}],["result",{"_index":905,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.name",{"_index":2519,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.numepisodes",{"_index":2521,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.numseason",{"_index":2520,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.rating",{"_index":2523,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.reaction",{"_index":908,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["result.releasedate",{"_index":2522,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.serieid",{"_index":909,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.text",{"_index":907,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["result.user",{"_index":2524,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.userid",{"_index":910,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["results",{"_index":164,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":1716,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["return",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{},"miscellaneous/variables.html":{}}}],["return_likelihoods",{"_index":842,"title":{},"body":{"injectables/CohereService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":1863,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["returnurl:returnurl",{"_index":1878,"title":{},"body":{"components/LoginPage.html":{}}}],["rgb(58",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0",{"_index":1896,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["rgba(255",{"_index":70,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["right",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["ripple",{"_index":2765,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["role",{"_index":1095,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["root",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/UserRaw.html":{}}}],["root'},{'name",{"_index":130,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["route",{"_index":1822,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["route:activatedroute",{"_index":1843,"title":{},"body":{"components/LoginPage.html":{}}}],["router",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/home",{"_index":3237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":3223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router:router",{"_index":2886,"title":{},"body":{"components/SplashPage.html":{}}}],["routereusestrategy",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":198,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":202,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":197,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":190,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{}}}],["routing.module.ts",{"_index":196,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["row",{"_index":2352,"title":{},"body":{"components/RegisterPage.html":{}}}],["ru",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["ruta",{"_index":2878,"title":{},"body":{"components/SplashPage.html":{}}}],["rutas",{"_index":3235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":506,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":782,"title":{},"body":{"injectables/CohereService.html":{}}}],["s",{"_index":2330,"title":{},"body":{"components/RegisterPage.html":{}}}],["scale(1.05",{"_index":2063,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieViewComponent.html":{}}}],["scale(1.1",{"_index":2354,"title":{},"body":{"components/RegisterPage.html":{}}}],["schemas",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["screenreader",{"_index":998,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["screenreader.speak",{"_index":1071,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["scroll",{"_index":2767,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["se",{"_index":3103,"title":{},"body":{"index.html":{}}}],["sea",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":1363,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiRepositoryService.html":{}}}],["searchbar",{"_index":2753,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["searchparams",{"_index":556,"title":{"interfaces/SearchParams.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["searchterm",{"_index":1093,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["season",{"_index":146,"title":{"interfaces/Season.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/IAuthMapping.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"interfaces/Task.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["season(_season:season",{"_index":2408,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season):seasondata",{"_index":1284,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["season):seasonraw",{"_index":2461,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["season.edit",{"_index":2444,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.name_min_length",{"_index":2447,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.name_required",{"_index":2446,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.numepisodes_invalid",{"_index":2451,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.numepisodes_required",{"_index":2450,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.numseason_min_length",{"_index":2449,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.numseason_required",{"_index":2448,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.rating_invalid",{"_index":2455,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.rating_required",{"_index":2454,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.releasedate_invalid",{"_index":2453,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.releasedate_required",{"_index":2452,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.model",{"_index":2513,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"interfaces/Serie.html":{},"interfaces/Task.html":{}}}],["season.model.ts",{"_index":1613,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"coverage.html":{}}}],["season.name",{"_index":2484,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.name.tolowercase().includes(searchterm",{"_index":1235,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["season.name.tolowercase().includes(this.searchterm",{"_index":1249,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["season.new",{"_index":2445,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.numepisodes",{"_index":2487,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.numseason",{"_index":2486,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.rating",{"_index":2485,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.releasedate",{"_index":2488,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.serie",{"_index":2456,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.serieid",{"_index":2832,"title":{},"body":{"injectables/SeriesService.html":{}}}],["season.submit",{"_index":2457,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.view",{"_index":2483,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["seasonattributes",{"_index":1264,"title":{"interfaces/SeasonAttributes.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seasondata",{"_index":1275,"title":{"interfaces/SeasonData.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seasonmodalcomponent",{"_index":145,"title":{"components/SeasonModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["seasonraw",{"_index":1273,"title":{"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seasonraw):season",{"_index":1327,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["seasons",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{},"modules/SeasonsPageModule.html":{},"interfaces/Serie.html":{},"injectables/SeriesService.html":{},"miscellaneous/variables.html":{}}}],["seasons$:observable",{"_index":1009,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["seasons'},{'name",{"_index":149,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["seasons.map(season",{"_index":2850,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasons.page",{"_index":2546,"title":{},"body":{"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{}}}],["seasons.page.html",{"_index":1196,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["seasons.page.scss",{"_index":1197,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["seasons.service",{"_index":2821,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasons.service.ts",{"_index":1919,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{},"coverage.html":{}}}],["seasons.service.ts:31",{"_index":1920,"title":{},"body":{"injectables/MySeasonsService.html":{}}}],["seasons.service.ts:38",{"_index":1921,"title":{},"body":{"injectables/MySeasonsService.html":{}}}],["seasons_api_url_token",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasons_collection_subscription_token",{"_index":1195,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasons_repository_mapping_token",{"_index":2996,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasons_repository_token",{"_index":2552,"title":{},"body":{"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasons_resource_name_token",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonscollectionsubscriptionfactory",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonsdata.data.filter((season",{"_index":2848,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasonsdata.filter((season",{"_index":2847,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasonslocalstoragemapping",{"_index":2472,"title":{"injectables/SeasonsLocalStorageMapping.html":{}},"body":{"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"coverage.html":{}}}],["seasonsmappingfactory",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonsmappingfirebaseservice",{"_index":2504,"title":{"injectables/SeasonsMappingFirebaseService.html":{}},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"coverage.html":{}}}],["seasonsmappingjsonserver",{"_index":2460,"title":{"injectables/SeasonsMappingJsonServer.html":{}},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{},"coverage.html":{}}}],["seasonsmappingstrapi",{"_index":1283,"title":{"injectables/SeasonsMappingStrapi.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seasonspage",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["seasonspagemodule",{"_index":2540,"title":{"modules/SeasonsPageModule.html":{}},"body":{"modules/SeasonsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["seasonspageroutingmodule",{"_index":2544,"title":{"modules/SeasonsPageRoutingModule.html":{}},"body":{"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["seasonspaginated.data.filter(season",{"_index":2831,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasonsrepositoryfactory",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonsservice",{"_index":327,"title":{"injectables/SeasonsService.html":{}},"body":{"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["seasonssubscription",{"_index":1203,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["seasonssvc",{"_index":1099,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/SeriesService.html":{}}}],["seasonssvc:seasonsservice",{"_index":1014,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["seasonviewcomponent",{"_index":150,"title":{"components/SeasonViewComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["section",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["segun",{"_index":814,"title":{},"body":{"injectables/CohereService.html":{}}}],["segundo",{"_index":3115,"title":{},"body":{"index.html":{}}}],["según",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["selectable",{"_index":1977,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable'},{'name",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["selectable.component",{"_index":2859,"title":{},"body":{"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":1979,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":1978,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":1973,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:107",{"_index":2696,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:111",{"_index":2705,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:121",{"_index":2707,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:126",{"_index":2701,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:130",{"_index":2702,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:134",{"_index":2706,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:138",{"_index":2693,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:140",{"_index":2700,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:145",{"_index":2686,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:151",{"_index":2688,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:20",{"_index":2014,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:21",{"_index":2017,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:22",{"_index":2015,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:23",{"_index":1992,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:24",{"_index":2709,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:25",{"_index":2715,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:26",{"_index":2708,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:27",{"_index":2710,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:28",{"_index":1997,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:30",{"_index":2714,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:32",{"_index":1998,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:34",{"_index":2018,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":2711,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:36",{"_index":2683,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:37",{"_index":2012,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:38",{"_index":2716,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:41",{"_index":2692,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:44",{"_index":2005,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:45",{"_index":2694,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:48",{"_index":2008,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:49",{"_index":2698,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:51",{"_index":2010,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:55",{"_index":1995,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:61",{"_index":2001,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:65",{"_index":2691,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:79",{"_index":2003,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:83",{"_index":2689,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:84",{"_index":1996,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable/picture",{"_index":1972,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/serie",{"_index":2670,"title":{},"body":{"components/SerieSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["selected",{"_index":2758,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectedimage",{"_index":2086,"title":{},"body":{"components/ProfilePage.html":{}}}],["selectedlanguage",{"_index":1793,"title":{},"body":{"injectables/LanguageService.html":{}}}],["selectedseason",{"_index":1027,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["selectedserie",{"_index":1028,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["selectserie",{"_index":2681,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectserie(id",{"_index":2703,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectserie(id:string|undefined",{"_index":2728,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["ser",{"_index":812,"title":{},"body":{"injectables/CohereService.html":{}}}],["serie",{"_index":153,"title":{"interfaces/Serie.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CohereService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-1.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"components/LoginPage.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["serie(_serie:serie",{"_index":2590,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie):seriedata",{"_index":1335,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["serie.edit",{"_index":2617,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.name_min_length",{"_index":2620,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.name_required",{"_index":2619,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.rating_invalid",{"_index":2626,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.rating_required",{"_index":2625,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.releaseyear_invalid",{"_index":2624,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.releaseyear_required",{"_index":2623,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.synopsis_min_length",{"_index":2622,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.synopsis_required",{"_index":2621,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.id",{"_index":2833,"title":{},"body":{"injectables/SeriesService.html":{}}}],["serie.model",{"_index":2782,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["serie.model.ts",{"_index":1622,"title":{},"body":{"interfaces/FirebaseSerie.html":{},"coverage.html":{}}}],["serie.name",{"_index":2751,"title":{},"body":{"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["serie.name.tolowercase().includes(searchterm",{"_index":1142,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["serie.name.tolowercase().includes(this.searchterm",{"_index":1159,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["serie.new",{"_index":2618,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.rating",{"_index":2769,"title":{},"body":{"components/SerieViewComponent.html":{}}}],["serie.releaseyear",{"_index":2771,"title":{},"body":{"components/SerieViewComponent.html":{}}}],["serie.seasons?.sort((a",{"_index":1039,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["serie.submit",{"_index":2627,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.synopsis",{"_index":2770,"title":{},"body":{"components/SerieViewComponent.html":{}}}],["serie.view",{"_index":2768,"title":{},"body":{"components/SerieViewComponent.html":{}}}],["serie:serie",{"_index":2738,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serie_selectable.none",{"_index":2748,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serie_selectable.select_serie",{"_index":2749,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serieattributes",{"_index":1282,"title":{"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seriedata",{"_index":1331,"title":{"interfaces/SerieData.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"coverage.html":{}}}],["serieid",{"_index":863,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["serieid:d.serieid",{"_index":1935,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["serieid:data.serieid",{"_index":1290,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["serieid?:documentreference",{"_index":1619,"title":{},"body":{"interfaces/FirebaseSeason.html":{}}}],["serieid?:string",{"_index":2368,"title":{},"body":{"interfaces/Season.html":{}}}],["seriemodalcomponent",{"_index":152,"title":{"components/SerieModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country-1.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["serieraw",{"_index":1272,"title":{"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["serieraw):serie",{"_index":1348,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["serieref",{"_index":935,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["series",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/FirebaseComment.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"components/SerieSelectableComponent.html":{},"modules/SeriesPageModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["series$:observable",{"_index":1006,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SeasonModalComponent.html":{}}}],["series'},{'name",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["series(series:serie",{"_index":2406,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["series.no_results",{"_index":2752,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["series.page",{"_index":2809,"title":{},"body":{"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{}}}],["series.page.html",{"_index":1086,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["series.page.scss",{"_index":1087,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["series.service.ts",{"_index":1937,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{},"coverage.html":{}}}],["series.service.ts:30",{"_index":1938,"title":{},"body":{"injectables/MySeriesService.html":{}}}],["series.service.ts:37",{"_index":1939,"title":{},"body":{"injectables/MySeriesService.html":{}}}],["series/${date.now()}_${math.random().tostring(36).substring(2",{"_index":1597,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["series/:id/comments",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["series_api_url_token",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["series_collection_subscription_token",{"_index":1081,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["series_repository_mapping_token",{"_index":2997,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["series_repository_token",{"_index":2817,"title":{},"body":{"injectables/SeriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["series_resource_name_token",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seriescollectionsubscriptionfactory",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serieseasons",{"_index":2830,"title":{},"body":{"injectables/SeriesService.html":{}}}],["serieselectablecomponent",{"_index":154,"title":{"components/SerieSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["serieselected",{"_index":2672,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serieselected.name",{"_index":2750,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serieselected:serie",{"_index":2718,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serieslocalstoragemapping",{"_index":2634,"title":{"injectables/SeriesLocalStorageMapping.html":{}},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"coverage.html":{}}}],["seriesmappingfactory",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seriesmappingfirebaseservice",{"_index":2777,"title":{"injectables/SeriesMappingFirebaseService.html":{}},"body":{"injectables/SeriesMappingFirebaseService.html":{},"coverage.html":{}}}],["seriesmappingjsonserver",{"_index":2629,"title":{"injectables/SeriesMappingJsonServer.html":{}},"body":{"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{},"coverage.html":{}}}],["seriesmappingstrapi",{"_index":1334,"title":{"injectables/SeriesMappingStrapi.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"coverage.html":{}}}],["seriespage",{"_index":155,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country-1.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["seriespagemodule",{"_index":2803,"title":{"modules/SeriesPageModule.html":{}},"body":{"modules/SeriesPageModule.html":{},"modules.html":{},"overview.html":{}}}],["seriespageroutingmodule",{"_index":2807,"title":{"modules/SeriesPageRoutingModule.html":{}},"body":{"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["seriespaginated",{"_index":2836,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seriespaginated.data.map(serie",{"_index":2827,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seriesrepositoryfactory",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seriesservice",{"_index":344,"title":{"injectables/SeriesService.html":{}},"body":{"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["seriessubscription",{"_index":1104,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["seriessvc",{"_index":2673,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["seriessvc:seriesservice",{"_index":2720,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["seriesvc",{"_index":1100,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["seriesvc:seriesservice",{"_index":1015,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["serieswithseasons",{"_index":2826,"title":{},"body":{"injectables/SeriesService.html":{}}}],["serieswithsortedseasons",{"_index":1037,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["serietitle",{"_index":1072,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["serieviewcomponent",{"_index":157,"title":{"components/SerieViewComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["server",{"_index":1759,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server.service.ts",{"_index":2459,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{},"coverage.html":{}}}],["server.service.ts:18",{"_index":2795,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:21",{"_index":2531,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:24",{"_index":2793,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:29",{"_index":2792,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:31",{"_index":2532,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:38",{"_index":2790,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:41",{"_index":2794,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:44",{"_index":2791,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:52",{"_index":2529,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:57",{"_index":2528,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:68",{"_index":2526,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:71",{"_index":2530,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:74",{"_index":2527,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["service.interface",{"_index":745,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CommentsService.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["service.interface.ts",{"_index":1719,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"coverage.html":{}}}],["service.interface.ts:10",{"_index":1725,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:11",{"_index":1720,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:12",{"_index":1726,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:13",{"_index":1721,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:6",{"_index":1733,"title":{},"body":{"interfaces/ICommentsService.html":{}}}],["service.interface.ts:7",{"_index":1722,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:8",{"_index":1723,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/ISeasonsService.html":{}}}],["service.interface.ts:9",{"_index":1724,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.service",{"_index":960,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["service.service.ts",{"_index":732,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{}}}],["service.service.ts:13",{"_index":734,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:18",{"_index":737,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:19",{"_index":738,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:20",{"_index":739,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:24",{"_index":741,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:28",{"_index":735,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:32",{"_index":742,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:36",{"_index":736,"title":{},"body":{"injectables/BaseService.html":{}}}],["services/impl/base",{"_index":655,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["services/impl/strapi",{"_index":1267,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["services/interfaces/authentication.interface",{"_index":659,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["services/interfaces/seasons",{"_index":2551,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["services/interfaces/series",{"_index":2818,"title":{},"body":{"injectables/SeriesService.html":{}}}],["services/interfaces/strapi",{"_index":657,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["servicio",{"_index":1574,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["servicios",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["sesión",{"_index":1861,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["set",{"_index":1097,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["setadd",{"_index":874,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["setadd(data",{"_index":888,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["setadd(data:t):any",{"_index":1702,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["setadmin",{"_index":2257,"title":{},"body":{"components/RegisterPage.html":{}}}],["setadmin(value",{"_index":2267,"title":{},"body":{"components/RegisterPage.html":{}}}],["setdisabledstate",{"_index":1989,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2009,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2032,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["setdoc",{"_index":1455,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["setdoc(userref",{"_index":1510,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["setseason(_season",{"_index":2390,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["setserie(_serie",{"_index":2580,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["setseries(series",{"_index":2389,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["setupdate",{"_index":875,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["setupdate(data",{"_index":891,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["setupdate(data:any):any",{"_index":1703,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["shadow",{"_index":81,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["shared/shared.module",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":306,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfilePageModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["showerrortoast",{"_index":2568,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["showerrortoast(message",{"_index":2577,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["showpassword",{"_index":2968,"title":{},"body":{"pipes/TogglePasswordPipe.html":{}}}],["si",{"_index":1223,"title":{},"body":{"classes/Country-2.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"index.html":{}}}],["side",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["signin",{"_index":466,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signin(authpayload",{"_index":478,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signin(authpayload:any):observable",{"_index":1688,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signin(response",{"_index":1397,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signin(response:any):user",{"_index":1679,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signin:string",{"_index":3188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signinpayload",{"_index":1392,"title":{"interfaces/SignInPayload.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["signinpayload(payload",{"_index":1399,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signinpayload(payload:signinpayload):any",{"_index":1677,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signinpayload):strapisignin",{"_index":2653,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signinurl",{"_index":2901,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["signinwithemailandpassword",{"_index":1451,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signout",{"_index":467,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signout():observable",{"_index":1690,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signup",{"_index":468,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["signup(registerpayload",{"_index":482,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{}}}],["signup(registerpayload:any):observable",{"_index":1689,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signup(response",{"_index":1403,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signup(response:any):user",{"_index":1680,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signup(signuppayload",{"_index":1434,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signup:string",{"_index":3189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signupdata",{"_index":2308,"title":{},"body":{"components/RegisterPage.html":{}}}],["signuppayload",{"_index":1393,"title":{"interfaces/SignUpPayload.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["signuppayload(payload",{"_index":1405,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signuppayload(payload:signuppayload):any",{"_index":1678,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signuppayload.admin",{"_index":1515,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signuppayload.email",{"_index":1503,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signuppayload.name",{"_index":1511,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signuppayload.password",{"_index":1504,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signuppayload.picture",{"_index":1514,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signuppayload.surname",{"_index":1512,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signuppayload.username",{"_index":1513,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signupurl",{"_index":2899,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["sinopsis",{"_index":795,"title":{},"body":{"injectables/CohereService.html":{},"components/SerieModalComponent.html":{}}}],["size",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["small",{"_index":1629,"title":{"interfaces/Small.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["small:data.picture.small",{"_index":2638,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["small:string",{"_index":2565,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["snapshot",{"_index":1551,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["snapshot.docchanges().foreach(change",{"_index":1552,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["snapshot.docs.map(doc",{"_index":616,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["snapshot.size",{"_index":620,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["sobrescribir",{"_index":2837,"title":{},"body":{"injectables/SeriesService.html":{}}}],["solid",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["solo",{"_index":1210,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["sort((a",{"_index":1246,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["sortedseasons",{"_index":1241,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["sortedseries",{"_index":1149,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}}}],["space",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["spinner",{"_index":2149,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["splash",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["splash.page",{"_index":2890,"title":{},"body":{"modules/SplashPageRoutingModule.html":{}}}],["splash.page.html",{"_index":2867,"title":{},"body":{"components/SplashPage.html":{}}}],["splash.page.scss",{"_index":2866,"title":{},"body":{"components/SplashPage.html":{}}}],["splashpage",{"_index":158,"title":{"components/SplashPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"coverage.html":{}}}],["splashpageroutingmodule",{"_index":2888,"title":{"modules/SplashPageRoutingModule.html":{}},"body":{"modules/SplashPageRoutingModule.html":{},"modules.html":{}}}],["src/.../app.module.ts",{"_index":3060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.guard.ts",{"_index":3149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../blob.ts",{"_index":3061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":3150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logged.guard.ts",{"_index":3152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../picture",{"_index":3153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../repository.factory.ts",{"_index":3059,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../repository.tokens.ts",{"_index":3148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../strapi",{"_index":3146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validators.ts",{"_index":3062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":2977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/logged.guard.ts",{"_index":2978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/models/auth.model",{"_index":2116,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["src/app/core/models/auth.model.ts",{"_index":2862,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/models/base.model.ts",{"_index":1914,"title":{},"body":{"interfaces/Model.html":{},"coverage.html":{}}}],["src/app/core/models/comment.model.ts",{"_index":859,"title":{},"body":{"interfaces/Comment.html":{},"coverage.html":{}}}],["src/app/core/models/firebase/firebase",{"_index":1612,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"coverage.html":{}}}],["src/app/core/models/paginated.model",{"_index":988,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["src/app/core/models/paginated.model.ts",{"_index":1969,"title":{},"body":{"interfaces/Paginated.html":{},"coverage.html":{}}}],["src/app/core/models/season.model",{"_index":989,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{}}}],["src/app/core/models/season.model.ts",{"_index":2367,"title":{},"body":{"interfaces/Season.html":{},"coverage.html":{}}}],["src/app/core/models/serie.model",{"_index":987,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["src/app/core/models/serie.model.ts",{"_index":2561,"title":{},"body":{"interfaces/Serie.html":{},"coverage.html":{}}}],["src/app/core/models/task.model.ts",{"_index":2951,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/base",{"_index":527,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/comments",{"_index":868,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/json",{"_index":1758,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/seasons",{"_index":1261,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/series",{"_index":1329,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/strapi",{"_index":1349,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/base",{"_index":1692,"title":{},"body":{"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/comments",{"_index":1730,"title":{},"body":{"interfaces/ICommentsRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/seasons",{"_index":1735,"title":{},"body":{"interfaces/ISeasonsRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/series",{"_index":1744,"title":{},"body":{"interfaces/ISeriesRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/tasks",{"_index":1752,"title":{},"body":{"interfaces/ITasksRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/repository.factory.ts",{"_index":2988,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/repositories/repository.tokens",{"_index":1082,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["src/app/core/repositories/repository.tokens.ts",{"_index":2993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/impl/ai.service",{"_index":2588,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["src/app/core/services/impl/ai.service.ts",{"_index":771,"title":{},"body":{"injectables/CohereService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/ai.service.ts:11",{"_index":779,"title":{},"body":{"injectables/CohereService.html":{}}}],["src/app/core/services/impl/ai.service.ts:12",{"_index":773,"title":{},"body":{"injectables/CohereService.html":{}}}],["src/app/core/services/impl/ai.service.ts:16",{"_index":776,"title":{},"body":{"injectables/CohereService.html":{}}}],["src/app/core/services/impl/base",{"_index":456,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"coverage.html":{}}}],["src/app/core/services/impl/comments.service.ts",{"_index":949,"title":{},"body":{"injectables/CommentsService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/comments.service.ts:13",{"_index":951,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/core/services/impl/comments.service.ts:22",{"_index":952,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/core/services/impl/firebase",{"_index":1085,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["src/app/core/services/impl/seasons.service",{"_index":991,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["src/app/core/services/impl/seasons.service.ts",{"_index":2548,"title":{},"body":{"injectables/SeasonsService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/seasons.service.ts:12",{"_index":2549,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["src/app/core/services/impl/seasons.service.ts:19",{"_index":2550,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["src/app/core/services/impl/series.service",{"_index":990,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["src/app/core/services/impl/series.service.ts",{"_index":2811,"title":{},"body":{"injectables/SeriesService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/series.service.ts:15",{"_index":2813,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/app/core/services/impl/series.service.ts:23",{"_index":2816,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/app/core/services/impl/strapi",{"_index":1626,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/impl/tasks.service.ts",{"_index":2956,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/tasks.service.ts:12",{"_index":2957,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/core/services/interfaces/auth",{"_index":1670,"title":{},"body":{"interfaces/IAuthMapping.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts",{"_index":1682,"title":{},"body":{"interfaces/IAuthentication.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:4",{"_index":1685,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:5",{"_index":1687,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:6",{"_index":1686,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:7",{"_index":1684,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:8",{"_index":1683,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/base",{"_index":1718,"title":{},"body":{"interfaces/IBaseService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/collection",{"_index":849,"title":{},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/comments",{"_index":1732,"title":{},"body":{"interfaces/ICommentsService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/seasons",{"_index":1737,"title":{},"body":{"interfaces/ISeasonsService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/series",{"_index":1746,"title":{},"body":{"interfaces/ISeriesService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/strapi",{"_index":1747,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/tasks",{"_index":1756,"title":{},"body":{"interfaces/ITasksService.html":{},"coverage.html":{}}}],["src/app/core/services/language.service",{"_index":2589,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["src/app/core/services/language.service.ts",{"_index":1778,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/services/language.service.ts:22",{"_index":1787,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:26",{"_index":1788,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:30",{"_index":1789,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:34",{"_index":1791,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:8",{"_index":1794,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:9",{"_index":1786,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/my",{"_index":1918,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"coverage.html":{}}}],["src/app/core/utils/blob.ts",{"_index":3004,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/utils/validators",{"_index":2288,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/core/utils/validators.ts",{"_index":3006,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/directives/only",{"_index":1944,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"modules/ProfilePageModule.html":{},"coverage.html":{}}}],["src/app/pages/about/about",{"_index":195,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":26,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:8",{"_index":25,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/comments/comments.page.ts",{"_index":3007,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/home/home",{"_index":1669,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1664,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":970,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:16",{"_index":972,"title":{},"body":{"classes/Country.html":{}}}],["src/app/pages/home/home.page.ts:17",{"_index":973,"title":{},"body":{"classes/Country.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":975,"title":{},"body":{"classes/Country.html":{}}}],["src/app/pages/home/home.page.ts:21",{"_index":2072,"title":{},"body":{"classes/Port.html":{}}}],["src/app/pages/home/home.page.ts:22",{"_index":2073,"title":{},"body":{"classes/Port.html":{}}}],["src/app/pages/home/home.page.ts:23",{"_index":2071,"title":{},"body":{"classes/Port.html":{}}}],["src/app/pages/login/login",{"_index":1913,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/pages/login/login.module.ts",{"_index":1911,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":1809,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/login/login.page.ts:13",{"_index":1837,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:14",{"_index":1825,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:30",{"_index":1833,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:46",{"_index":1835,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:50",{"_index":1829,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:71",{"_index":1828,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:77",{"_index":1827,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:81",{"_index":1839,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:85",{"_index":1841,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/profile/profile",{"_index":2249,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/pages/profile/profile.module.ts",{"_index":2245,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/pages/profile/profile.page.ts",{"_index":2080,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{}}}],["src/app/pages/profile/profile.page.ts:111",{"_index":2101,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:16",{"_index":2106,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:17",{"_index":2108,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:18",{"_index":2105,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:19",{"_index":2107,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:20",{"_index":2104,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:208",{"_index":2110,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:212",{"_index":2112,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:216",{"_index":2114,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:22",{"_index":2102,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:220",{"_index":2115,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:31",{"_index":2094,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:51",{"_index":2100,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:69",{"_index":2096,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:76",{"_index":2098,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/register/register",{"_index":2364,"title":{},"body":{"modules/RegisterPageRoutingModule.html":{}}}],["src/app/pages/register/register.module.ts",{"_index":2362,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/pages/register/register.page.ts",{"_index":2250,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/pages/register/register.page.ts:137",{"_index":2264,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:146",{"_index":2262,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:153",{"_index":2277,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:157",{"_index":2278,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:161",{"_index":2279,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:165",{"_index":2280,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:169",{"_index":2281,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:173",{"_index":2283,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:177",{"_index":2285,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:18",{"_index":2276,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:19",{"_index":2274,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:20",{"_index":2275,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:21",{"_index":2273,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:22",{"_index":2261,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:47",{"_index":2272,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:50",{"_index":2263,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:54",{"_index":2268,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:66",{"_index":2270,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:71",{"_index":2271,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:76",{"_index":2269,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:81",{"_index":2266,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:97",{"_index":2265,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/seasons/seasons",{"_index":2547,"title":{},"body":{"modules/SeasonsPageRoutingModule.html":{}}}],["src/app/pages/seasons/seasons.module.ts",{"_index":2545,"title":{},"body":{"modules/SeasonsPageModule.html":{}}}],["src/app/pages/seasons/seasons.page.ts",{"_index":1190,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["src/app/pages/seasons/seasons.page.ts:31",{"_index":1191,"title":{},"body":{"classes/Country-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:32",{"_index":1192,"title":{},"body":{"classes/Country-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:33",{"_index":1193,"title":{},"body":{"classes/Country-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:36",{"_index":2078,"title":{},"body":{"classes/Port-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:37",{"_index":2079,"title":{},"body":{"classes/Port-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:38",{"_index":2077,"title":{},"body":{"classes/Port-2.html":{}}}],["src/app/pages/series/series",{"_index":2810,"title":{},"body":{"modules/SeriesPageRoutingModule.html":{}}}],["src/app/pages/series/series.module.ts",{"_index":2808,"title":{},"body":{"modules/SeriesPageModule.html":{}}}],["src/app/pages/series/series.page.ts",{"_index":1075,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"coverage.html":{}}}],["src/app/pages/series/series.page.ts:31",{"_index":1076,"title":{},"body":{"classes/Country-1.html":{}}}],["src/app/pages/series/series.page.ts:32",{"_index":1077,"title":{},"body":{"classes/Country-1.html":{}}}],["src/app/pages/series/series.page.ts:33",{"_index":1078,"title":{},"body":{"classes/Country-1.html":{}}}],["src/app/pages/series/series.page.ts:36",{"_index":2075,"title":{},"body":{"classes/Port-1.html":{}}}],["src/app/pages/series/series.page.ts:37",{"_index":2076,"title":{},"body":{"classes/Port-1.html":{}}}],["src/app/pages/series/series.page.ts:38",{"_index":2074,"title":{},"body":{"classes/Port-1.html":{}}}],["src/app/pages/splash/splash",{"_index":2889,"title":{},"body":{"modules/SplashPageRoutingModule.html":{}}}],["src/app/pages/splash/splash.page.ts",{"_index":2863,"title":{},"body":{"components/SplashPage.html":{},"coverage.html":{}}}],["src/app/pages/splash/splash.page.ts:19",{"_index":2881,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:23",{"_index":2875,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:25",{"_index":2871,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:31",{"_index":2872,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pipes/capitalize.pipe.ts",{"_index":760,"title":{},"body":{"pipes/CapitalizePipe.html":{},"coverage.html":{}}}],["src/app/pipes/capitalize.pipe.ts:8",{"_index":764,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["src/app/pipes/toggle",{"_index":2963,"title":{},"body":{"pipes/TogglePasswordPipe.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":1971,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/season",{"_index":993,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/serie",{"_index":996,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":2247,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2857,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"injectables/CohereService.html":{}}}],["src/environments/environment.prod.ts",{"_index":3013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":2864,"title":{},"body":{"components/SplashPage.html":{}}}],["standalone:true",{"_index":2883,"title":{},"body":{"components/SplashPage.html":{}}}],["start",{"_index":67,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["startafter",{"_index":580,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["startat",{"_index":579,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["started",{"_index":3080,"title":{"index.html":{}},"body":{}}],["state",{"_index":3205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.url",{"_index":3224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":2971,"title":{},"body":{"coverage.html":{}}}],["sticky",{"_index":2761,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["stop_sequences",{"_index":840,"title":{},"body":{"injectables/CohereService.html":{}}}],["storage",{"_index":1580,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts",{"_index":688,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"coverage.html":{}}}],["storage.service.ts:16",{"_index":699,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:17",{"_index":697,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:21",{"_index":2502,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:24",{"_index":2503,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:25",{"_index":692,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:27",{"_index":2500,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:30",{"_index":2776,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:32",{"_index":2499,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:33",{"_index":2774,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:38",{"_index":2773,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:43",{"_index":2497,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:46",{"_index":2501,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:49",{"_index":2498,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:54",{"_index":695,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:57",{"_index":2775,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:60",{"_index":2772,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:68",{"_index":696,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:72",{"_index":693,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:80",{"_index":698,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:90",{"_index":694,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storagebucket",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["storageref",{"_index":1598,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["storagereference",{"_index":1587,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["storedlang",{"_index":1801,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storelanguage",{"_index":1784,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storelanguage(lang",{"_index":1790,"title":{},"body":{"injectables/LanguageService.html":{}}}],["str",{"_index":2097,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["strapi",{"_index":2910,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["strapi.service.ts",{"_index":1262,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["strapi.service.ts:115",{"_index":2533,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:118",{"_index":2537,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:121",{"_index":2534,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:35",{"_index":2801,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:45",{"_index":2802,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:53",{"_index":2538,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:63",{"_index":2799,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:66",{"_index":2539,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:68",{"_index":2798,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:82",{"_index":2796,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:85",{"_index":2800,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:88",{"_index":2797,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:93",{"_index":2536,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:98",{"_index":2535,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi_auth_token",{"_index":1351,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strapiauthenticationservice",{"_index":2896,"title":{"injectables/StrapiAuthenticationService.html":{}},"body":{"injectables/StrapiAuthenticationService.html":{},"coverage.html":{}}}],["strapiauthenticationservice(signin",{"_index":3194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strapiauthmappingservice",{"_index":2652,"title":{"injectables/StrapiAuthMappingService.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapimedia",{"_index":1266,"title":{"interfaces/StrapiMedia.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["strapimediadata",{"_index":1633,"title":{"interfaces/StrapiMediaData.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapimediaservice",{"_index":1647,"title":{"classes/StrapiMediaService.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapimediaservice(upload",{"_index":3201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strapimeresponse",{"_index":2641,"title":{"interfaces/StrapiMeResponse.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapirepositoryservice",{"_index":1356,"title":{"injectables/StrapiRepositoryService.html":{}},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["strapisignin",{"_index":2648,"title":{"interfaces/StrapiSignIn.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapisigninresponse",{"_index":2644,"title":{"interfaces/StrapiSignInResponse.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapisignup",{"_index":2651,"title":{"interfaces/StrapiSignUp.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapisignupresponse",{"_index":2647,"title":{"interfaces/StrapiSignUpResponse.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapiuploadresponse",{"_index":1632,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapiuser",{"_index":2646,"title":{"interfaces/StrapiUser.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["string",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["su",{"_index":2331,"title":{},"body":{"components/RegisterPage.html":{},"index.html":{}}}],["su/s",{"_index":2335,"title":{},"body":{"components/RegisterPage.html":{}}}],["subject",{"_index":1546,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.asobservable",{"_index":1562,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.complete",{"_index":1566,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.error(error",{"_index":1560,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.next(changedata",{"_index":1557,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["submit",{"_index":2235,"title":{},"body":{"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["subscribe",{"_index":1535,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["subscribe('seasons",{"_index":1207,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["subscribe('series",{"_index":1113,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["subscribe((change",{"_index":1114,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["subscribe(collectionname",{"_index":856,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["subscription",{"_index":986,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["subscription.interface",{"_index":1083,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["subscription.interface.ts",{"_index":850,"title":{},"body":{"interfaces/CollectionChange.html":{},"interfaces/ICollectionSubscription.html":{},"coverage.html":{}}}],["subscription.interface.ts:11",{"_index":1728,"title":{},"body":{"interfaces/ICollectionSubscription.html":{}}}],["subscription.interface.ts:12",{"_index":1729,"title":{},"body":{"interfaces/ICollectionSubscription.html":{}}}],["subscription.service.ts",{"_index":1531,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{}}}],["subscription.service.ts:21",{"_index":1541,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:22",{"_index":1542,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:23",{"_index":1537,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:33",{"_index":1539,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:70",{"_index":1540,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:84",{"_index":1538,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscriptions",{"_index":1532,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subtitle",{"_index":2231,"title":{},"body":{"components/ProfilePage.html":{}}}],["success",{"_index":1831,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["sugerencia",{"_index":3123,"title":{},"body":{"index.html":{}}}],["super",{"_index":1589,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["super(authmapping",{"_index":1457,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["super(http",{"_index":1359,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["super(repository",{"_index":966,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["support",{"_index":3126,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":1422,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["surname:response.surname",{"_index":2667,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["surname:response.user.surname",{"_index":2662,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["sus",{"_index":3087,"title":{},"body":{"index.html":{}}}],["suscripciones",{"_index":1571,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["suscripción",{"_index":1559,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["svg",{"_index":3127,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1119,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"miscellaneous/variables.html":{}}}],["switch(backend",{"_index":3192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch(key",{"_index":1294,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["switchmap",{"_index":1448,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["switchmap((seasonsdata",{"_index":2845,"title":{},"body":{"injectables/SeriesService.html":{}}}],["switchmap((seriespaginated",{"_index":2825,"title":{},"body":{"injectables/SeriesService.html":{}}}],["switchmap(snapshot",{"_index":1608,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["switchmap(user",{"_index":1593,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["synopsis",{"_index":1332,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["synopsis:d.synopsis",{"_index":1942,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{}}}],["synopsis:data.synopsis",{"_index":1336,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["synopsis:string",{"_index":1623,"title":{},"body":{"interfaces/FirebaseSerie.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["t",{"_index":546,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieRaw.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["table",{"_index":3016,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3015,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2909,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["take(1",{"_index":3212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["también",{"_index":2840,"title":{},"body":{"injectables/SeriesService.html":{}}}],["tap",{"_index":1446,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["task",{"_index":1753,"title":{"interfaces/Task.html":{}},"body":{"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["tasks_api_url_token",{"_index":2998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasks_repository_token",{"_index":2958,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksservice",{"_index":2955,"title":{"injectables/TasksService.html":{}},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["televisión",{"_index":799,"title":{},"body":{"injectables/CohereService.html":{}}}],["temperature",{"_index":837,"title":{},"body":{"injectables/CohereService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["temporadas",{"_index":2841,"title":{},"body":{"injectables/SeriesService.html":{},"index.html":{}}}],["tenemos",{"_index":1216,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["tener",{"_index":817,"title":{},"body":{"injectables/CohereService.html":{},"components/RegisterPage.html":{}}}],["terminar",{"_index":827,"title":{},"body":{"injectables/CohereService.html":{}}}],["text",{"_index":93,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/FirebaseComment.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{},"pipes/TogglePasswordPipe.html":{}}}],["text.input",{"_index":1903,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["textarea",{"_index":2628,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["textencoder().encode(str",{"_index":2137,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["then((user",{"_index":1106,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["then(async",{"_index":1505,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._authenticated.asobservable",{"_index":497,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._authenticated.next(false",{"_index":1481,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._authenticated.next(true",{"_index":1480,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._filteredseasons.asobservable",{"_index":1201,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next([...sortedseasons",{"_index":1243,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next(filtered",{"_index":1236,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next(seasons",{"_index":1205,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next(this._seasons.value",{"_index":1233,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next(updatedseasons",{"_index":1250,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseries.asobservable",{"_index":1092,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._filteredseries.next([...sortedseries",{"_index":1152,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._filteredseries.next(filtered",{"_index":1143,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._filteredseries.next(series",{"_index":1111,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this._filteredseries.next(this._series.value",{"_index":1139,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._filteredseries.next(updatedseries",{"_index":1160,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._items.findindex(item=>item.id",{"_index":722,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.length",{"_index":712,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.push(entity",{"_index":718,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.slice",{"_index":708,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.splice(index",{"_index":729,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items[index]=entity",{"_index":724,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._picture.asobservable",{"_index":2016,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":2027,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":2030,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":2035,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._ready.asobservable",{"_index":499,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._ready.next(true",{"_index":1483,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._seasons.asobservable",{"_index":1010,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["this._seasons.next([...response.data",{"_index":1053,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this._seasons.next([...sortedseasons",{"_index":1242,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.next([...this._seasons.value",{"_index":1055,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this._seasons.next(currentseasons",{"_index":1232,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.next(updatedseasons",{"_index":1247,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.subscribe((seasons",{"_index":1204,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.value",{"_index":1209,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.value.filter((season",{"_index":1234,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._series.asobservable",{"_index":1007,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["this._series.next([...serieswithsortedseasons",{"_index":1043,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this._series.next([...sortedseries",{"_index":1151,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._series.next([...this._series.value",{"_index":1048,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this._series.next(currentseries",{"_index":1135,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this._series.next(series",{"_index":2407,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this._series.next(updatedseries",{"_index":1157,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._series.subscribe((series",{"_index":1110,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this._series.value",{"_index":1116,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._series.value.filter((serie",{"_index":1141,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this._series.value.filter(serie",{"_index":2722,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this._token",{"_index":1461,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._user.asobservable",{"_index":501,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next",{"_index":1473,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._user.next(this.authmapping.me(resp",{"_index":2921,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(this.authmapping.signin(resp",{"_index":2928,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(undefined",{"_index":1482,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this.adminkeyfieldtype",{"_index":2299,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.adminkeyhash",{"_index":2306,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.adminkeyhashed",{"_index":2173,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.alertctrl.create",{"_index":1178,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.apikey",{"_index":788,"title":{},"body":{"injectables/CohereService.html":{}}}],["this.apiurl",{"_index":674,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this.apiurl}/${this.resource",{"_index":1381,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}/${id",{"_index":1385,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}/?_page=${page}&_per_page=${pagesize}&${search",{"_index":1771,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["this.apiurl}/${this.resource}?&${search",{"_index":1376,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}?pagination[page]=${page}&pagination[pagesize]=${pagesize}&${search}&populate=user,serie,picture",{"_index":1372,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/users/${userid",{"_index":2936,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.auth",{"_index":1458,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.auth.gettoken",{"_index":1362,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["this.authmapping.me",{"_index":1529,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.me(response",{"_index":2938,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signin(resp",{"_index":2929,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signin(usercredential.user",{"_index":1500,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signinpayload(authpayload",{"_index":1496,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signinpayload(authpayload)).pipe(map((resp:strapisigninresponse",{"_index":2924,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signup(resp",{"_index":2932,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authservice.getcurrentuser",{"_index":2156,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.authsvc",{"_index":1105,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.authsvc.signin(this.loginform.value).subscribe",{"_index":1858,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authsvc.signout().subscribe",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authsvc.signup(signupdata).subscribe",{"_index":2315,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.changelanguage(storedlang",{"_index":1803,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changepicture",{"_index":2051,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":2045,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.cohereservice.generatesynopsis(title",{"_index":2606,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.collectionname",{"_index":604,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.collectionref",{"_index":602,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.commentsrepository",{"_index":967,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this.commentsrepository.getcommentsbyserieid(serieid",{"_index":968,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this.currentlang",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["this.db",{"_index":600,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["this.defaultlang",{"_index":1807,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.disabled",{"_index":2736,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.el.nativeelement",{"_index":1961,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["this.fb.group",{"_index":1846,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formbuilder.group",{"_index":2126,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.formgroup",{"_index":2422,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['name",{"_index":2423,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['name'].setvalue(_season.name",{"_index":2412,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['name'].setvalue(_serie.name",{"_index":2593,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['numepisodes",{"_index":2425,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['numepisodes'].setvalue(_season.numepisodes",{"_index":2414,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['numseason",{"_index":2424,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['numseason'].setvalue(_season.numseason",{"_index":2413,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['picture'].setvalue(_serie.picture.url",{"_index":2598,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['rating",{"_index":2427,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['rating'].setvalue(_season.rating",{"_index":2416,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['rating'].setvalue(_serie.rating",{"_index":2596,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['releasedate",{"_index":2426,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['releasedate'].setvalue(_season.releasedate",{"_index":2415,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['releaseyear",{"_index":2614,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['releaseyear'].setvalue(_serie.releaseyear",{"_index":2595,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['serieid",{"_index":2428,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['serieid'].setvalue(_season.serieid",{"_index":2417,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['synopsis",{"_index":2613,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['synopsis'].setvalue(_serie.synopsis",{"_index":2594,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.get('name')?.value",{"_index":2599,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.get('picture')?.value",{"_index":2615,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.get('synopsis')?.markasdirty",{"_index":2609,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.get('synopsis')?.setvalue(synopsis",{"_index":2608,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.valid",{"_index":2436,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formgroup.value",{"_index":2439,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.getall(page",{"_index":2823,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.getdirtyvalues(this.formgroup",{"_index":2440,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.getheaders",{"_index":1656,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.getheaders()).pipe(map((res:paginatedraw",{"_index":1377,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.getheaders()).pipe(map(res",{"_index":1373,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.getheaders()).pipe(map(res=>this.mapping.getdeleted(res",{"_index":1389,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.getone(d",{"_index":1310,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["this.getone(data",{"_index":918,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["this.getone(data.data",{"_index":1328,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["this.getone(item",{"_index":917,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["this.getstoredlanguage",{"_index":1802,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.hashstring(enteredkey",{"_index":2172,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.hasvalue",{"_index":2029,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.http.delete(`${this.apiurl}/${this.resource}/${id",{"_index":1388,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.delete(`${this.apiurl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getdeleted(res",{"_index":685,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get",{"_index":1371,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.get(`${this.apiurl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getone(res",{"_index":680,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get(`${this.apiurl}/${this.resource}`).pipe(map(res=>this.mapping.getpaginated(page",{"_index":678,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get>(`${this.apiurl}/?_page=${page}&_per_page=${pagesize}`).pipe(map(res",{"_index":1926,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["this.http.patch",{"_index":1776,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["this.http.post",{"_index":1380,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.post(`${this.apiurl}/${this.resource",{"_index":681,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.post(this.apiurl",{"_index":843,"title":{},"body":{"injectables/CohereService.html":{}}}],["this.http.put",{"_index":1384,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.put(`${this.apiurl}/${this.resource}/${id",{"_index":683,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.httpclient.get",{"_index":2939,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.httpclient.post",{"_index":1654,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.httpclient.put",{"_index":2937,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.isadmin",{"_index":1107,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["this.isdisabled",{"_index":2033,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.isgeneratingsynopsis",{"_index":2605,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.ismobile",{"_index":2419,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["this.isuppercase",{"_index":2121,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.isweb",{"_index":1017,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.jwt_token",{"_index":2917,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["this.languageservice.getstoredlanguage",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.languageservice.storelanguage(lang",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadedids.add(change.id",{"_index":1121,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.loadedids.add(season.id",{"_index":1240,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.loadedids.add(serie.id",{"_index":1148,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.loadedids.delete(change.id",{"_index":1134,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.loadedids.has(change.id",{"_index":1117,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.loadingcontroller.create",{"_index":2148,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.loadingctrl.create",{"_index":2603,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.loadmoreseasons(ev.target",{"_index":1252,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.loadmoreseries(ev.target",{"_index":1074,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this.loadseasons",{"_index":1020,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["this.loadseries",{"_index":1019,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this.loginform",{"_index":1845,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.controls['email",{"_index":1880,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.controls['password",{"_index":1881,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.reset",{"_index":1875,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.valid",{"_index":1857,"title":{},"body":{"components/LoginPage.html":{}}}],["this.mapping.getadded",{"_index":631,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.getadded(res",{"_index":1383,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getdeleted(entity",{"_index":638,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.getone",{"_index":626,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.mapping.getone(comment",{"_index":942,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.getone(elem",{"_index":1379,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getpaginated(page",{"_index":619,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getupdated",{"_index":635,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.getupdated(res",{"_index":1387,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setadd(entity",{"_index":1382,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setadd(entity))).pipe",{"_index":629,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.setadd(entity)).pipe(map(res",{"_index":1775,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["this.mapping.setupdate(entity",{"_index":1386,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setupdate(entity))).pipe",{"_index":634,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.setupdate(entity)).pipe(map(res",{"_index":1777,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["this.me().subscribe",{"_index":2919,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.meurl}`,{headers:{authorization",{"_index":2940,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.modalctrl.create",{"_index":1063,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.modalctrl.dismiss",{"_index":2437,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["this.modalctrl.dismiss(formdata",{"_index":2616,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.mode",{"_index":2411,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.mode=='new",{"_index":2438,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.newid",{"_index":715,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this.page",{"_index":1033,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["this.page=1",{"_index":1051,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this.pages",{"_index":1044,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["this.pagesize).subscribe",{"_index":1035,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["this.passwordfieldtype",{"_index":1856,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.passwordfieldtype2",{"_index":2298,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.picturemodal?.dismiss",{"_index":2052,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.platform.is('android",{"_index":2421,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["this.platform.is('desktop",{"_index":1018,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.platform.is('ios",{"_index":2420,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["this.popover?.dismiss",{"_index":2721,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.presentmodalseason('edit",{"_index":1251,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.presentmodalseason('new",{"_index":1257,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.presentmodalseason(season",{"_index":1059,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this.presentmodalserie('edit",{"_index":1161,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.presentmodalserie('new",{"_index":1175,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.presentmodalserie(serie",{"_index":1067,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this.presenttoast('clave",{"_index":2307,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.presenttoast('error",{"_index":2319,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.presenttoast('¡inicio",{"_index":1860,"title":{},"body":{"components/LoginPage.html":{}}}],["this.presenttoast('¡registro",{"_index":2316,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.presenttoast(errormessage",{"_index":1874,"title":{},"body":{"components/LoginPage.html":{}}}],["this.propagatechange",{"_index":2031,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["this.propagatechange(picture",{"_index":2036,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(this.serieselected.id",{"_index":2734,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.registerform",{"_index":2125,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.controls['adminkey",{"_index":2325,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['confirmpassword",{"_index":2324,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['email",{"_index":2216,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.controls['name",{"_index":2214,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.controls['password",{"_index":2323,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['surname",{"_index":2215,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.controls['username",{"_index":2213,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.get('adminkey",{"_index":2293,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.get('adminkey')?.clearvalidators",{"_index":2291,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.get('picture')?.markasdirty",{"_index":2135,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.get('username",{"_index":2118,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.get(key)?.dirty",{"_index":2191,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.get(key)?.value",{"_index":2194,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.patchvalue",{"_index":2134,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.reset",{"_index":2321,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.valid",{"_index":2167,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.value",{"_index":2301,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value.adminkey?.trim",{"_index":2170,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.repository.add(entity",{"_index":754,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.delete(id",{"_index":756,"title":{},"body":{"injectables/BaseService.html":{},"injectables/SeriesService.html":{}}}],["this.repository.getall(1",{"_index":2555,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["this.repository.getall(page",{"_index":752,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.getbyid(id",{"_index":753,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.update(id",{"_index":755,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1864,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.router.navigate(['/home",{"_index":2317,"title":{},"body":{"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["this.router.navigate(['/login",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{}}}],["this.router.navigate(['/register",{"_index":1876,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl(returnurl",{"_index":1865,"title":{},"body":{"components/LoginPage.html":{}}}],["this.searchterm",{"_index":1138,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["this.seasonssubscription",{"_index":1206,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.seasonssvc.add(response.data).subscribe",{"_index":1254,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.seasonssvc.delete(season.id",{"_index":2851,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.seasonssvc.delete(season.id).subscribe",{"_index":1260,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.seasonssvc.getall",{"_index":2843,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.seasonssvc.getall(1",{"_index":2828,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.seasonssvc.getall(this.page",{"_index":1052,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["this.seasonssvc.update(season!.id",{"_index":1255,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.selectedimage",{"_index":2132,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.selectedseason",{"_index":1060,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["this.selectedserie",{"_index":1068,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{}}}],["this.selectserie(obj",{"_index":2735,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.selectserie(serie.id",{"_index":2739,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.selectserie(undefined",{"_index":2742,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.serieselected",{"_index":2731,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.seriessubscription",{"_index":1112,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.seriessvc.getall(this.page",{"_index":2723,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.seriesvc.add(response.data).subscribe",{"_index":1169,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.seriesvc.delete(serie.id).subscribe",{"_index":1188,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.seriesvc.getall(this.page",{"_index":1144,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.seriesvc.getserieswithseasons(this.page",{"_index":1034,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this.seriesvc.update(serie!.id",{"_index":1172,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.showerrortoast(errormessage",{"_index":2612,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.signinurl",{"_index":2923,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.signupurl",{"_index":2930,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.storage",{"_index":1590,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["this.subscriptions.clear",{"_index":1578,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.delete(collectionname",{"_index":1567,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.foreach(subject",{"_index":1576,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.get(collectionname",{"_index":1565,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.get(collectionname)!.asobservable",{"_index":1549,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.has(collectionname",{"_index":1548,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.set(collectionname",{"_index":1550,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.toastcontroller.create",{"_index":1850,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.toastctrl.create",{"_index":2600,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.translate",{"_index":1179,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.translate.currentlang",{"_index":1805,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(lang",{"_index":1804,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translateservice.get('common.success.save').topromise",{"_index":2210,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.translateservice.get('profile.admin_granted').topromise",{"_index":2174,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.translateservice.get('profile.admin_key_invalid').topromise",{"_index":2178,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.translateservice.get('profile.already_admin').topromise",{"_index":2184,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.unsubscribefunctions.clear",{"_index":1577,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.delete(collectionname",{"_index":1564,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.foreach(unsubscribe",{"_index":1575,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.get(collectionname",{"_index":1563,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.set(collectionname",{"_index":1561,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.uploadurl",{"_index":1655,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.user",{"_index":2157,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.admin",{"_index":2168,"title":{},"body":{"components/ProfilePage.html":{}}}],["throw",{"_index":726,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":1630,"title":{"interfaces/Thumbnail.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["thumbnail:data.picture.thumbnail",{"_index":2639,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["thumbnail:string",{"_index":2566,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["tienes",{"_index":1883,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["timer",{"_index":2882,"title":{},"body":{"components/SplashPage.html":{}}}],["timer(5000).subscribe(_",{"_index":2887,"title":{},"body":{"components/SplashPage.html":{}}}],["tipo",{"_index":1712,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["title",{"_index":777,"title":{},"body":{"injectables/CohereService.html":{},"components/ProfilePage.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["titulada",{"_index":800,"title":{},"body":{"injectables/CohereService.html":{}}}],["titulo",{"_index":805,"title":{},"body":{"injectables/CohereService.html":{}}}],["toast",{"_index":1849,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["toast.present",{"_index":1855,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["toastcontroller",{"_index":1824,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["toastctrl",{"_index":2570,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["todas",{"_index":1569,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["toggle",{"_index":2351,"title":{},"body":{"components/RegisterPage.html":{}}}],["toggleadminkeyvisibility",{"_index":2258,"title":{},"body":{"components/RegisterPage.html":{}}}],["togglecase",{"_index":2089,"title":{},"body":{"components/ProfilePage.html":{}}}],["togglepassword",{"_index":2965,"title":{},"body":{"pipes/TogglePasswordPipe.html":{}}}],["togglepasswordpipe",{"_index":2962,"title":{"pipes/TogglePasswordPipe.html":{}},"body":{"pipes/TogglePasswordPipe.html":{},"coverage.html":{}}}],["togglepasswordvisibility",{"_index":1818,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["togglepasswordvisibility2",{"_index":2259,"title":{},"body":{"components/RegisterPage.html":{}}}],["token",{"_index":1361,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{}}}],["token\",resp.jwt",{"_index":2926,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["tolowercase",{"_index":766,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["tomar",{"_index":3213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["top",{"_index":2236,"title":{},"body":{"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["topromise",{"_index":1181,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["toreturn",{"_index":1342,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["toreturn.data['name']=data[key",{"_index":1341,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["toreturn:any",{"_index":2462,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn:seriedata",{"_index":1338,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["toreturn['name']=data[key",{"_index":2463,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['numepisodes']=data[key",{"_index":2465,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['numseason']=data[key",{"_index":2464,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['rating']=data[key",{"_index":2467,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['releasedate']=data[key",{"_index":2466,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['serieid']=data[key",{"_index":2468,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["total",{"_index":884,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["traducción",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["transform",{"_index":762,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"pipes/TogglePasswordPipe.html":{}}}],["transform(showpassword",{"_index":2966,"title":{},"body":{"pipes/TogglePasswordPipe.html":{}}}],["transform(value",{"_index":763,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["transition",{"_index":2060,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["translate",{"_index":35,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/LanguageService.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["translate.addlangs(['español",{"_index":1795,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.getbrowserlang",{"_index":1799,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.setdefaultlang('español",{"_index":1797,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.use(browserlang?.match(/español|ingles",{"_index":1800,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate/core",{"_index":194,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"modules/HomePageModule.html":{},"injectables/LanguageService.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"components/SerieModalComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":1668,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":992,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/LanguageService.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["translatex(8px",{"_index":2494,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["transparent",{"_index":2070,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["trata",{"_index":832,"title":{},"body":{"injectables/CohereService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["trimestre",{"_index":3113,"title":{},"body":{"index.html":{}}}],["true",{"_index":1485,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1507,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{}}}],["tslib",{"_index":3053,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":810,"title":{},"body":{"injectables/CohereService.html":{},"components/SplashPage.html":{}}}],["tus",{"_index":3094,"title":{},"body":{"index.html":{}}}],["tv",{"_index":3088,"title":{},"body":{"index.html":{}}}],["type",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3144,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1323,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["título",{"_index":834,"title":{},"body":{"injectables/CohereService.html":{}}}],["uint8array(hashbuffer",{"_index":2143,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["un",{"_index":1887,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["una",{"_index":794,"title":{},"body":{"injectables/CohereService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["undefined",{"_index":906,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-1.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{}}}],["unknown",{"_index":563,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["unsubscribe",{"_index":1536,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["unsubscribe(collectionname",{"_index":857,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["unsubscribefunctions",{"_index":1533,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["update",{"_index":538,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/ProfilePage.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["update(id",{"_index":564,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["updatedat",{"_index":1516,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Model.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["updatedat?:string",{"_index":1916,"title":{},"body":{"interfaces/Model.html":{}}}],["updatedoc",{"_index":575,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["updatedseasons",{"_index":1245,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["updatedseasons.filter((season",{"_index":1248,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["updatedseries",{"_index":1155,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["updatedseries.filter((serie",{"_index":1158,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["updatedseries.filter(serie",{"_index":2726,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["updateduser",{"_index":2186,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateduser.admin",{"_index":2198,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateduser.picture",{"_index":2207,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateduser[key",{"_index":2192,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateurl",{"_index":2935,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["updateuser",{"_index":469,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["updateuser(userid",{"_index":485,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["upload",{"_index":522,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"classes/StrapiMediaService.html":{}}}],["upload(blob",{"_index":523,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"classes/StrapiMediaService.html":{}}}],["upload(blob:blob):observable",{"_index":1651,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["upload:string",{"_index":3198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload_api_url_token",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadbytes",{"_index":1585,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploaded",{"_index":1603,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploadresponse",{"_index":2204,"title":{},"body":{"components/ProfilePage.html":{}}}],["uploadresponse.length",{"_index":2206,"title":{},"body":{"components/ProfilePage.html":{}}}],["uploadresponse[0].tostring",{"_index":2208,"title":{},"body":{"components/ProfilePage.html":{}}}],["uploadurl",{"_index":1649,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["url",{"_index":662,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"components/SerieModalComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["url(\"/assets/background",{"_index":2348,"title":{},"body":{"components/RegisterPage.html":{}}}],["url('/assets/background",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["url:data.picture.url",{"_index":2635,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["url:string",{"_index":2562,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["usar",{"_index":3120,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["useexisting",{"_index":2021,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":274,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"interfaces/Comment.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/IAuthMapping.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user$:observable",{"_index":514,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["user.admin",{"_index":1108,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["user.email",{"_index":1474,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{}}}],["user.getidtoken",{"_index":1462,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["user.id",{"_index":1604,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["user.name",{"_index":2159,"title":{},"body":{"components/ProfilePage.html":{}}}],["user.picture",{"_index":2161,"title":{},"body":{"components/ProfilePage.html":{}}}],["user.surname",{"_index":2160,"title":{},"body":{"components/ProfilePage.html":{}}}],["user.uid",{"_index":1468,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["user.username",{"_index":2158,"title":{},"body":{"components/ProfilePage.html":{}}}],["user:data.userid?number(data.userid):null",{"_index":1291,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["user:string",{"_index":1620,"title":{},"body":{"interfaces/FirebaseSeason.html":{}}}],["user:userraw",{"_index":1281,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["usercredential",{"_index":1506,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usercredential.user.delete",{"_index":1519,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usercredential.user.uid",{"_index":1509,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata",{"_index":486,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["userdata['admin",{"_index":1478,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['name",{"_index":1475,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['picture",{"_index":1479,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['surname",{"_index":1476,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['username",{"_index":1477,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdoc",{"_index":1466,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userid",{"_index":488,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/ISeasonsService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/UserRaw.html":{}}}],["userid?:string",{"_index":2369,"title":{},"body":{"interfaces/Season.html":{}}}],["userid}).pipe",{"_index":2556,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["username",{"_index":1413,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["usernamecontrol",{"_index":2117,"title":{},"body":{"components/ProfilePage.html":{}}}],["usernamecontrol.setvalue",{"_index":2122,"title":{},"body":{"components/ProfilePage.html":{}}}],["usernamecontrol.value",{"_index":2120,"title":{},"body":{"components/ProfilePage.html":{}}}],["userraw",{"_index":1271,"title":{"interfaces/UserRaw.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["userref",{"_index":1508,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["users",{"_index":1467,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnap",{"_index":1469,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnap.data",{"_index":1472,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnap.exists",{"_index":1471,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnapshot",{"_index":1493,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnapshot.data",{"_index":1495,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnapshot.exists",{"_index":1494,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usevalue",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["usuario",{"_index":1490,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":3085,"title":{},"body":{"index.html":{}}}],["v",{"_index":1366,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["valid",{"_index":2233,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["validationerrors",{"_index":3077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1842,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["validators.email",{"_index":1848,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["validators.minlength(2",{"_index":2289,"title":{},"body":{"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["validators.required",{"_index":1847,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["validchars",{"_index":702,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["valor",{"_index":3214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valores",{"_index":1715,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["value",{"_index":491,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["variable",{"_index":2973,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3147,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":3104,"title":{},"body":{"index.html":{}}}],["verificar",{"_index":1222,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{}}}],["version",{"_index":3137,"title":{},"body":{"properties.html":{}}}],["video",{"_index":3110,"title":{},"body":{"index.html":{}}}],["view",{"_index":2476,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view'},{'name",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["view.component",{"_index":995,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"modules/SharedModule.html":{}}}],["view.component.html",{"_index":2478,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view.component.scss",{"_index":2477,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view.component.ts",{"_index":2475,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":2481,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view.component.ts:12",{"_index":2480,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view.component.ts:21",{"_index":2482,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view/season",{"_index":994,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SeasonViewComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["view/serie",{"_index":997,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":978,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["viewchild('animatedavatar",{"_index":1023,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["viewchild('animatedavatarcontainer",{"_index":1025,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["viewchild('popover",{"_index":2712,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["viewchildren",{"_index":979,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["viewchildren('avatar",{"_index":1021,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/CollectionChange.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"components/SplashPage.html":{}}}],["wantsadmin",{"_index":2302,"title":{},"body":{"components/RegisterPage.html":{}}}],["warning",{"_index":2602,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["web",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["webdir",{"_index":3228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["where('serieid",{"_index":937,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["white",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["width",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["writevalue",{"_index":1990,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["writevalue(obj",{"_index":2011,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["www",{"_index":3229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":825,"title":{},"body":{"injectables/CohereService.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{},"index.html":{}}}],["ya",{"_index":1215,"title":{},"body":{"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":953,"title":{},"body":{"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["z",{"_index":2762,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["z1gv.onrender.com",{"_index":3232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":3055,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ 'MENU.ABOUT' | translate }}\n  \n\n\n\n  \n    \n      \n        \n          \n            \n          \n          {{ 'ABOUT.NAME' | translate }}\n        \n  \n        {{ 'ABOUT.INFO' | translate }}\n  \n        \n          \n            \n            {{ 'ABOUT.EMAIL' | translate }}\n          \n  \n          \n            \n            {{ 'ABOUT.NUMBER' | translate }}\n          \n  \n          \n            \n            {{ 'ABOUT.GITHUB' | translate }}\n          \n        \n      \n      \n      \n        \n          \n            \n          \n          {{ 'ABOUT.NAME2' | translate }}\n        \n  \n        {{ 'ABOUT.INFO2' | translate }}\n  \n        \n          \n            \n            {{ 'ABOUT.EMAIL2' | translate }}\n          \n  \n          \n            \n            {{ 'ABOUT.NUMBER2' | translate }}\n          \n  \n          \n            \n            {{ 'ABOUT.GITHUB2' | translate }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                  .about-container {\n    background-image: url('/assets/background-pattern.svg');\n    background-size: cover;\n    background-position: center;\n    min-height: 100%;\n    padding: 24px;\n\n    .cards{\n      display: flex;\n      justify-content: center;\n      align-items: flex-start;\n    }\n  \n    .profile-card {\n      background: rgba(255, 255, 255, 0.9);\n      border-radius: 20px;\n      padding: 32px;\n      width: 100%;\n      max-width: 600px;\n      box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n      margin: 32px;\n  \n      .profile-header {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-bottom: 32px;\n        text-align: center;\n  \n        .profile-avatar {\n          width: 120px;\n          height: 120px;\n          margin-bottom: 16px;\n          border: 3px solid #ff5722;\n        }\n  \n        h1 {\n          color: #333;\n          font-size: 24px;\n          font-weight: 600;\n          margin: 0;\n        }\n      }\n  \n      .contact-info {\n        .info-item {\n          display: flex;\n          align-items: center;\n          padding: 16px;\n          margin-bottom: 12px;\n          border-radius: 12px;\n          background: rgba(255, 255, 255, 0.5);\n  \n          ion-icon {\n            font-size: 24px;\n            color: #ff5722;\n            margin-right: 16px;\n          }\n        }\n      }\n      p {\n        margin: 0;\n        color: #333;\n        font-size: 16px;\n      }\n    }\n  }\n  \n  @media (max-width: 576px) {\n    .about-container {\n      padding: 16px;\n\n      .cards{\n        display: grid;\n      }\n  \n      .profile-card {\n        margin-left: 0px;\n        margin-bottom: .5%;\n  \n        .profile-header {\n          .profile-avatar {\n            width: 100px;\n            height: 100px;\n          }\n  \n          h1 {\n            font-size: 20px;\n          }\n        }\n  \n        .contact-info {\n          .info-item {\n            padding: 12px;\n            \n            ion-icon {\n              font-size: 20px;\n            }\n  \n            p {\n              font-size: 14px;\n            }\n          }\n        }\n      }\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'MENU.ABOUT\\' | translate }}                                                                {{ \\'ABOUT.NAME\\' | translate }}                  {{ \\'ABOUT.INFO\\' | translate }}                                            {{ \\'ABOUT.EMAIL\\' | translate }}                                              {{ \\'ABOUT.NUMBER\\' | translate }}                                              {{ \\'ABOUT.GITHUB\\' | translate }}                                                                                      {{ \\'ABOUT.NAME2\\' | translate }}                  {{ \\'ABOUT.INFO2\\' | translate }}                                            {{ \\'ABOUT.EMAIL2\\' | translate }}                                              {{ \\'ABOUT.NUMBER2\\' | translate }}                                              {{ \\'ABOUT.GITHUB2\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { AboutPageRoutingModule } from './about-routing.module';\nimport { AboutPage } from './about.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authSvc\n                            \n                            \n                                currentLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService, authSvc: BaseAuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseAuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LanguageService } from './core/services/language.service';\nimport { BaseAuthenticationService } from './core/services/impl/base-authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  currentLang: string;\n\n  constructor(\n    private languageService: LanguageService,\n    public authSvc: BaseAuthenticationService,\n    private router: Router\n  ) {\n    this.currentLang = this.languageService.getStoredLanguage();\n  }\n\n  changeLanguage(lang: string) {\n    this.languageService.changeLanguage(lang);\n    this.currentLang = lang;\n    this.languageService.storeLanguage(lang);\n  }\n\n  logout() {\n    this.authSvc.signOut().subscribe(()=>{\n      this.router.navigate(['/login']);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n\n        \n        \n          \n        \n\n        \n        \n          \n            \n            {{ 'MENU.HOME' | translate }}\n          \n\n          \n            \n            {{ 'MENU.SERIES' | translate }}\n          \n\n          \n            \n            {{ 'MENU.SEASONS' | translate }}\n          \n\n          \n            \n            {{ 'MENU.ABOUT' | translate }}\n          \n        \n        \n        \n          \n            \n              \n            \n            \n              \n                ES\n              \n              \n                EN\n              \n              \n                RU\n              \n            \n          \n\n          \n            \n              \n            \n            {{ (authSvc.user$ | async)?.name || (authSvc.user$ | async)?.username }}\n            \n          \n          \n            \n              \n                \n                  \n                    \n                    {{ 'MENU.PROFILE' | translate }}\n                  \n                  \n                    \n                    {{ 'MENU.LOGOUT' | translate }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        {{ 'MENU.TITLE' | translate }}\n      \n    \n    \n      \n        \n          \n          {{ 'MENU.HOME' | translate }}\n        \n        \n          \n          {{ 'MENU.SERIES' | translate }}\n        \n        \n          \n          {{ 'MENU.SEASONS' | translate }}\n        \n        \n          \n          {{ 'MENU.ABOUT' | translate }}\n        \n      \n    \n  \n\n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-navbar {\n  --background: linear-gradient(45deg, #ffffff, #ff5722);\n  --color: white;\n  --min-height: 60px;\n\n  .nav-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 16px;\n    height: 100%;\n\n    .brand-section {\n      .nav-logo {\n        height: 40px;\n        width: auto;\n      }\n    }\n\n    .menu-button-mobile {\n      display: none;\n    }\n\n    .nav-items {\n      display: flex;\n      gap: 8px;\n      \n      ion-button {\n        --color: rgb(58, 57, 57);\n        --padding-start: 12px;\n        --padding-end: 12px;\n        height: 40px;\n        \n        ion-icon {\n          margin-right: 8px;\n        }\n\n        &:hover {\n          --background: rgba(255, 255, 255, 0.1);\n        }\n      }\n    }\n\n    .user-section {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n\n      ion-fab {\n        position: relative;\n        height: 40px;\n        \n        ion-fab-button {\n          --background: rgba(255, 255, 255, 0.9);\n          --color: #ff5722;\n          width: 40px;\n          height: 40px;\n          margin: 0;\n        }\n        ion-fab-list{\n          ion-fab-button {\n            --background: #ffe9e2;\n            --color: #000000;\n            margin-right: 3px ;\n            margin-bottom: 17px;\n          }\n        }\n      }\n\n      .profile-button {\n        --background: rgba(255, 255, 255, 0.1);\n        --color: white;\n        --border-radius: 20px;\n        --padding-start: 8px;\n        --padding-end: 12px;\n        height: 40px;\n\n        ion-avatar {\n          width: 28px;\n          height: 28px;\n          margin-right: 8px;\n        }\n\n        &:hover {\n          --background: rgba(255, 255, 255, 0.2);\n        }\n      }\n    }\n  }\n}\n\n// Mobile styles\n@media (max-width: 768px) {\n  .main-navbar .nav-content {\n    .menu-button-mobile {\n      display: block;\n      order: 1;\n    }\n\n    .brand-section {\n      order: 2;\n      flex-grow: 1;\n      text-align: center;\n    }\n\n    .desktop-menu {\n      display: none;\n    }\n\n    .user-section {\n      order: 3;\n      \n      .profile-button ion-label {\n        display: none;\n      }\n    }\n    .brand-section{\n      display: none;\n    }\n  }\n}\n\n// Side menu styles\nion-menu {\n  --background: #ffffff;\n\n  ion-toolbar {\n    --background: linear-gradient(45deg, #ff5722, #ff9800);\n    --color: white;\n  }\n\n  ion-content {\n    --background: #ffffff;\n  }\n\n  ion-list {\n    background: #ffffff;\n  }\n\n  ion-item {\n    --padding-start: 16px;\n    margin: 8px;\n    border-radius: 8px;\n    --background: linear-gradient(45deg, #ff9800, #ff5722);\n    \n    ion-icon {\n      color: #ffffff;\n      margin-right: 16px;\n      font-weight: bold;\n    }\n  }\n}\n\n.menu-button-mobile {\n  ion-menu-button {\n    --color: #ff5722;\n  }\n}\n\n// Existing popover styles...\nion-popover {\n  --width: 200px;\n  --background: none;\n  ion-list {\n    background: white;\n    --background: white;\n  }\n  ion-item {\n    --padding-start: 16px;\n    --padding-end: 16px;\n    --border-radius: 8px;\n    margin-bottom: 4px;\n    background: white;\n    --background: white;\n    color: #000000;\n\n    ion-icon {\n      color: #ff5722;\n      margin-right: 12px;\n    }\n\n    &.logout-item {\n      color: #f44336;\n      \n      ion-icon {\n        color: #f44336;\n      }\n      &:hover {\n        --background: rgba(255, 87, 34, 0.1);\n        --color: #f44336;\n      }\n    }\n\n    &:hover {\n      --background: rgba(255, 87, 34, 0.1);\n      --color: #000000;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                          {{ \\'MENU.HOME\\' | translate }}                                            {{ \\'MENU.SERIES\\' | translate }}                                            {{ \\'MENU.SEASONS\\' | translate }}                                            {{ \\'MENU.ABOUT\\' | translate }}                                                                                                                            ES                                            EN                                            RU                                                                                                {{ (authSvc.user$ | async)?.name || (authSvc.user$ | async)?.username }}                                                                                                                                    {{ \\'MENU.PROFILE\\' | translate }}                                                                            {{ \\'MENU.LOGOUT\\' | translate }}                                                                                                                {{ \\'MENU.TITLE\\' | translate }}                                                {{ \\'MENU.HOME\\' | translate }}                                    {{ \\'MENU.SERIES\\' | translate }}                                    {{ \\'MENU.SEASONS\\' | translate }}                                    {{ \\'MENU.ABOUT\\' | translate }}                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthenticationServiceFactory, AuthMappingFactory, SeriesMappingFactory, SeriesRepositoryFactory, MediaServiceFactory, SeasonsMappingFactory, SeasonsRepositoryFactory, CommentsMappingFactory, CommentsRepositoryFactory, CommentsCollectionSubscriptionFactory } from './core/repositories/repository.factory';\nimport { SeasonsService } from './core/services/impl/seasons.service';\nimport { AUTH_ME_API_URL_TOKEN, AUTH_SIGN_IN_API_URL_TOKEN, AUTH_SIGN_UP_API_URL_TOKEN, BACKEND_TOKEN, SERIES_API_URL_TOKEN, SERIES_RESOURCE_NAME_TOKEN, SEASONS_API_URL_TOKEN, SEASONS_RESOURCE_NAME_TOKEN, UPLOAD_API_URL_TOKEN, FIREBASE_CONFIG_TOKEN, COMMENTS_API_URL_TOKEN, COMMENTS_RESOURCE_NAME_TOKEN } from './core/repositories/repository.tokens';\nimport { provideHttpClient } from '@angular/common/http';\nimport { SeriesService } from './core/services/impl/series.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { provideLottieOptions } from 'ngx-lottie';\nimport player from 'lottie-web';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { SharedModule } from './shared/shared.module';\nimport { environment } from 'src/environments/environment';\nimport { SeriesCollectionSubscriptionFactory, SeasonsCollectionSubscriptionFactory } from './core/repositories/repository.factory';\nimport { CommentsService } from './core/services/impl/comments.service';\n\n\n\n// Factory function para el loader de traducción\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    SharedModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    provideLottieOptions({\n      player: () => player,\n    }),\n    provideHttpClient(),\n    { provide: BACKEND_TOKEN, useValue: 'firebase' },\n    { provide: SEASONS_RESOURCE_NAME_TOKEN, useValue: 'seasons' },\n    { provide: SERIES_RESOURCE_NAME_TOKEN, useValue: 'series' },\n    { provide: COMMENTS_RESOURCE_NAME_TOKEN, useValue: 'comments' },\n    { provide: SEASONS_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    { provide: SERIES_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    { provide: COMMENTS_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    { provide: AUTH_SIGN_IN_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/auth/local` },\n    { provide: AUTH_SIGN_UP_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/auth/local/register` },\n    { provide: AUTH_ME_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/users/me` },\n    { provide: UPLOAD_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/upload` },\n    { provide: FIREBASE_CONFIG_TOKEN, useValue: \n      {\n        apiKey: \"AIzaSyC1GVcLVvR7JAdn4t-hKCgYUoVhGcEseSE\",\n        authDomain: \"mi-serie-15fb6.firebaseapp.com\",\n        projectId: \"mi-serie-15fb6\",\n        storageBucket: \"mi-serie-15fb6.firebasestorage.app\",\n        messagingSenderId: \"282424850144\",\n        appId: \"1:282424850144:web:a72ef0bae5e4fcecec4285\",\n        measurementId: \"G-9L59HYRS5X\"\n      } \n    },\n    \n    SeasonsMappingFactory,\n    SeriesMappingFactory,\n    CommentsMappingFactory,\n    AuthMappingFactory,\n    SeasonsRepositoryFactory,\n    SeriesRepositoryFactory,\n    CommentsRepositoryFactory,\n    // Registrar otros repositorios según sea necesario\n    // Servicios de aplicación\n    {\n      provide: 'SeasonsService',\n      useClass: SeasonsService\n    },\n    {\n      provide: 'SeriesService',\n      useClass: SeriesService\n    },\n    {\n      provide: 'CommentsService',\n      useClass: CommentsService\n    },\n    AuthenticationServiceFactory,\n    MediaServiceFactory,\n    SeriesCollectionSubscriptionFactory,\n    SeasonsCollectionSubscriptionFactory,\n    CommentsCollectionSubscriptionFactory\n\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { authGuard } from './core/guards/auth.guard';\nimport { loggedGuard } from './core/guards/logged.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'splash',\n    pathMatch: 'full'\n  },\n  {\n    path: 'splash',\n    loadComponent: () => \"import('./pages/splash/splash.page').then(m => m.SplashPage)\"\n  },\n  {\n    path: 'login',\n    canActivate: [loggedGuard],\n    loadChildren: () => \"import('./pages/login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'register',\n    canActivate: [loggedGuard],\n    loadChildren: () => \"import('./pages/register/register.module').then( m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'home',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: 'about',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\"\n  },\n  {\n    path: 'series',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/series/series.module').then( m => m.SeriesPageModule)\"\n  },\n  {\n    path: 'seasons',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/seasons/seasons.module').then( m => m.SeasonsPageModule)\"\n  },\n  {\n    path: 'profile',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/profile/profile.module').then( m => m.ProfilePageModule)\"\n  },\n  {\n    path: 'series/:id/comments',\n    canActivate: [authGuard],\n    loadComponent: () => \"import('./pages/comments/comments.page').then(m => m.CommentsPage)\"\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseAuthenticationService.html":{"url":"injectables/BaseAuthenticationService.html","title":"injectable - BaseAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCurrentUser\n                            \n                            \n                                    Abstract\n                                me\n                            \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signOut\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                            \n                                    Abstract\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authMapping: IAuthMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(registerPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(userId: string, userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IAuthentication } from \"../interfaces/authentication.interface\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { User } from \"../../models/auth.model\";\n\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport abstract class BaseAuthenticationService implements IAuthentication{\n    protected _authenticated:BehaviorSubject = new BehaviorSubject(false);\n    public authenticated$:Observable = this._authenticated.asObservable();\n\n    protected _user:BehaviorSubject = new BehaviorSubject(undefined);\n    public user$:Observable = this._user.asObservable();\n    protected _ready:BehaviorSubject = new BehaviorSubject(false);\n    public ready$:Observable = this._ready.asObservable();\n    abstract updateUser(userId: string, userData: Partial): Observable;\n    constructor(\n        protected authMapping:IAuthMapping\n    ){\n\n    }\n    abstract getCurrentUser(): Promise;    \n    abstract signIn(authPayload: any): Observable;\n    abstract signUp(registerPayload: any): Observable;\n    abstract signOut(): Observable;\n    abstract me():Observable;\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMediaService.html":{"url":"classes/BaseMediaService.html","title":"class - BaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-media.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-media.service.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\n  export abstract class BaseMediaService {\n    abstract upload(blob: Blob): Observable;\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepositoryFirebaseService.html":{"url":"injectables/BaseRepositoryFirebaseService.html","title":"injectable - BaseRepositoryFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepositoryFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                collectionRef\n                            \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                    Async\n                                getLastDocumentOfPreviousPage\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, collectionName: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collectionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getLastDocumentOfPreviousPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLastDocumentOfPreviousPage(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        collectionRef\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getFirestore, \n  collection, \n  doc, \n  getDoc, \n  getDocs, \n  addDoc, \n  updateDoc, \n  deleteDoc,\n  query,\n  limit,\n  startAt,\n  startAfter,\n  QueryConstraint,\n  orderBy,\n  or\n} from 'firebase/firestore';\nimport { from, map, Observable, mergeMap } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { FIREBASE_CONFIG_TOKEN, FIREBASE_COLLECTION_TOKEN, REPOSITORY_MAPPING_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRepositoryFirebaseService implements IBaseRepository {\n  private db;\n  private collectionRef;\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(FIREBASE_COLLECTION_TOKEN) protected collectionName: string,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n    this.collectionRef = collection(this.db, this.collectionName);\n  }\n  private async getLastDocumentOfPreviousPage(page: number, pageSize: number) {\n    if (page > {\n    return from(this.getLastDocumentOfPreviousPage(page, pageSize)).pipe(\n      map(lastDoc => {\n        const constraints: QueryConstraint[] = [\n          limit(pageSize)\n        ];\n        \n        if (lastDoc) {\n          constraints.push(startAfter(lastDoc));\n        }\n        \n        return query(this.collectionRef, ...constraints);\n      }),\n      mergeMap(q => getDocs(q)),\n      map(snapshot => {\n        const items = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        return this.mapping.getPaginated(page, pageSize, snapshot.size, items as T[]);\n      })\n    );\n  }\n  getById(id: string): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => {\n        if (doc.exists()) {\n          return this.mapping.getOne({ id: doc.id, ...doc.data() } as T);\n        }\n        return null;\n      })\n    );\n  }\n  add(entity: T): Observable {\n    return from(addDoc(this.collectionRef, this.mapping.setAdd(entity))).pipe(\n      map(docRef => this.mapping.getAdded({ ...entity, id: docRef.id } as T))\n    );\n  }\n  update(id: string, entity: T): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    \n    return from(updateDoc(docRef, this.mapping.setUpdate(entity))).pipe(\n      map(() => this.mapping.getUpdated({ ...entity, id } as T))\n    );\n  }\n  delete(id: string): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => ({ id: doc.id, ...doc.data() } as T)),\n      map(entity => {\n        deleteDoc(docRef);\n        return this.mapping.getDeleted(entity);\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepositoryHttpService.html":{"url":"injectables/BaseRepositoryHttpService.html","title":"injectable - BaseRepositoryHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepositoryHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-http.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRepositoryHttpService implements IBaseRepository {\n\n  constructor(\n    protected http: HttpClient,\n    @Inject(AUTH_TOKEN) protected auth: IAuthentication,\n    @Inject(API_URL_TOKEN) protected apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) protected resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping:IBaseMapping\n  ) {\n    this.apiUrl = apiUrl;\n  }\n\n\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable> {\n    return this.http.get(`${this.apiUrl}/${this.resource}`).pipe(map(res=>this.mapping.getPaginated(page, pageSize, 0, res)));\n  }\n\n  getById(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getOne(res)));\n  }\n\n  add(entity: T): Observable {\n    return this.http.post(`${this.apiUrl}/${this.resource}`, entity).pipe(map(res=>this.mapping.getAdded(res)));\n  }\n\n  update(id: string, entity: T): Observable {\n    return this.http.put(`${this.apiUrl}/${this.resource}/${id}`, entity).pipe(map(res=>this.mapping.getUpdated(res)));\n  }\n\n  delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRespositoryLocalStorageService.html":{"url":"injectables/BaseRespositoryLocalStorageService.html","title":"injectable - BaseRespositoryLocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRespositoryLocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                newID\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newID\n                        \n                    \n                \n            \n            \n                \n                        \n                    newID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { Model } from '../../models/base.model';\nimport { REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRespositoryLocalStorageService implements IBaseRepository {\n\n  _items:T[] = [];\n  private newID():string{\n    const validChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let code = \"\";\n    for (let i = 0; i \n  \n  ) {\n    let mockupList:any[] = [];\n    for(let i = 0; i> {\n    return of(\n      this.mapping.getPaginated(page, pageSize, Math.ceil(this._items.length / pageSize),\n        this._items.slice(\n          page*pageSize, \n          Math.min(\n            (page+1)*pageSize, \n            this._items.length\n          )\n        )\n      )\n    );\n  }\n\n  getById(id: string): Observable {\n    return of(this.mapping.getOne(this._items.find(item=>item.id == id) ?? null));\n  }\n\n  add(entity: T): Observable {\n    entity.id = this.newID();\n    entity.createdAt = (new Date()).toISOString();\n    this._items.push(entity);\n    localStorage.setItem(this.resource, JSON.stringify(this._items));\n    return of(this.mapping.getAdded(entity));\n  }\n\n  update(id: string, entity: T): Observable {\n    let index = this._items.findIndex(item=>item.id == id);\n    if(index>=0){\n      this._items[index]=entity;\n      localStorage.setItem(this.resource, JSON.stringify(this._items));\n      return of(this.mapping.getUpdated(this._items[index]));\n    }\n    throw new Error(\"id not found\"); \n  }\n\n  delete(id: string): Observable {\n    let index = this._items.findIndex(item=>item.id == id);\n    if(index>=0){\n      let entity = this._items.splice(index, 1);\n      localStorage.setItem(this.resource, JSON.stringify(this._items));\n      return of(this.mapping.getDeleted(entity));\n    }\n    throw new Error(\"id not found\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IBaseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/base-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IBaseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    -1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    25\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IBaseService } from '../interfaces/base-service.interface';\nimport { IBaseRepository, SearchParams } from '../../repositories/intefaces/base-repository.interface';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService implements IBaseService {\n  constructor(\n    @Inject(REPOSITORY_TOKEN) protected repository: IBaseRepository\n  ) {}\n\n  getAll(): Observable;\n  getAll(page:number, pageSize:number):Observable>;\n  getAll(page:number=-1, pageSize:number=25, filters:SearchParams={}): Observable> {    \n      return this.repository.getAll(page, pageSize, filters);\n  }\n\n  getById(id: string): Observable {\n    return this.repository.getById(id);\n  }\n\n  add(entity: T): Observable {\n    return this.repository.add(entity);\n  }\n\n  update(id: string, entity: T): Observable {\n    return this.repository.update(id, entity);\n  }\n\n  delete(id: string): Observable {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizePipe.html":{"url":"pipes/CapitalizePipe.html","title":"pipe - CapitalizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Pipes/capitalize.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalize\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pipes/capitalize.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n    return value\n      .toLowerCase()\n      .replace(/\\b\\w/g, char => char.toUpperCase());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CohereService.html":{"url":"injectables/CohereService.html","title":"injectable - CohereService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CohereService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/ai.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiKey\n                            \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateSynopsis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/ai.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateSynopsis\n                        \n                    \n                \n            \n            \n                \ngenerateSynopsis(title: string, languague: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/ai.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                languague\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.ApiKey\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/ai.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.cohere.ai/v1/generate'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/ai.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { map} from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CohereService {\n  private apiKey = environment.ApiKey;\n  private apiUrl = 'https://api.cohere.ai/v1/generate';\n\n  constructor(private http: HttpClient) { }\n\n  generateSynopsis(title: string, languague: string): Observable {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.apiKey}`,\n      'Accept': 'application/json'\n    });\n    \n    const requestBody = {\n      model: 'command',\n      prompt: `Escribe una sinopsis breve pero detallada para una serie de televisión titulada \"${title}\".\n      \n      Reglas:\n      - Debe redactarse en ${languague}.\n      - Recuerda, el titulo puede estar en cualquier idioma pero tu respuesta debe ser redactada segun la primera regla\n      - La sinopsis debe tener exactamente 2-3 oraciones.\n      - Debe ser concisa pero incluir la premisa principal.\n      - Debe ser intrigante y atractiva.\n      - No debe terminar a mitad de frase.\n      - Debe explicar de qué trata la serie, no analizar el título.\n      \n      Sinopsis:`,\n      max_tokens: 150,\n      temperature: 0.1,\n      k: 0,\n      p: 0.75,\n      stop_sequences: [\"\\n\\n\"],\n      return_likelihoods: 'NONE'\n    };\n\n    return this.http.post(this.apiUrl, requestBody, { headers }).pipe(\n      map((response: any) => {\n        return response.generations[0].text.trim();\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectionChange.html":{"url":"interfaces/CollectionChange.html","title":"interface - CollectionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CollectionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/collection-subscription.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"added\" | \"modified\" | \"removed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"added\" | \"modified\" | \"removed\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Model } from \"../../models/base.model\";\n\nexport interface CollectionChange {\n  type: 'added' | 'modified' | 'removed';\n  data?: T;\n  id: string;\n}\n\nexport interface ICollectionSubscription {\n  subscribe(collectionName: string): Observable>;\n  unsubscribe(collectionName: string): void;\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/comment.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            reaction\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reaction:     \"like\" | \"dislike\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"like\" | \"dislike\" | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\nimport { User } from \"./auth.model\";\n\nexport interface Comment extends Model {\n    text: string;\n    reaction: 'like' | 'dislike' | null;\n    serieId: string;\n    userId: string;\n    user?: User;\n    createdAt: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsMappingFirebaseService.html":{"url":"injectables/CommentsMappingFirebaseService.html","title":"injectable - CommentsMappingFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsMappingFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/comments-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Comment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Comment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Comment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Comment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseComment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Partial\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Comment } from \"../../models/comment.model\";\nimport { doc, DocumentReference, Firestore, getFirestore } from \"firebase/firestore\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\n\nexport interface FirebaseComment {\n  text: string;\n  reaction: 'like' | 'dislike' | null;\n  serieId: DocumentReference;\n  userId: string;\n  createdAt: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsMappingFirebaseService implements IBaseMapping {\n    \n  private db: Firestore;\n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig));\n  }\n\n  setAdd(data: Comment): FirebaseComment {\n    let dataMapping: FirebaseComment = {\n      text: data.text,\n      reaction: data.reaction,\n      serieId: doc(this.db, 'series', data.serieId),\n      userId: data.userId || '',\n      createdAt: data.createdAt || new Date().toISOString()\n    };\n    return dataMapping;\n  }\n  \n  setUpdate(data: Partial): Partial {\n    const result: any = {};\n    \n    if (data.text !== undefined) result.text = data.text;\n    if (data.reaction !== undefined) result.reaction = data.reaction;\n    if (data.serieId !== undefined) result.serieId = doc(this.db, 'series', data.serieId);\n    if (data.userId !== undefined) result.userId = data.userId;\n    \n    return result;\n  }\n  \n  getOne(data: { id: string } & FirebaseComment): Comment {\n    return {\n      id: data.id,\n      text: data.text,\n      reaction: data.reaction,\n      serieId: data.serieId?.id,\n      userId: data.userId,\n      createdAt: data.createdAt\n    };\n  }\n  \n  getPaginated(page: number, pageSize: number, total: number, data: ({id:string} & FirebaseComment)[]): Paginated {\n    return {\n      page,\n      pageSize,\n      pages: Math.ceil(total / pageSize),\n      data: data.map(item => this.getOne(item))\n    };\n  }\n  \n  getAdded(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n  \n  getUpdated(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n  \n  getDeleted(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsRepositoryFirebaseService.html":{"url":"injectables/CommentsRepositoryFirebaseService.html","title":"injectable - CommentsRepositoryFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsRepositoryFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/comments-repository-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                collectionRef\n                            \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                getCommentsBySerieId\n                            \n                            \n                                    Private\n                                    Async\n                                getLastDocumentOfPreviousPage\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                    IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentsBySerieId\n                        \n                    \n                \n            \n            \n                \ngetCommentsBySerieId(serieId: string, page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                serieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getLastDocumentOfPreviousPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLastDocumentOfPreviousPage(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        collectionRef\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getFirestore, \n  collection, \n  doc, \n  getDoc, \n  getDocs, \n  addDoc, \n  updateDoc, \n  deleteDoc,\n  query,\n  where,\n  limit,\n  startAfter,\n  orderBy,\n  QueryConstraint\n} from 'firebase/firestore';\nimport { from, map, Observable, mergeMap } from 'rxjs';\nimport { Comment } from '../../models/comment.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { COMMENTS_REPOSITORY_MAPPING_TOKEN, FIREBASE_CONFIG_TOKEN } from '../repository.tokens';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { ICommentsRepository } from '../intefaces/comments-repository.interface';\nimport { SearchParams } from '../intefaces/base-repository.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsRepositoryFirebaseService implements ICommentsRepository {\n  private db;\n  private collectionRef;\n  \n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(COMMENTS_REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n    this.collectionRef = collection(this.db, 'comments');\n  }\n\n  getCommentsBySerieId(serieId: string, page: number = 1, pageSize: number = 10): Observable {\n    const serieRef = doc(this.db, 'series', serieId);\n    const q = query(\n      this.collectionRef,\n      where('serieId', '==', serieRef),\n      orderBy('createdAt', 'desc'),\n      limit(pageSize)\n    );\n\n    return from(getDocs(q)).pipe(\n      map(snapshot => {\n        const comments = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        return comments.map(comment => this.mapping.getOne(comment as any));\n      })\n    );\n  }\n\n  private async getLastDocumentOfPreviousPage(page: number, pageSize: number, filters: SearchParams = {}) {\n    if (page > {\n    return from(this.getLastDocumentOfPreviousPage(page, pageSize, filters)).pipe(\n      map(lastDoc => {\n        const constraints: QueryConstraint[] = [\n          orderBy('createdAt', 'desc'),\n          limit(pageSize)\n        ];\n        \n        if (lastDoc) {\n          constraints.push(startAfter(lastDoc));\n        }\n        \n        if (filters['serieId']) {\n          const serieRef = doc(this.db, 'series', filters['serieId']);\n          constraints.push(where('serieId', '==', serieRef));\n        }\n        \n        return query(this.collectionRef, ...constraints);\n      }),\n      mergeMap(q => getDocs(q)),\n      map(snapshot => {\n        const items = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        return this.mapping.getPaginated(page, pageSize, items.length, items as any[]);\n      })\n    );\n  }\n\n  getById(id: string): Observable {\n    const docRef = doc(this.db, 'comments', id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => {\n        if (doc.exists()) {\n          return this.mapping.getOne({ id: doc.id, ...doc.data() } as any);\n        }\n        return null;\n      })\n    );\n  }\n\n  add(entity: Comment): Observable {\n    return from(addDoc(this.collectionRef, this.mapping.setAdd(entity))).pipe(\n      map(docRef => this.mapping.getAdded({ ...entity, id: docRef.id } as any))\n    );\n  }\n\n  update(id: string, entity: Comment): Observable {\n    const docRef = doc(this.db, 'comments', id);\n    \n    return from(updateDoc(docRef, this.mapping.setUpdate(entity))).pipe(\n      map(() => this.mapping.getUpdated({ ...entity, id } as any))\n    );\n  }\n\n  delete(id: string): Observable {\n    const docRef = doc(this.db, 'comments', id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => ({ id: doc.id, ...doc.data() } as any)),\n      mergeMap(entity => {\n        return from(deleteDoc(docRef)).pipe(\n          map(() => this.mapping.getDeleted(entity))\n        );\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsService.html":{"url":"injectables/CommentsService.html","title":"injectable - CommentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/comments.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commentsRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCommentsBySerieId\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ICommentsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/comments.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ICommentsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentsBySerieId\n                        \n                    \n                \n            \n            \n                \ngetCommentsBySerieId(serieId: string, page?: number, pageSize?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/comments.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICommentsRepository\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/comments.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Comment } from '../../models/comment.model';\nimport { BaseService } from './base-service.service';\nimport { ICommentsService } from '../interfaces/comments-service.interface';\nimport { COMMENTS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ICommentsRepository } from '../../repositories/intefaces/comments-repository.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService extends BaseService implements ICommentsService {\n  private commentsRepository: ICommentsRepository;\n\n  constructor(\n    @Inject(COMMENTS_REPOSITORY_TOKEN) repository: ICommentsRepository\n  ) {\n    super(repository);\n    this.commentsRepository = repository;\n  }\n\n  getCommentsBySerieId(serieId: string, page?: number, pageSize?: number): Observable {\n    return this.commentsRepository.getCommentsBySerieId(serieId, page, pageSize);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                ports\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Port[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { AlertController, AnimationController, InfiniteScrollCustomEvent, ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SeasonViewComponent } from 'src/app/shared/components/season-view/season-view.component';\nimport { SerieViewComponent } from 'src/app/shared/components/serie-view/serie-view.component';\nimport { ScreenReader } from '@capacitor/screen-reader';\n\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _series:BehaviorSubject = new BehaviorSubject([]);\n  series$:Observable = this._series.asObservable();\n  _seasons:BehaviorSubject = new BehaviorSubject([]);\n  seasons$:Observable = this._seasons.asObservable();\n\n  isWeb: boolean = false;\n\n  constructor(\n    private seasonsSvc:SeasonsService,\n    private serieSvc:SeriesService,\n    private platform: Platform,\n    private modalCtrl:ModalController,\n    private translate: TranslateService,\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeries();\n    this.loadSeasons();\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSeason: any = null;\n  selectedSerie: any = null;\n  isAnimating = false;\n  page:number = 1;\n  pageSize:number = 25;\n  pages:number = 0;\n\n\n  loadSeries(){\n    this.page = 1;\n    this.serieSvc.getSeriesWithSeasons(this.page, this.pageSize).subscribe({\n      next:(response:Paginated)=>{\n\n        const seriesWithSortedSeasons = response.data.map(serie => ({\n          ...serie,\n          seasons: serie.seasons?.sort((a, b) => \n            (a.name || '').localeCompare(b.name || '')\n          )\n        }));\n\n        this._series.next([...seriesWithSortedSeasons]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n  loadMoreSeries(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page )=>{\n\n          const seriesWithSortedSeasons = response.data.map(serie => ({\n            ...serie,\n            seasons: serie.seasons?.sort((a, b) => \n              (a.name || '').localeCompare(b.name || '')\n            )\n          }));\n\n          this._series.next([...this._series.value, ...seriesWithSortedSeasons]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n\n  loadSeasons(){\n    this.page=1;\n    this.seasonsSvc.getAll(this.page, this.pageSize).subscribe({\n      next:(response:Paginated)=>{\n        this._seasons.next([...response.data]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n\n  loadMoreSeasons(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page)=>{\n          this._seasons.next([...this._seasons.value, ...response.data]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n  async openSeasonDetail(season: any) {\n    await this.presentModalSeason(season);\n    this.selectedSeason = season;\n  }\n  private async presentModalSeason(season:Season|undefined=undefined){\n    const modal = await this.modalCtrl.create({\n      component: SeasonViewComponent,\n      componentProps: {\n        season: season\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async openSerieDetail(serie: any) {\n    await this.presentModalSerie(serie);\n    this.selectedSerie = serie;\n  }\n  private async presentModalSerie(serie:Serie|undefined=undefined){\n    const modal = await this.modalCtrl.create({\n      component: SerieViewComponent,\n      componentProps: {\n        serie: serie\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async readSerieTitle(serieTitle: string) {\n    await ScreenReader.speak({ value: serieTitle });\n  }\n  \n  onIonInfinite(ev:InfiniteScrollCustomEvent) {\n    this.loadMoreSeries(ev.target);\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country-1.html":{"url":"classes/Country-1.html","title":"class - Country-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/series/series.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                ports\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Port[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  AlertController,\n  AnimationController,\n  InfiniteScrollCustomEvent,\n  ModalController,\n  Platform,\n} from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SerieModalComponent } from 'src/app/shared/components/serie-modal/serie-modal.component';\nimport { SERIES_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { CollectionChange } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { FirebaseAuthenticationService } from 'src/app/core/services/impl/firebase-authentication.service';\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-series',\n  templateUrl: './series.page.html',\n  styleUrls: ['./series.page.scss'],\n})\nexport class SeriesPage implements OnInit {\n  isAdmin = false;\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _series: BehaviorSubject = new BehaviorSubject([]);\n  series$: Observable = this._series.asObservable();\n  _filteredSeries: BehaviorSubject = new BehaviorSubject([]);\n  filteredSeries$: Observable = this._filteredSeries.asObservable();\n  searchTerm: string = '';\n\n  public alertYesNoButtons = [\n    {\n      text: 'No',\n      role: 'no',\n    },\n    {\n      text: 'Yes',\n      role: 'yes',\n    },\n  ];\n  isWeb: boolean = false;\n  private loadedIds: Set = new Set();\n\n  constructor(\n    private animationCtrl: AnimationController,\n    private seasonsSvc: SeasonsService,\n    private serieSvc: SeriesService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: FirebaseAuthenticationService,\n    @Inject(SERIES_COLLECTION_SUBSCRIPTION_TOKEN)\n    private seriesSubscription: ICollectionSubscription\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeries();\n\n    this.authSvc\n      .getCurrentUser()\n      .then((user) => {\n        this.isAdmin = user.admin;\n      })\n      .catch(() => {\n        this.isAdmin = false;\n      });\n\n    this._series.subscribe((series) => {\n      this._filteredSeries.next(series);\n    });\n\n    this.seriesSubscription\n      .subscribe('series')\n      .subscribe((change: CollectionChange) => {\n        const currentSeries = [...this._series.value];\n\n        if (!this.loadedIds.has(change.id) && change.type !== 'added') {\n          return;\n        }\n\n        switch (change.type) {\n          case 'added':\n            this.loadedIds.add(change.id);\n\n            const existingIndex = currentSeries.findIndex(\n              (p) => p.id === change.id\n            );\n            if (existingIndex === -1) {\n              currentSeries.push(change.data!);\n              currentSeries.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'modified':\n            const index = currentSeries.findIndex((p) => p.id === change.id);\n            if (index >= 0) {\n              currentSeries[index] = change.data!;\n              currentSeries.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'removed':\n            const removeIndex = currentSeries.findIndex(\n              (p) => p.id === change.id\n            );\n            if (removeIndex >= 0) {\n              currentSeries.splice(removeIndex, 1);\n              this.loadedIds.delete(change.id);\n            }\n            break;\n        }\n\n        this._series.next(currentSeries);\n      });\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSerie: any = null;\n  isAnimating = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n\n    if (!searchTerm) {\n      this._filteredSeries.next(this._series.value);\n      return;\n    }\n\n    const filtered = this._series.value.filter((serie) =>\n      serie.name.toLowerCase().includes(searchTerm)\n    );\n\n    this._filteredSeries.next(filtered);\n  }\n\n  loadSeries() {\n    this.page = 1;\n    this.serieSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        response.data.forEach((serie) => this.loadedIds.add(serie.id));\n\n        const sortedSeries = response.data.sort((a, b) =>\n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._series.next([...sortedSeries]);\n        this._filteredSeries.next([...sortedSeries]);\n        this.page++;\n        this.pages = response.pages;\n      },\n    });\n  }\n\n  loadMoreSeries(notify: HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          response.data.forEach((serie) => this.loadedIds.add(serie.id));\n\n          const updatedSeries = [...this._series.value, ...response.data].sort(\n            (a, b) => (a.name || '').localeCompare(b.name || '')\n          );\n          this._series.next(updatedSeries);\n\n          if (this.searchTerm) {\n            const filtered = updatedSeries.filter((serie) =>\n              serie.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeries.next(filtered);\n          } else {\n            this._filteredSeries.next(updatedSeries);\n          }\n          this.page++;\n          notify?.complete();\n        },\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n\n  async openSerieDetail(serie: any, index: number) {\n    await this.presentModalSerie('edit', serie);\n    this.selectedSerie = serie;\n  }\n\n  onIonInfinite(ev: InfiniteScrollCustomEvent) {\n    this.loadMoreSeries(ev.target);\n  }\n\n  private async presentModalSerie(\n    mode: 'new' | 'edit',\n    serie: Serie | undefined = undefined\n  ) {\n    let _series: Serie[] = await lastValueFrom(this.serieSvc.getAll());\n    const modal = await this.modalCtrl.create({\n      component: SerieModalComponent,\n      componentProps:\n        mode == 'edit'\n          ? {\n              serie: serie,\n              series: _series,\n            }\n          : {\n              series: _series,\n            },\n    });\n    modal.onDidDismiss().then((response: any) => {\n      switch (response.role) {\n        case 'new':\n          this.serieSvc.add(response.data).subscribe({\n            next: (res) => {\n              this.loadSeries();\n            },\n            error: (err) => {},\n          });\n          break;\n        case 'edit':\n          this.serieSvc.update(serie!.id, response.data).subscribe({\n            next: (res) => {\n              this.loadSeries();\n            },\n            error: (err) => {},\n          });\n          break;\n        default:\n          break;\n      }\n    });\n    await modal.present();\n  }\n\n  async onAddSerie() {\n    await this.presentModalSerie('new');\n  }\n\n  async onDeleteSerie(serie: Serie) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate\n        .get('SERIES.MESSAGES.DELETE_CONFIRM')\n        .toPromise(),\n      cssClass: 'custom-delete-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'yes',\n          handler: () => {\n            this.serieSvc.delete(serie.id).subscribe({\n              next: (response) => {\n                this.loadSeries();\n              },\n              error: (err) => {},\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country-2.html":{"url":"classes/Country-2.html","title":"class - Country-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/seasons/seasons.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                ports\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Port[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  AlertController,\n  AnimationController,\n  InfiniteScrollCustomEvent,\n  ModalController,\n  Platform,\n} from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SeasonModalComponent } from 'src/app/shared/components/season-modal/season-modal.component';\nimport { SEASONS_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { CollectionChange } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { FirebaseAuthenticationService } from 'src/app/core/services/impl/firebase-authentication.service';\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-seasons',\n  templateUrl: './seasons.page.html',\n  styleUrls: ['./seasons.page.scss'],\n})\nexport class SeasonsPage implements OnInit {\n  isAdmin = false;\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _seasons: BehaviorSubject = new BehaviorSubject([]);\n  seasons$: Observable = this._seasons.asObservable();\n  _filteredSeasons: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  filteredSeasons$: Observable = this._filteredSeasons.asObservable();\n  searchTerm: string = '';\n\n  public alertYesNoButtons = [\n    {\n      text: 'No',\n      role: 'no',\n    },\n    {\n      text: 'Yes',\n      role: 'yes',\n    },\n  ];\n  isWeb: boolean = false;\n  private loadedIds: Set = new Set();\n\n  constructor(\n    private animationCtrl: AnimationController,\n    private seasonsSvc: SeasonsService,\n    private serieSvc: SeriesService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: FirebaseAuthenticationService,\n    @Inject(SEASONS_COLLECTION_SUBSCRIPTION_TOKEN)\n    private seasonsSubscription: ICollectionSubscription\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeasons();\n\n    this.authSvc\n      .getCurrentUser()\n      .then((user) => {\n        this.isAdmin = user.admin;\n      })\n      .catch(() => {\n        this.isAdmin = false;\n      });\n\n    this._seasons.subscribe((seasons) => {\n      this._filteredSeasons.next(seasons);\n    });\n\n    this.seasonsSubscription\n      .subscribe('seasons')\n      .subscribe((change: CollectionChange) => {\n        const currentSeasons = [...this._seasons.value];\n\n        // Solo procesar cambios de documentos que ya tenemos cargados\n        if (!this.loadedIds.has(change.id) && change.type !== 'added') {\n          return;\n        }\n\n        switch (change.type) {\n          case 'added':\n            // Registrar el nuevo ID en nuestro conjunto de IDs cargados\n            this.loadedIds.add(change.id);\n\n            // Verificar si ya existe en nuestro array local\n            const existingIndex = currentSeasons.findIndex(\n              (p) => p.id === change.id\n            );\n            if (existingIndex === -1) {\n              currentSeasons.push(change.data!);\n              currentSeasons.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'modified':\n            const index = currentSeasons.findIndex((p) => p.id === change.id);\n            if (index >= 0) {\n              currentSeasons[index] = change.data!;\n              currentSeasons.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'removed':\n            const removeIndex = currentSeasons.findIndex(\n              (p) => p.id === change.id\n            );\n            if (removeIndex >= 0) {\n              currentSeasons.splice(removeIndex, 1);\n              this.loadedIds.delete(change.id);\n            }\n            break;\n        }\n\n        this._seasons.next(currentSeasons);\n      });\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSeason: any = null;\n  isAnimating = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n\n    if (!searchTerm) {\n      this._filteredSeasons.next(this._seasons.value);\n      return;\n    }\n\n    const filtered = this._seasons.value.filter((season) =>\n      season.name.toLowerCase().includes(searchTerm)\n    );\n\n    this._filteredSeasons.next(filtered);\n  }\n\n  loadSeasons() {\n    this.page = 1;\n    this.seasonsSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        // Actualizar el registro de IDs cargados\n        response.data.forEach((season) => this.loadedIds.add(season.id));\n\n        const sortedSeasons = response.data.sort((a, b) =>\n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._seasons.next([...sortedSeasons]);\n        this._filteredSeasons.next([...sortedSeasons]);\n        this.page++;\n        this.pages = response.pages;\n      },\n    });\n  }\n\n  loadMoreSeasons(notify: HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          // Actualizar el registro de IDs cargados\n          response.data.forEach((season) => this.loadedIds.add(season.id));\n\n          const updatedSeasons = [\n            ...this._seasons.value,\n            ...response.data,\n          ].sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n          this._seasons.next(updatedSeasons);\n\n          if (this.searchTerm) {\n            const filtered = updatedSeasons.filter((season) =>\n              season.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeasons.next(filtered);\n          } else {\n            this._filteredSeasons.next(updatedSeasons);\n          }\n          this.page++;\n          notify?.complete();\n        },\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n\n  async openSeasonDetail(season: any, index: number) {\n    await this.presentModalSeason('edit', season);\n    this.selectedSeason = season;\n  }\n\n  onIonInfinite(ev: InfiniteScrollCustomEvent) {\n    this.loadMoreSeasons(ev.target);\n  }\n\n  private async presentModalSeason(\n    mode: 'new' | 'edit',\n    season: Season | undefined = undefined\n  ) {\n    let _series: Serie[] = await lastValueFrom(this.serieSvc.getAll());\n    const modal = await this.modalCtrl.create({\n      component: SeasonModalComponent,\n      componentProps:\n        mode == 'edit'\n          ? {\n              season: season,\n              series: _series,\n            }\n          : {\n              series: _series,\n            },\n    });\n    modal.onDidDismiss().then((response: any) => {\n      switch (response.role) {\n        case 'new':\n          this.seasonsSvc.add(response.data).subscribe({\n            next: (res) => {\n              this.loadSeasons();\n            },\n            error: (err) => {},\n          });\n          break;\n        case 'edit':\n          this.seasonsSvc.update(season!.id, response.data).subscribe({\n            next: (res) => {\n              this.loadSeasons();\n            },\n            error: (err) => {},\n          });\n          break;\n        default:\n          break;\n      }\n    });\n    await modal.present();\n  }\n\n  async onAddSeason() {\n    await this.presentModalSeason('new');\n  }\n\n  async onDeleteSeason(season: Season) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate\n        .get('SEASONS.MESSAGES.DELETE_CONFIRM')\n        .toPromise(),\n      cssClass: 'custom-delete-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'yes',\n          handler: () => {\n            this.seasonsSvc.delete(season.id).subscribe({\n              next: (response) => {\n                this.loadSeasons();\n              },\n              error: (err) => {},\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         SeasonAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SeasonAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data-1.html":{"url":"interfaces/Data-1.html","title":"interface - Data-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         SerieAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SerieAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data-2.html":{"url":"interfaces/Data-2.html","title":"interface - Data-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthMappingService.html":{"url":"injectables/FirebaseAuthMappingService.html","title":"injectable - FirebaseAuthMappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthMappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-auth-mapping.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signInPayload\n                            \n                            \n                                signUp\n                            \n                            \n                                signUpPayload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: FirebaseUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            FirebaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: FirebaseUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            FirebaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: FirebaseUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            FirebaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\nimport { User as FirebaseUser } from 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthMappingService implements IAuthMapping {\n  signInPayload(payload: SignInPayload): { email: string, password: string } {\n    return {\n      email: payload.email,\n      password: payload.password\n    };\n  }\n\n  signUpPayload(payload: SignUpPayload): { email: string, password: string } {\n    return {\n      email: payload.email,\n      password: payload.password\n      // No necesitamos username ya que Firebase nos lo maneja por defecto\n    };\n  }\n\n  signIn(response: FirebaseUser): User {\n    return {\n      id: response.uid,\n      username: response.displayName || response.email || '',\n      email: response.email || '',\n      name: '',\n      surname: '',\n      admin: false,\n      picture: response.photoURL || undefined\n    };\n  }\n\n  signUp(response: FirebaseUser): User {\n    return {\n      id: response.uid,\n      username: response.displayName || response.email || '',\n      email: response.email || '',\n      name: '',\n      surname: '',\n      admin: false,\n      picture: response.photoURL || undefined\n    };\n  }\n\n  me(response: FirebaseUser): User {\n    return {\n      id: response.uid,\n      username: response.displayName || response.email || '',\n      email: response.email || '',\n      name: '',\n      surname: '',\n      admin:false,\n      picture: response.photoURL || undefined\n    };\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthenticationService.html":{"url":"injectables/FirebaseAuthenticationService.html","title":"injectable - FirebaseAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAuthenticationService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _token\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                getToken\n                            \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, authMapping: IAuthMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:72\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-authentication.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:148\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:99\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:139\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:109\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(userId: string, userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:163\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:16\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { filter, map, Observable, of, tap, firstValueFrom, from, switchMap } from 'rxjs';\nimport { BaseAuthenticationService } from './base-authentication.service';\nimport { AUTH_MAPPING_TOKEN, FIREBASE_CONFIG_TOKEN } from '../../repositories/repository.tokens';\nimport { IAuthMapping } from '../interfaces/auth-mapping.interface';\nimport { User } from '../../models/auth.model';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getAuth, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword,\n  signOut as firebaseSignOut,\n  onAuthStateChanged\n} from 'firebase/auth';\nimport { \n  getFirestore, \n  doc, \n  setDoc,\n  collection,\n  Firestore,\n  getDoc,\n  updateDoc\n} from 'firebase/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthenticationService extends BaseAuthenticationService {\n\n  private db: Firestore;\n  private auth;\n  private _token: string | null = null;\n\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(AUTH_MAPPING_TOKEN) authMapping: IAuthMapping\n  ) {\n    super(authMapping);\n    const app = initializeApp(firebaseConfig);\n    this.auth = getAuth(app);\n    this.db = getFirestore(app);\n\n    onAuthStateChanged(this.auth, async (user) => {\n      if (user) {\n        this._token = await user.getIdToken();\n        // Obtener datos adicionales de Firestore\n        const userDoc = doc(this.db, 'users', user.uid);\n        const userSnap = await getDoc(userDoc);\n        \n        if (userSnap.exists()) {\n          const userData = userSnap.data();\n          this._user.next({\n            id: user.uid,\n            email: user.email || '',\n            name: userData['name'] || '',\n            surname: userData['surname'] || '',\n            username: userData['username'] || '',\n            admin: userData['admin'] || false,\n            picture: userData['picture']\n          });\n        }\n        this._authenticated.next(true);\n      } else {\n        this._token = null;\n        this._authenticated.next(false);\n        this._user.next(undefined);\n      }\n      this._ready.next(true);\n    });\n  }\n\n  async getCurrentUser(): Promise {\n    await firstValueFrom(this._ready.pipe(filter(ready => ready === true)));\n    const authUser = await firstValueFrom(this._user);\n    \n    if (!authUser) {\n      throw new Error('No authenticated user');\n    }\n\n    // Obtener datos extendidos del usuario desde Firestore\n    const userDoc = doc(this.db, 'users', authUser.id);\n    const userSnapshot = await getDoc(userDoc);\n    \n    if (userSnapshot.exists()) {\n      const userData = userSnapshot.data();\n      return {\n        ...authUser,\n        name: userData['name'] || '',\n        surname: userData['surname'] || '',\n        username: userData['username'] || '',\n        admin: userData['admin'] || false,\n        picture: userData['picture'] || undefined\n      };\n    }\n    \n    return authUser;\n  }\n\n  signIn(authPayload: any): Observable {\n    const { email, password } = this.authMapping.signInPayload(authPayload);\n    \n    return from(signInWithEmailAndPassword(this.auth, email, password)).pipe(\n      map(userCredential => {\n        return this.authMapping.signIn(userCredential.user);\n      })\n    );\n  }\n\n  signUp(signUpPayload: any): Observable {\n    return new Observable(observer => {\n      createUserWithEmailAndPassword(this.auth, signUpPayload.email, signUpPayload.password)\n        .then(async (userCredential) => {\n          try {\n            const userRef = doc(this.db, 'users', userCredential.user.uid);\n            await setDoc(userRef, {\n              name: signUpPayload.name,\n              surname: signUpPayload.surname,\n              username: signUpPayload.username,\n              email: signUpPayload.email,\n              picture: signUpPayload.picture || null,\n              admin: signUpPayload.admin || false,\n              createdAt: new Date(),\n              updatedAt: new Date()\n            });\n  \n            observer.next(this.authMapping.signUp(userCredential.user));\n            observer.complete();\n          } catch (error) {\n            await userCredential.user.delete();\n            observer.error(error);\n          }\n        })\n        .catch(error => {\n          observer.error(error);\n        });\n    });\n  }\n\n  signOut(): Observable {\n    return from(firebaseSignOut(this.auth)).pipe(\n      tap(() => {\n        this._authenticated.next(false);\n        this._user.next(undefined);\n      })\n    );\n  }\n\n  me(): Observable {\n    return of(this.auth.currentUser).pipe(\n      map(user => {\n        if (!user) {\n          throw new Error('No authenticated user');\n        }\n        return user;\n      })\n    );\n  }\n\n  getToken(): string | null {\n    return this._token;\n  }\n\n  updateUser(userId: string, userData: Partial): Observable {\n    const userRef = doc(this.db, 'users', userId);\n    \n    return from(updateDoc(userRef, {\n      ...userData,\n      updatedAt: new Date()\n    })).pipe(\n      switchMap(() => from(getDoc(userRef))),\n      map(docSnap => {\n        const data = docSnap.data();\n        return this.authMapping.me({ id: userId, ...data });\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseCollectionSubscriptionService.html":{"url":"injectables/FirebaseCollectionSubscriptionService.html","title":"injectable - FirebaseCollectionSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseCollectionSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-collection-subscription.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                    Private\n                                unsubscribeFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribeFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getFirestore, \n  collection, \n  onSnapshot,\n  QuerySnapshot,\n  DocumentData\n} from 'firebase/firestore';\nimport { Observable, Subject } from 'rxjs';\nimport { ICollectionSubscription } from '../interfaces/collection-subscription.interface';\nimport { FIREBASE_CONFIG_TOKEN, REPOSITORY_MAPPING_TOKEN } from '../../repositories/repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../../repositories/intefaces/base-mapping.interface';\nimport { CollectionChange } from '../interfaces/collection-subscription.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseCollectionSubscriptionService implements ICollectionSubscription {\n  private db;\n  private subscriptions: Map>> = new Map();\n  private unsubscribeFunctions: Map void> = new Map();\n\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n  }\n\n  subscribe(collectionName: string): Observable> {\n    if (this.subscriptions.has(collectionName)) {\n      return this.subscriptions.get(collectionName)!.asObservable();\n    }\n\n    const subject = new Subject>();\n    this.subscriptions.set(collectionName, subject);\n\n    const unsubscribe = onSnapshot(\n      collection(this.db, collectionName),\n      (snapshot: QuerySnapshot) => {\n        snapshot.docChanges().forEach(change => {\n          const changeData: CollectionChange = {\n            type: change.type as 'added' | 'modified' | 'removed',\n            id: change.doc.id\n          };\n          \n          if (change.type !== 'removed') {\n            changeData.data = this.mapping.getOne({\n              id: change.doc.id,\n              ...change.doc.data()\n            } as T);\n          }\n          \n          subject.next(changeData);\n        });\n      },\n      error => {\n        console.error(`Error en suscripción a ${collectionName}:`, error);\n        subject.error(error);\n      }\n    );\n\n    this.unsubscribeFunctions.set(collectionName, unsubscribe);\n    return subject.asObservable();\n  }\n\n  unsubscribe(collectionName: string): void {\n    const unsubscribe = this.unsubscribeFunctions.get(collectionName);\n    if (unsubscribe) {\n      unsubscribe();\n      this.unsubscribeFunctions.delete(collectionName);\n    }\n\n    const subject = this.subscriptions.get(collectionName);\n    if (subject) {\n      subject.complete();\n      this.subscriptions.delete(collectionName);\n    }\n  }\n\n  ngOnDestroy() {\n    // Limpiar todas las suscripciones al destruir el servicio\n    this.unsubscribeFunctions.forEach(unsubscribe => unsubscribe());\n    this.subscriptions.forEach(subject => subject.complete());\n    this.unsubscribeFunctions.clear();\n    this.subscriptions.clear();\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseComment.html":{"url":"interfaces/FirebaseComment.html","title":"interface - FirebaseComment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/comments-mapping-firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            reaction\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reaction:     \"like\" | \"dislike\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"like\" | \"dislike\" | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Comment } from \"../../models/comment.model\";\nimport { doc, DocumentReference, Firestore, getFirestore } from \"firebase/firestore\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\n\nexport interface FirebaseComment {\n  text: string;\n  reaction: 'like' | 'dislike' | null;\n  serieId: DocumentReference;\n  userId: string;\n  createdAt: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsMappingFirebaseService implements IBaseMapping {\n    \n  private db: Firestore;\n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig));\n  }\n\n  setAdd(data: Comment): FirebaseComment {\n    let dataMapping: FirebaseComment = {\n      text: data.text,\n      reaction: data.reaction,\n      serieId: doc(this.db, 'series', data.serieId),\n      userId: data.userId || '',\n      createdAt: data.createdAt || new Date().toISOString()\n    };\n    return dataMapping;\n  }\n  \n  setUpdate(data: Partial): Partial {\n    const result: any = {};\n    \n    if (data.text !== undefined) result.text = data.text;\n    if (data.reaction !== undefined) result.reaction = data.reaction;\n    if (data.serieId !== undefined) result.serieId = doc(this.db, 'series', data.serieId);\n    if (data.userId !== undefined) result.userId = data.userId;\n    \n    return result;\n  }\n  \n  getOne(data: { id: string } & FirebaseComment): Comment {\n    return {\n      id: data.id,\n      text: data.text,\n      reaction: data.reaction,\n      serieId: data.serieId?.id,\n      userId: data.userId,\n      createdAt: data.createdAt\n    };\n  }\n  \n  getPaginated(page: number, pageSize: number, total: number, data: ({id:string} & FirebaseComment)[]): Paginated {\n    return {\n      page,\n      pageSize,\n      pages: Math.ceil(total / pageSize),\n      data: data.map(item => this.getOne(item))\n    };\n  }\n  \n  getAdded(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n  \n  getUpdated(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n  \n  getDeleted(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseMediaService.html":{"url":"injectables/FirebaseMediaService.html","title":"injectable - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseMediaService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, auth: IAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-media.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseMediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseMediaService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-media.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { \n  getStorage, \n  ref, \n  uploadBytes,\n  getDownloadURL,\n  StorageReference \n} from \"firebase/storage\";\nimport { from, map, Observable, switchMap } from \"rxjs\";\nimport { AUTH_TOKEN, FIREBASE_CONFIG_TOKEN } from \"../../repositories/repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\nimport { IAuthentication } from \"../interfaces/authentication.interface\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseMediaService extends BaseMediaService {\n  private storage;\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(AUTH_TOKEN) private auth: IAuthentication\n  ) {\n    super();\n    const app = initializeApp(firebaseConfig);\n    this.storage = getStorage(app);\n  }\n  public upload(blob: Blob): Observable {\n    return from(this.auth.getCurrentUser()).pipe(\n      switchMap(user => {\n        if (!user) throw new Error('Usuario no autenticado');\n        \n        const fileName = `series/${Date.now()}_${Math.random().toString(36).substring(2)}`;\n        const storageRef: StorageReference = ref(this.storage, fileName);\n        const metadata = {\n          contentType: blob.type,\n          customMetadata: {\n            'uploaded-by': user.id || 'anonymous'\n          }\n        };\n        return from(uploadBytes(storageRef, blob, metadata)).pipe(\n          switchMap(snapshot => getDownloadURL(snapshot.ref)),\n          map(url => [url])\n        );\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseSeason.html":{"url":"interfaces/FirebaseSeason.html","title":"interface - FirebaseSeason","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseSeason\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-season.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            serieId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebaseSeason{\n    name:string,\n    numSeason:string,\n    numEpisodes:number,\n    releaseDate:Date,\n    rating:number,\n    serieId?:DocumentReference,\n    user:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseSerie.html":{"url":"interfaces/FirebaseSerie.html","title":"interface - FirebaseSerie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseSerie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-serie.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FirebaseSerie{\n    name:string,\n    synopsis:string,\n    releaseYear:number,\n    rating:number,\n    picture?: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Formats.html":{"url":"interfaces/Formats.html","title":"interface - Formats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Formats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            large\n                                        \n                                \n                                \n                                        \n                                            medium\n                                        \n                                \n                                \n                                        \n                                            small\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        large:         Large\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Large\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medium:         Medium\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Medium\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        small:         Small\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Small\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         Thumbnail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thumbnail\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { HomePage } from './home.page';\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    HomePageRoutingModule,\n    MatCardModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [HomePage],\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthMapping.html":{"url":"interfaces/IAuthMapping.html","title":"interface - IAuthMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/auth-mapping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        me\n                                    \n                                \n                                \n                                    \n                                        signIn\n                                    \n                                \n                                \n                                    \n                                        signInPayload\n                                    \n                                \n                                \n                                    \n                                        signUp\n                                    \n                                \n                                \n                                    \n                                        signUpPayload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface IAuthMapping{\n    signInPayload(payload:SignInPayload):any;\n    signUpPayload(payload:SignUpPayload):any;\n    signIn(response:any):User;\n    signUp(response:any):User;\n    me(response:any):User;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthentication.html":{"url":"interfaces/IAuthentication.html","title":"interface - IAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/authentication.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurrentUser\n                                    \n                                \n                                \n                                    \n                                        me\n                                    \n                                \n                                \n                                    \n                                        signIn\n                                    \n                                \n                                \n                                    \n                                        signOut\n                                    \n                                \n                                \n                                    \n                                        signUp\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(registerPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface IAuthentication{\n    signIn(authPayload:any):Observable;\n    signUp(registerPayload:any):Observable;\n    signOut():Observable;\n    me():Observable;\n    getCurrentUser():Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseMapping.html":{"url":"interfaces/IBaseMapping.html","title":"interface - IBaseMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-mapping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAdded\n                                    \n                                \n                                \n                                    \n                                        getDeleted\n                                    \n                                \n                                \n                                    \n                                        getOne\n                                    \n                                \n                                \n                                    \n                                        getPaginated\n                                    \n                                \n                                \n                                    \n                                        getUpdated\n                                    \n                                \n                                \n                                    \n                                        setAdd\n                                    \n                                \n                                \n                                    \n                                        setUpdate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\n\nexport interface IBaseMapping {\n  getPaginated(page:number, pageSize: number, pages:number, data:any):Paginated;\n  getOne(data:any):T;\n  getAdded(data:any):T;\n  getUpdated(data:any):T;\n  getDeleted(data:any):T;\n  setAdd(data:T):any;\n  setUpdate(data:any):any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseRepository.html":{"url":"interfaces/IBaseRepository.html","title":"interface - IBaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nexport interface SearchParams {\n  [key: string]: string; // O el tipo que necesites para los valores\n}\nexport interface IBaseRepository {\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable; // Retorna el ID generado\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseService.html":{"url":"interfaces/IBaseService.html","title":"interface - IBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/base-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Paginated } from '../../models/paginated.model';\nimport { SearchParams } from '../../repositories/intefaces/base-repository.interface';\n\nexport interface IBaseService {\n  getAll():Observable;\n  getAll(page:number, pageSize:number): Observable>;\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionSubscription.html":{"url":"interfaces/ICollectionSubscription.html","title":"interface - ICollectionSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/collection-subscription.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/collection-subscription.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/collection-subscription.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Model } from \"../../models/base.model\";\n\nexport interface CollectionChange {\n  type: 'added' | 'modified' | 'removed';\n  data?: T;\n  id: string;\n}\n\nexport interface ICollectionSubscription {\n  subscribe(collectionName: string): Observable>;\n  unsubscribe(collectionName: string): void;\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommentsRepository.html":{"url":"interfaces/ICommentsRepository.html","title":"interface - ICommentsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommentsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/comments-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCommentsBySerieId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentsBySerieId\n                        \n                    \n                \n            \n            \n                \ngetCommentsBySerieId(serieId: string, page?: number, pageSize?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/comments-repository.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Comment } from \"../../models/comment.model\";\nimport { Observable } from \"rxjs\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface ICommentsRepository extends IBaseRepository {\n    getCommentsBySerieId(serieId: string, page?: number, pageSize?: number): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommentsService.html":{"url":"interfaces/ICommentsService.html","title":"interface - ICommentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/comments-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCommentsBySerieId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentsBySerieId\n                        \n                    \n                \n            \n            \n                \ngetCommentsBySerieId(serieId: string, page?: number, pageSize?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/comments-service.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Comment } from '../../models/comment.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ICommentsService extends IBaseService {\n  getCommentsBySerieId(serieId: string, page?: number, pageSize?: number): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeasonsRepository.html":{"url":"interfaces/ISeasonsRepository.html","title":"interface - ISeasonsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISeasonsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/seasons-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Season } from \"../../models/season.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface ISeasonsRepository extends IBaseRepository{\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeasonsService.html":{"url":"interfaces/ISeasonsService.html","title":"interface - ISeasonsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISeasonsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/seasons-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getByUserId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByUserId\n                        \n                    \n                \n            \n            \n                \ngetByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/seasons-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Season } from '../../models/season.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ISeasonsService extends IBaseService {\n  // Métodos específicos si los hay\n  getByUserId(userId: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeriesRepository.html":{"url":"interfaces/ISeriesRepository.html","title":"interface - ISeriesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISeriesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/series-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface ISeriesRepository extends IBaseRepository{\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeriesService.html":{"url":"interfaces/ISeriesService.html","title":"interface - ISeriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISeriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/series-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n\n\n\n    \n\n\n    \n        import { Serie } from '../../models/serie.model';\nimport { Season } from '../../models/season.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ISeriesService extends IBaseService {\n  // Métodos específicos si los hay\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStrapiAuthentication.html":{"url":"interfaces/IStrapiAuthentication.html","title":"interface - IStrapiAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStrapiAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/strapi-authentication.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IAuthentication\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/strapi-authentication.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { IAuthentication } from \"./authentication.interface\";\n\nexport interface IStrapiAuthentication extends IAuthentication{\n    getToken():string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITasksRepository.html":{"url":"interfaces/ITasksRepository.html","title":"interface - ITasksRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITasksRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/tasks-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { IBaseRepository } from \"./base-repository.interface\";\nimport { Task } from \"../../models/task.model\";\nexport interface ITasksRepository extends IBaseRepository{\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITasksService.html":{"url":"interfaces/ITasksService.html","title":"interface - ITasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/tasks-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n\n\n\n    \n\n\n    \n        import { Task } from '../../models/task.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ITasksService extends IBaseService {\n  // Métodos específicos si los hay\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonServerRepositoryService.html":{"url":"injectables/JsonServerRepositoryService.html","title":"injectable - JsonServerRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsonServerRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/json-server-repository.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepositoryHttpService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                delete\n                            \n                            \n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/json-server-repository.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:62\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\nexport interface PaginatedRaw {\n  first: number\n  prev: number|null\n  next: number|null\n  last: number\n  pages: number\n  items: number\n  data: T[]\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonServerRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(AUTH_TOKEN) auth: IAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `${k}_like=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}/?_page=${page}&_per_page=${pageSize}&${search}`)\n        .pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.pages, res.data);\n        }));\n    }\n    else{\n      return this.http.get(\n        `${this.apiUrl}/${this.resource}?&${search}`)\n        .pipe(map(res=>{\n          return res.map((elem:any)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n    \n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity)).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.patch(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity)).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/language.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultLang\n                            \n                            \n                                    Private\n                                    Readonly\n                                LANG_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getCurrentLang\n                            \n                            \n                                getStoredLanguage\n                            \n                            \n                                storeLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/language.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLang\n                        \n                    \n                \n            \n            \n                \ngetCurrentLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStoredLanguage\n                        \n                    \n                \n            \n            \n                \ngetStoredLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storeLanguage\n                        \n                    \n                \n            \n            \n                \nstoreLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'español'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/language.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        LANG_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'selectedLanguage'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/language.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  private readonly LANG_KEY = 'selectedLanguage';\n  private defaultLang = 'español';\n\n  constructor(private translate: TranslateService) {\n    translate.addLangs(['español', 'ingles']);\n    translate.setDefaultLang('español');\n    \n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang?.match(/español|ingles/) ? browserLang : 'español');\n\n    const storedLang = this.getStoredLanguage();\n    this.changeLanguage(storedLang);\n  }\n\n  changeLanguage(lang: string) {\n    this.translate.use(lang);\n  }\n\n  getCurrentLang(): string {\n    return this.translate.currentLang;\n  }\n\n  getStoredLanguage(): string {\n    return localStorage.getItem(this.LANG_KEY) || this.defaultLang;\n  }\n\n  storeLanguage(lang: string): void {\n    localStorage.setItem(this.LANG_KEY, lang);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Large.html":{"url":"interfaces/Large.html","title":"interface - Large","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Large\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                passwordFieldType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onForgotPassword\n                            \n                            \n                                onRegister\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, authSvc: BaseAuthenticationService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onForgotPassword\n                        \n                    \n                \n            \n            \n                \nonForgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentToast(message: string, color: \"success\" | \"danger\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                        \"success\" | \"danger\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/login/login.page.ts:81\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/login/login.page.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n  passwordFieldType: string = 'password';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route:ActivatedRoute,\n    private authSvc:BaseAuthenticationService,\n    private toastController: ToastController\n\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  async presentToast(message: string, color: 'success' | 'danger') {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n      position: 'bottom',\n      color: color,\n      buttons: [\n        {\n          icon: 'close-outline',\n          role: 'cancel'\n        }\n      ]\n    });\n    await toast.present();\n  }\n\n  togglePasswordVisibility() {\n    this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.authSvc.signIn(this.loginForm.value).subscribe({\n        next: async resp => {\n          await this.presentToast('¡Inicio de sesión exitoso!', 'success');\n          const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n          this.router.navigateByUrl(returnUrl);\n        },\n        error: err => {\n          let errorMessage = 'Error de inicio de sesión';\n          if (err.error?.error?.message) {\n            if (err.error.error.message === 'Invalid identifier or password') {\n              errorMessage = 'Email o contraseña incorrectos';\n            }\n          }\n          this.presentToast(errorMessage, 'danger');\n        }\n      });\n    }\n  }\n\n  onRegister(){\n    this.loginForm.reset();\n    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n    this.router.navigate(['/register'], {queryParams:{ returnUrl:returnUrl}, replaceUrl:true});\n  }\n\n  onForgotPassword(){\n\n  }\n\n  get email(){\n    return this.loginForm.controls['email'];\n  }\n\n  get password(){\n    return this.loginForm.controls['password'];\n  }\n}\n\n    \n\n    \n        \n  \n    Iniciar Sesión\n  \n\n\n\n  \n    \n      \n    \n    \n      \n        \n          \n            Iniciar sesión\n          \n        \n      \n      \n        \n          \n            ¿No tienes cuenta?\n            Regístrate\n          \n        \n      \n      \n        \n        \n      \n      \n        \n        \n        \n        \n      \n      \n        *Debe introducir un email\n        *Debe introducir un email correcto\n      \n      \n        *Debe introducir una contraseña\n      \n      \n        Iniciar sesión\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .logo-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 24px;\n  \n  .app-logo {\n    width: 120px;\n    height: 120px;\n    object-fit: contain;\n  }\n}\n\n.login-container,\n.register-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  height: 100%;\n  padding: 24px;\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  \n  form {\n    width: 100%;\n    max-width: 400px;\n    height: auto;\n    padding: 24px;\n    border-radius: 16px;\n    background: linear-gradient(145deg, #ffffff, #fff5f2);\n    border: 1px solid rgba(255, 87, 34, 0.1);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    \n    h1 {\n      margin-bottom: 0px;\n      font-size: 28px;\n      font-weight: 600;\n      color: #ff5722;\n    }\n  }\n\n  ion-item {\n    --padding-start: 12px;\n    --padding-end: 12px;\n    --border-radius: 8px;\n    --background: var(--ion-item-background);\n    margin-bottom: 16px;\n    --highlight-height: 2px;\n    \n    &:last-of-type {\n      margin-bottom: 24px;\n    }\n\n    ion-icon {\n      color: var(--ion-color-medium);\n      margin-right: 8px;\n      font-size: 20px;\n    }\n\n    ion-input {\n      --padding-start: 8px;\n      font-size: 16px;\n    }\n  }\n\n  ion-button {\n    --background: linear-gradient(45deg, #ff5722, #ff9800);\n    --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n    --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n    --color: #ffffff;\n  }\n\n  ion-text.input-error {\n    margin: -12px 0 16px 16px;\n    display: block;\n    \n    p {\n      margin: 4px 0;\n      font-size: 12px;\n      color: red;\n    }\n  }\n\n  ion-grid ion-col {\n    font-size: 14px;\n    color: var(--ion-color-medium);\n  }\n\n  @media (max-width: 576px) {\n    padding: 16px;\n    \n    form {\n      padding: 16px;\n      \n      h1 {\n        font-size: 24px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Iniciar Sesión                                                          Iniciar sesión                                                            ¿No tienes cuenta?            Regístrate                                                                                                              *Debe introducir un email        *Debe introducir un email correcto                    *Debe introducir una contraseña                    Iniciar sesión            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaRaw.html":{"url":"interfaces/MediaRaw.html","title":"interface - MediaRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiMedia\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMedia\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Medium.html":{"url":"interfaces/Medium.html","title":"interface - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Medium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta.html":{"url":"interfaces/Meta.html","title":"interface - Meta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta-1.html":{"url":"interfaces/Meta-1.html","title":"interface - Meta-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta-2.html":{"url":"interfaces/Meta-2.html","title":"interface - Meta-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/base.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Model{\n    id:string,\n    createdAt?:string,\n    updatedAt?:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MySeasonsService.html":{"url":"injectables/MySeasonsService.html","title":"injectable - MySeasonsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MySeasonsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-seasons.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/my-seasons.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/my-seasons.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://localhost:3000/seasons\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/my-seasons.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SeasonRaw {\n    id: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeasonsService{\n\n    private apiUrl:string = \"http://localhost:3000/seasons\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SeasonRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    numSeason:d.numSeason, \n                    numEpisodes:d.numEpisodes, \n                    releaseDate:d.releaseDate, \n                    rating:d.rating,\n                    serieId:d.serieId\n                    };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MySeriesService.html":{"url":"injectables/MySeriesService.html","title":"injectable - MySeriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MySeriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-series.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/my-series.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/my-series.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://localhost:3000/series\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/my-series.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\nimport { Serie } from \"../models/serie.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SerieRaw {\n    id: string\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeriesService{\n\n    private apiUrl:string = \"http://localhost:3000/series\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SerieRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    synopsis:d.synopsis, \n                    releaseYear:d.releaseYear, \n                    rating:d.rating, \n                };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OnlyAllowedCharactersDirective.html":{"url":"directives/OnlyAllowedCharactersDirective.html","title":"directive - OnlyAllowedCharactersDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OnlyAllowedCharactersDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/only-allowed-characters.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appOnlyAllowedCharacters]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appOnlyAllowedCharacters\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/only-allowed-characters.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appOnlyAllowedCharacters\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/only-allowed-characters.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/only-allowed-characters.directive.ts:11\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('input', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/directives/only-allowed-characters.directive.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyAllowedCharacters]'\n})\nexport class OnlyAllowedCharactersDirective {\n  @Input('appOnlyAllowedCharacters') allowedCharacters: string = '';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('input', ['$event']) onInput(event: Event): void {\n    const input = this.el.nativeElement as HTMLInputElement;\n    const regex = new RegExp(`[^${this.allowedCharacters}]`, 'g');\n    const filteredValue = input.value.replace(regex, '');\n\n    if (input.value !== filteredValue) {\n      input.value = filteredValue;\n      event.stopPropagation();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/paginated.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated{\n    data:T[];\n    page:number;\n    pages:number;\n    pageSize:number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw.html":{"url":"interfaces/PaginatedRaw.html","title":"interface - PaginatedRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-seasons.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SeasonRaw {\n    id: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeasonsService{\n\n    private apiUrl:string = \"http://localhost:3000/seasons\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SeasonRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    numSeason:d.numSeason, \n                    numEpisodes:d.numEpisodes, \n                    releaseDate:d.releaseDate, \n                    rating:d.rating,\n                    serieId:d.serieId\n                    };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw-1.html":{"url":"interfaces/PaginatedRaw-1.html","title":"interface - PaginatedRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-series.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\nimport { Serie } from \"../models/serie.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SerieRaw {\n    id: string\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeriesService{\n\n    private apiUrl:string = \"http://localhost:3000/series\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SerieRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    synopsis:d.synopsis, \n                    releaseYear:d.releaseYear, \n                    rating:d.rating, \n                };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw-2.html":{"url":"interfaces/PaginatedRaw-2.html","title":"interface - PaginatedRaw-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/json-server-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\nexport interface PaginatedRaw {\n  first: number\n  prev: number|null\n  next: number|null\n  last: number\n  pages: number\n  items: number\n  data: T[]\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonServerRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(AUTH_TOKEN) auth: IAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `${k}_like=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}/?_page=${page}&_per_page=${pageSize}&${search}`)\n        .pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.pages, res.data);\n        }));\n    }\n    else{\n      return this.http.get(\n        `${this.apiUrl}/${this.resource}?&${search}`)\n        .pipe(map(res=>{\n          return res.map((elem:any)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n    \n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity)).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.patch(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity)).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw-3.html":{"url":"interfaces/PaginatedRaw-3.html","title":"interface - PaginatedRaw-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Data[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers:[PICTURE_SELECTABLE_VALUE_ACCESSOR]\n})\nexport class PictureSelectableComponent  implements OnInit, ControlValueAccessor, OnDestroy {\n\n  private _picture = new BehaviorSubject(\"\");\n  public picture$ = this._picture.asObservable();\n  isDisabled:boolean = false;\n  hasValue:boolean = false;\n  constructor(\n    private pictureModal:ModalController\n  ) { }\n\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  ngOnInit() {}\n\n  propagateChange = (obj: any) => {\n  }\n\n  writeValue(obj: any): void {\n    if(obj){\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  changePicture(picture:string){\n    this.hasValue = picture!='';\n    this._picture.next(picture);\n    this.propagateChange(picture);\n  }\n\n  onChangePicture(event:Event, fileLoader:HTMLInputElement){\n    event.stopPropagation();\n    fileLoader.onchange = ()=>{\n      if(fileLoader.files && fileLoader.files?.length>0){\n        var file = fileLoader.files[0];\n        var reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string);\n        };\n        reader.onerror = (error) =>{\n          console.log(error);\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n    fileLoader.click();\n  }\n\n  onDeletePicture(event:Event){\n    event.stopPropagation();\n    this.changePicture('');\n  }\n\n  close(){\n    this.pictureModal?.dismiss();\n  }\n\n}\n\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            \n              \n            \n          \n        \n        \n            \n        \n      \n    \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture {\n    min-width: 300px;\n    height: 300px;\n    border-radius: 16px;\n    overflow: hidden;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n    \n    ion-img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      cursor: pointer;\n      transition: transform 0.3s ease;\n  \n      &:hover {\n        transform: scale(1.05);\n      }\n    }\n  \n    ion-button.picture-button {\n      margin: 0;\n      --padding-start: 0;\n      --padding-end: 0;\n      --background: linear-gradient(45deg, #ff5722, #ff9800);\n      \n      .button-native {\n        padding: 0 !important;\n      }\n    }\n  }\n  \n  ion-modal.auto-height {\n    &.bottom {\n      align-items: flex-end;\n    }\n  \n    --height: auto;\n    --background: rgba(255, 87, 34, 0.1);\n  \n    .ion-page {\n      position: relative;\n      display: block;\n      contain: content;\n      border-radius: 16px 16px 0 0;\n      overflow: hidden;\n  \n      .inner-content {\n        max-height: 80vh;\n        overflow: auto;\n        padding: 16px;\n        background: white;\n        \n        ion-list {\n          background: transparent;\n        }\n  \n        ion-item {\n          --background: transparent;\n          --border-color: rgba(255, 87, 34, 0.2);\n          margin-bottom: 8px;\n          border-radius: 8px;\n        }\n      }\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Port.html":{"url":"classes/Port.html","title":"class - Port","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Port\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Country\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { AlertController, AnimationController, InfiniteScrollCustomEvent, ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SeasonViewComponent } from 'src/app/shared/components/season-view/season-view.component';\nimport { SerieViewComponent } from 'src/app/shared/components/serie-view/serie-view.component';\nimport { ScreenReader } from '@capacitor/screen-reader';\n\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _series:BehaviorSubject = new BehaviorSubject([]);\n  series$:Observable = this._series.asObservable();\n  _seasons:BehaviorSubject = new BehaviorSubject([]);\n  seasons$:Observable = this._seasons.asObservable();\n\n  isWeb: boolean = false;\n\n  constructor(\n    private seasonsSvc:SeasonsService,\n    private serieSvc:SeriesService,\n    private platform: Platform,\n    private modalCtrl:ModalController,\n    private translate: TranslateService,\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeries();\n    this.loadSeasons();\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSeason: any = null;\n  selectedSerie: any = null;\n  isAnimating = false;\n  page:number = 1;\n  pageSize:number = 25;\n  pages:number = 0;\n\n\n  loadSeries(){\n    this.page = 1;\n    this.serieSvc.getSeriesWithSeasons(this.page, this.pageSize).subscribe({\n      next:(response:Paginated)=>{\n\n        const seriesWithSortedSeasons = response.data.map(serie => ({\n          ...serie,\n          seasons: serie.seasons?.sort((a, b) => \n            (a.name || '').localeCompare(b.name || '')\n          )\n        }));\n\n        this._series.next([...seriesWithSortedSeasons]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n  loadMoreSeries(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page )=>{\n\n          const seriesWithSortedSeasons = response.data.map(serie => ({\n            ...serie,\n            seasons: serie.seasons?.sort((a, b) => \n              (a.name || '').localeCompare(b.name || '')\n            )\n          }));\n\n          this._series.next([...this._series.value, ...seriesWithSortedSeasons]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n\n  loadSeasons(){\n    this.page=1;\n    this.seasonsSvc.getAll(this.page, this.pageSize).subscribe({\n      next:(response:Paginated)=>{\n        this._seasons.next([...response.data]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n\n  loadMoreSeasons(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page)=>{\n          this._seasons.next([...this._seasons.value, ...response.data]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n  async openSeasonDetail(season: any) {\n    await this.presentModalSeason(season);\n    this.selectedSeason = season;\n  }\n  private async presentModalSeason(season:Season|undefined=undefined){\n    const modal = await this.modalCtrl.create({\n      component: SeasonViewComponent,\n      componentProps: {\n        season: season\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async openSerieDetail(serie: any) {\n    await this.presentModalSerie(serie);\n    this.selectedSerie = serie;\n  }\n  private async presentModalSerie(serie:Serie|undefined=undefined){\n    const modal = await this.modalCtrl.create({\n      component: SerieViewComponent,\n      componentProps: {\n        serie: serie\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async readSerieTitle(serieTitle: string) {\n    await ScreenReader.speak({ value: serieTitle });\n  }\n  \n  onIonInfinite(ev:InfiniteScrollCustomEvent) {\n    this.loadMoreSeries(ev.target);\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Port-1.html":{"url":"classes/Port-1.html","title":"class - Port-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Port\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/series/series.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Country\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  AlertController,\n  AnimationController,\n  InfiniteScrollCustomEvent,\n  ModalController,\n  Platform,\n} from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SerieModalComponent } from 'src/app/shared/components/serie-modal/serie-modal.component';\nimport { SERIES_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { CollectionChange } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { FirebaseAuthenticationService } from 'src/app/core/services/impl/firebase-authentication.service';\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-series',\n  templateUrl: './series.page.html',\n  styleUrls: ['./series.page.scss'],\n})\nexport class SeriesPage implements OnInit {\n  isAdmin = false;\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _series: BehaviorSubject = new BehaviorSubject([]);\n  series$: Observable = this._series.asObservable();\n  _filteredSeries: BehaviorSubject = new BehaviorSubject([]);\n  filteredSeries$: Observable = this._filteredSeries.asObservable();\n  searchTerm: string = '';\n\n  public alertYesNoButtons = [\n    {\n      text: 'No',\n      role: 'no',\n    },\n    {\n      text: 'Yes',\n      role: 'yes',\n    },\n  ];\n  isWeb: boolean = false;\n  private loadedIds: Set = new Set();\n\n  constructor(\n    private animationCtrl: AnimationController,\n    private seasonsSvc: SeasonsService,\n    private serieSvc: SeriesService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: FirebaseAuthenticationService,\n    @Inject(SERIES_COLLECTION_SUBSCRIPTION_TOKEN)\n    private seriesSubscription: ICollectionSubscription\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeries();\n\n    this.authSvc\n      .getCurrentUser()\n      .then((user) => {\n        this.isAdmin = user.admin;\n      })\n      .catch(() => {\n        this.isAdmin = false;\n      });\n\n    this._series.subscribe((series) => {\n      this._filteredSeries.next(series);\n    });\n\n    this.seriesSubscription\n      .subscribe('series')\n      .subscribe((change: CollectionChange) => {\n        const currentSeries = [...this._series.value];\n\n        if (!this.loadedIds.has(change.id) && change.type !== 'added') {\n          return;\n        }\n\n        switch (change.type) {\n          case 'added':\n            this.loadedIds.add(change.id);\n\n            const existingIndex = currentSeries.findIndex(\n              (p) => p.id === change.id\n            );\n            if (existingIndex === -1) {\n              currentSeries.push(change.data!);\n              currentSeries.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'modified':\n            const index = currentSeries.findIndex((p) => p.id === change.id);\n            if (index >= 0) {\n              currentSeries[index] = change.data!;\n              currentSeries.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'removed':\n            const removeIndex = currentSeries.findIndex(\n              (p) => p.id === change.id\n            );\n            if (removeIndex >= 0) {\n              currentSeries.splice(removeIndex, 1);\n              this.loadedIds.delete(change.id);\n            }\n            break;\n        }\n\n        this._series.next(currentSeries);\n      });\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSerie: any = null;\n  isAnimating = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n\n    if (!searchTerm) {\n      this._filteredSeries.next(this._series.value);\n      return;\n    }\n\n    const filtered = this._series.value.filter((serie) =>\n      serie.name.toLowerCase().includes(searchTerm)\n    );\n\n    this._filteredSeries.next(filtered);\n  }\n\n  loadSeries() {\n    this.page = 1;\n    this.serieSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        response.data.forEach((serie) => this.loadedIds.add(serie.id));\n\n        const sortedSeries = response.data.sort((a, b) =>\n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._series.next([...sortedSeries]);\n        this._filteredSeries.next([...sortedSeries]);\n        this.page++;\n        this.pages = response.pages;\n      },\n    });\n  }\n\n  loadMoreSeries(notify: HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          response.data.forEach((serie) => this.loadedIds.add(serie.id));\n\n          const updatedSeries = [...this._series.value, ...response.data].sort(\n            (a, b) => (a.name || '').localeCompare(b.name || '')\n          );\n          this._series.next(updatedSeries);\n\n          if (this.searchTerm) {\n            const filtered = updatedSeries.filter((serie) =>\n              serie.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeries.next(filtered);\n          } else {\n            this._filteredSeries.next(updatedSeries);\n          }\n          this.page++;\n          notify?.complete();\n        },\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n\n  async openSerieDetail(serie: any, index: number) {\n    await this.presentModalSerie('edit', serie);\n    this.selectedSerie = serie;\n  }\n\n  onIonInfinite(ev: InfiniteScrollCustomEvent) {\n    this.loadMoreSeries(ev.target);\n  }\n\n  private async presentModalSerie(\n    mode: 'new' | 'edit',\n    serie: Serie | undefined = undefined\n  ) {\n    let _series: Serie[] = await lastValueFrom(this.serieSvc.getAll());\n    const modal = await this.modalCtrl.create({\n      component: SerieModalComponent,\n      componentProps:\n        mode == 'edit'\n          ? {\n              serie: serie,\n              series: _series,\n            }\n          : {\n              series: _series,\n            },\n    });\n    modal.onDidDismiss().then((response: any) => {\n      switch (response.role) {\n        case 'new':\n          this.serieSvc.add(response.data).subscribe({\n            next: (res) => {\n              this.loadSeries();\n            },\n            error: (err) => {},\n          });\n          break;\n        case 'edit':\n          this.serieSvc.update(serie!.id, response.data).subscribe({\n            next: (res) => {\n              this.loadSeries();\n            },\n            error: (err) => {},\n          });\n          break;\n        default:\n          break;\n      }\n    });\n    await modal.present();\n  }\n\n  async onAddSerie() {\n    await this.presentModalSerie('new');\n  }\n\n  async onDeleteSerie(serie: Serie) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate\n        .get('SERIES.MESSAGES.DELETE_CONFIRM')\n        .toPromise(),\n      cssClass: 'custom-delete-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'yes',\n          handler: () => {\n            this.serieSvc.delete(serie.id).subscribe({\n              next: (response) => {\n                this.loadSeries();\n              },\n              error: (err) => {},\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Port-2.html":{"url":"classes/Port-2.html","title":"class - Port-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Port\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/seasons/seasons.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Country\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  AlertController,\n  AnimationController,\n  InfiniteScrollCustomEvent,\n  ModalController,\n  Platform,\n} from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SeasonModalComponent } from 'src/app/shared/components/season-modal/season-modal.component';\nimport { SEASONS_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { CollectionChange } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { FirebaseAuthenticationService } from 'src/app/core/services/impl/firebase-authentication.service';\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-seasons',\n  templateUrl: './seasons.page.html',\n  styleUrls: ['./seasons.page.scss'],\n})\nexport class SeasonsPage implements OnInit {\n  isAdmin = false;\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _seasons: BehaviorSubject = new BehaviorSubject([]);\n  seasons$: Observable = this._seasons.asObservable();\n  _filteredSeasons: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  filteredSeasons$: Observable = this._filteredSeasons.asObservable();\n  searchTerm: string = '';\n\n  public alertYesNoButtons = [\n    {\n      text: 'No',\n      role: 'no',\n    },\n    {\n      text: 'Yes',\n      role: 'yes',\n    },\n  ];\n  isWeb: boolean = false;\n  private loadedIds: Set = new Set();\n\n  constructor(\n    private animationCtrl: AnimationController,\n    private seasonsSvc: SeasonsService,\n    private serieSvc: SeriesService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: FirebaseAuthenticationService,\n    @Inject(SEASONS_COLLECTION_SUBSCRIPTION_TOKEN)\n    private seasonsSubscription: ICollectionSubscription\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeasons();\n\n    this.authSvc\n      .getCurrentUser()\n      .then((user) => {\n        this.isAdmin = user.admin;\n      })\n      .catch(() => {\n        this.isAdmin = false;\n      });\n\n    this._seasons.subscribe((seasons) => {\n      this._filteredSeasons.next(seasons);\n    });\n\n    this.seasonsSubscription\n      .subscribe('seasons')\n      .subscribe((change: CollectionChange) => {\n        const currentSeasons = [...this._seasons.value];\n\n        // Solo procesar cambios de documentos que ya tenemos cargados\n        if (!this.loadedIds.has(change.id) && change.type !== 'added') {\n          return;\n        }\n\n        switch (change.type) {\n          case 'added':\n            // Registrar el nuevo ID en nuestro conjunto de IDs cargados\n            this.loadedIds.add(change.id);\n\n            // Verificar si ya existe en nuestro array local\n            const existingIndex = currentSeasons.findIndex(\n              (p) => p.id === change.id\n            );\n            if (existingIndex === -1) {\n              currentSeasons.push(change.data!);\n              currentSeasons.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'modified':\n            const index = currentSeasons.findIndex((p) => p.id === change.id);\n            if (index >= 0) {\n              currentSeasons[index] = change.data!;\n              currentSeasons.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'removed':\n            const removeIndex = currentSeasons.findIndex(\n              (p) => p.id === change.id\n            );\n            if (removeIndex >= 0) {\n              currentSeasons.splice(removeIndex, 1);\n              this.loadedIds.delete(change.id);\n            }\n            break;\n        }\n\n        this._seasons.next(currentSeasons);\n      });\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSeason: any = null;\n  isAnimating = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n\n    if (!searchTerm) {\n      this._filteredSeasons.next(this._seasons.value);\n      return;\n    }\n\n    const filtered = this._seasons.value.filter((season) =>\n      season.name.toLowerCase().includes(searchTerm)\n    );\n\n    this._filteredSeasons.next(filtered);\n  }\n\n  loadSeasons() {\n    this.page = 1;\n    this.seasonsSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        // Actualizar el registro de IDs cargados\n        response.data.forEach((season) => this.loadedIds.add(season.id));\n\n        const sortedSeasons = response.data.sort((a, b) =>\n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._seasons.next([...sortedSeasons]);\n        this._filteredSeasons.next([...sortedSeasons]);\n        this.page++;\n        this.pages = response.pages;\n      },\n    });\n  }\n\n  loadMoreSeasons(notify: HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          // Actualizar el registro de IDs cargados\n          response.data.forEach((season) => this.loadedIds.add(season.id));\n\n          const updatedSeasons = [\n            ...this._seasons.value,\n            ...response.data,\n          ].sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n          this._seasons.next(updatedSeasons);\n\n          if (this.searchTerm) {\n            const filtered = updatedSeasons.filter((season) =>\n              season.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeasons.next(filtered);\n          } else {\n            this._filteredSeasons.next(updatedSeasons);\n          }\n          this.page++;\n          notify?.complete();\n        },\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n\n  async openSeasonDetail(season: any, index: number) {\n    await this.presentModalSeason('edit', season);\n    this.selectedSeason = season;\n  }\n\n  onIonInfinite(ev: InfiniteScrollCustomEvent) {\n    this.loadMoreSeasons(ev.target);\n  }\n\n  private async presentModalSeason(\n    mode: 'new' | 'edit',\n    season: Season | undefined = undefined\n  ) {\n    let _series: Serie[] = await lastValueFrom(this.serieSvc.getAll());\n    const modal = await this.modalCtrl.create({\n      component: SeasonModalComponent,\n      componentProps:\n        mode == 'edit'\n          ? {\n              season: season,\n              series: _series,\n            }\n          : {\n              series: _series,\n            },\n    });\n    modal.onDidDismiss().then((response: any) => {\n      switch (response.role) {\n        case 'new':\n          this.seasonsSvc.add(response.data).subscribe({\n            next: (res) => {\n              this.loadSeasons();\n            },\n            error: (err) => {},\n          });\n          break;\n        case 'edit':\n          this.seasonsSvc.update(season!.id, response.data).subscribe({\n            next: (res) => {\n              this.loadSeasons();\n            },\n            error: (err) => {},\n          });\n          break;\n        default:\n          break;\n      }\n    });\n    await modal.present();\n  }\n\n  async onAddSeason() {\n    await this.presentModalSeason('new');\n  }\n\n  async onDeleteSeason(season: Season) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate\n        .get('SEASONS.MESSAGES.DELETE_CONFIRM')\n        .toPromise(),\n      cssClass: 'custom-delete-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'yes',\n          handler: () => {\n            this.seasonsSvc.delete(season.id).subscribe({\n              next: (response) => {\n                this.loadSeasons();\n              },\n              error: (err) => {},\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/profile/profile.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminKeyHashed\n                            \n                            \n                                isUppercase\n                            \n                            \n                                registerForm\n                            \n                            \n                                selectedImage\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashString\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onImageSelected\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                toggleCase\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    name\n                                \n                                \n                                    surname\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: BaseAuthenticationService, mediaService: BaseMediaService, loadingController: LoadingController, toastController: ToastController, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/profile/profile.page.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaService\n                                                  \n                                                        \n                                                                        BaseMediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashString\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashString(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onImageSelected\n                        \n                    \n                \n            \n            \n                \n                        \n                    onImageSelected(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCase\n                        \n                    \n                \n            \n            \n                \ntoggleCase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminKeyHashed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUppercase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:208\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:212\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:216\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:220\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\nimport { User } from 'src/app/core/models/auth.model';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { BaseMediaService } from 'src/app/core/services/impl/base-media.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n  registerForm: FormGroup;\n  user?: User | null;\n  isUppercase: boolean = false;\n  selectedImage: string | null = null;\n  adminKeyHashed = 'a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825';\n\n  toggleCase() {\n    const usernameControl = this.registerForm.get('username');\n    if (usernameControl) {\n      const currentValue = usernameControl.value || '';\n      this.isUppercase = !this.isUppercase;\n      usernameControl.setValue(\n        this.isUppercase ? currentValue.toUpperCase() : currentValue.toLowerCase()\n      );\n    }\n  }\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: BaseAuthenticationService,\n    private mediaService: BaseMediaService,\n    private loadingController: LoadingController,\n    private toastController: ToastController,\n    private translateService: TranslateService,\n  ) {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      surname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      picture: [''],\n      adminKey: ['']\n    });\n  }\n\n  async onImageSelected(event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files[0]) {\n      const file = input.files[0];\n      const reader = new FileReader();\n      \n      reader.onload = (e) => {\n        this.selectedImage = e.target?.result as string;\n        this.registerForm.patchValue({\n          picture: this.selectedImage\n        });\n        this.registerForm.get('picture')?.markAsDirty();\n      };\n      \n      reader.readAsDataURL(file);\n    }\n  }\n\n  async hashString(str: string): Promise {\n    const buffer = new TextEncoder().encode(str);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  }\n\n  async ngOnInit() {\n    const loading = await this.loadingController.create({\n      spinner: 'circles',\n      message: 'Cargando perfil...'\n    });\n    await loading.present();\n\n    try {\n      // Obtener usuario con datos completos\n      const user = await this.authService.getCurrentUser();\n      \n      if (user) {\n        this.user = user;\n        this.registerForm.patchValue({\n          username: user.username,\n          name: user.name,\n          surname: user.surname,\n          email: user.email,\n          picture: user.picture\n        });\n      }\n    } catch (error) {\n      console.error('Error loading user:', error);\n      const toast = await this.toastController.create({\n        message: await lastValueFrom(this.translateService.get('COMMON.ERROR.LOAD')),\n        duration: 3000,\n        position: 'bottom',\n        color: 'danger'\n      });\n      await toast.present();\n    } finally {\n      await loading.dismiss();\n    }\n  }\n\n  async onSubmit() {\n    if (this.registerForm.valid && this.user) {\n      const loading = await this.loadingController.create({\n        spinner: 'circles',\n        duration: 2000\n      });\n      await loading.present();\n  \n      try {\n        // Verificar si el usuario NO es admin\n        if (!this.user.admin) {\n          const enteredKey = this.registerForm.value.adminKey?.trim();\n          if (enteredKey) {\n            const hashed = await this.hashString(enteredKey);\n            if (hashed === this.adminKeyHashed) {\n              this.user.admin = true;\n              const toast = await this.toastController.create({\n                message: await this.translateService.get('PROFILE.ADMIN_GRANTED').toPromise(),\n                duration: 3000,\n                position: 'bottom',\n                color: 'success'\n              });\n              await toast.present();\n              // Limpiar campo adminKey para no enviar al backend\n              this.registerForm.patchValue({ adminKey: '' });\n            } else {\n              const toast = await this.toastController.create({\n                message: await this.translateService.get('PROFILE.ADMIN_KEY_INVALID').toPromise(),\n                duration: 3000,\n                position: 'bottom',\n                color: 'danger'\n              });\n              await toast.present();\n              await loading.dismiss();\n              return; // Para no continuar si clave incorrecta\n            }\n          }\n        } else {\n          // Si ya es admin, mostrar mensaje\n          const toast = await this.toastController.create({\n            message: await this.translateService.get('PROFILE.ALREADY_ADMIN').toPromise(),\n            duration: 3000,\n            position: 'bottom',\n            color: 'primary'\n          });\n          await toast.present();\n        }\n  \n        const updatedUser: Partial = {};\n  \n        // Solo actualizar campos modificados excepto adminKey\n        Object.keys(this.registerForm.controls).forEach(key => {\n          if (key !== 'adminKey' && this.registerForm.get(key)?.dirty) {\n            updatedUser[key as keyof User] = this.registerForm.get(key)?.value;\n          }\n        });\n  \n        // Asegurarse de guardar el cambio de admin\n        if (this.user.admin) {\n          updatedUser.admin = true;\n        }\n  \n        // Manejo de imagen de perfil\n        if (this.selectedImage) {\n          const base64Response = await fetch(this.selectedImage);\n          const blob = await base64Response.blob();\n          const uploadResponse = await lastValueFrom(this.mediaService.upload(blob));\n          if (uploadResponse && uploadResponse.length > 0) {\n            updatedUser.picture = uploadResponse[0].toString();\n          }\n        }\n  \n        // Actualizar usuario en backend\n        await lastValueFrom(this.authService.updateUser(this.user.id, updatedUser));\n  \n        const toast = await this.toastController.create({\n          message: await this.translateService.get('COMMON.SUCCESS.SAVE').toPromise(),\n          duration: 3000,\n          position: 'bottom'\n        });\n        await toast.present();\n  \n      } catch (error) {\n        console.error(error);\n        const toast = await this.toastController.create({\n          message: await lastValueFrom(this.translateService.get('COMMON.ERROR.SAVE')),\n          duration: 3000,\n          position: 'bottom'\n        });\n        await toast.present();\n      } finally {\n        await loading.dismiss();\n      }\n    }\n  }\n  \n\n  get username() {\n    return this.registerForm.controls['username'];\n  }\n\n  get name(){\n    return this.registerForm.controls['name'];\n  }\n\n  get surname(){\n    return this.registerForm.controls['surname'];\n  }\n\n  get email(){\n    return this.registerForm.controls['email'];\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    {{ 'PROFILE.TITLE' | translate }}\n  \n\n\n\n  \n    \n      \n        \n          \n            \n          \n          \n        \n        \n          \n            \n              \n              \n                \n                \n                \n              \n              \n                \n                  {{ 'PERSON.ERRORS.NAME_REQUIRED' | translate }}\n                \n                \n                  {{ 'PERSON.ERRORS.NAME_MIN_LENGTH' | translate }}\n                \n              \n\n              \n              \n                \n                \n                \n              \n              \n                \n                  {{ 'PERSON.ERRORS.SURNAME_REQUIRED' | translate }}\n                \n                \n                  {{ 'PERSON.ERRORS.SURNAME_MIN_LENGTH' | translate }}\n                \n              \n\n              \n              \n                \n                \n                \n                \n                  {{ isUppercase ? 'Aa' : 'AA' }}\n                \n              \n              \n                \n                  {{ 'PERSON.ERRORS.USERNAME_REQUIRED' | translate }}\n                \n                \n                  {{ 'PERSON.ERRORS.USERNAME_MIN_LENGTH' | translate }}\n                \n              \n\n              \n              \n                \n                \n                \n              \n              \n                \n                  {{ 'PERSON.ERRORS.EMAIL_REQUIRED' | translate }}\n                \n                \n                  {{ 'PERSON.ERRORS.EMAIL_INVALID' | translate }}\n                \n              \n              \n                \n                \n                \n              \n\n              \n                {{ 'PROFILE.ALREADY_ADMIN' | translate }}\n              \n\n              \n                \n                  {{ 'PROFILE.UPDATE' | translate }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                .profile-container {\n    background-image: url('/assets/background-pattern.svg');\n    background-size: cover;\n    background-position: center;\n    min-height: 100%;\n    padding: 16px;\n\n    .profile-image-container {\n      display: flex;\n      justify-content: center;\n      margin: 8px;\n    }\n\n    .profile-avatar {\n      width: 150px;\n      height: 150px;\n      margin-bottom: 16px;\n      border: 3px solid #ff5722;\n      overflow: hidden;\n      cursor: pointer;\n      transition: transform 0.2s ease;\n  \n      &:hover {\n        transform: scale(1.05);\n      }\n  \n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n\n    .profile-header {\n      ion-toolbar {\n        --background: transparent;\n        \n        ion-title {\n          color: #ff5722;\n          font-weight: 600;\n        }\n        \n        .profile-subtitle {\n          color: rgba(0, 0, 0, 0.6);\n          margin: 8px 16px;\n        }\n      }\n    }\n  \n    .profile-content {\n      justify-content: center;\n      .profile-picture-card {\n        background: rgba(255, 255, 255, 0.9);\n        border-radius: 16px;\n        padding: 16px;\n        margin-bottom: 16px;\n        box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n      }\n  \n      .profile-form {\n        background: rgba(255, 255, 255, 0.9);\n        border-radius: 16px;\n        padding: 16px;\n        box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n  \n        .form-item {\n          --background: transparent;\n          --border-color: rgba(255, 87, 34, 0.2);\n          --border-radius: 8px;\n          margin-bottom: 16px;\n          \n          ion-icon {\n            color: #ff5722;\n            margin-right: 8px;\n          }\n  \n          ion-input {\n            --padding-start: 8px;\n            --color: #333;\n            \n            &.ion-valid {\n              --highlight-color: #ff5722;\n            }\n          }\n          \n          &:hover {\n            --background: rgba(255, 87, 34, 0.05);\n          }\n        }\n  \n        .error-message {\n          margin: -12px 0 16px 16px;\n          display: block;\n          \n          p {\n            margin: 4px 0;\n            font-size: 12px;\n            color: var(--ion-color-danger);\n          }\n        }\n      }\n    }\n  \n    .submit-button-container {\n      margin-top: 24px;\n      padding: 0 16px;\n  \n      .update-button {\n        --background: linear-gradient(45deg, #ff5722, #ff9800);\n        --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n        --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n        --border-radius: 8px;\n        --box-shadow: 0 4px 12px rgba(255, 87, 34, 0.2);\n        font-weight: 500;\n        height: 48px;\n      }\n    }\n  }\n\n  .admin-message{\n    margin-left: 3rem;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'PROFILE.TITLE\\' | translate }}                                                                                                                                                                                                                                                {{ \\'PERSON.ERRORS.NAME_REQUIRED\\' | translate }}                                                  {{ \\'PERSON.ERRORS.NAME_MIN_LENGTH\\' | translate }}                                                                                                                                                                        {{ \\'PERSON.ERRORS.SURNAME_REQUIRED\\' | translate }}                                                  {{ \\'PERSON.ERRORS.SURNAME_MIN_LENGTH\\' | translate }}                                                                                                                                            {{ isUppercase ? \\'Aa\\' : \\'AA\\' }}                                                                              {{ \\'PERSON.ERRORS.USERNAME_REQUIRED\\' | translate }}                                                  {{ \\'PERSON.ERRORS.USERNAME_MIN_LENGTH\\' | translate }}                                                                                                                                                                        {{ \\'PERSON.ERRORS.EMAIL_REQUIRED\\' | translate }}                                                  {{ \\'PERSON.ERRORS.EMAIL_INVALID\\' | translate }}                                                                                                                                        {{ \\'PROFILE.ALREADY_ADMIN\\' | translate }}                                                              {{ \\'PROFILE.UPDATE\\' | translate }}                                                                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\n\nOnlyAllowedCharactersDirective\n\nOnlyAllowedCharactersDirective\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nOnlyAllowedCharactersDirective->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OnlyAllowedCharactersDirective\n                        \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { OnlyAllowedCharactersDirective } from 'src/app/directives/only-allowed-characters.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [ProfilePage, OnlyAllowedCharactersDirective ]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProviderMetadata.html":{"url":"interfaces/ProviderMetadata.html","title":"interface - ProviderMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProviderMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            public_id\n                                        \n                                \n                                \n                                        \n                                            resource_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminKeyFieldType\n                            \n                            \n                                    Private\n                                adminKeyHash\n                            \n                            \n                                isAdmin\n                            \n                            \n                                passwordFieldType\n                            \n                            \n                                passwordFieldType2\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashString\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                setAdmin\n                            \n                            \n                                toggleAdminKeyVisibility\n                            \n                            \n                                togglePasswordVisibility\n                            \n                            \n                                togglePasswordVisibility2\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    name\n                                \n                                \n                                    surname\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    adminKey\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, authSvc: BaseAuthenticationService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/register/register.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashString\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashString(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentToast(message: string, color: \"success\" | \"danger\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                        \"success\" | \"danger\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdmin\n                        \n                    \n                \n            \n            \n                \nsetAdmin(value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAdminKeyVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleAdminKeyVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility2\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility2()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminKeyFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adminKeyHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordFieldType2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:153\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:157\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:161\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:165\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:169\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        adminKey\n                    \n                \n\n                \n                    \n                        getadminKey()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:177\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/core/models/auth.model';\nimport { ToastController } from '@ionic/angular';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport {\n  passwordsMatchValidator,\n  passwordValidator,\n} from 'src/app/core/utils/validators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  registerForm: FormGroup;\n  passwordFieldType: string = 'password';\n  passwordFieldType2: string = 'password';\n  isAdmin: boolean = false;\n  adminKeyFieldType: string = 'password';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private authSvc: BaseAuthenticationService,\n    private toastController: ToastController\n  ) {\n    this.registerForm = this.fb.group(\n      {\n        username: ['', [Validators.required, Validators.minLength(2)]],\n        name: ['', [Validators.required, Validators.minLength(2)]],\n        surname: ['', [Validators.required, Validators.minLength(2)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, passwordValidator]],\n        confirmPassword: ['', [Validators.required]],\n        adminKey: [''],\n      },\n      {\n        validators: passwordsMatchValidator,\n      }\n    );\n  }\n\n  private adminKeyHash =\n    'a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825'; //adminSecret123\n\n  ngOnInit(): void {\n    this.registerForm.get('adminKey')?.clearValidators();\n  }\n\n  setAdmin(value: boolean) {\n    this.isAdmin = value;\n    const adminKeyControl = this.registerForm.get('adminKey');\n    if (value) {\n      adminKeyControl?.setValidators([Validators.required]);\n    } else {\n      adminKeyControl?.clearValidators();\n      adminKeyControl?.setValue('');\n    }\n    adminKeyControl?.updateValueAndValidity();\n  }\n\n  togglePasswordVisibility() {\n    this.passwordFieldType =\n      this.passwordFieldType === 'password' ? 'text' : 'password';\n  }\n\n  togglePasswordVisibility2() {\n    this.passwordFieldType2 =\n      this.passwordFieldType2 === 'password' ? 'text' : 'password';\n  }\n\n  toggleAdminKeyVisibility() {\n    this.adminKeyFieldType =\n      this.adminKeyFieldType === 'password' ? 'text' : 'password';\n  }\n\n  async presentToast(message: string, color: 'success' | 'danger') {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n      position: 'bottom',\n      color: color,\n      buttons: [\n        {\n          icon: 'close-outline',\n          role: 'cancel',\n        },\n      ],\n    });\n    await toast.present();\n  }\n\n  async onSubmit() {\n    if (this.registerForm.valid) {\n      const formValue = this.registerForm.value;\n      const wantsAdmin = this.isAdmin;\n\n      if (wantsAdmin) {\n        const enteredKey = formValue.adminKey?.trim() || '';\n        const enteredKeyHash = await this.hashString(enteredKey);\n        console.log(enteredKeyHash)\n\n        if (enteredKeyHash !== this.adminKeyHash) {\n          this.presentToast('Clave de admin incorrecta', 'danger');\n          return;\n        }\n      }\n\n\n      const signUpData = {\n        username: formValue.username,\n        email: formValue.email,\n        password: formValue.password,\n        name: formValue.name,\n        surname: formValue.surname,\n        admin: wantsAdmin,\n        adminKey: wantsAdmin ? formValue.adminKey : undefined,\n      };\n\n      this.authSvc.signUp(signUpData).subscribe({\n        next: (resp: User) => {\n          this.presentToast('¡Registro exitoso!', 'success');\n          this.router.navigate(['/home']);\n        },\n        error: (err) => {\n          console.error(err);\n          this.presentToast('Error al registrarse', 'danger');\n        },\n      });\n    }\n  }\n\n  onLogin() {\n    this.registerForm.reset();\n    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n    this.router.navigate(['/login'], {\n      queryParams: { returnUrl: returnUrl },\n      replaceUrl: true,\n    });\n  }\n\n  async hashString(str: string): Promise {\n    const buffer = new TextEncoder().encode(str);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  }\n\n  get username() {\n    return this.registerForm.controls['username'];\n  }\n\n  get name() {\n    return this.registerForm.controls['name'];\n  }\n\n  get surname() {\n    return this.registerForm.controls['surname'];\n  }\n\n  get email() {\n    return this.registerForm.controls['email'];\n  }\n\n  get password() {\n    return this.registerForm.controls['password'];\n  }\n\n  get confirmPassword() {\n    return this.registerForm.controls['confirmPassword'];\n  }\n\n  get adminKey() {\n    return this.registerForm.controls['adminKey'];\n  }\n}\n\n    \n\n    \n        \n  \n    Crear cuenta\n  \n\n\n\n  \n    \n      \n    \n    \n      \n        \n          \n            Crear un cuenta\n          \n        \n      \n      \n        \n          \n            ¿Tienes una cuenta?\n            Inicia sesión\n          \n        \n      \n      \n        \n        \n      \n      \n        \n        \n      \n      \n        \n        \n      \n      \n        \n        \n      \n      \n        \n        \n        \n        \n      \n      \n        \n        \n        \n        \n      \n      \n        ¿Eres administrador?\n        \n          \n            Sí\n          \n          \n            No\n          \n        \n      \n\n      \n        \n        \n        \n      \n\n      \n        \n          *Debe introducir la clave de administrador\n        \n      \n\n      \n        *Debe introducir su nombre\n        \n          *El nombre debe tener al menos dos caracteres\n        \n      \n      \n        \n          *Debe introducir su/s apellido/s\n        \n        \n          *Su/s apellido/s debe/n tener al menos dos caracteres\n        \n      \n      \n        *Debe introducir su usuario\n        \n          *El usuario debe tener al menos dos caracteres\n        \n      \n      \n        *Debe introducir un email\n        \n          *Debe introducir un email correcto\n        \n      \n      \n        \n          *Debe introducir una contraseña\n        \n        \n          *Al menos 8 caracteres, una mayúscula, una minúscula, un dígito y un\n          caracter especial (&#64;$!%*?&.)\n        \n      \n      \n        *Las contraseñas no coinciden\n      \n      \n        Crear cuenta\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                .logo-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 24px;\n\n  .app-logo {\n    width: 120px;\n    height: 120px;\n    object-fit: contain;\n  }\n}\n\n.login-container,\n.register-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  min-height: 100vh;\n  padding: 24px;\n  background-image: url(\"/assets/background-pattern.svg\");\n  background-size: cover;\n  background-position: center;\n  background-attachment: fixed;\n\n  form {\n    width: 100%;\n    max-width: 400px;\n    height: auto;\n    padding: 24px;\n    border-radius: 16px;\n    background: linear-gradient(145deg, #ffffff, #fff5f2);\n    border: 1px solid rgba(255, 87, 34, 0.1);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n\n    h1 {\n      margin-bottom: 0px;\n      font-size: 28px;\n      font-weight: 600;\n      color: #ff5722;\n    }\n  }\n\n  ion-item {\n    --padding-start: 12px;\n    --padding-end: 12px;\n    --border-radius: 8px;\n    --background: var(--ion-item-background);\n    margin-bottom: 16px;\n    --highlight-height: 2px;\n\n    &:last-of-type {\n      margin-bottom: 24px;\n    }\n\n    ion-icon {\n      color: var(--ion-color-medium);\n      margin-right: 8px;\n      font-size: 20px;\n    }\n\n    ion-input {\n      --padding-start: 8px;\n      font-size: 16px;\n    }\n  }\n\n  ion-button {\n    --background: linear-gradient(45deg, #ff5722, #ff9800);\n    --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n    --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n    --color: #ffffff;\n  }\n\n  ion-text.input-error {\n    margin: -12px 0 16px 16px;\n    display: block;\n\n    p {\n      margin: 4px 0;\n      font-size: 12px;\n      color: red;\n    }\n  }\n\n  ion-grid ion-col {\n    font-size: 14px;\n    color: var(--ion-color-medium);\n  }\n\n  @media (max-width: 576px) {\n    padding: 16px;\n\n    form {\n      padding: 16px;\n\n      h1 {\n        font-size: 24px;\n      }\n    }\n  }\n}\n\n#admin-toggle-row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin: 16px 0;\n\n  ion-label {\n    font-size: 16px;\n    margin-right: 12px;\n  }\n\n  ion-checkbox {\n    margin: 0 12px;\n    transform: scale(1.1);\n  }\n\n  .checkbox-group {\n    display: flex;\n    align-items: center;\n    gap: 24px;\n  }\n}\n\n#admin-key-field {\n  margin-bottom: 16px;\n\n  ion-input {\n    font-size: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Crear cuenta                                                          Crear un cuenta                                                            ¿Tienes una cuenta?            Inicia sesión                                                                                                                                                                                                                                              ¿Eres administrador?                              Sí                                No                                                                                    *Debe introducir la clave de administrador                            *Debe introducir su nombre                  *El nombre debe tener al menos dos caracteres                                      *Debe introducir su/s apellido/s                          *Su/s apellido/s debe/n tener al menos dos caracteres                            *Debe introducir su usuario                  *El usuario debe tener al menos dos caracteres                            *Debe introducir un email                  *Debe introducir un email correcto                                      *Debe introducir una contraseña                          *Al menos 8 caracteres, una mayúscula, una minúscula, un dígito y un          caracter especial (@$!%*?&.)                            *Las contraseñas no coinciden                    Crear cuenta            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    TranslateModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageRoutingModule.html":{"url":"modules/RegisterPageRoutingModule.html","title":"module - RegisterPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchParams.html":{"url":"interfaces/SearchParams.html","title":"interface - SearchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nexport interface SearchParams {\n  [key: string]: string; // O el tipo que necesites para los valores\n}\nexport interface IBaseRepository {\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable; // Retorna el ID generado\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Season.html":{"url":"interfaces/Season.html","title":"interface - Season","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Season\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/season.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            serieId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Season extends Model{\n    name:string,\n    numSeason:string,\n    numEpisodes:number,\n    releaseDate:Date,\n    rating:number,\n    serieId?:string,\n    userId?:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonAttributes.html":{"url":"interfaces/SeasonAttributes.html","title":"interface - SeasonAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     UserRaw | number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRaw | number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonData.html":{"url":"interfaces/SeasonData.html","title":"interface - SeasonData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         SeasonAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SeasonAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonModalComponent.html":{"url":"components/SeasonModalComponent.html","title":"component - SeasonModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeasonModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/season-modal/season-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-season-modal\n            \n\n\n\n            \n                styleUrls\n                ./season-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./season-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _series\n                            \n                            \n                                formGroup\n                            \n                            \n                                isMobile\n                            \n                            \n                                mode\n                            \n                            \n                                    Public\n                                series$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                series\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    series\n                                \n                                \n                                    season\n                                \n                                \n                                    name\n                                \n                                \n                                    numSeason\n                                \n                                \n                                    numEpisodes\n                                \n                                \n                                    releaseDate\n                                \n                                \n                                    rating\n                                \n                                \n                                    serieId\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        season\n                    \n                \n                \n                    \n                        Type :         Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        series\n                    \n                \n                \n                    \n                        Type :         Serie[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-modal/season-modal.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-modal/season-modal.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-modal/season-modal.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-modal/season-modal.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _series\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        series$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._series.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        series\n                    \n                \n\n\n                \n                    \n                        setseries(series: Serie[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            series\n                                                    \n                                                            \n                                                                            Serie[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        season\n                    \n                \n\n\n                \n                    \n                        setseason(_season: Season)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _season\n                                                    \n                                                            \n                                                                            Season\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        numSeason\n                    \n                \n\n                \n                    \n                        getnumSeason()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:59\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        numEpisodes\n                    \n                \n\n                \n                    \n                        getnumEpisodes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        releaseDate\n                    \n                \n\n                \n                    \n                        getreleaseDate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rating\n                    \n                \n\n                \n                    \n                        getrating()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serieId\n                    \n                \n\n                \n                    \n                        getserieId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:75\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Season } from 'src/app/core/models/season.model';\n\n@Component({\n  selector: 'app-season-modal',\n  templateUrl: './season-modal.component.html',\n  styleUrls: ['./season-modal.component.scss'],\n})\nexport class SeasonModalComponent  implements OnInit {\n  formGroup:FormGroup;\n  mode:'new'|'edit' = 'new';\n  isMobile: boolean = false;\n  private _series:BehaviorSubject = new BehaviorSubject([]);\n  public series$:Observable = this._series.asObservable();\n\n  @Input() set series(series:Serie[]){\n    this._series.next(series);\n  }\n\n  @Input() set season(_season:Season){\n    if(_season && _season.id)\n      this.mode = 'edit';\n    \n    this.formGroup.controls['name'].setValue(_season.name);\n    this.formGroup.controls['numSeason'].setValue(_season.numSeason);\n    this.formGroup.controls['numEpisodes'].setValue(_season.numEpisodes);\n    this.formGroup.controls['releaseDate'].setValue(_season.releaseDate);\n    this.formGroup.controls['rating'].setValue(_season.rating);\n    this.formGroup.controls['serieId'].setValue(_season.serieId);\n  }\n\n  constructor(\n    private fb:FormBuilder,\n    private modalCtrl:ModalController,\n    private platform: Platform,\n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.formGroup = this.fb.group({\n      name:['', [Validators.required, Validators.minLength(2)]],\n      numSeason:['', [Validators.required]],\n      numEpisodes:['', [Validators.required]],\n      releaseDate:['', [Validators.required]],\n      rating:['', [Validators.required]],\n      serieId:['', [Validators.required]]\n    });\n  }\n  \n\n  ngOnInit() {} \n\n  get name(){\n    return this.formGroup.controls['name'];\n  }\n\n  get numSeason(){\n    return this.formGroup.controls['numSeason'];\n  }\n\n  get numEpisodes(){\n    return this.formGroup.controls['numEpisodes'];\n  }\n\n  get releaseDate(){\n    return this.formGroup.controls['releaseDate'];\n  }\n\n  get rating(){\n    return this.formGroup.controls['rating'];\n  }\n\n  get serieId(){\n    return this.formGroup.controls['serieId'];\n  }\n  \n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n  \n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        dirtyValues[key] = control.value;\n      }\n    });\n  \n    return dirtyValues;\n  }\n\n  onSubmit(){\n    if (this.formGroup.valid) {\n      this.modalCtrl.dismiss(\n          (this.mode=='new'?\n            this.formGroup.value:\n            this.getDirtyValues(this.formGroup)), this.mode\n      );\n    } else {\n      console.log('Formulario inválido');\n    }\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      @if (mode=='edit') {\n        {{ 'SEASON.EDIT' | translate }}\n      }\n      @else {\n        {{ 'SEASON.NEW' | translate }}\n      }\n    \n    @if (isMobile) {\n      \n        \n          \n        \n      \n    }\n  \n\n\n\n  \n    \n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.NAME_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.NAME_MIN_LENGTH' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.NUMSEASON_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.NUMSEASON_MIN_LENGTH' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.NUMEPISODES_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.NUMEPISODES_INVALID' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.RELEASEDATE_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.RELEASEDATE_INVALID' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.RATING_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.RATING_INVALID' | translate }}\n        \n      \n\n      \n      \n        \n          \n          {{ 'SEASON.SERIE' | translate }}\n          \n        \n      \n      \n      \n      \n        \n          {{ 'SEASON.SUBMIT' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./season-modal.component.scss\n                \n                ion-toolbar {\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  --color: white;\n\n  .header-icon {\n    margin-left: 16px;\n    font-size: 24px;\n  }\n\n  .close-button {\n    --color: white;\n  }\n}\n\n.season-form-container {\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100%;\n  padding: 24px;\n\n  form {\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 16px;\n    padding: 24px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n\n    .form-group {\n      margin-bottom: 16px;\n\n      .form-item {\n        --background: transparent;\n        --border-color: rgba(255, 87, 34, 0.2);\n        --border-radius: 8px;\n        --highlight-height: 2px;\n        \n        ion-icon {\n          color: #ff5722;\n          margin-right: 8px;\n          font-size: 20px;\n        }\n\n        ion-input, ion-label {\n          --color: #333;\n          font-size: 16px;\n        }\n\n        &:hover {\n          --background: rgba(255, 87, 34, 0.05);\n        }\n      }\n\n      .error-message {\n        margin: 4px 0 0 16px;\n        \n        p {\n          color: var(--ion-color-danger);\n          font-size: 12px;\n          margin: 4px 0;\n        }\n      }\n    }\n\n    .submit-button-container {\n      margin-top: 24px;\n\n      .submit-button {\n        --background: linear-gradient(45deg, #ff5722, #ff9800);\n        --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n        --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n        --border-radius: 8px;\n        --box-shadow: 0 4px 12px rgba(255, 87, 34, 0.2);\n        height: 48px;\n        \n      }\n    }\n  }\n}\n\n@media (max-width: 576px) {\n  .season-form-container {\n    padding: 16px;\n\n    form {\n      padding: 16px;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @if (mode==\\'edit\\') {        {{ \\'SEASON.EDIT\\' | translate }}      }      @else {        {{ \\'SEASON.NEW\\' | translate }}      }        @if (isMobile) {                                          }                                                                                    {{ \\'SEASON.ERRORS.NAME_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.NAME_MIN_LENGTH\\' | translate }}                                                                                          {{ \\'SEASON.ERRORS.NUMSEASON_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.NUMSEASON_MIN_LENGTH\\' | translate }}                                                                                          {{ \\'SEASON.ERRORS.NUMEPISODES_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.NUMEPISODES_INVALID\\' | translate }}                                                                                          {{ \\'SEASON.ERRORS.RELEASEDATE_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.RELEASEDATE_INVALID\\' | translate }}                                                                                          {{ \\'SEASON.ERRORS.RATING_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.RATING_INVALID\\' | translate }}                                                      {{ \\'SEASON.SERIE\\' | translate }}                                                            {{ \\'SEASON.SUBMIT\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SeasonModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonRaw.html":{"url":"interfaces/SeasonRaw.html","title":"interface - SeasonRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-seasons.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SeasonRaw {\n    id: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeasonsService{\n\n    private apiUrl:string = \"http://localhost:3000/seasons\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SeasonRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    numSeason:d.numSeason, \n                    numEpisodes:d.numEpisodes, \n                    releaseDate:d.releaseDate, \n                    rating:d.rating,\n                    serieId:d.serieId\n                    };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonRaw-1.html":{"url":"interfaces/SeasonRaw-1.html","title":"interface - SeasonRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-json-server.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\n\n\nexport interface SeasonRaw {\n    id?: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating:number\n    serieId: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingJsonServer implements IBaseMapping {\n\n    setAdd(data: Season):SeasonRaw {\n        return {\n            name:data.name,\n            numSeason:data.numSeason,\n            numEpisodes:data.numEpisodes,\n            releaseDate:data.releaseDate,\n            rating:data.rating,\n            serieId:data.serieId??''\n        };\n    }\n    setUpdate(data: Season):SeasonRaw {\n        let toReturn:any = {};  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn['name']=data[key];\n                break;\n                case 'numSeason': toReturn['numSeason']=data[key];\n                break;\n                case 'numEpisodes': toReturn['numEpisodes']=data[key];\n                break;\n                case 'releaseDate': toReturn['releaseDate']=data[key];\n                break;\n                case 'rating': toReturn['rating']=data[key];\n                break;\n                case 'serieId': toReturn['serieId']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:SeasonRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SeasonRaw):Season {\n        return {\n            id:data.id!, \n            name:data.name, \n            numSeason:data.numSeason, \n            numEpisodes:data.numEpisodes, \n            releaseDate:data.releaseDate, \n            rating:data.rating,\n            serieId: data.serieId,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonRaw-2.html":{"url":"interfaces/SeasonRaw-2.html","title":"interface - SeasonRaw-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\ninterface SeasonRaw{\n    id:string,\n    name:string,\n    numSeason:string,\n    numEpisodes:number,\n    releaseDate:Date,\n    rating:number,\n    serieId: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Season) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: SeasonRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SeasonRaw):Season {\n        return {\n            id:data.id, \n            name:data.name, \n            numSeason:data.numSeason, \n            numEpisodes:data.numEpisodes,\n            releaseDate:data.releaseDate,\n            rating:data.rating,\n            serieId: data.serieId,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonRaw-3.html":{"url":"interfaces/SeasonRaw-3.html","title":"interface - SeasonRaw-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonViewComponent.html":{"url":"components/SeasonViewComponent.html","title":"component - SeasonViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeasonViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/season-view/season-view.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-season-view\n            \n\n\n\n            \n                styleUrls\n                ./season-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./season-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/season-view/season-view.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        season\n                    \n                \n                \n                    \n                        Type :         Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/season-view/season-view.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-view/season-view.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-view/season-view.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { Season } from 'src/app/core/models/season.model';\n\n@Component({\n  selector: 'app-season-view',\n  templateUrl: './season-view.component.html',\n  styleUrls: ['./season-view.component.scss'],\n})\nexport class SeasonViewComponent {\n  @Input() season!: Season;\n  isMobile: boolean = false;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private platform: Platform,\n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n    \n\n    \n        \n  \n    \n      \n      {{ 'SEASON.VIEW' | translate }}\n    \n    @if (isMobile) {\n      \n        \n          \n        \n      \n    }\n  \n\n\n\n  \n    \n      \n        {{ season.name }}\n        \n          \n          {{ season.rating }}\n        \n      \n\n      \n        \n          \n          \n            {{ 'SEASON.NAME' | translate }}\n            {{ season.name }}\n          \n        \n\n        \n          \n          \n            {{ 'SEASON.NUMSEASON' | translate }}\n            {{ season.numSeason }}\n          \n        \n\n        \n          \n          \n            {{ 'SEASON.NUMEPISODES' | translate }}\n            {{ season.numEpisodes }}\n          \n        \n\n        \n          \n          \n            {{ 'SEASON.RELEASEDATE' | translate }}\n            {{ season.releaseDate }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./season-view.component.scss\n                \n                // Estilos del toolbar\nion-toolbar {\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  --color: white;\n\n  ion-title {\n    display: flex;\n    align-items: center;\n    \n    .header-icon {\n      margin-right: 8px;\n      font-size: 24px;\n    }\n  }\n\n  .close-button {\n    --color: white;\n  }\n}\n\n.season-details-container {\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100%;\n  padding: 24px;\n\n  .details-card {\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 16px;\n    padding: 24px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n\n    .season-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 24px;\n      padding-bottom: 16px;\n      border-bottom: 2px solid rgba(255, 87, 34, 0.1);\n\n      h1 {\n        color: #333;\n        font-size: 24px;\n        font-weight: 600;\n        margin: 0;\n      }\n\n      .rating-badge {\n        display: flex;\n        align-items: center;\n        background: linear-gradient(45deg, #ff5722, #ff9800);\n        color: white;\n        padding: 8px 16px;\n        border-radius: 20px;\n\n        ion-icon {\n          margin-right: 4px;\n          color: #fff;\n        }\n      }\n    }\n\n    .details-list {\n      .detail-item {\n        display: flex;\n        align-items: flex-start;\n        padding: 16px;\n        margin-bottom: 12px;\n        border-radius: 12px;\n\n        &:hover {\n          background: rgba(255, 87, 34, 0.05);\n          transform: translateX(8px);\n        }\n\n        ion-icon {\n          color: #ff5722;\n          font-size: 24px;\n          margin-right: 16px;\n          margin-top: 4px;\n        }\n\n        .detail-content {\n          flex: 1;\n\n          h2 {\n            color: #666;\n            font-size: 14px;\n            margin: 0 0 4px 0;\n          }\n\n          p {\n            color: #333;\n            font-size: 16px;\n            margin: 0;\n          }\n        }\n      }\n    }\n  }\n}\n\n@media (max-width: 576px) {\n  .season-details-container {\n    padding: 16px;\n\n    .details-card {\n      padding: 16px;\n\n      .season-header {\n        flex-direction: column;\n        align-items: flex-start;\n        \n        h1 {\n          margin-bottom: 12px;\n        }\n      }\n\n      .detail-item {\n        padding: 12px;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'SEASON.VIEW\\' | translate }}        @if (isMobile) {                                          }                      {{ season.name }}                            {{ season.rating }}                                                            {{ \\'SEASON.NAME\\' | translate }}            {{ season.name }}                                                          {{ \\'SEASON.NUMSEASON\\' | translate }}            {{ season.numSeason }}                                                          {{ \\'SEASON.NUMEPISODES\\' | translate }}            {{ season.numEpisodes }}                                                          {{ \\'SEASON.RELEASEDATE\\' | translate }}            {{ season.releaseDate }}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SeasonViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsLocalStorageMapping.html":{"url":"injectables/SeasonsLocalStorageMapping.html","title":"injectable - SeasonsLocalStorageMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsLocalStorageMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: SeasonRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        SeasonRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\ninterface SeasonRaw{\n    id:string,\n    name:string,\n    numSeason:string,\n    numEpisodes:number,\n    releaseDate:Date,\n    rating:number,\n    serieId: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Season) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: SeasonRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SeasonRaw):Season {\n        return {\n            id:data.id, \n            name:data.name, \n            numSeason:data.numSeason, \n            numEpisodes:data.numEpisodes,\n            releaseDate:data.releaseDate,\n            rating:data.rating,\n            serieId: data.serieId,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsMappingFirebaseService.html":{"url":"injectables/SeasonsMappingFirebaseService.html","title":"injectable - SeasonsMappingFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsMappingFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseSeason\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseSeason\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { doc, DocumentReference, Firestore, getFirestore } from \"firebase/firestore\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\nimport { FirebaseSeason } from '../../models/firebase/firebase-season.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonsMappingFirebaseService implements IBaseMapping {\n    \n  private db: Firestore;\n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n        this.db = getFirestore(initializeApp(firebaseConfig));\n  }\n  setAdd(data: Season): FirebaseSeason {\n    let dataMapping:FirebaseSeason = {\n      name: data.name,\n      numSeason: data.numSeason,\n      numEpisodes: data.numEpisodes,\n      releaseDate: data.releaseDate,\n      rating: data.rating,\n      user: data.userId || '',\n      serieId: data.serieId ? doc(this.db, 'series', data.serieId) : undefined\n    };\n    return dataMapping;\n  }\n  setUpdate(data: Partial): FirebaseSeason {\n    const result: any = {};\n    \n    if (data.name) result.name = data.name;\n    if (data.numSeason) result.numSeason = data.numSeason;\n    if (data.numEpisodes) result.numEpisodes = data.numEpisodes;\n    if (data.releaseDate) result.releaseDate = data.releaseDate;\n    if (data.rating) result.rating = data.rating;\n    if (data.serieId) result.serieId = doc(this.db, 'series', data.serieId || '');\n    if (data.userId) result.user = data.userId || '';\n    return result;\n  }\n  getOne(data: { id: string } & FirebaseSeason): Season {\n    return {\n      id: data.id,\n      name: data.name,\n      numSeason: data.numSeason,\n      numEpisodes: data.numEpisodes,\n      releaseDate: data.releaseDate,\n      rating: data.rating,\n      serieId: data.serieId?.id,\n      userId: data.user || '',\n    };\n  }\n  getPaginated(page: number, pageSize: number, total: number, data: ({id:string} & FirebaseSeason)[]): Paginated {\n    return {\n      page,\n      pageSize,\n      pages: Math.ceil(total / pageSize),\n      data: data.map(item => this.getOne(item))\n    };\n  }\n  getAdded(data: {id:string} & FirebaseSeason): Season {\n    return this.getOne(data);\n  }\n  getUpdated(data: {id:string} & FirebaseSeason): Season {\n    return this.getOne(data);\n  }\n  getDeleted(data: {id:string} & FirebaseSeason): Season {\n    return this.getOne(data);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsMappingJsonServer.html":{"url":"injectables/SeasonsMappingJsonServer.html","title":"injectable - SeasonsMappingJsonServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsMappingJsonServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-json-server.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: SeasonRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        SeasonRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SeasonRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SeasonRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\n\n\nexport interface SeasonRaw {\n    id?: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating:number\n    serieId: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingJsonServer implements IBaseMapping {\n\n    setAdd(data: Season):SeasonRaw {\n        return {\n            name:data.name,\n            numSeason:data.numSeason,\n            numEpisodes:data.numEpisodes,\n            releaseDate:data.releaseDate,\n            rating:data.rating,\n            serieId:data.serieId??''\n        };\n    }\n    setUpdate(data: Season):SeasonRaw {\n        let toReturn:any = {};  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn['name']=data[key];\n                break;\n                case 'numSeason': toReturn['numSeason']=data[key];\n                break;\n                case 'numEpisodes': toReturn['numEpisodes']=data[key];\n                break;\n                case 'releaseDate': toReturn['releaseDate']=data[key];\n                break;\n                case 'rating': toReturn['rating']=data[key];\n                break;\n                case 'serieId': toReturn['serieId']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:SeasonRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SeasonRaw):Season {\n        return {\n            id:data.id!, \n            name:data.name, \n            numSeason:data.numSeason, \n            numEpisodes:data.numEpisodes, \n            releaseDate:data.releaseDate, \n            rating:data.rating,\n            serieId: data.serieId,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsMappingStrapi.html":{"url":"injectables/SeasonsMappingStrapi.html","title":"injectable - SeasonsMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: Data | SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Data | SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: Data[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Data[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SeasonData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SeasonData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeasonsPageModule.html":{"url":"modules/SeasonsPageModule.html","title":"module - SeasonsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SeasonsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeasonsPageModule\n\n\n\ncluster_SeasonsPageModule_declarations\n\n\n\ncluster_SeasonsPageModule_imports\n\n\n\n\nSeasonsPage\n\nSeasonsPage\n\n\n\nSeasonsPageModule\n\nSeasonsPageModule\n\nSeasonsPageModule -->\n\nSeasonsPage->SeasonsPageModule\n\n\n\n\n\nSeasonsPageRoutingModule\n\nSeasonsPageRoutingModule\n\nSeasonsPageModule -->\n\nSeasonsPageRoutingModule->SeasonsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/seasons/seasons.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SeasonsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SeasonsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { SeasonsPage } from './seasons.page';\nimport { SeasonsPageRoutingModule } from './seasons-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SeasonsPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [SeasonsPage]\n})\nexport class SeasonsPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeasonsPageRoutingModule.html":{"url":"modules/SeasonsPageRoutingModule.html","title":"module - SeasonsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SeasonsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/seasons/seasons-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SeasonsPage } from './seasons.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SeasonsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SeasonsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsService.html":{"url":"injectables/SeasonsService.html","title":"injectable - SeasonsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/seasons.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getByUserId\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ISeasonsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/seasons.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ISeasonsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByUserId\n                        \n                    \n                \n            \n            \n                \ngetByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/seasons.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { ISeasonsService } from '../../services/interfaces/seasons-service.interface';\nimport { Season } from '../../models/season.model';\nimport { SEASONS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ISeasonsRepository } from '../../repositories/intefaces/seasons-repository.interface';\nimport { map, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonsService extends BaseService implements ISeasonsService {\n  constructor(\n    @Inject(SEASONS_REPOSITORY_TOKEN) repository: ISeasonsRepository\n  ) {\n    super(repository);\n  }\n  \n  getByUserId(userId: string): Observable {\n    return this.repository.getAll(1, 1, {user: userId}).pipe(\n      map(res => Array.isArray(res) ? res[0] || null : res.data[0] || null)\n    );\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Serie.html":{"url":"interfaces/Serie.html","title":"interface - Serie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Serie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/serie.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            seasons\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seasons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seasons:         Season[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Season[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\nimport { Season } from \"./season.model\";\n\nexport interface Serie extends Model{\n    name:string,\n    synopsis:string,\n    releaseYear:number,\n    rating:number,\n    picture?:{\n        url:string | undefined,\n        large:string | undefined,\n        medium:string | undefined,\n        small:string | undefined,\n        thumbnail:string | undefined\n    },\n    seasons?: Season[]\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieAttributes.html":{"url":"interfaces/SerieAttributes.html","title":"interface - SerieAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieAttributes-1.html":{"url":"interfaces/SerieAttributes-1.html","title":"interface - SerieAttributes-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieData.html":{"url":"interfaces/SerieData.html","title":"interface - SerieData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         SerieAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SerieAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SerieModalComponent.html":{"url":"components/SerieModalComponent.html","title":"component - SerieModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SerieModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/serie-modal/serie-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-serie-modal\n            \n\n\n\n            \n                styleUrls\n                ./serie-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./serie-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                isGeneratingSynopsis\n                            \n                            \n                                isMobile\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                    Async\n                                generateSynopsis\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                showErrorToast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                serie\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    serie\n                                \n                                \n                                    name\n                                \n                                \n                                    synopsis\n                                \n                                \n                                    releaseYear\n                                \n                                \n                                    rating\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, platform: Platform, cohereService: CohereService, loadingCtrl: LoadingController, toastCtrl: ToastController, languageService: LanguageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cohereService\n                                                  \n                                                        \n                                                                        CohereService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        serie\n                    \n                \n                \n                    \n                        Type :         Serie\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateSynopsis\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateSynopsis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showErrorToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showErrorToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGeneratingSynopsis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        serie\n                    \n                \n\n\n                \n                    \n                        setserie(_serie: Serie)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _serie\n                                                    \n                                                            \n                                                                            Serie\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:106\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        synopsis\n                    \n                \n\n                \n                    \n                        getsynopsis()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        releaseYear\n                    \n                \n\n                \n                    \n                        getreleaseYear()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:114\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rating\n                    \n                \n\n                \n                    \n                        getrating()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:118\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, Platform, LoadingController, ToastController } from '@ionic/angular';\nimport { CohereService } from 'src/app/core/services/impl/ai.service';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { LanguageService } from 'src/app/core/services/language.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-serie-modal',\n  templateUrl: './serie-modal.component.html',\n  styleUrls: ['./serie-modal.component.scss'],\n})\nexport class SerieModalComponent  implements OnInit {\n  formGroup:FormGroup;\n  mode:'new'|'edit' = 'new';\n  isMobile: boolean = false;\n  isGeneratingSynopsis: boolean = false;\n\n  @Input() set serie(_serie:Serie){\n    if(_serie && _serie.id)\n      this.mode = 'edit';\n    \n    this.formGroup.controls['name'].setValue(_serie.name);\n    this.formGroup.controls['synopsis'].setValue(_serie.synopsis);\n    this.formGroup.controls['releaseYear'].setValue(_serie.releaseYear);\n    this.formGroup.controls['rating'].setValue(_serie.rating);\n    if (_serie.picture) {\n      this.formGroup.controls['picture'].setValue(_serie.picture.url);\n    }\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private modalCtrl: ModalController,\n    private platform: Platform,\n    private cohereService: CohereService,\n    private loadingCtrl: LoadingController,\n    private toastCtrl: ToastController,\n    private languageService: LanguageService,\n    private translateService: TranslateService\n    \n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.formGroup = this.fb.group({\n      name:['', [Validators.required, Validators.minLength(2)]],\n      synopsis:['', [Validators.required]],\n      releaseYear:['', [Validators.required]],\n      rating:['', [Validators.required]],\n      picture: ['']\n      \n    });\n  }\n  \n  async generateSynopsis() {\n    const title = this.formGroup.get('name')?.value;\n    const languague = this.languageService.getStoredLanguage();\n    \n    if (!title) {\n      const toast = await this.toastCtrl.create({\n        message: await lastValueFrom(this.translateService.get('IA.NAME_REQUIRED')),\n        duration: 2000,\n        color: 'warning'\n      });\n      await toast.present();\n      return;\n    }\n\n    const loading = await this.loadingCtrl.create({\n      message: await lastValueFrom(this.translateService.get('IA.GENERATING')),\n      spinner: 'circles'\n    });\n    await loading.present();\n\n    this.isGeneratingSynopsis = true;\n    \n    this.cohereService.generateSynopsis(title, languague).subscribe({\n      next: (synopsis) => {\n        this.formGroup.get('synopsis')?.setValue(synopsis);\n        this.formGroup.get('synopsis')?.markAsDirty();\n        loading.dismiss();\n        this.isGeneratingSynopsis = false;\n      },\n      error: async (error) => {\n        console.error('Error al generar sinopsis:', error);\n        const errorMessage = await lastValueFrom(this.translateService.get('IA.ERROR'));\n        this.showErrorToast(errorMessage);\n        loading.dismiss();\n        this.isGeneratingSynopsis = false;\n      }\n    });\n  }\n\n  async showErrorToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: 3000,\n      color: 'danger'\n    });\n    await toast.present();\n  }\n\n  ngOnInit() {} \n\n  get name(){\n    return this.formGroup.controls['name'];\n  }\n\n  get synopsis(){\n    return this.formGroup.controls['synopsis'];\n  }\n\n  get releaseYear(){\n    return this.formGroup.controls['releaseYear'];\n  }\n\n  get rating(){\n    return this.formGroup.controls['rating'];\n  }\n  \n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n  \n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        if (key === 'picture' && control.value) {\n          dirtyValues[key] = {\n            url: control.value\n          };\n        } else {\n          dirtyValues[key] = control.value;\n        }\n      }\n    });\n  \n    return dirtyValues;\n  }\n\n  onSubmit(){\n    if (this.formGroup.valid) {\n      const formData = this.mode === 'new' ? \n        {\n          ...this.formGroup.value,\n          picture: this.formGroup.get('picture')?.value ? {\n            url: this.formGroup.get('picture')?.value\n          } : undefined\n        } : \n        this.getDirtyValues(this.formGroup);\n  \n      this.modalCtrl.dismiss(formData, this.mode);\n    }\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      @if (mode=='edit') {\n        {{ 'SERIE.EDIT' | translate }}\n      }\n      @else {\n        {{ 'SERIE.NEW' | translate }}\n      }\n    \n    @if (isMobile) {\n      \n        \n          \n        \n      \n    }\n  \n\n\n\n  \n    \n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SERIE.ERRORS.NAME_REQUIRED' | translate }}\n          {{ 'SERIE.ERRORS.NAME_MIN_LENGTH' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n          \n            \n          \n        \n        \n          {{ 'SERIE.ERRORS.SYNOPSIS_REQUIRED' | translate }}\n          {{ 'SERIE.ERRORS.SYNOPSIS_MIN_LENGTH' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SERIE.ERRORS.RELEASEYEAR_REQUIRED' | translate }}\n          {{ 'SERIE.ERRORS.RELEASEYEAR_INVALID' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SERIE.ERRORS.RATING_REQUIRED' | translate }}\n          {{ 'SERIE.ERRORS.RATING_INVALID' | translate }}\n        \n      \n\n      \n        \n          \n          {{ '' | translate }}\n          \n        \n      \n      \n      \n      \n        \n          {{ 'SERIE.SUBMIT' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./serie-modal.component.scss\n                \n                // Estilos del toolbar\nion-toolbar {\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  --color: white;\n\n  .header-icon {\n    margin-left: 16px;\n    font-size: 24px;\n  }\n\n  .close-button {\n    --color: white;\n  }\n}\n\n.serie-form-container {\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100%;\n  padding: 24px;\n\n  form {\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 16px;\n    padding: 24px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n\n    .form-group {\n      margin-bottom: 16px;\n\n      .form-item {\n        --background: transparent;\n        --border-color: rgba(255, 87, 34, 0.2);\n        --border-radius: 8px;\n        --highlight-height: 2px;\n        \n        ion-icon {\n          color: #ff5722;\n          margin-right: 8px;\n          font-size: 20px;\n        }\n\n        ion-input, ion-textarea {\n          --color: #333;\n          font-size: 16px;\n          \n          &.ion-valid {\n            --highlight-color: #ff5722;\n          }\n        }\n\n        &:hover {\n          --background: rgba(255, 87, 34, 0.05);\n        }\n\n      }\n\n      .error-message {\n        margin: 4px 0 0 16px;\n        \n        p {\n          color: var(--ion-color-danger);\n          font-size: 12px;\n          margin: 4px 0;\n        }\n      }\n    }\n\n    .submit-button-container {\n      margin-top: 24px;\n\n      .submit-button {\n        --background: linear-gradient(45deg, #ff5722, #ff9800);\n        --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n        --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n        --border-radius: 8px;\n        --box-shadow: 0 4px 12px rgba(255, 87, 34, 0.2);\n        height: 48px;\n      }\n    }\n  }\n}\n\n@media (max-width: 576px) {\n  .serie-form-container {\n    padding: 16px;\n\n    form {\n      padding: 16px;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @if (mode==\\'edit\\') {        {{ \\'SERIE.EDIT\\' | translate }}      }      @else {        {{ \\'SERIE.NEW\\' | translate }}      }        @if (isMobile) {                                          }                                                                                    {{ \\'SERIE.ERRORS.NAME_REQUIRED\\' | translate }}          {{ \\'SERIE.ERRORS.NAME_MIN_LENGTH\\' | translate }}                                                                                                                          {{ \\'SERIE.ERRORS.SYNOPSIS_REQUIRED\\' | translate }}          {{ \\'SERIE.ERRORS.SYNOPSIS_MIN_LENGTH\\' | translate }}                                                                                          {{ \\'SERIE.ERRORS.RELEASEYEAR_REQUIRED\\' | translate }}          {{ \\'SERIE.ERRORS.RELEASEYEAR_INVALID\\' | translate }}                                                                                          {{ \\'SERIE.ERRORS.RATING_REQUIRED\\' | translate }}          {{ \\'SERIE.ERRORS.RATING_INVALID\\' | translate }}                                                {{ \\'\\' | translate }}                                                            {{ \\'SERIE.SUBMIT\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SerieModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw.html":{"url":"interfaces/SerieRaw.html","title":"interface - SerieRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-series.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\nimport { Serie } from \"../models/serie.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SerieRaw {\n    id: string\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeriesService{\n\n    private apiUrl:string = \"http://localhost:3000/series\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SerieRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    synopsis:d.synopsis, \n                    releaseYear:d.releaseYear, \n                    rating:d.rating, \n                };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-1.html":{"url":"interfaces/SerieRaw-1.html","title":"interface - SerieRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-2.html":{"url":"interfaces/SerieRaw-2.html","title":"interface - SerieRaw-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-json-server.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { Serie } from \"../../models/serie.model\";\n\nexport interface SerieRaw {\n    id: string\n    nombre: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingJsonServer implements IBaseMapping {\n    setAdd(data: Serie) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:SerieRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SerieRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SerieRaw):Serie {\n        return {\n            id:data.id, \n            name:data.nombre, \n            synopsis:data.synopsis, \n            releaseYear:data.releaseYear, \n            rating:data.rating\n        };\n    }\n    getAdded(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n    getUpdated(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n    getDeleted(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-3.html":{"url":"interfaces/SerieRaw-3.html","title":"interface - SerieRaw-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-local-storage.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\ninterface SerieRaw{\n    id:string,\n    name:string,\n    synopsis:string,\n    releaseYear:number,\n    rating:number,\n    picture:{\n        url:string,\n        large:string,\n        medium:string,\n        small:string,\n        thumbnail:string\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Serie) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: SerieRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SerieRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SerieRaw):Serie {\n        return {\n            id:data.id, \n            name:data.name, \n            synopsis:data.synopsis, \n            releaseYear:data.releaseYear, \n            rating:data.rating,\n            picture:{\n                url:data.picture.url,\n                large:data.picture.large, \n                medium:data.picture.medium,\n                small:data.picture.small,\n                thumbnail:data.picture.thumbnail\n            }\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-4.html":{"url":"interfaces/SerieRaw-4.html","title":"interface - SerieRaw-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-5.html":{"url":"interfaces/SerieRaw-5.html","title":"interface - SerieRaw-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SerieSelectableComponent.html":{"url":"components/SerieSelectableComponent.html","title":"component - SerieSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SerieSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/serie-selectable/serie-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SerieSelectableComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                app-serie-selectable\n            \n\n\n\n            \n                styleUrls\n                ./serie-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./serie-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _filteredSeries\n                            \n                            \n                                    Private\n                                _series\n                            \n                            \n                                disabled\n                            \n                            \n                                filteredSeries$\n                            \n                            \n                                page\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                    \n                                popover\n                            \n                            \n                                propagateChange\n                            \n                            \n                                searchTerm\n                            \n                            \n                                    Public\n                                series$\n                            \n                            \n                                serieSelected\n                            \n                            \n                                    Public\n                                seriesSvc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deselect\n                            \n                            \n                                handleImageError\n                            \n                            \n                                loadMoreSeries\n                            \n                            \n                                loadSeries\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLoadSeries\n                            \n                            \n                                onMoreSeries\n                            \n                            \n                                onSearch\n                            \n                            \n                                onSerieClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectSerie\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seriesSvc: SeriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seriesSvc\n                                                  \n                                                        \n                                                                        SeriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleImageError\n                        \n                    \n                \n            \n            \n                \nhandleImageError(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMoreSeries\n                        \n                    \n                \n            \n            \n                \nloadMoreSeries(notify: HTMLIonInfiniteScrollElement | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                notify\n                                            \n                                                        HTMLIonInfiniteScrollElement | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSeries\n                        \n                    \n                \n            \n            \n                \nloadSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoadSeries\n                        \n                    \n                \n            \n            \n                \nonLoadSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoreSeries\n                        \n                    \n                \n            \n            \n                \nonMoreSeries(ev: InfiniteScrollCustomEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                        InfiniteScrollCustomEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSerieClicked\n                        \n                    \n                \n            \n            \n                \nonSerieClicked(popover: IonPopover, serie: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                serie\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectSerie\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectSerie(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _filteredSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _series\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredSeries$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._filteredSeries.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        popover\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonPopover | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('popover', {read: IonPopover})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        series$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._series.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serieSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Serie | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        seriesSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SeriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InfiniteScrollCustomEvent, IonInput, IonPopover } from '@ionic/angular';\nimport { BehaviorSubject, Observable, Subscription, last, lastValueFrom } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\n\n\n@Component({\n  selector: 'app-serie-selectable',\n  templateUrl: './serie-selectable.component.html',\n  styleUrls: ['./serie-selectable.component.scss'],\n  providers:[{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SerieSelectableComponent),\n    multi: true\n  }]\n})\nexport class SerieSelectableComponent  implements OnInit, ControlValueAccessor, OnDestroy {\n\n  serieSelected:Serie | null = null;\n  disabled:boolean = true;\n  private _series:BehaviorSubject = new BehaviorSubject([]);\n  public series$ = this._series.asObservable();\n  _filteredSeries: BehaviorSubject = new BehaviorSubject([]);\n  filteredSeries$: Observable = this._filteredSeries.asObservable();\n  searchTerm: string = '';\n\n  propagateChange = (obj: any) => {}\n\n  @ViewChild('popover', { read: IonPopover }) popover: IonPopover | undefined;\n\n  page:number = 1;\n  pageSize:number = 25;\n  pages:number = 0;\n  constructor(\n    public seriesSvc:SeriesService\n  ) { \n  }\n  ngOnDestroy(): void {\n    this.popover?.dismiss();\n  }\n  \n  onLoadSeries(){\n    this.loadSeries();\n  }\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n    \n    if (!searchTerm) {\n      this._filteredSeries.next(this._series.value);\n      return;\n    }\n\n    const filtered = this._series.value.filter(serie => \n      serie.name.toLowerCase().includes(searchTerm) \n    );\n\n    this._filteredSeries.next(filtered);\n  }\n\n  loadSeries() {\n    this.page = 1;\n    this.seriesSvc.getAll(this.page, this.pageSize).subscribe({\n      next:(response: Paginated)=>{\n\n        const sortedSeries = response.data.sort((a, b) => \n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._series.next([...sortedSeries]);\n        this._filteredSeries.next([...sortedSeries]); \n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n\n  loadMoreSeries(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          const updatedSeries = [...this._series.value, ...response.data].sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n          this._series.next(updatedSeries);\n          \n          if (this.searchTerm) {\n            const filtered = updatedSeries.filter(serie => \n              serie.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeries.next(filtered);\n          } else {\n            this._filteredSeries.next(updatedSeries);\n          }\n          this.page++;\n          notify?.complete();\n        }\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n  \n  onMoreSeries(ev:InfiniteScrollCustomEvent){\n    this.loadMoreSeries(ev.target);\n  }\n\n  private async selectSerie(id:string|undefined, propagate:boolean=false){\n    if(id){\n      this.serieSelected  = await lastValueFrom(this.seriesSvc.getById(id));\n    }\n    else\n      this.serieSelected = null;\n    if(propagate && this.serieSelected)\n      this.propagateChange(this.serieSelected.id);\n  }\n  \n  writeValue(obj: any): void {\n    this.selectSerie(obj);\n      \n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    \n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit() {}\n\n  onSerieClicked(popover:IonPopover, serie:Serie){\n    this.selectSerie(serie.id, true);\n    popover.dismiss();\n  }\n\n  deselect(popover:IonPopover|null=null){\n    this.selectSerie(undefined, true);\n    if(popover)\n      popover.dismiss();\n  }\n\n  handleImageError(event: Event) {\n    const imgElement = event.target as HTMLImageElement;\n    imgElement.src = 'assets/icon/fav.png'; // Imagen por defecto\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ (disabled ? 'SERIE_SELECTABLE.NONE' : 'SERIE_SELECTABLE.SELECT_SERIE') | translate }}\n        \n      \n      \n      \n        \n          \n        \n        {{serieSelected.name}}\n      \n    \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n\n          \n            \n                    \n                      \n                    \n              {{serie.name}}\n            \n\n            \n              \n                {{ 'SERIES.NO_RESULTS' | translate }}\n              \n            \n\n            \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./serie-selectable.component.scss\n                \n                .custom-searchbar {\n  --background: rgba(255, 255, 255, 0.9);\n  --box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n  --border-radius: 16px;\n  --placeholder-color: rgba(255, 87, 34, 0.6);\n  --icon-color: #ff5722;\n  --color: #333;\n  \n  &.focused {\n    --background: white;\n  }\n}\n\n.no-results {\n  text-align: center;\n  color: white;\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  \n  --border-radius: 16px;\n  margin: 15px;\n}\n\n.serie-selector {\n  width: 100%;\n  border-radius: 8px;\n\n  .selector-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 16px;\n    cursor: pointer;\n\n    &:hover {\n      background: rgba(255, 87, 34, 0.05);\n    }\n\n    .serie-avatar {\n      width: 48px;\n      height: 48px;\n      border: 2px solid #ff5722;\n      overflow: hidden;\n      \n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n\n    .selector-content {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n\n      .placeholder-text {\n        color: gray;\n      }\n\n      .serie-avatar {\n        width: 32px;\n        height: 32px;\n        border: 2px solid #ff5722;\n      }\n\n      .selected-text {\n        color: #333;\n        font-weight: 500;\n      }\n    }\n\n    .chevron-icon {\n      color: #ff5722;\n      font-size: 20px;\n      transition: transform 0.2s ease;\n    }\n  }\n}\n\n.series-popover {\n  --width: 100%;\n  --max-width: 500px;\n  \n  .popover-container {\n    background: white;\n    border-radius: 16px;\n    overflow: hidden;\n\n    .search-header {\n      position: sticky;\n      top: 0;\n      z-index: 2;\n      background: linear-gradient(45deg, #ff5722, #ff9800);\n      padding: 12px;\n\n      .search-item {\n        --background: rgba(255, 255, 255, 0.9);\n        --border-radius: 8px;\n        --padding-start: 12px;\n        --padding-end: 12px;\n        margin: 0;\n\n        ion-icon {\n          color: #ff5722;\n        }\n\n        ion-input {\n          --placeholder-color: rgba(255, 87, 34, 0.6);\n          --color: #333;\n        }\n\n        .clear-button {\n          --color: #ff5722;\n          margin: 0;\n        }\n      }\n    }\n\n    .series-list {\n      max-height: 400px;\n      overflow-y: auto;\n      padding: 8px;\n\n      .serie-option {\n        --background: transparent;\n        --background-hover: rgba(255, 87, 34, 0.05);\n        --ripple-color: rgba(255, 87, 34, 0.1);\n        border-radius: 8px;\n        margin-bottom: 4px;\n\n        ion-avatar {\n          width: 40px;\n          height: 40px;\n          border: 2px solid #ff5722;\n        }\n\n        ion-text {\n          color: #333;\n        }\n\n        &.none-option {\n          border-bottom: 1px solid rgba(255, 87, 34, 0.1);\n          margin-bottom: 8px;\n          padding-bottom: 8px;\n        }\n      }\n    }\n  }\n}\n\nion-infinite-scroll {\n  ion-infinite-scroll-content {\n    --color: #ff5722;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ (disabled ? \\'SERIE_SELECTABLE.NONE\\' : \\'SERIE_SELECTABLE.SELECT_SERIE\\') | translate }}                                                            {{serieSelected.name}}                                                                                                                                                                      {{serie.name}}                                                      {{ \\'SERIES.NO_RESULTS\\' | translate }}                                                                                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SerieSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SerieViewComponent.html":{"url":"components/SerieViewComponent.html","title":"component - SerieViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SerieViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/serie-view/serie-view.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-serie-view\n            \n\n\n\n            \n                styleUrls\n                ./serie-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./serie-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                serie\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/serie-view/serie-view.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        serie\n                    \n                \n                \n                    \n                        Type :         Serie\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/serie-view/serie-view.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-view/serie-view.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-view/serie-view.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { Serie } from 'src/app/core/models/serie.model';\n\n@Component({\n  selector: 'app-serie-view',\n  templateUrl: './serie-view.component.html',\n  styleUrls: ['./serie-view.component.scss'],\n})\nexport class SerieViewComponent {\n  @Input() serie!: Serie;\n  isMobile: boolean = false;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private platform: Platform,\n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n    \n\n    \n        \n  \n    \n      \n      {{ 'SERIE.VIEW' | translate }}\n    \n    @if (isMobile) {\n      \n        \n          \n        \n      \n    }\n  \n\n\n\n  \n    \n      \n        \n      \n      \n        {{ serie.name }}\n        \n          \n          {{ serie.rating }}\n        \n      \n\n      \n        \n          \n          \n            {{ 'SERIE.NAME' | translate }}\n            {{ serie.name }}\n          \n        \n\n        \n          \n          \n            {{ 'SERIE.SYNOPSIS' | translate }}\n            {{ serie.synopsis }}\n          \n        \n\n        \n          \n          \n            {{ 'SERIE.RELEASEYEAR' | translate }}\n            {{ serie.releaseYear }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./serie-view.component.scss\n                \n                // Estilos del toolbar\nion-toolbar {\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  --color: white;\n\n  ion-title {\n    display: flex;\n    align-items: center;\n    \n    .header-icon {\n      margin-right: 8px;\n      font-size: 24px;\n    }\n  }\n\n  .close-button {\n    --color: white;\n  }\n}\n\n.serie-image-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  \n  .serie-cover-image {\n    width: 200px;\n    height: 300px;\n    object-fit: cover;\n    border-radius: 16px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.2);\n    transition: transform 0.3s ease;\n    margin-bottom: 15px;\n    \n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n}\n\n.season-details-container {\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100%;\n  padding: 24px;\n\n  .details-card {\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 16px;\n    padding: 24px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n\n    .season-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 24px;\n      padding-bottom: 16px;\n      border-bottom: 2px solid rgba(255, 87, 34, 0.1);\n\n      h1 {\n        color: #333;\n        font-size: 24px;\n        font-weight: 600;\n        margin: 0;\n      }\n\n      .rating-badge {\n        display: flex;\n        align-items: center;\n        background: linear-gradient(45deg, #ff5722, #ff9800);\n        color: white;\n        padding: 8px 16px;\n        border-radius: 20px;\n\n        ion-icon {\n          margin-right: 4px;\n          color: #fff;\n        }\n      }\n    }\n\n    .details-list {\n      .detail-item {\n        display: flex;\n        align-items: flex-start;\n        padding: 16px;\n        margin-bottom: 12px;\n        border-radius: 12px;\n\n        &:hover {\n          background: rgba(255, 87, 34, 0.05);\n          transform: translateX(8px);\n        }\n\n        ion-icon {\n          color: #ff5722;\n          font-size: 24px;\n          margin-right: 16px;\n          margin-top: 4px;\n        }\n\n        .detail-content {\n          flex: 1;\n\n          h2 {\n            color: #666;\n            font-size: 14px;\n            margin: 0 0 4px 0;\n          }\n\n          p {\n            color: #333;\n            font-size: 16px;\n            margin: 0;\n          }\n        }\n      }\n    }\n  }\n}\n\n@media (max-width: 576px) {\n  .season-details-container {\n    padding: 16px;\n\n    .details-card {\n      padding: 16px;\n\n      .season-header {\n        flex-direction: column;\n        align-items: flex-start;\n        \n        h1 {\n          margin-bottom: 12px;\n        }\n      }\n\n      .detail-item {\n        padding: 12px;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'SERIE.VIEW\\' | translate }}        @if (isMobile) {                                          }                                          {{ serie.name }}                            {{ serie.rating }}                                                            {{ \\'SERIE.NAME\\' | translate }}            {{ serie.name }}                                                          {{ \\'SERIE.SYNOPSIS\\' | translate }}            {{ serie.synopsis }}                                                          {{ \\'SERIE.RELEASEYEAR\\' | translate }}            {{ serie.releaseYear }}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SerieViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesLocalStorageMapping.html":{"url":"injectables/SeriesLocalStorageMapping.html","title":"injectable - SeriesLocalStorageMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesLocalStorageMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: SerieRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        SerieRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\ninterface SerieRaw{\n    id:string,\n    name:string,\n    synopsis:string,\n    releaseYear:number,\n    rating:number,\n    picture:{\n        url:string,\n        large:string,\n        medium:string,\n        small:string,\n        thumbnail:string\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Serie) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: SerieRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SerieRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SerieRaw):Serie {\n        return {\n            id:data.id, \n            name:data.name, \n            synopsis:data.synopsis, \n            releaseYear:data.releaseYear, \n            rating:data.rating,\n            picture:{\n                url:data.picture.url,\n                large:data.picture.large, \n                medium:data.picture.medium,\n                small:data.picture.small,\n                thumbnail:data.picture.thumbnail\n            }\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesMappingFirebaseService.html":{"url":"injectables/SeriesMappingFirebaseService.html","title":"injectable - SeriesMappingFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesMappingFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseSerie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Partial\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Serie } from '../../models/serie.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { FirebaseSerie } from '../../models/firebase/firebase-serie.model';\nimport { Firestore, getFirestore } from 'firebase/firestore';\nimport { FIREBASE_CONFIG_TOKEN } from '../repository.tokens';\nimport { initializeApp } from 'firebase/app';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeriesMappingFirebaseService implements IBaseMapping {\n  \n  private db: Firestore;\n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n        this.db = getFirestore(initializeApp(firebaseConfig));\n  }\n  getOne(data: { id: string } & FirebaseSerie): Serie {\n    return {\n      id: data.id,\n      name: data.name,\n      synopsis: data.synopsis,\n      releaseYear: data.releaseYear,\n      rating: data.rating,\n      picture: data.picture ? {\n        url: data.picture,\n        large: data.picture,\n        medium: data.picture,\n        small: data.picture,\n        thumbnail: data.picture\n      } : undefined\n    };\n  }\n  getPaginated(page: number, pageSize: number, pages: number, data: ({ id: string } & FirebaseSerie)[]): Paginated {\n    return {\n      page,\n      pageSize,\n      pages,\n      data: data.map(item => this.getOne(item))\n    };\n  }\n  setAdd(data: Serie): FirebaseSerie {\n    return {\n      name: data.name,\n      synopsis: data.synopsis,\n      releaseYear: data.releaseYear,\n      rating: data.rating,\n      picture: data.picture?.url || ''\n    };\n  }\n  setUpdate(data: Partial): Partial {\n    const mappedData: Partial = {};\n    \n    if (data.name !== undefined) mappedData.name = data.name;\n    if (data.synopsis !== undefined) mappedData.synopsis = data.synopsis;\n    if (data.releaseYear !== undefined) mappedData.releaseYear = data.releaseYear;\n    if (data.rating !== undefined) mappedData.rating = data.rating;\n    if (data.picture !== undefined) mappedData.picture = data.picture.url || '';\n    \n    return mappedData;\n  }\n\n  getAdded(data: { id: string } & FirebaseSerie): Serie {\n    return this.getOne(data);\n  }\n\n  getUpdated(data: { id: string } & FirebaseSerie): Serie {\n    return this.getOne(data);\n  }\n\n  getDeleted(data: { id: string } & FirebaseSerie): Serie {\n    return this.getOne(data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesMappingJsonServer.html":{"url":"injectables/SeriesMappingJsonServer.html","title":"injectable - SeriesMappingJsonServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesMappingJsonServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-json-server.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: SerieRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        SerieRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { Serie } from \"../../models/serie.model\";\n\nexport interface SerieRaw {\n    id: string\n    nombre: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingJsonServer implements IBaseMapping {\n    setAdd(data: Serie) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:SerieRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SerieRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SerieRaw):Serie {\n        return {\n            id:data.id, \n            name:data.nombre, \n            synopsis:data.synopsis, \n            releaseYear:data.releaseYear, \n            rating:data.rating\n        };\n    }\n    getAdded(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n    getUpdated(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n    getDeleted(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesMappingStrapi.html":{"url":"injectables/SeriesMappingStrapi.html","title":"injectable - SeriesMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: Data | SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Data | SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: Data[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Data[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SerieData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SerieData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeriesPageModule.html":{"url":"modules/SeriesPageModule.html","title":"module - SeriesPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SeriesPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeriesPageModule\n\n\n\ncluster_SeriesPageModule_imports\n\n\n\ncluster_SeriesPageModule_declarations\n\n\n\n\nSeriesPage\n\nSeriesPage\n\n\n\nSeriesPageModule\n\nSeriesPageModule\n\nSeriesPageModule -->\n\nSeriesPage->SeriesPageModule\n\n\n\n\n\nSeriesPageRoutingModule\n\nSeriesPageRoutingModule\n\nSeriesPageModule -->\n\nSeriesPageRoutingModule->SeriesPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/series/series.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SeriesPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SeriesPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { SeriesPage } from './series.page';\nimport { SeriesPageRoutingModule } from './series-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SeriesPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [SeriesPage]\n})\nexport class SeriesPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeriesPageRoutingModule.html":{"url":"modules/SeriesPageRoutingModule.html","title":"module - SeriesPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SeriesPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/series/series-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SeriesPage } from './series.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SeriesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SeriesPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesService.html":{"url":"injectables/SeriesService.html","title":"injectable - SeriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/series.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                delete\n                            \n                            \n                                getSeriesWithSeasons\n                            \n                            \n                                add\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ISeriesRepository, seasonsSvc: SeasonsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/series.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ISeriesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonsSvc\n                                                  \n                                                        \n                                                                        SeasonsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:49\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSeriesWithSeasons\n                        \n                    \n                \n            \n            \n                \ngetSeriesWithSeasons(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/series.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { Season } from '../../models/season.model';\nimport { SERIES_REPOSITORY_TOKEN, SEASONS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ISeriesService } from '../../services/interfaces/series-service.interface';\nimport { Serie } from '../../models/serie.model';\nimport { ISeriesRepository } from '../../repositories/intefaces/series-repository.interface';\nimport { Observable, forkJoin, map, switchMap } from 'rxjs';\nimport { Paginated } from '../../models/paginated.model';\nimport { SeasonsService } from './seasons.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeriesService extends BaseService implements ISeriesService {\n  constructor(\n    @Inject(SERIES_REPOSITORY_TOKEN) repository: ISeriesRepository,\n    private seasonsSvc: SeasonsService\n  ) {\n    super(repository);\n  }\n\n  getSeriesWithSeasons(page: number, pageSize: number): Observable> {\n    return this.getAll(page, pageSize).pipe(\n      switchMap((seriesPaginated: Paginated) => {\n        const seriesWithSeasons$ = seriesPaginated.data.map(serie =>\n          this.seasonsSvc.getAll(1, pageSize).pipe(\n            map(seasonsPaginated => {\n              const serieSeasons = seasonsPaginated.data.filter(season => season.serieId === serie.id);\n              return {\n                ...serie,\n                seasons: serieSeasons\n              };\n            })\n          )\n        );\n  \n        return forkJoin(seriesWithSeasons$).pipe(\n          map(seriesWithSeasons => ({\n            ...seriesPaginated,\n            data: seriesWithSeasons\n          }))\n        );\n      })\n    );\n  }\n\n  // Sobrescribir el método delete para eliminar también las temporadas asociadas\n  override delete(id: string): Observable {\n    return this.seasonsSvc.getAll(-1, 100).pipe(\n      switchMap((seasonsData: any) => {\n        let seasons: Season[];\n        \n        if (Array.isArray(seasonsData)) {\n          seasons = seasonsData.filter((season: Season) => season.serieId === id);\n        } else {\n          seasons = seasonsData.data.filter((season: Season) => season.serieId === id);\n        }\n        \n        const deleteOperations = seasons.map(season => \n          this.seasonsSvc.delete(season.id)\n        );\n        \n        if (deleteOperations.length === 0) {\n          return this.repository.delete(id);\n        }\n        \n        return forkJoin(deleteOperations).pipe(\n          switchMap(() => this.repository.delete(id))\n        );\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nSeasonModalComponent\n\nSeasonModalComponent\n\nSharedModule -->\n\nSeasonModalComponent->SharedModule\n\n\n\n\n\nSeasonViewComponent\n\nSeasonViewComponent\n\nSharedModule -->\n\nSeasonViewComponent->SharedModule\n\n\n\n\n\nSerieModalComponent\n\nSerieModalComponent\n\nSharedModule -->\n\nSerieModalComponent->SharedModule\n\n\n\n\n\nSerieSelectableComponent\n\nSerieSelectableComponent\n\nSharedModule -->\n\nSerieSelectableComponent->SharedModule\n\n\n\n\n\nSerieViewComponent\n\nSerieViewComponent\n\nSharedModule -->\n\nSerieViewComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nSeasonModalComponent \n\nSeasonModalComponent \n\nSeasonModalComponent  -->\n\nSharedModule->SeasonModalComponent \n\n\n\n\n\nSeasonViewComponent \n\nSeasonViewComponent \n\nSeasonViewComponent  -->\n\nSharedModule->SeasonViewComponent \n\n\n\n\n\nSerieModalComponent \n\nSerieModalComponent \n\nSerieModalComponent  -->\n\nSharedModule->SerieModalComponent \n\n\n\n\n\nSerieSelectableComponent \n\nSerieSelectableComponent \n\nSerieSelectableComponent  -->\n\nSharedModule->SerieSelectableComponent \n\n\n\n\n\nSerieViewComponent \n\nSerieViewComponent \n\nSerieViewComponent  -->\n\nSharedModule->SerieViewComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            SeasonModalComponent\n                        \n                        \n                            SeasonViewComponent\n                        \n                        \n                            SerieModalComponent\n                        \n                        \n                            SerieSelectableComponent\n                        \n                        \n                            SerieViewComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            SeasonModalComponent\n                        \n                        \n                            SeasonViewComponent\n                        \n                        \n                            SerieModalComponent\n                        \n                        \n                            SerieSelectableComponent\n                        \n                        \n                            SerieViewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SerieSelectableComponent } from './components/serie-selectable/serie-selectable.component';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { SeasonModalComponent } from './components/season-modal/season-modal.component';\nimport { SerieModalComponent } from './components/serie-modal/serie-modal.component';\nimport { SeasonViewComponent } from './components/season-view/season-view.component';\nimport { SerieViewComponent } from './components/serie-view/serie-view.component';\nimport { IonicModule } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n\n@NgModule({\n  declarations: [\n    SeasonModalComponent, \n    SerieModalComponent, \n    SerieSelectableComponent, \n    SeasonViewComponent,\n    SerieViewComponent,\n    PictureSelectableComponent\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    TranslateModule.forChild()\n  ],\n  exports: [\n    SeasonModalComponent, \n    SerieModalComponent,\n    SerieSelectableComponent,\n    SeasonViewComponent,\n    SerieViewComponent, \n    PictureSelectableComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignInPayload.html":{"url":"interfaces/SignInPayload.html","title":"interface - SignInPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignInPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload {\n  email: string;\n  password: string;\n}\n\nexport interface SignUpPayload {\n  username: string;\n  email: string;\n  password: string;\n  name: string;\n  surname: string;\n  user: string;\n  admin: boolean;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  name: string;\n  surname: string;\n  admin: boolean;\n  picture?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpPayload.html":{"url":"interfaces/SignUpPayload.html","title":"interface - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload {\n  email: string;\n  password: string;\n}\n\nexport interface SignUpPayload {\n  username: string;\n  email: string;\n  password: string;\n  name: string;\n  surname: string;\n  user: string;\n  admin: boolean;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  name: string;\n  surname: string;\n  admin: boolean;\n  picture?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Small.html":{"url":"interfaces/Small.html","title":"interface - Small","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Small\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SplashPage.html":{"url":"components/SplashPage.html","title":"component - SplashPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SplashPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/splash/splash.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-splash\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            LottieComponent\n                \n            \n\n            \n                styleUrls\n                ./splash.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./splash.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAnimationCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authSvc: BaseAuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/splash/splash.page.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAnimationCreated\n                        \n                    \n                \n            \n            \n                \nonAnimationCreated(animationItem: AnimationItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animationItem\n                                            \n                                                        AnimationItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnimationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    path: '/assets/lotties/splash.json', // Ruta a tu archivo de animación\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/splash/splash.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { AnimationOptions, LottieComponent, provideLottieOptions } from 'ngx-lottie';\nimport { IonicModule } from '@ionic/angular';\nimport player, { AnimationItem } from 'lottie-web';\n\n\n@Component({\n  selector: 'app-splash',\n  templateUrl: './splash.page.html',\n  styleUrls: ['./splash.page.scss'],\n  standalone:true,\n  imports: [IonicModule, LottieComponent]\n})\nexport class SplashPage implements OnInit {\n\n  options: AnimationOptions = {\n    path: '/assets/lotties/splash.json', // Ruta a tu archivo de animación\n  };\n\n  onAnimationCreated(animationItem: AnimationItem): void {\n    console.log('Animación creada:', animationItem);\n  }\n  constructor(\n    private router:Router,\n    private authSvc:BaseAuthenticationService\n  ) { }\n\n  ngOnInit() {\n    timer(5000).subscribe(_=>{\n      this.router.navigate(['/home']);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./splash.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SplashPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SplashPageRoutingModule.html":{"url":"modules/SplashPageRoutingModule.html","title":"module - SplashPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SplashPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/splash/splash-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SplashPage } from './splash.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SplashPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SplashPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiAuthMappingService.html":{"url":"injectables/StrapiAuthMappingService.html","title":"injectable - StrapiAuthMappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiAuthMappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signInPayload\n                            \n                            \n                                signUp\n                            \n                            \n                                signUpPayload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: StrapiMeResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiMeResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: StrapiSignInResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiSignInResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StrapiSignIn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: StrapiSignUpResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiSignUpResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StrapiSignUp\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiAuthenticationService.html":{"url":"injectables/StrapiAuthenticationService.html","title":"injectable - StrapiAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAuthenticationService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                jwt_token\n                            \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                getToken\n                            \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInUrl: string, signUpUrl: string, meUrl: string, authMapping: IAuthMapping, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:52\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-authentication.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:107\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:87\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpPayload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpPayload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(userId: string, userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:95\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwt_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:16\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { filter, firstValueFrom, map, Observable, of, switchMap, take, tap } from 'rxjs';\nimport { BaseAuthenticationService } from './base-authentication.service';\nimport { AUTH_MAPPING_TOKEN, AUTH_ME_API_URL_TOKEN, AUTH_SIGN_IN_API_URL_TOKEN, AUTH_SIGN_UP_API_URL_TOKEN } from '../../repositories/repository.tokens';\nimport { HttpClient } from '@angular/common/http';\nimport { IAuthMapping } from '../interfaces/auth-mapping.interface';\nimport { StrapiMeResponse, StrapiSignInResponse, StrapiSignUpResponse, StrapiUser } from './strapi-auth-mapping.service';\nimport { IStrapiAuthentication } from '../interfaces/strapi-authentication.interface';\nimport { User, SignUpPayload } from '../../models/auth.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiAuthenticationService extends BaseAuthenticationService implements IStrapiAuthentication {\n\n  private jwt_token:string|null = null;\n  private apiUrl: string;\n  constructor(\n    @Inject(AUTH_SIGN_IN_API_URL_TOKEN) protected signInUrl: string,\n    @Inject(AUTH_SIGN_UP_API_URL_TOKEN) protected signUpUrl: string,\n    @Inject(AUTH_ME_API_URL_TOKEN) protected meUrl: string,\n    @Inject(AUTH_MAPPING_TOKEN) authMapping: IAuthMapping,\n    private httpClient:HttpClient\n  ) {\n    super(authMapping);\n    this.apiUrl = meUrl.replace('/users/me', '');\n    this.jwt_token = localStorage.getItem('seasons-jwt-token');\n    if (this.jwt_token) {\n      this.me().subscribe({\n        next:(resp) => {\n          this._authenticated.next(true);\n          this._user.next(this.authMapping.me(resp));\n        },\n        error: (err) => {\n          this._authenticated.next(false);\n          this._user.next(undefined);\n        },\n        complete:() => {\n          this._ready.next(true);\n        }\n      });\n    } else {\n      this._ready.next(true);\n    }\n    \n  }\n  getToken(): string | null {\n    return this.jwt_token;\n  }\n\n  async getCurrentUser(): Promise {\n    await firstValueFrom(this._ready.pipe(filter(ready => ready === true)));\n    return firstValueFrom(this._user);\n  }\n\n  signIn(authPayload: any): Observable {\n    return this.httpClient.post(\n      `${this.signInUrl}`, \n      this.authMapping.signInPayload(authPayload)).pipe(map((resp:StrapiSignInResponse)=>{\n      localStorage.setItem(\"seasons-jwt-token\",resp.jwt);\n      this.jwt_token = resp.jwt;\n      this._authenticated.next(true);\n      this._user.next(this.authMapping.signIn(resp));\n      return this.authMapping.signIn(resp);\n    }));\n  }\n\n  signUp(signUpPayload: SignUpPayload): Observable {    \n    return this.httpClient.post(\n        `${this.signUpUrl}`, \n        {\n            username: signUpPayload.username,\n            email: signUpPayload.email,\n            password: signUpPayload.password,\n            name: signUpPayload.name,\n            surname: signUpPayload.surname\n        }\n    ).pipe(map((resp:StrapiSignUpResponse)=>{\n        localStorage.setItem(\"seasons-jwt-token\",resp.jwt);\n        this.jwt_token = resp.jwt;\n        this._authenticated.next(true);\n        return this.authMapping.signUp(resp);\n    }));\n}\n\n  signOut(): Observable {\n    return of(true).pipe(tap(_=>{\n      localStorage.removeItem('seasons-jwt-token');\n      this._authenticated.next(false);\n      this._user.next(undefined);\n    }));\n  }\n\n  updateUser(userId: string, userData: Partial): Observable {\n    const updateUrl = `${this.apiUrl}/users/${userId}`;\n    \n    return this.httpClient.put(\n      updateUrl,\n      userData,\n      { headers: { Authorization: `Bearer ${this.jwt_token}` } }\n    ).pipe(\n      map((response: StrapiUser) => this.authMapping.me(response))\n    );\n  }\n\n  me():Observable{\n    return this.httpClient.get(\n      `${this.meUrl}`,{headers:{Authorization: `Bearer ${this.jwt_token}`}});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMeResponse.html":{"url":"interfaces/StrapiMeResponse.html","title":"interface - StrapiMeResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMeResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMedia.html":{"url":"interfaces/StrapiMedia.html","title":"interface - StrapiMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         StrapiMediaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMediaData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMediaData.html":{"url":"interfaces/StrapiMediaData.html","title":"interface - StrapiMediaData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMediaData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alternativeText\n                                        \n                                \n                                \n                                        \n                                            caption\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            previewUrl\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternativeText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alternativeText:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caption:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:         Formats\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Formats\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previewUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previewUrl:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrapiMediaService.html":{"url":"classes/StrapiMediaService.html","title":"class - StrapiMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrapiMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseMediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadUrl: string, auth: IStrapiAuthentication, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/strapi-media.service.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IStrapiAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-media.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { headers: { Authorization: string; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseMediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseMediaService:116\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiRepositoryService.html":{"url":"injectables/StrapiRepositoryService.html","title":"injectable - StrapiRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepositoryHttpService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IStrapiAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/strapi-repository.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IStrapiAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:81\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:97\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/strapi-repository.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { headers: { Authorization: string; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:89\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignIn.html":{"url":"interfaces/StrapiSignIn.html","title":"interface - StrapiSignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            identifier\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignInResponse.html":{"url":"interfaces/StrapiSignInResponse.html","title":"interface - StrapiSignInResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignInResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignUp.html":{"url":"interfaces/StrapiSignUp.html","title":"interface - StrapiSignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignUpResponse.html":{"url":"interfaces/StrapiSignUpResponse.html","title":"interface - StrapiSignUpResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignUpResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiUser.html":{"url":"interfaces/StrapiUser.html","title":"interface - StrapiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/task.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\nimport { Season } from \"./season.model\";\n\nexport interface Task extends Model{\n    owner:Season,\n    date:Date\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/tasks.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ITasksRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/tasks.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ITasksRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { Task } from '../../models/task.model';\nimport { TASKS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ITasksRepository } from '../../repositories/intefaces/tasks-repository.interface';\nimport { ITasksService } from '../interfaces/tasks-service.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService extends BaseService implements ITasksService {\n  constructor(\n    @Inject(TASKS_REPOSITORY_TOKEN) repository: ITasksRepository\n  ) {\n    super(repository);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thumbnail.html":{"url":"interfaces/Thumbnail.html","title":"interface - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TogglePasswordPipe.html":{"url":"pipes/TogglePasswordPipe.html","title":"pipe - TogglePasswordPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TogglePasswordPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Pipes/toggle-password.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        togglePassword\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(showPassword: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pipes/toggle-password.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                showPassword\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'togglePassword'\n})\nexport class TogglePasswordPipe implements PipeTransform {\n  transform(showPassword: boolean): string {\n    return showPassword ? 'text' : 'password';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload {\n  email: string;\n  password: string;\n}\n\nexport interface SignUpPayload {\n  username: string;\n  email: string;\n  password: string;\n  name: string;\n  surname: string;\n  user: string;\n  admin: boolean;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  name: string;\n  surname: string;\n  admin: boolean;\n  picture?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRaw.html":{"url":"interfaces/UserRaw.html","title":"interface - UserRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Pipes/capitalize.pipe.ts\n            \n            pipe\n            CapitalizePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Pipes/toggle-password.pipe.ts\n            \n            pipe\n            TogglePasswordPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/logged.guard.ts\n            \n            variable\n            loggedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/models/auth.model.ts\n            \n            interface\n            SignInPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/auth.model.ts\n            \n            interface\n            SignUpPayload\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/auth.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/base.model.ts\n            \n            interface\n            Model\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/comment.model.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-season.model.ts\n            \n            interface\n            FirebaseSeason\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-serie.model.ts\n            \n            interface\n            FirebaseSerie\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/models/paginated.model.ts\n            \n            interface\n            Paginated\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/season.model.ts\n            \n            interface\n            Season\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/serie.model.ts\n            \n            interface\n            Serie\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/base-repository-firebase.service.ts\n            \n            injectable\n            BaseRepositoryFirebaseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/base-repository-http.service.ts\n            \n            injectable\n            BaseRepositoryHttpService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/base-repository-local-storage.service.ts\n            \n            injectable\n            BaseRespositoryLocalStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/comments-mapping-firebase.service.ts\n            \n            injectable\n            CommentsMappingFirebaseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/comments-mapping-firebase.service.ts\n            \n            interface\n            FirebaseComment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/comments-repository-firebase.service.ts\n            \n            injectable\n            CommentsRepositoryFirebaseService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/json-server-repository.service.ts\n            \n            injectable\n            JsonServerRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/json-server-repository.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-firebase.service.ts\n            \n            injectable\n            SeasonsMappingFirebaseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-json-server.service.ts\n            \n            injectable\n            SeasonsMappingJsonServer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-json-server.service.ts\n            \n            interface\n            SeasonRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts\n            \n            injectable\n            SeasonsLocalStorageMapping\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts\n            \n            interface\n            SeasonRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            injectable\n            SeasonsMappingStrapi\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            MediaRaw\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            Meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SeasonAttributes\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SeasonData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SeasonRaw\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SerieAttributes\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            UserRaw\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-firebase.service.ts\n            \n            injectable\n            SeriesMappingFirebaseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-json-server.service.ts\n            \n            injectable\n            SeriesMappingJsonServer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-json-server.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-local-storage.service.ts\n            \n            injectable\n            SeriesLocalStorageMapping\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-local-storage.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            injectable\n            SeriesMappingStrapi\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            Meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            SerieAttributes\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            SerieData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            injectable\n            StrapiRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            Meta\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-mapping.interface.ts\n            \n            interface\n            IBaseMapping\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-repository.interface.ts\n            \n            interface\n            IBaseRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-repository.interface.ts\n            \n            interface\n            SearchParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/comments-repository.interface.ts\n            \n            interface\n            ICommentsRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/seasons-repository.interface.ts\n            \n            interface\n            ISeasonsRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/series-repository.interface.ts\n            \n            interface\n            ISeriesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/tasks-repository.interface.ts\n            \n            interface\n            ITasksRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createBaseAuthMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createBaseMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createBaseRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createCollectionSubscriptionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            AuthenticationServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            AuthMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            CommentsCollectionSubscriptionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            CommentsMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            CommentsRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            MediaServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeasonsCollectionSubscriptionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeasonsMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeasonsRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeriesCollectionSubscriptionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeriesMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeriesRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_ME_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_SIGN_IN_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_SIGN_UP_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            BACKEND_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COLLECTION_SUBSCRIPTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_COLLECTION_SUBSCRIPTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            FIREBASE_COLLECTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            FIREBASE_CONFIG_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_COLLECTION_SUBSCRIPTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_COLLECTION_SUBSCRIPTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            STRAPI_AUTH_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            TASKS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            TASKS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            UPLOAD_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/ai.service.ts\n            \n            injectable\n            CohereService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/base-authentication.service.ts\n            \n            injectable\n            BaseAuthenticationService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/base-media.service.ts\n            \n            class\n            BaseMediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/base-service.service.ts\n            \n            injectable\n            BaseService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/comments.service.ts\n            \n            injectable\n            CommentsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-auth-mapping.service.ts\n            \n            injectable\n            FirebaseAuthMappingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-authentication.service.ts\n            \n            injectable\n            FirebaseAuthenticationService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-collection-subscription.service.ts\n            \n            injectable\n            FirebaseCollectionSubscriptionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-media.service.ts\n            \n            injectable\n            FirebaseMediaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/seasons.service.ts\n            \n            injectable\n            SeasonsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/series.service.ts\n            \n            injectable\n            SeriesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            injectable\n            StrapiAuthMappingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiMeResponse\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignInResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignUp\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignUpResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiUser\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-authentication.service.ts\n            \n            injectable\n            StrapiAuthenticationService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            class\n            StrapiMediaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Formats\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Large\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Medium\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            ProviderMetadata\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Small\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            StrapiMedia\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            StrapiMediaData\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Thumbnail\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/core/services/impl/strapi-media.service.ts\n            \n            type alias\n            StrapiUploadResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/auth-mapping.interface.ts\n            \n            interface\n            IAuthMapping\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/authentication.interface.ts\n            \n            interface\n            IAuthentication\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/base-service.interface.ts\n            \n            interface\n            IBaseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/collection-subscription.interface.ts\n            \n            interface\n            CollectionChange\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/collection-subscription.interface.ts\n            \n            interface\n            ICollectionSubscription\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/comments-service.interface.ts\n            \n            interface\n            ICommentsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/seasons-service.interface.ts\n            \n            interface\n            ISeasonsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/series-service.interface.ts\n            \n            interface\n            ISeriesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/strapi-authentication.interface.ts\n            \n            interface\n            IStrapiAuthentication\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/tasks-service.interface.ts\n            \n            interface\n            ITasksService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/my-seasons.service.ts\n            \n            injectable\n            MySeasonsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/my-seasons.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/my-seasons.service.ts\n            \n            interface\n            SeasonRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/my-series.service.ts\n            \n            injectable\n            MySeriesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/my-series.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/my-series.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/utils/blob.ts\n            \n            function\n            dataURLtoBlob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/utils/validators.ts\n            \n            function\n            passwordsMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/utils/validators.ts\n            \n            function\n            passwordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/directives/only-allowed-characters.directive.ts\n            \n            directive\n            OnlyAllowedCharactersDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/comments/comments.page.ts\n            \n            component\n            CommentsPage\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            class\n            Port\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/pages/seasons/seasons.page.ts\n            \n            component\n            SeasonsPage\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/pages/seasons/seasons.page.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/seasons/seasons.page.ts\n            \n            class\n            Port\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/series/series.page.ts\n            \n            component\n            SeriesPage\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/pages/series/series.page.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/series/series.page.ts\n            \n            class\n            Port\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/splash/splash.page.ts\n            \n            component\n            SplashPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/season-modal/season-modal.component.ts\n            \n            component\n            SeasonModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/season-view/season-view.component.ts\n            \n            component\n            SeasonViewComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/serie-modal/serie-modal.component.ts\n            \n            component\n            SerieModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/serie-selectable/serie-selectable.component.ts\n            \n            component\n            SerieSelectableComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/shared/components/serie-view/serie-view.component.ts\n            \n            component\n            SerieViewComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/material : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @apollo/client : ^3.11.8\n        \n            @capacitor/android : 7.0.1\n        \n            @capacitor/cli : ^7.0.1\n        \n            @capacitor/core : ^7.0.1\n        \n            @capacitor/screen-reader : ^7.0.0\n        \n            @google/generative-ai : ^0.24.0\n        \n            @ionic/angular : ^8.0.0\n        \n            @ngx-translate/core : ^16.0.3\n        \n            @ngx-translate/http-loader : ^16.0.0\n        \n            angular : ^1.8.3\n        \n            firebase : ^11.2.0\n        \n            http-proxy-middleware : ^3.0.3\n        \n            ionicons : ^7.0.0\n        \n            lottie-web : ^5.12.2\n        \n            ngx-lottie : ^12.0.0\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^17.18.12\n        \n            pusher-js : ^8.4.0-rc2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBaseAuthMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createBaseMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createBaseRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/repositories/repository.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBaseAuthMappingFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseAuthMappingFactory(token: InjectionToken, dependencies)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBaseMappingFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseMappingFactory(token: InjectionToken, dependencies, modelType)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                modelType\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBaseRepositoryFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseRepositoryFactory(token: InjectionToken, dependencies)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCollectionSubscriptionFactory\n                        \n                    \n                \n            \n            \n                \ncreateCollectionSubscriptionFactory(collectionName: string, mappingToken: InjectionToken, collectionSubscriptionToken: InjectionToken)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mappingToken\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                collectionSubscriptionToken\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/utils/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/utils/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator(serie: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serie\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMy Series\nMy Series esta desarrollada con Angular e Ionic y permite a los usuarios gestionar sus series de TV favoritas y sus temporadas.\nCaracterísticas principales\n\nCreación de Series: Crea tus series favoritas con su información relevante.\nCreación de Temporadas: Crea las temporadas de estas series creadas.\nPestaña about: Pagina con información relevante del creador.\nPestaña perfil: Pagina donde se puede ver y actualizar la información del usuario.\nInterfaz amigable: Diseñada con Ionic para una experiencia optimizada.\n\n\nVideo del proyecto del primer trimestre: https://youtu.be/mQuYNdEqhjQ \nVideo del proyecto del segundo trimestre: https://youtu.be/ZyZX6fsG_Wc \nNetlify del proyecto del segundo trimestre: angular2trimestre.netlify.app \n¡Gracias por usar My Series! Si tienes alguna pregunta o sugerencia, no dudes en contactarme.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeasonsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeasonsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeriesPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeriesPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SplashPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_SeasonsPageModule\n\n\n\ncluster_SeasonsPageModule_declarations\n\n\n\ncluster_SeasonsPageModule_imports\n\n\n\ncluster_SeriesPageModule\n\n\n\ncluster_SeriesPageModule_declarations\n\n\n\ncluster_SeriesPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nSeasonModalComponent \n\nSeasonModalComponent \n\nSeasonModalComponent  -->\n\nSharedModule->SeasonModalComponent \n\n\n\n\n\nSeasonViewComponent \n\nSeasonViewComponent \n\nSeasonViewComponent  -->\n\nSharedModule->SeasonViewComponent \n\n\n\n\n\nSerieModalComponent \n\nSerieModalComponent \n\nSerieModalComponent  -->\n\nSharedModule->SerieModalComponent \n\n\n\n\n\nSerieSelectableComponent \n\nSerieSelectableComponent \n\nSerieSelectableComponent  -->\n\nSharedModule->SerieSelectableComponent \n\n\n\n\n\nSerieViewComponent \n\nSerieViewComponent \n\nSerieViewComponent  -->\n\nSharedModule->SerieViewComponent \n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nOnlyAllowedCharactersDirective\n\nOnlyAllowedCharactersDirective\n\nProfilePageModule -->\n\nOnlyAllowedCharactersDirective->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nSeasonsPage\n\nSeasonsPage\n\n\n\nSeasonsPageModule\n\nSeasonsPageModule\n\nSeasonsPageModule -->\n\nSeasonsPage->SeasonsPageModule\n\n\n\n\n\nSeasonsPageRoutingModule\n\nSeasonsPageRoutingModule\n\nSeasonsPageModule -->\n\nSeasonsPageRoutingModule->SeasonsPageModule\n\n\n\n\n\nSeriesPage\n\nSeriesPage\n\n\n\nSeriesPageModule\n\nSeriesPageModule\n\nSeriesPageModule -->\n\nSeriesPage->SeriesPageModule\n\n\n\n\n\nSeriesPageRoutingModule\n\nSeriesPageRoutingModule\n\nSeriesPageModule -->\n\nSeriesPageRoutingModule->SeriesPageModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nSeasonModalComponent\n\nSeasonModalComponent\n\nSharedModule -->\n\nSeasonModalComponent->SharedModule\n\n\n\n\n\nSeasonViewComponent\n\nSeasonViewComponent\n\nSharedModule -->\n\nSeasonViewComponent->SharedModule\n\n\n\n\n\nSerieModalComponent\n\nSerieModalComponent\n\nSharedModule -->\n\nSerieModalComponent->SharedModule\n\n\n\n\n\nSerieSelectableComponent\n\nSerieSelectableComponent\n\nSharedModule -->\n\nSerieSelectableComponent->SharedModule\n\n\n\n\n\nSerieViewComponent\n\nSerieViewComponent\n\nSharedModule -->\n\nSerieViewComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    31 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    71 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StrapiUploadResponse   (src/.../strapi-media.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/impl/strapi-media.service.ts\n    \n    \n        \n            \n                \n                    \n                    StrapiUploadResponse\n                \n            \n            \n                \n                        StrapiMediaData[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_ME_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_SIGN_IN_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_SIGN_UP_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AuthenticationServiceFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            AuthMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            BACKEND_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            CommentsCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            CommentsMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            CommentsRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FIREBASE_COLLECTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            FIREBASE_CONFIG_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            loggedGuard   (src/.../logged.guard.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                        \n                            REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SeasonsCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SeasonsMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SeasonsRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SERIES_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SERIES_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SERIES_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SERIES_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SERIES_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SeriesCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SeriesMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SeriesRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            STRAPI_AUTH_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TASKS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TASKS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            UPLOAD_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/repositories/repository.tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IAuthMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ME_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthMeApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SIGN_IN_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthSignInApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SIGN_UP_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthSignUpApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IAuthentication')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BACKEND_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Backend')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('CollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('CommentsApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('CommentsCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('ICommentsRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ICommentsRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('CommentsResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIREBASE_COLLECTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FIREBASE_COLLECTION_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIREBASE_CONFIG_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FIREBASE_CONFIG_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IBaseRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('REPOSITORY_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SeasonsApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('SeasonsCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('ISeasonsRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ISeasonsRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SeasonsResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SeriesApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('SeriesCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('ISeriesRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ISeriesRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SeriesResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRAPI_AUTH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IStrapiAuthentication')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TASKS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('TasksApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TASKS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ITasksRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UploadApiUrl')\n                    \n                \n\n\n        \n    \n\n    src/app/core/repositories/repository.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthenticationServiceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: BaseAuthenticationService,\n  useFactory: (backend:string, firebaseConfig:any, signIn:string, signUp:string, meUrl:string, mapping:IAuthMapping, http:HttpClient) => {\n    switch(backend){\n      case 'http':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'local-storage':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'json-server':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'strapi':\n        return new StrapiAuthenticationService(signIn, signUp, meUrl, mapping, http);\n      case 'firebase':\n        return new FirebaseAuthenticationService(firebaseConfig, mapping);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n    }\n    \n  },\n  deps: [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN, AUTH_SIGN_IN_API_URL_TOKEN, AUTH_SIGN_UP_API_URL_TOKEN, AUTH_ME_API_URL_TOKEN, AUTH_MAPPING_TOKEN, HttpClient]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseAuthMappingFactory(AUTH_MAPPING_TOKEN, [BACKEND_TOKEN])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CommentsCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'comments',\n  COMMENTS_REPOSITORY_MAPPING_TOKEN,\n  COMMENTS_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CommentsMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  COMMENTS_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'comment'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CommentsRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: COMMENTS_REPOSITORY_TOKEN,\n  useFactory: (backend: string, http: HttpClient, auth: BaseAuthenticationService, apiURL: string, resource: string, mapping: IBaseMapping, firebaseConfig?: any) => {\n    switch (backend) {\n      case 'firebase':\n        return new CommentsRepositoryFirebaseService(firebaseConfig, mapping);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED FOR COMMENTS\");\n    }\n  },\n  deps: [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    COMMENTS_API_URL_TOKEN, \n    COMMENTS_RESOURCE_NAME_TOKEN, \n    COMMENTS_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: BaseMediaService,\n  useFactory: (backend:string, firebaseConfig:any, upload:string, auth:IAuthentication, http:HttpClient) => {\n    switch(backend){\n      case 'http':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'local-storage':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'json-server':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'firebase':\n        return new FirebaseMediaService(firebaseConfig, auth);\n      case 'strapi':\n        return new StrapiMediaService(upload, auth as IStrapiAuthentication, http);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n    }\n    \n  },\n  deps: [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN, UPLOAD_API_URL_TOKEN, BaseAuthenticationService, HttpClient]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeasonsCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'seasons',\n  SEASONS_REPOSITORY_MAPPING_TOKEN,\n  SEASONS_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeasonsMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  SEASONS_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'season'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeasonsRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(SEASONS_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    SEASONS_API_URL_TOKEN, \n    SEASONS_RESOURCE_NAME_TOKEN, \n    SEASONS_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'series',\n  SERIES_REPOSITORY_MAPPING_TOKEN,\n  SERIES_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  SERIES_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'serie'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(SERIES_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    SERIES_API_URL_TOKEN, \n    SERIES_RESOURCE_NAME_TOKEN, \n    SERIES_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n    const authService = inject(BaseAuthenticationService);\n    const router = inject(Router);\n  \n    return authService.ready$.pipe(\n        filter(isReady => isReady), // Esperar a que `ready$` sea true\n        take(1), // Solo tomar el primer valor true\n        switchMap(() => authService.authenticated$), // Obtener el valor actual de autenticación\n        map(isLoggedIn => {\n          if (isLoggedIn) {\n            return true; // Usuario autenticado, permitir acceso\n          } else {\n            // Usuario no autenticado, redirigir al login\n            router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n            return false;\n          }\n        })\n    );\n  }\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'repositorios',\n  webDir: 'www'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl:\"https://seasons-z1gv.onrender.com\",\n  ApiKey: \"daULRgtqSX0mbYOLSxCpLlhNnRZl1JmdTZlnDCUH\" \n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl:\"http://localhost:1337\",\n  ApiKey: \"daULRgtqSX0mbYOLSxCpLlhNnRZl1JmdTZlnDCUH\" \n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/logged.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n    const authService = inject(BaseAuthenticationService);\n    const router = inject(Router);\n  \n    return authService.ready$.pipe(\n        filter(isReady => isReady), // Esperar a que `ready$` sea true\n        take(1), // Solo tomar el primer valor true\n        switchMap(() => authService.authenticated$), // Obtener el valor actual de autenticación\n        map(isLoggedIn => {\n            if (!isLoggedIn) {\n                // Usuario no autenticado, permitir acceso a rutas públicas\n                return true;\n            } else {\n                // Usuario ya autenticado, redirigir al home\n                router.navigate(['/home']);\n                return false;\n            }\n        })\n    );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
