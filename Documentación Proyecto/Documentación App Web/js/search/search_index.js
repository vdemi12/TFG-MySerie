var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,1.406,1,2.247]],["body/components/AboutPage.html",[0,1.844,1,3.26,2,2.767,3,0.113,4,0.054,5,1.925,6,1.925,7,1.925,8,1.925,9,0.049,10,3.158,11,0.972,12,3.202,13,1.712,14,4.139,15,3.664,16,2.409,17,6.276,18,2.409,19,5.265,20,0.194,21,1.1,22,3.542,23,1.266,24,0.972,25,3.55,26,3.55,27,0.729,28,0.007,29,1.349,30,0.087,31,0.22,32,0.054,33,0.163,34,4.685,35,4.656,36,5.265,37,5.265,38,5.265,39,5.265,40,5.265,41,5.265,42,5.265,43,5.265,44,5.265,45,5.265,46,3.167,47,4.154,48,2.22,49,2.316,50,2.22,51,3.679,52,2.058,53,1.989,54,4.3,55,2.135,56,2.733,57,2.95,58,4.154,59,3.926,60,5.265,61,4.176,62,4.46,63,2.22,64,2.058,65,4.343,66,2.872,67,2.135,68,5.589,69,4.016,70,3.516,71,4.343,72,2.22,73,3.516,74,2.95,75,3.775,76,5.584,77,3.229,78,3.053,79,3.55,80,2.058,81,2.058,82,2.607,83,1.989,84,3.889,85,1.989,86,1.989,87,1.925,88,4.726,89,2.95,90,2.554,91,2.554,92,3.889,93,1.866,94,4.016,95,4.302,96,4.154,97,2.9,98,2.316,99,2.95,100,3.788,101,3.516,102,3.436,103,4.663,104,2.22,105,2.426,106,5.265,107,2.95,108,3.55,109,2.95,110,3.053,111,2.135,112,2.767,113,2.22,114,2.316,115,2.9,116,2.708,117,2.9,118,3.158,119,5.265,120,2.554,121,1.474,122,2.855,123,2.855,124,1.712,125,3.764,126,1.925,127,0.487,128,1.925,129,1.712,130,1.925,131,1.866,132,1.76,133,1.925,134,1.584,135,1.925,136,1.667,137,1.925,138,1.667,139,1.241,140,2.855,141,1.667,142,1.925,143,1.667,144,1.925,145,1.624,146,1.025,147,2.855,148,1.624,149,1.925,150,1.624,151,2.855,152,1.624,153,1.777,154,1.712,155,1.624,156,1.925,157,1.624,158,1.76,159,1.866,160,1.866,161,1.667,162,1.866,163,1.925,164,0.004,165,0.004]],["title/modules/AboutPageModule.html",[166,1.743,167,3.65]],["body/modules/AboutPageModule.html",[1,4.347,3,0.097,4,0.097,9,0.087,28,0.007,30,0.23,31,0.395,32,0.097,33,0.292,121,2.638,164,0.005,165,0.005,166,2.314,167,7.227,168,2.701,169,3.339,170,4.918,171,3.684,172,3.444,173,2.835,174,5.652,175,5.652,176,5.652,177,6.66,178,4.538,179,3.684,180,3.684,181,6.353,182,3.492,183,3.581,184,4.895,185,3.821,186,5.97,187,3.241,188,4.538,189,1.832,190,3.973,191,5.652,192,4.895,193,2.835,194,2.907]],["title/modules/AboutPageRoutingModule.html",[166,1.743,177,3.442]],["body/modules/AboutPageRoutingModule.html",[0,2.048,1,3.887,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,164,0.006,165,0.006,168,2.964,173,3.111,177,5.956,182,3.111,183,3.788,191,6.203,195,6.972,196,4.193,197,4.788,198,4.98,199,3.456,200,1.22,201,3.111,202,4.361]],["title/components/AppComponent.html",[0,1.406,129,2.308]],["body/components/AppComponent.html",[0,1.542,1,1.251,2,2.221,3,0.041,4,0.041,5,1.445,6,3.239,7,1.445,8,1.445,9,0.037,13,1.285,14,3.958,15,3.496,16,1.933,18,1.933,20,0.146,21,0.883,23,0.852,24,1.202,27,0.868,28,0.007,29,1.605,30,0.146,31,0.166,32,0.041,33,0.122,34,5.314,35,4.477,47,4.934,53,1.493,54,3.044,55,1.603,56,3.279,57,1.493,58,4.219,61,4.53,62,3.593,63,1.667,64,3.464,65,3.283,66,2.402,67,3.593,68,3.04,70,3.882,71,4.711,72,1.667,73,2.941,74,2.941,75,1.603,77,2.835,78,1.545,82,1.755,83,1.493,84,3.346,85,2.367,86,2.367,87,3.239,88,4.345,92,2.367,93,1.401,94,2.033,96,3.882,97,2.178,99,3.882,101,4.75,103,1.545,104,1.667,107,2.941,109,5.002,110,3.464,111,3.917,113,1.667,121,1.107,122,2.291,123,2.291,124,1.285,125,3.239,126,1.445,127,0.505,128,1.445,129,2.881,130,1.445,131,1.401,132,1.321,133,1.445,134,1.189,135,1.445,136,1.251,137,1.445,138,1.251,139,0.932,140,2.291,141,1.251,142,1.445,143,1.251,144,1.445,145,1.219,146,0.823,147,2.291,148,1.219,149,1.445,150,1.219,151,2.291,152,1.219,153,1.486,154,1.285,155,1.219,156,1.445,157,1.219,158,1.321,159,1.401,160,1.401,161,1.251,162,1.401,163,1.445,164,0.003,165,0.003,199,1.321,203,2.371,204,0.837,205,5.249,206,4.225,207,0.505,208,2.131,209,4.073,210,5.249,211,3.759,212,6.512,213,2.665,214,4.985,215,2.906,216,5.224,217,4.225,218,0.899,219,0.327,220,0.675,221,3.759,222,0.48,223,2.665,224,3.759,225,2.665,226,2.665,227,2.665,228,2.665,229,1.189,230,0.982,231,4.225,232,2.371,233,2.665,234,2.665,235,2.665,236,2.371,237,5.973,238,5.973,239,5.973,240,3.759,241,2.757,242,4.225,243,5.973,244,4.225,245,4.225,246,4.225,247,4.225,248,4.225,249,4.225,250,4.225,251,3.044,252,3.044,253,5.321,254,4.738,255,2.665,256,5.973,257,1.917,258,1.917,259,5.249,260,6.512,261,2.178,262,6.165,263,1.917,264,7.261,265,4.497,266,5.973,267,5.321,268,3.452,269,4.21,270,2.665,271,4.225,272,3.777,273,3.464,274,1.572,275,5.973,276,2.371,277,3.777,278,2.665,279,5.249,280,2.665,281,3.452,282,1.821,283,2.665,284,1.917,285,5.249,286,1.448,287,1.251,288,2.665,289,2.665,290,1.917,291,2.178,292,2.665,293,1.821,294,2.45,295,2.665,296,2.665,297,3.759,298,2.371,299,5.249]],["title/modules/AppModule.html",[166,1.743,300,3.65]],["body/modules/AppModule.html",[3,0.062,4,0.062,9,0.056,15,1.618,28,0.007,30,0.233,31,0.253,32,0.089,33,0.187,121,1.693,129,4.368,132,2.021,164,0.004,165,0.004,166,1.485,168,1.733,169,2.142,170,3.939,171,3.939,172,3.157,173,1.819,178,3.376,179,2.363,180,2.363,182,2.598,183,2.664,187,2.079,188,2.363,189,1.175,190,2.549,192,2.549,193,3.031,194,1.865,199,2.021,300,6.84,301,3.626,302,3.626,303,3.626,304,3.626,305,5.865,306,5.571,307,3.33,308,5.823,309,6.793,310,5.823,311,3.626,312,3.33,313,5.823,314,5.823,315,4.076,316,4.757,317,4.757,318,4.757,319,4.757,320,4.757,321,4.757,322,4.757,323,4.757,324,4.757,325,4.757,326,5.823,327,3.806,328,4.076,329,4.441,330,4.441,331,4.441,332,4.757,333,4.757,334,4.757,335,4.757,336,4.757,337,3.157,338,3.157,339,4.757,340,4.757,341,4.076,342,5.823,343,2.212,344,3.806,345,4.076,346,4.189,347,5.18,348,4.757,349,6.044,350,3.33,351,2.474,352,5.823,353,5.823,354,4.076,355,3.626,356,6.044,357,4.076,358,3.109,359,3.626,360,4.757,361,4.757,362,5.182,363,4.076,364,4.076,365,5.18,366,2.021,367,1.775,368,2.598,369,4.076,370,3.626,371,0.497,372,1.175,373,4.076,374,4.076,375,2.66,376,4.076,377,4.076,378,7.142,379,3.626,380,3.33,381,3.626,382,7.411,383,9.057,384,3.109,385,2.363,386,2.021,387,6.793,388,4.076,389,4.076,390,4.076,391,4.076,392,4.076,393,3.33,394,4.076,395,3.626,396,4.076,397,3.626,398,4.076,399,4.076,400,4.076]],["title/modules/AppRoutingModule.html",[166,1.743,305,3.442]],["body/modules/AppRoutingModule.html",[3,0.083,4,0.083,9,0.075,28,0.007,30,0.205,31,0.34,32,0.083,33,0.251,68,3.934,159,3.74,164,0.005,165,0.005,168,2.324,173,2.44,182,2.44,183,3.256,196,3.289,197,4.29,198,4.28,199,2.711,200,0.956,201,4.185,305,5.12,385,3.17,386,2.711,401,5.468,402,7.117,403,7.411,404,5.468,405,6.464,406,5.468,407,5.468,408,5.468,409,5.468,410,7.117,411,5.468,412,5.468,413,3.934,414,9.197,415,9.07,416,5.468,417,9.07,418,5.468,419,4.171,420,5.468,421,5.468,422,3.568,423,5.468,424,5.468,425,5.468,426,5.468,427,5.468,428,5.468,429,5.468,430,5.468,431,5.468,432,5.468,433,5.468,434,5.468,435,5.468,436,5.468,437,5.468]],["title/injectables/BaseAuthenticationService.html",[215,2.135,438,0.462]],["body/injectables/BaseAuthenticationService.html",[3,0.069,4,0.069,9,0.063,11,0.841,20,0.249,21,1.316,23,1.27,24,1.717,27,1.735,28,0.007,30,0.2,31,0.283,32,0.069,33,0.209,127,0.604,164,0.004,165,0.004,204,0.903,207,0.753,208,3.636,215,2.809,218,1.655,219,0.497,220,1.243,222,0.531,274,2.683,372,2.436,438,0.607,439,1.53,440,5.856,441,3.474,442,4.766,443,5.144,444,5.144,445,5.144,446,5.144,447,4.802,448,8.511,449,4.868,450,4.108,451,5.936,452,3.938,453,5.144,454,4.555,455,3.577,456,6.295,457,3.721,458,4.555,459,4.302,460,4.555,461,1.979,462,4.802,463,4.555,464,3.474,465,4.555,466,5.601,467,4.555,468,4.052,469,5.144,470,5.894,471,3.301,472,1.983,473,4.22,474,2.577,475,3.077,476,6.359,477,4.555,478,4.052,479,5.144,480,4.555,481,5.144,482,4.555,483,5.144,484,4.052,485,5.144,486,4.555,487,1.363,488,3.786,489,4.052,490,0.903,491,2.47,492,1.058,493,2.394,494,0.919,495,4.555,496,4.555,497,4.555,498,4.555,499,4.555,500,4.555,501,4.555,502,3.721]],["title/classes/BaseMediaService.html",[33,0.22,503,2.372]],["body/classes/BaseMediaService.html",[3,0.107,4,0.107,9,0.096,20,0.383,21,1.732,24,1.29,27,1.435,28,0.007,30,0.171,32,0.107,33,0.321,127,0.542,164,0.006,165,0.006,218,1.486,219,0.383,220,1.116,440,5.185,448,8.134,461,1.88,490,1.385,503,4.11,504,4.202,505,3.672,506,6.773,507,6.773,508,4.957,509,6.987]],["title/injectables/BaseRepositoryFirebaseService.html",[438,0.462,510,3.909]],["body/injectables/BaseRepositoryFirebaseService.html",[3,0.057,4,0.057,9,0.052,11,0.694,15,1.491,20,0.206,21,1.147,23,1.107,24,1.58,27,1.628,28,0.007,30,0.209,31,0.233,32,0.057,33,0.173,66,2.512,127,0.635,164,0.004,165,0.004,200,1.387,204,0.745,207,0.657,218,1.741,219,0.448,220,1.307,222,0.657,230,1.989,338,2.037,371,1.062,438,0.53,439,1.262,442,3.41,461,1.851,487,1.125,490,0.745,492,0.873,494,0.758,510,4.486,511,6.636,512,4.085,513,2.452,514,5.772,515,4.058,516,2.885,517,2.578,518,2.722,519,2.885,520,3.216,521,4.884,522,2.801,523,2.35,524,4.948,525,1.803,526,1.913,527,4.884,528,3.183,529,2.45,530,3.146,531,3.757,532,3.537,533,2.512,534,3.757,535,1.165,536,2.105,537,1.172,538,1.81,539,3.302,540,3.046,541,3.757,542,1.979,543,2.801,544,3.757,545,4.884,546,3.757,547,3.343,548,2.45,549,3.757,550,3.343,551,2.26,552,2.26,553,2.35,554,2.703,555,2.568,556,3.07,557,3.343,558,3.343,559,3.07,560,3.343,561,3.343,562,3.343,563,3.757,564,3.343,565,4.884,566,3.343,567,2.26,568,1.844,569,3.343,570,2.45,571,1.613,572,1.597,573,3.07,574,1.975,575,1.863,576,1.459,577,1.764,578,0.645,579,0.771,580,2.703,581,3.757,582,2.179,583,2.703,584,2.35,585,2.866,586,3.343,587,3.07,588,7.135,589,3.343,590,3.757,591,3.343,592,4.884,593,3.343,594,3.343,595,3.343,596,3.343,597,3.343,598,3.343,599,3.343,600,3.343,601,5.772,602,5.772,603,2.179,604,3.757,605,5.772,606,4.433,607,4.884,608,4.884,609,3.343,610,3.07,611,1.262,612,3.343,613,3.343,614,3.343,615,3.343,616,3.343,617,3.343,618,3.343,619,3.343,620,3.757,621,3.757,622,3.343]],["title/injectables/BaseRepositoryHttpService.html",[438,0.462,623,2.774]],["body/injectables/BaseRepositoryHttpService.html",[3,0.068,4,0.068,9,0.062,11,0.829,20,0.246,21,1.303,23,1.258,24,1.552,27,1.669,28,0.007,30,0.224,31,0.279,32,0.068,33,0.206,82,1.865,127,0.653,164,0.004,165,0.004,204,0.89,215,2.004,218,1.789,219,0.461,220,1.343,222,0.688,229,2.004,343,1.706,351,2.818,366,2.227,367,1.955,368,2.004,371,0.992,438,0.602,439,1.509,442,4.271,461,1.943,487,1.344,488,4.653,490,0.89,492,1.044,494,0.906,511,6.58,512,4.05,516,3.277,517,2.927,518,3.091,519,3.277,522,3.18,525,1.733,526,1.919,529,2.782,530,3.001,532,3.452,533,2.853,535,0.946,536,2.516,537,1.042,538,1.635,539,3.75,540,3.362,542,1.37,543,3.18,548,2.782,568,1.509,570,2.782,571,1.832,572,1.909,574,2.36,575,2.227,576,1.744,577,2.109,578,0.772,579,0.922,582,2.604,623,3.615,624,3.996,625,3.069,626,2.454,627,4.066,628,3.615,629,4.491,630,3.18,631,4.491,632,4.491,633,4.491,634,4.491,635,4.491,636,2.604,637,3.069,638,2.516,639,2.809,640,1.955,641,3.069,642,2.109,643,3.669,644,3.426,645,2.809,646,1.955,647,1.509,648,2.516,649,2.809,650,2.809,651,2.809,652,2.809,653,2.004,654,3.277,655,2.809,656,2.809,657,2.809,658,3.996,659,2.055,660,1.744,661,2.435,662,4.491,663,3.231,664,4.491,665,4.491,666,4.491,667,4.491,668,4.491,669,4.491]],["title/injectables/BaseRespositoryLocalStorageService.html",[438,0.462,670,3.909]],["body/injectables/BaseRespositoryLocalStorageService.html",[3,0.065,4,0.065,9,0.059,11,0.79,20,0.382,21,1.26,23,0.864,24,1.604,27,1.701,28,0.007,30,0.208,31,0.266,32,0.065,33,0.197,82,2.504,127,0.643,164,0.004,165,0.004,200,0.749,204,0.849,207,0.721,218,1.762,219,0.466,220,1.323,222,0.673,230,1.622,286,1.467,371,0.975,372,2.013,438,0.582,439,1.438,461,1.905,474,1.839,475,2.196,487,1.282,490,0.849,492,0.995,494,0.864,511,6.739,512,4.149,516,3.169,517,2.831,518,2.989,519,3.169,522,3.076,525,1.676,526,1.871,529,2.69,530,3.037,532,3.563,533,2.759,535,1.095,536,2.399,537,1.021,538,1.729,539,3.627,540,3.277,542,1.306,543,3.076,548,2.69,570,2.69,571,1.771,572,1.82,574,2.251,575,2.123,576,1.663,577,2.011,578,0.736,579,0.879,603,2.483,611,1.438,628,2.483,638,2.399,670,4.927,671,5.314,672,2.926,673,6.03,674,6.98,675,4.282,676,4.282,677,4.282,678,4.282,679,3.81,680,4.282,681,4.282,682,4.282,683,4.282,684,4.282,685,4.282,686,4.282,687,4.282,688,4.282,689,4.282,690,4.282,691,4.282,692,4.282,693,4.282,694,4.282,695,4.282,696,4.282,697,4.282,698,4.282,699,4.282,700,4.282,701,4.282,702,4.282,703,6.98,704,6.98,705,4.282,706,6.03,707,6.03,708,4.282,709,4.282,710,3.496,711,6.03,712,6.03,713,4.282,714,4.282]],["title/injectables/BaseService.html",[438,0.462,715,3.122]],["body/injectables/BaseService.html",[3,0.073,4,0.073,9,0.066,11,0.881,20,0.261,21,1.358,23,1.311,24,1.647,27,1.8,28,0.007,30,0.215,31,0.296,32,0.073,33,0.219,127,0.68,164,0.005,165,0.005,204,0.946,218,1.865,219,0.48,220,1.4,222,0.666,286,2.227,371,1.013,438,0.627,439,1.602,440,5.659,442,2.507,461,2.005,474,1.455,475,1.738,487,1.428,490,0.946,494,0.962,512,3.051,516,3.416,517,3.051,518,4.423,519,3.416,522,3.315,529,2.9,530,3.057,532,3.705,533,2.974,535,0.977,536,3.641,537,1.202,538,1.895,539,4.445,540,3.471,542,1.982,543,3.315,548,2.9,570,3.541,572,2.028,576,1.852,577,2.24,578,0.82,579,0.98,659,2.974,661,2.587,715,4.24,716,4.245,717,3.432,718,4.771,719,4.771,720,4.771,721,4.771,722,4.771,723,4.771,724,2.984,725,4.771,726,4.771,727,4.065,728,4.771,729,2.869,730,3.898,731,3.898,732,2.183,733,4.771,734,4.771,735,4.771,736,4.771,737,4.771,738,4.771,739,4.771,740,4.245]],["title/pipes/CapitalizePipe.html",[741,2.993,742,3.909]],["body/pipes/CapitalizePipe.html",[3,0.104,4,0.104,9,0.093,11,1.254,13,3.277,21,1.42,24,1.254,27,1.395,28,0.007,30,0.166,31,0.422,32,0.104,33,0.312,127,0.678,164,0.006,165,0.006,218,1.445,219,0.372,220,1.085,222,0.682,371,0.995,475,3.182,741,5.1,742,6.662,743,5.552,744,6.046,745,8.153,746,4.25,747,8.153,748,6.795,749,7.254,750,6.795,751,6.795,752,6.795,753,6.795]],["title/injectables/CohereService.html",[438,0.462,754,3.65]],["body/injectables/CohereService.html",[3,0.075,4,0.075,9,0.067,20,0.269,21,1.385,23,0.99,24,1.482,27,1.008,28,0.007,30,0.205,31,0.305,32,0.075,33,0.225,64,2.846,82,2.039,87,2.662,112,2.58,127,0.514,153,1.876,164,0.005,165,0.005,200,1.159,204,0.973,207,0.792,218,1.409,219,0.44,220,1.058,222,0.65,230,2.008,241,4.323,267,4.011,287,2.305,290,3.532,343,1.865,351,2.925,358,3.745,359,4.368,366,2.434,367,2.885,368,3.346,371,0.809,372,1.416,438,0.639,439,1.649,461,1.595,474,2.021,475,2.413,490,0.973,494,0.99,568,1.649,576,1.906,625,3.355,627,3.942,630,3.38,648,4.498,741,3.07,754,5.054,755,4.368,756,6.673,757,5.895,758,6.626,759,6.626,760,7.144,761,4.909,762,4.767,763,6.626,764,4.909,765,6.626,766,6.626,767,4.909,768,4.011,769,3.195,770,6.626,771,2.367,772,2.367,773,4.909,774,4.909,775,6.626,776,4.909,777,4.909,778,4.909,779,5.054,780,6.673,781,4.909,782,7.5,783,4.909,784,4.909,785,4.909,786,4.909,787,7.216,788,4.909,789,4.909,790,4.909,791,4.368,792,4.909,793,4.909,794,4.909,795,4.368,796,4.909,797,7.5,798,4.909,799,4.909,800,4.909,801,4.909,802,4.368,803,4.909,804,4.909,805,4.909,806,4.909,807,4.909,808,4.909,809,4.909,810,3.745,811,4.909,812,4.909,813,4.909,814,4.909,815,4.909,816,4.909,817,4.909,818,4.909,819,4.909,820,4.909,821,4.909,822,4.909,823,4.909,824,4.909,825,4.909,826,4.909,827,4.909,828,4.909,829,4.368,830,4.909]],["title/interfaces/CollectionChange.html",[831,0.016,832,2.878]],["body/interfaces/CollectionChange.html",[3,0.099,4,0.099,9,0.09,20,0.357,28,0.007,29,2.477,30,0.195,32,0.121,164,0.006,165,0.006,207,0.951,219,0.516,220,1.27,222,0.674,461,1.691,490,1.292,530,3.061,535,1.181,576,2.532,577,3.062,831,0.027,832,4.783,833,1.061,834,4.254,835,5.327,836,2.189,837,5.598,838,5.598,839,5.598,840,3.922,841,5.327,842,5.327]],["title/interfaces/Comment.html",[831,0.016,843,2.774]],["body/interfaces/Comment.html",[3,0.096,4,0.096,9,0.087,20,0.346,28,0.007,30,0.191,32,0.096,93,4.643,164,0.005,165,0.005,207,0.933,219,0.506,220,1.245,222,0.714,274,3.52,472,3.846,576,3.285,611,2.842,831,0.022,833,1.027,843,4.521,844,5.619,845,2.424,846,3.669,847,7.218,848,3.218,849,6.912,850,4.817,851,6.315]],["title/injectables/CommentsMappingFirebaseService.html",[438,0.462,852,3.65]],["body/injectables/CommentsMappingFirebaseService.html",[3,0.061,4,0.061,9,0.055,11,0.741,20,0.22,21,1.204,23,0.81,24,1.606,27,1.715,28,0.007,30,0.204,31,0.249,32,0.088,33,0.184,93,3.54,127,0.663,164,0.004,165,0.004,200,0.702,204,0.796,207,0.689,218,1.818,219,0.427,220,1.365,222,0.542,230,1.565,338,2.177,371,1.02,372,1.158,386,2.856,438,0.556,439,1.349,442,2.11,471,3.566,472,2.933,487,1.202,492,0.933,494,0.81,513,2.62,515,4.213,523,2.511,525,2.455,526,1.544,528,3.34,535,0.761,537,1.173,538,1.779,542,1.757,551,2.415,552,2.415,553,2.511,555,2.744,567,2.415,571,1.179,575,1.99,578,1.157,579,0.824,584,2.511,606,3.936,611,1.349,831,0.014,836,2.164,843,5.237,846,2.797,847,5.504,848,2.454,849,3.28,852,4.394,853,6.736,854,3.34,855,3.34,856,3.34,857,3.34,858,3.34,859,3.34,860,3.34,861,5.76,862,2.055,863,4.015,864,2.055,865,4.015,866,2.055,867,4.015,868,3.227,869,4.213,870,4.015,871,2.055,872,4.015,873,2.055,874,4.015,875,6.638,876,2.055,877,4.015,878,4.846,879,2.744,880,4.394,881,3.063,882,3.063,883,4.706,884,6.548,885,6.548,886,4.395,887,6.013,888,5.125,889,3.572,890,4.706,891,2.203,892,3.572,893,3.572,894,3.28,895,3.572,896,1.748,897,3.28,898,4.603,899,1.559,900,3.28,901,3.063,902,3.063,903,3.906]],["title/injectables/CommentsRepositoryFirebaseService.html",[438,0.462,904,3.909]],["body/injectables/CommentsRepositoryFirebaseService.html",[3,0.051,4,0.051,9,0.046,11,0.617,15,1.327,20,0.183,21,1.052,23,1.016,24,1.561,27,1.619,28,0.007,30,0.207,31,0.208,32,0.051,33,0.154,66,2.304,127,0.63,132,3.584,164,0.004,165,0.004,200,1.479,204,0.663,207,0.602,218,1.726,219,0.444,220,1.296,222,0.641,230,1.929,286,2.075,338,1.813,371,1.062,386,2.496,438,0.486,439,1.123,442,2.646,461,1.851,474,1.847,475,2.206,487,1.001,490,0.663,492,0.777,494,0.674,512,4.034,513,2.182,514,5.388,515,3.788,516,2.646,517,2.364,518,2.496,519,2.646,520,3.002,521,4.479,522,2.569,523,2.091,525,1.683,526,1.806,527,2.975,528,2.919,529,2.246,532,3.39,533,2.304,535,1.15,536,1.873,537,1.217,538,1.931,539,4.348,540,3.567,542,2.317,543,2.569,545,4.479,547,2.975,548,2.246,551,2.011,552,2.011,553,2.091,554,2.405,555,2.285,556,2.732,557,2.975,558,2.975,559,2.732,560,2.975,561,4.479,562,2.975,564,2.975,565,4.479,566,2.975,567,2.011,568,2.034,569,2.975,571,1.479,572,2.14,575,1.658,578,0.574,579,0.686,580,2.405,583,2.405,584,2.091,585,2.55,586,4.479,587,2.732,589,2.975,591,2.975,592,4.479,593,4.479,594,2.975,595,2.975,596,2.975,597,2.975,598,2.975,599,4.479,600,4.479,601,5.996,602,5.996,603,1.939,605,5.388,606,4.94,607,4.479,608,4.479,609,2.975,610,2.732,611,1.123,612,2.975,613,2.975,614,2.975,615,2.975,616,2.975,617,2.975,618,2.975,619,2.975,622,2.975,843,4.571,848,1.834,853,6.553,879,2.285,904,4.114,905,3.84,906,5.035,907,3.343,908,3.343,909,3.343,910,6.056,911,3.343,912,3.84,913,3.343,914,2.975,915,3.343,916,2.732,917,3.622,918,3.343,919,3.343,920,6.739,921,3.343,922,3.343,923,5.035,924,5.035,925,3.343,926,3.343,927,3.343,928,3.343,929,5.035,930,3.343,931,3.343,932,3.343,933,3.343]],["title/injectables/CommentsService.html",[362,3.65,438,0.462]],["body/injectables/CommentsService.html",[3,0.076,4,0.076,9,0.069,11,0.926,20,0.275,21,1.405,23,1.356,24,1.666,27,1.785,28,0.007,30,0.217,31,0.312,32,0.076,33,0.23,127,0.675,164,0.005,165,0.005,204,0.994,207,0.804,218,1.849,219,0.486,220,1.389,222,0.673,230,1.762,362,5.128,371,0.612,438,0.649,439,1.685,461,1.92,487,1.501,490,0.994,494,1.012,512,3.56,516,3.533,517,3.157,518,3.759,519,3.533,522,3.43,529,2.238,530,2.89,532,3.383,533,2.295,535,1.002,537,1.172,538,1.849,542,2.471,543,2.559,548,2.238,572,2.132,647,1.685,715,5.889,717,3.609,729,3.017,732,2.295,843,2.909,845,2.09,848,1.827,879,3.428,905,5.128,912,5.128,917,6.256,934,4.463,935,7.583,936,6.723,937,5.016,938,4.387,939,4.898,940,3.826,941,4.098,942,3.826,943,3.826,944,3.826,945,3.826,946,5.128,947,5.016,948,4.098,949,5.016,950,5.016,951,3.826,952,5.016,953,5.016]],["title/classes/Country.html",[33,0.22,954,2.774]],["body/classes/Country.html",[0,2.127,3,0.059,4,0.059,9,0.053,11,0.715,12,2.864,14,1.729,15,1.538,16,1.773,18,1.773,20,0.212,22,1.977,23,0.782,24,1.219,28,0.007,29,1.472,30,0.22,31,0.241,32,0.101,33,0.303,35,1.921,82,1.609,127,0.562,134,1.729,146,1.41,150,2.569,153,2.269,157,2.569,164,0.004,165,0.004,189,1.117,193,1.729,194,1.773,200,1.266,207,0.672,208,3.641,219,0.362,220,1.28,222,0.533,230,1.92,286,1.924,287,1.819,327,2.171,344,2.171,372,1.619,385,3.256,422,2.528,461,0.824,473,3.58,475,1.411,490,0.768,504,2.33,520,3.81,535,0.957,537,0.89,578,0.666,611,2.692,660,1.504,724,2.424,954,4.198,955,3.166,956,4.948,957,3.875,958,3.875,959,4.646,960,3.875,961,4.13,962,3.837,963,2.424,964,2.648,965,2.648,966,2.648,967,2.528,968,2.171,969,3.829,970,2.33,971,3.663,972,2.247,973,2.528,974,2.424,975,2.528,976,2.648,977,3.377,978,2.528,979,2.788,980,4.587,981,2.424,982,2.788,983,3.447,984,3.166,985,2.788,986,3.447,987,3.447,988,2.648,989,2.648,990,2.956,991,3.166,992,2.648,993,3.447,994,3.447,995,2.956,996,2.648,997,1.472,998,2.18,999,3.447,1000,3.447,1001,3.166,1002,2.648,1003,2.648,1004,2.788,1005,2.956,1006,2.648,1007,2.648,1008,2.648,1009,2.648,1010,2.648,1011,2.648,1012,2.956,1013,2.956,1014,2.648,1015,2.956,1016,1.383,1017,2.788,1018,5.014,1019,3.447,1020,3.663,1021,4.995,1022,5.874,1023,4.995,1024,4.995,1025,3.663,1026,3.663,1027,3.663,1028,3.447,1029,3.663,1030,3.663,1031,3.166,1032,4.995,1033,3.447,1034,4.724,1035,2.956,1036,3.447,1037,2.956,1038,3.447,1039,3.447,1040,3.447,1041,2.956,1042,2.956,1043,4.344,1044,3.447,1045,2.956,1046,3.447,1047,3.512,1048,3.837,1049,3.837,1050,3.837,1051,2.956,1052,3.447,1053,2.956,1054,3.447,1055,3.447,1056,3.447,1057,3.447,1058,3.447,1059,2.788]],["title/classes/Country-1.html",[33,0.184,286,1.372,954,2.322]],["body/classes/Country-1.html",[0,1.621,3,0.044,4,0.044,9,0.04,11,0.532,12,2.291,14,1.285,15,1.143,16,1.318,18,1.318,20,0.341,22,1.469,23,0.581,24,1.019,28,0.007,29,1.094,30,0.211,31,0.179,32,0.084,33,0.253,35,1.428,82,2.292,89,1.613,93,3.276,112,2.36,127,0.484,146,0.561,152,2.055,153,2.25,155,1.318,164,0.003,165,0.003,189,0.83,193,1.285,194,1.318,200,1.448,207,0.537,208,3.46,209,1.801,219,0.302,220,1.144,222,0.459,229,1.285,230,1.924,286,2.136,287,1.352,327,2.516,344,2.516,371,0.548,372,1.949,386,3.09,449,1.801,461,1.174,473,3.664,474,0.878,487,0.862,490,0.571,504,1.732,517,1.352,520,3.09,535,0.824,537,1.008,538,0.657,542,0.878,578,0.771,611,1.854,663,3.231,724,1.801,832,2.701,834,2.93,837,2.93,838,1.879,839,1.879,840,2.701,891,1.344,899,1.118,938,3.601,954,3.615,956,4.26,959,4.152,961,3.452,962,3.069,963,1.801,964,1.968,965,3.069,966,3.069,967,2.93,968,2.516,969,3.2,970,1.732,971,2.93,972,1.67,973,1.879,974,1.801,975,1.879,976,1.968,977,2.701,981,1.801,988,1.968,989,1.968,992,1.968,996,1.968,997,1.094,998,2.42,1002,1.968,1003,1.968,1004,4.485,1006,1.968,1007,1.968,1008,1.968,1009,1.968,1010,1.968,1011,1.968,1013,2.197,1014,1.968,1017,2.072,1018,4.067,1020,1.879,1025,4.067,1026,4.067,1027,4.067,1029,1.879,1030,1.879,1034,2.93,1043,4.065,1047,1.801,1048,1.968,1049,1.968,1050,1.968,1051,2.197,1053,2.197,1059,2.072,1060,2.353,1061,2.88,1062,2.88,1063,2.88,1064,2.072,1065,2.072,1066,2.197,1067,2.197,1068,3.231,1069,2.93,1070,1.732,1071,2.562,1072,2.562,1073,2.072,1074,4.26,1075,2.353,1076,2.353,1077,2.353,1078,4.485,1079,2.197,1080,4.26,1081,2.197,1082,3.069,1083,2.197,1084,2.072,1085,2.197,1086,1.801,1087,2.197,1088,2.562,1089,2.562,1090,2.197,1091,2.197,1092,3.231,1093,2.197,1094,1.968,1095,2.562,1096,2.562,1097,2.562,1098,2.562,1099,2.197,1100,2.562,1101,3.669,1102,2.197,1103,3.231,1104,3.231,1105,2.743,1106,2.197,1107,3.425,1108,3.995,1109,4.21,1110,4.21,1111,2.562,1112,3.995,1113,2.974,1114,2.562,1115,2.562,1116,2.197,1117,3.425,1118,2.562,1119,2.197,1120,2.562,1121,2.072,1122,2.072,1123,3.231,1124,2.353,1125,3.231,1126,2.562,1127,2.353,1128,3.669,1129,2.562,1130,3.09,1131,2.93,1132,3.995,1133,3.995,1134,2.353,1135,2.072,1136,2.353,1137,2.353,1138,2.353,1139,2.072,1140,2.353,1141,2.562,1142,2.353,1143,2.562,1144,2.353,1145,2.353,1146,2.562,1147,2.197,1148,2.562,1149,3.069,1150,3.772,1151,2.197,1152,2.197,1153,2.197,1154,2.562,1155,2.901,1156,3.601,1157,2.562,1158,2.197,1159,2.562,1160,2.562,1161,2.562,1162,3.425,1163,2.197,1164,2.197,1165,2.562,1166,2.197,1167,2.197,1168,2.072,1169,1.968,1170,3.069,1171,2.197,1172,2.197,1173,2.562,1174,2.197]],["title/classes/Country-2.html",[33,0.184,287,1.88,954,2.322]],["body/classes/Country-2.html",[0,1.579,3,0.042,4,0.042,9,0.038,11,0.51,12,2.218,14,1.233,15,1.097,16,1.264,18,1.264,20,0.334,22,1.41,23,0.557,24,0.992,28,0.007,29,1.05,30,0.209,31,0.172,32,0.082,33,0.247,35,1.37,82,2.232,89,1.548,93,3.203,112,2.285,127,0.473,145,1.989,146,1.485,148,1.264,153,1.231,164,0.003,165,0.003,189,0.797,193,1.233,194,1.264,200,1.432,207,0.52,208,3.427,209,1.728,219,0.294,220,1.124,222,0.449,229,1.233,230,1.903,241,2.837,286,2.088,287,1.298,327,2.436,344,2.436,367,2.34,368,2.719,371,0.531,372,1.911,385,2.521,386,2.155,393,2.258,449,1.728,461,1.143,473,3.593,474,0.843,487,0.827,490,0.548,504,1.662,517,1.298,520,3.022,535,0.876,537,0.992,538,0.631,542,0.843,578,0.747,611,1.805,663,3.128,671,1.662,724,1.728,832,2.615,834,2.837,837,2.837,838,1.803,839,1.803,840,2.615,891,1.301,899,1.073,938,3.507,954,3.534,956,4.165,959,4.081,961,3.362,962,2.971,963,1.728,964,1.889,965,2.971,966,2.971,967,2.837,968,2.436,969,3.117,970,1.662,971,2.837,972,1.602,973,1.803,974,1.728,975,1.803,976,1.889,977,2.615,978,1.803,988,1.889,989,1.889,995,2.108,996,1.889,997,1.05,998,2.366,1002,1.889,1003,1.889,1005,4.649,1006,1.889,1007,1.889,1008,1.889,1009,1.889,1010,1.889,1011,1.889,1012,2.108,1014,1.889,1018,3.977,1020,1.803,1025,3.977,1026,3.977,1027,3.977,1029,1.803,1030,1.803,1034,2.837,1035,2.108,1037,2.108,1041,2.108,1042,2.108,1043,4.009,1045,2.108,1047,1.728,1048,1.889,1049,1.889,1050,1.889,1065,1.988,1067,2.108,1068,3.128,1069,2.837,1070,1.662,1073,1.988,1074,3.673,1078,4.385,1079,2.108,1080,4.165,1081,2.108,1082,2.971,1083,2.108,1084,1.988,1085,2.108,1086,1.728,1087,2.108,1090,2.108,1091,2.108,1092,3.128,1093,2.108,1094,1.889,1099,2.108,1102,2.108,1103,3.128,1104,3.128,1105,2.69,1106,2.108,1107,3.316,1109,4.1,1110,4.1,1113,2.923,1116,2.108,1117,3.316,1119,2.108,1121,1.988,1122,1.988,1123,3.128,1125,3.128,1130,3.022,1131,2.837,1135,1.988,1139,1.988,1147,2.108,1149,2.971,1150,3.673,1151,2.108,1152,2.108,1153,2.108,1155,2.825,1156,3.507,1158,2.108,1162,3.316,1163,2.108,1164,2.108,1166,2.108,1167,2.108,1168,1.988,1169,1.889,1170,2.971,1171,2.108,1172,2.108,1174,2.108,1175,2.258,1176,2.763,1177,2.763,1178,2.763,1179,1.988,1180,2.108,1181,2.459,1182,2.459,1183,2.459,1184,2.459,1185,2.459,1186,2.459,1187,2.459,1188,2.459,1189,2.459,1190,2.459,1191,2.459,1192,2.459,1193,2.459,1194,3.868,1195,2.108,1196,2.459,1197,2.459,1198,2.459,1199,1.889,1200,3.128,1201,2.459,1202,5.423,1203,2.459,1204,3.868,1205,2.459,1206,4.782,1207,2.258,1208,1.803,1209,2.459,1210,2.459,1211,3.868,1212,2.459,1213,3.868,1214,2.459,1215,2.459,1216,2.459,1217,2.459,1218,2.459,1219,2.459,1220,2.459,1221,3.868,1222,3.316,1223,3.868,1224,3.868,1225,3.868,1226,2.459,1227,2.459,1228,2.459,1229,2.459,1230,2.459,1231,2.459,1232,2.459,1233,2.459,1234,2.459,1235,2.459,1236,2.459,1237,2.459,1238,2.459,1239,2.459,1240,2.459,1241,2.459,1242,2.459,1243,2.459,1244,2.459,1245,2.459]],["title/interfaces/Data.html",[831,0.016,836,1.173]],["body/interfaces/Data.html",[3,0.067,4,0.067,9,0.06,11,0.805,20,0.239,28,0.007,30,0.204,31,0.271,32,0.137,33,0.2,127,0.593,146,1.19,164,0.004,165,0.004,189,1.258,200,1.336,204,0.865,207,0.731,219,0.335,222,0.562,371,1.066,438,0.59,471,2.796,472,2.66,492,1.014,494,0.88,525,1.213,526,1.638,535,1.102,537,1.153,538,0.996,571,1.282,578,1.05,579,0.896,611,2.052,831,0.03,833,0.71,836,2.293,848,2.568,862,1.557,864,1.557,866,1.557,871,1.557,873,1.557,876,1.557,891,1.306,896,1.9,1016,1.557,1105,3.473,1113,3.554,1246,2.104,1247,2.049,1248,3.34,1249,4.519,1250,1.306,1251,2.597,1252,2.53,1253,1.855,1254,2.226,1255,2.366,1256,2.366,1257,1.306,1258,3.173,1259,2.966,1260,3.313,1261,3.07,1262,3.07,1263,3.07,1264,1.9,1265,2.11,1266,2.53,1267,1.947,1268,2.366,1269,2.53,1270,1.812,1271,2.226,1272,2.226,1273,2.226,1274,1.732,1275,2.366,1276,2.53,1277,3.423,1278,1.996,1279,1.996,1280,2.444,1281,4.962,1282,2.53,1283,2.53,1284,2.53,1285,2.444,1286,2.53,1287,2.53,1288,2.53,1289,1.694,1290,2.104,1291,1.525,1292,1.525,1293,1.732,1294,2.53,1295,1.732,1296,2.53,1297,3.543,1298,2.104,1299,2.104,1300,2.104,1301,2.104,1302,2.104,1303,2.53,1304,2.53,1305,2.53,1306,2.104,1307,2.53,1308,2.53,1309,2.53,1310,2.049,1311,2.53,1312,3.597,1313,3.4]],["title/interfaces/Data-1.html",[286,1.372,831,0.014,836,0.981]],["body/interfaces/Data-1.html",[3,0.076,4,0.076,9,0.069,11,0.924,20,0.274,28,0.007,30,0.207,31,0.311,32,0.133,33,0.23,127,0.588,146,0.975,153,1.901,164,0.005,165,0.005,200,1.325,204,0.993,207,0.803,219,0.368,222,0.494,371,1.101,438,0.648,474,1.528,492,1.164,494,1.01,525,1.392,526,1.8,535,1.149,537,1.171,538,1.143,571,1.471,578,1.154,579,1.028,831,0.029,833,0.815,836,2.299,862,1.787,864,1.787,866,1.787,871,1.787,873,1.787,876,1.787,896,2.181,1016,1.787,1105,2.033,1113,2.08,1247,2.352,1248,3.506,1250,1.499,1257,2.423,1259,3.143,1265,2.268,1267,3.767,1270,2.789,1274,1.988,1278,2.292,1279,2.292,1289,1.945,1290,2.415,1291,1.751,1292,1.751,1293,1.988,1295,1.988,1298,2.415,1299,2.415,1300,2.415,1301,2.415,1302,2.415,1306,2.415,1313,3.654,1314,2.716,1315,2.352,1316,3.133,1317,3.239,1318,3.654,1319,3.133,1320,4.589,1321,3.894,1322,2.904,1323,3.423,1324,3.268,1325,3.133,1326,3.423,1327,3.133,1328,3.423,1329,3.423,1330,4.589,1331,3.423,1332,3.423,1333,4.393]],["title/interfaces/Data-2.html",[287,1.88,831,0.014,836,0.981]],["body/interfaces/Data-2.html",[3,0.07,4,0.07,9,0.063,20,0.252,23,0.929,28,0.007,30,0.225,31,0.286,32,0.125,33,0.212,164,0.004,165,0.004,200,0.806,204,0.913,207,0.759,215,2.056,219,0.347,222,0.576,229,2.056,230,1.07,286,1.579,343,1.75,351,2.311,366,2.284,367,2.006,368,2.056,371,1.12,438,0.612,461,1.745,487,1.379,490,0.913,492,1.07,494,0.929,512,2.163,525,1.281,526,1.235,529,2.056,530,2.926,532,2.056,533,2.108,535,1.034,537,1.171,538,1.448,540,2.163,542,1.405,548,2.056,568,1.547,570,2.056,571,1.864,572,1.958,574,2.421,575,2.284,576,1.789,577,2.163,578,0.791,579,0.946,582,2.671,603,2.671,623,3.679,626,2.174,627,3.335,628,2.671,630,2.35,636,2.671,638,2.581,639,2.881,640,2.763,641,3.148,642,2.163,645,2.881,646,2.006,647,2.131,648,2.581,649,2.881,650,2.881,651,2.881,652,2.881,653,2.056,654,3.335,655,2.881,656,2.881,657,2.881,659,2.108,660,1.789,661,2.498,769,2.222,771,2.222,772,2.222,831,0.027,833,0.749,836,1.916,845,1.432,869,2.881,891,1.379,1248,3.248,1259,2.818,1334,3.148,1335,2.881,1336,2.222,1337,3.006,1338,2.108,1339,4.736,1340,3.314,1341,3.006,1342,2.35,1343,5.13,1344,3.006,1345,2.35,1346,3.5,1347,2.35,1348,2.881,1349,3.006,1350,3.006,1351,4.14,1352,3.314,1353,3.006,1354,3.006,1355,3.006,1356,4.14,1357,3.314,1358,5.222,1359,3.314,1360,3.006,1361,3.006,1362,3.314,1363,3.314,1364,3.006,1365,3.006,1366,3.006,1367,3.314,1368,3.006,1369,3.314,1370,3.006,1371,3.314,1372,3.006,1373,3.314,1374,3.314]],["title/injectables/FirebaseAuthMappingService.html",[438,0.462,1375,3.909]],["body/injectables/FirebaseAuthMappingService.html",[3,0.071,4,0.071,9,0.064,11,0.865,20,0.257,21,1.342,24,1.523,27,1.694,28,0.007,30,0.193,31,0.291,32,0.071,33,0.215,127,0.69,139,2.56,164,0.005,165,0.005,204,0.929,218,1.755,219,0.478,220,1.318,222,0.58,274,3.305,371,1.007,384,3.575,438,0.62,439,1.574,450,4.19,452,4.016,455,3.183,491,2.541,492,1.089,493,2.464,494,0.946,535,0.968,626,2.92,891,2.192,998,2.493,1070,5.126,1131,4.779,1199,3.203,1200,3.372,1375,5.246,1376,2.718,1377,4.225,1378,4.002,1379,3.723,1380,9.119,1381,4.687,1382,3.723,1383,4.687,1384,3.723,1385,4.687,1386,5.246,1387,5.246,1388,3.723,1389,4.687,1390,3.723,1391,4.687,1392,4.17,1393,4.097,1394,3.699,1395,3.862,1396,3.862,1397,4.687,1398,3.799,1399,4.687,1400,4.687,1401,4.687,1402,3.83,1403,4.17,1404,7.324,1405,7.324,1406,8.522,1407,3.532,1408,3.183,1409,7.324,1410,4.687]],["title/injectables/FirebaseAuthenticationService.html",[438,0.462,1069,3.122]],["body/injectables/FirebaseAuthenticationService.html",[3,0.045,4,0.045,9,0.041,15,1.17,20,0.161,21,0.956,23,0.923,24,1.643,27,1.549,28,0.007,30,0.196,31,0.183,32,0.045,33,0.135,127,0.585,139,1.959,164,0.003,165,0.003,200,1.479,204,0.584,207,0.547,208,2.935,215,3.907,218,1.343,219,0.463,220,1.008,222,0.555,229,1.315,230,1.86,274,2.978,338,1.599,368,1.315,371,1.017,372,2.308,438,0.441,439,0.99,441,2.249,442,3.964,443,3.737,444,3.737,445,3.737,446,5.158,447,4.274,449,3.949,450,2.984,451,5.212,452,2.86,453,3.737,455,3.13,457,4.578,459,3.125,461,1.844,462,3.488,464,2.249,469,3.737,470,5.907,471,2.564,472,2.439,473,3.038,474,2.301,475,2.748,476,3.737,479,2.409,481,2.409,483,2.409,485,2.409,487,0.882,490,0.584,491,1.599,492,0.685,493,1.55,494,0.595,515,3.504,520,3.13,523,1.844,528,2.652,535,0.604,551,1.773,552,1.773,553,1.844,554,2.121,555,2.015,556,2.409,559,2.409,567,1.773,568,0.99,580,2.121,583,2.121,584,1.844,585,2.249,606,4.314,611,2.619,626,1.92,647,0.99,654,1.55,710,2.652,732,1.349,741,1.844,836,1.121,845,1.422,846,1.224,878,4.916,891,0.882,939,4.904,998,2.175,1043,3.964,1069,2.984,1070,4.348,1094,2.015,1155,1.55,1264,2.439,1378,1.384,1392,2.623,1393,2.964,1394,1.384,1398,2.702,1407,2.702,1408,2.778,1411,5.603,1412,5.158,1413,4.573,1414,2.948,1415,2.948,1416,2.948,1417,2.948,1418,2.948,1419,4.069,1420,2.948,1421,2.948,1422,2.948,1423,2.948,1424,2.623,1425,2.623,1426,2.623,1427,2.623,1428,2.623,1429,2.623,1430,2.623,1431,4.069,1432,2.623,1433,3.29,1434,2.249,1435,2.948,1436,2.948,1437,2.948,1438,2.948,1439,2.948,1440,2.948,1441,2.623,1442,2.623,1443,2.948,1444,2.948,1445,2.948,1446,5.603,1447,2.948,1448,3.737,1449,4.069,1450,2.948,1451,4.573,1452,6.313,1453,4.573,1454,2.948,1455,4.573,1456,2.948,1457,2.948,1458,2.948,1459,2.623,1460,4.573,1461,4.573,1462,4.573,1463,4.573,1464,4.573,1465,2.623,1466,4.069,1467,4.069,1468,2.623,1469,2.623,1470,1.773,1471,6.313,1472,2.623,1473,4.573,1474,2.948,1475,2.121,1476,2.948,1477,2.948,1478,2.948,1479,2.948,1480,2.948,1481,2.948,1482,2.948,1483,2.948,1484,2.948,1485,2.948,1486,2.948,1487,2.948,1488,4.069,1489,2.623,1490,2.948,1491,2.948,1492,2.623,1493,4.573,1494,2.948,1495,2.948,1496,2.623,1497,2.623,1498,2.623,1499,2.948,1500,2.948,1501,2.041,1502,2.948,1503,2.948,1504,2.948,1505,4.573,1506,2.948,1507,2.948,1508,2.948,1509,2.948,1510,2.948,1511,2.948,1512,2.948,1513,2.948,1514,2.948]],["title/injectables/FirebaseCollectionSubscriptionService.html",[438,0.462,1515,3.909]],["body/injectables/FirebaseCollectionSubscriptionService.html",[3,0.065,4,0.065,9,0.059,11,0.792,15,1.704,20,0.235,21,1.263,23,1.219,24,1.572,27,1.435,28,0.007,29,2.882,30,0.216,31,0.267,32,0.065,33,0.197,127,0.542,164,0.004,165,0.004,200,1.45,204,0.851,207,0.723,218,1.487,219,0.454,220,1.116,222,0.611,230,2.054,241,2.801,338,2.328,367,1.869,371,0.737,372,2.305,438,0.583,439,1.442,442,3.175,461,1.487,474,1.843,475,2.201,487,1.285,490,0.851,492,0.998,494,0.866,515,4.372,523,2.685,524,5.786,525,1.943,526,2.033,528,3.503,530,1.532,535,0.798,551,2.582,552,2.582,553,2.685,554,6.36,567,2.582,568,2.921,574,2.257,576,1.667,577,2.016,580,3.089,582,2.49,583,3.089,584,2.685,585,3.275,587,3.508,610,3.508,730,3.508,732,1.964,832,3.634,837,2.801,838,2.801,839,3.942,840,3.634,841,4.936,842,4.936,1068,4.346,1070,5.231,1103,4.346,1155,3.175,1515,4.936,1516,3.82,1517,6.99,1518,6.99,1519,6.198,1520,5.375,1521,7.737,1522,6.041,1523,4.293,1524,4.293,1525,4.293,1526,4.293,1527,4.293,1528,6.041,1529,6.041,1530,4.293,1531,8.292,1532,6.041,1533,4.293,1534,4.293,1535,4.293,1536,4.293,1537,4.293,1538,4.293,1539,6.041,1540,4.293,1541,4.293,1542,4.293,1543,4.293,1544,4.293,1545,4.293,1546,4.293,1547,4.293,1548,4.293,1549,4.293,1550,4.293,1551,6.041,1552,4.293,1553,3.82,1554,4.293,1555,3.275,1556,4.293,1557,3.089,1558,4.293,1559,4.293,1560,4.293,1561,4.293,1562,4.293,1563,4.293]],["title/interfaces/FirebaseComment.html",[831,0.016,875,3.65]],["body/interfaces/FirebaseComment.html",[3,0.071,4,0.071,9,0.064,11,0.859,20,0.255,28,0.007,30,0.213,31,0.289,32,0.097,33,0.214,93,4.469,164,0.004,165,0.004,200,0.814,204,0.922,207,0.764,219,0.451,222,0.67,230,1.081,338,2.523,371,1.063,372,1.342,386,3.167,438,0.616,442,2.446,471,2.923,472,3.702,487,1.393,492,1.081,494,0.939,513,3.036,515,2.911,525,1.294,526,1.713,528,2.698,535,0.844,537,0.983,538,1.666,542,1.419,551,2.799,552,2.799,553,2.911,555,3.18,567,2.799,571,1.367,575,2.307,578,1.098,579,0.955,584,2.911,606,4.366,611,2.451,831,0.016,833,0.757,836,1.566,843,4.931,846,3.531,847,6.948,848,3.097,849,5.961,852,3.55,853,3.55,862,1.66,864,1.66,866,1.66,868,2.607,869,2.911,871,1.66,873,1.66,875,6.865,876,1.66,878,4.597,879,3.18,880,5.991,881,3.55,882,3.55,883,5.22,884,6.987,885,6.987,886,4.761,887,6.417,888,5.684,889,4.14,890,5.22,891,2.351,892,4.14,893,4.14,894,3.802,895,4.14,896,2.026,897,3.802,898,4.912,899,1.807,900,3.802,901,3.55,902,3.55,903,4.231]],["title/injectables/FirebaseMediaService.html",[438,0.462,1564,3.909]],["body/injectables/FirebaseMediaService.html",[3,0.082,4,0.082,9,0.074,13,2.58,15,2.123,20,0.293,21,1.466,23,1.415,24,1.445,27,1.098,28,0.007,30,0.221,31,0.332,32,0.082,33,0.246,127,0.545,164,0.005,165,0.005,200,1.454,204,1.06,207,0.839,208,3.178,218,1.492,219,0.384,220,1.12,230,1.931,274,1.99,338,2.901,371,0.856,372,1.543,438,0.677,439,1.797,442,2.812,461,1.665,487,1.601,488,4.998,489,4.76,490,1.06,494,1.079,503,4.12,505,2.812,506,5.732,507,5.732,508,4.678,523,3.346,528,4.068,551,3.218,552,3.218,568,1.797,580,3.849,583,3.849,626,2.682,637,3.656,644,4.081,646,2.329,647,1.797,710,3.102,732,2.448,845,2.181,939,3.102,1070,4.709,1253,2.274,1433,3.849,1564,5.732,1565,6.965,1566,7.016,1567,5.35,1568,5.35,1569,5.35,1570,5.35,1571,5.35,1572,7.016,1573,5.35,1574,3.102,1575,5.35,1576,5.35,1577,5.35,1578,5.35,1579,5.35,1580,4.76,1581,7.016,1582,5.35,1583,5.35,1584,5.35,1585,5.35,1586,5.35,1587,5.35,1588,5.35,1589,5.35,1590,5.35,1591,5.35,1592,5.35,1593,5.35,1594,5.35,1595,5.35]],["title/interfaces/FirebaseSeason.html",[831,0.016,1596,3.65]],["body/interfaces/FirebaseSeason.html",[3,0.099,4,0.099,9,0.09,20,0.357,28,0.007,30,0.16,32,0.099,127,0.666,164,0.006,165,0.006,207,0.951,219,0.516,220,1.27,222,0.686,274,3.191,537,1.204,567,3.922,831,0.022,833,1.061,848,3.125,880,6.545,1261,3.736,1262,3.736,1263,3.736,1264,3.462,1265,2.568,1596,6.066,1597,5.327,1598,5.801,1599,4.078,1600,4.973,1601,4.973,1602,4.973,1603,3.781,1604,6.52,1605,6.52]],["title/interfaces/FirebaseSerie.html",[831,0.016,1606,3.65]],["body/interfaces/FirebaseSerie.html",[3,0.104,4,0.104,9,0.093,20,0.372,28,0.007,32,0.104,127,0.678,139,3.167,164,0.006,165,0.006,207,0.975,219,0.507,220,1.302,222,0.7,537,1.221,831,0.023,833,1.105,1265,2.615,1317,4.213,1318,4.213,1597,5.552,1599,4.25,1603,3.94,1606,6.219,1607,6.046,1608,5.183,1609,5.183]],["title/interfaces/Formats.html",[831,0.016,1610,2.68]],["body/interfaces/Formats.html",[3,0.069,4,0.069,9,0.062,20,0.247,23,0.909,28,0.007,30,0.206,31,0.28,32,0.138,33,0.207,51,3.722,56,3.542,77,3.542,127,0.631,164,0.004,165,0.004,200,1.093,201,3.456,207,0.747,208,1.828,219,0.446,222,0.721,230,1.8,337,2.442,343,1.711,351,1.64,371,0.875,372,1.299,461,0.958,487,1.348,490,0.893,503,3.097,505,2.367,508,2.442,535,0.595,537,1.273,568,1.513,626,1.543,640,2.72,642,2.115,646,3.542,647,1.513,732,2.061,769,2.172,771,2.172,772,2.172,831,0.03,833,0.733,845,1.4,846,1.87,891,1.348,1251,1.915,1253,1.915,1336,2.172,1342,2.298,1345,2.298,1346,3.459,1347,2.298,1501,2.009,1574,2.611,1610,4.339,1611,1.961,1612,4.772,1613,4.49,1614,4.772,1615,4.772,1616,2.611,1617,2.523,1618,3.387,1619,2.709,1620,2.709,1621,2.709,1622,2.709,1623,4.893,1624,4.893,1625,4.893,1626,2.709,1627,2.115,1628,4.893,1629,4.716,1630,2.709,1631,2.709,1632,2.523,1633,2.709,1634,2.709,1635,2.611,1636,2.709,1637,4.158,1638,2.709,1639,2.611,1640,2.709,1641,2.709,1642,2.709,1643,2.709]],["title/modules/HomePageModule.html",[166,1.743,1644,3.65]],["body/modules/HomePageModule.html",[3,0.097,4,0.097,9,0.087,28,0.007,30,0.23,31,0.395,32,0.097,33,0.292,121,2.638,134,4.131,164,0.005,165,0.005,166,2.314,168,2.701,169,3.339,170,4.918,171,3.684,172,3.444,173,2.835,178,4.538,179,3.684,180,3.684,182,3.492,183,3.581,184,4.895,185,3.821,188,4.538,189,1.832,190,3.973,192,3.973,193,2.835,194,2.907,422,4.145,1644,7.227,1645,5.652,1646,5.652,1647,5.652,1648,6.66,1649,6.353,1650,5.652,1651,7.826,1652,6.353,1653,4.846]],["title/modules/HomePageRoutingModule.html",[166,1.743,1648,3.442]],["body/modules/HomePageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,134,3.694,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.98,199,3.456,200,1.22,201,3.111,202,4.361,1648,5.956,1650,6.203,1654,6.972]],["title/interfaces/IAuthMapping.html",[455,2.372,831,0.016]],["body/interfaces/IAuthMapping.html",[3,0.094,4,0.094,9,0.085,20,0.337,21,1.604,24,1.663,27,1.85,28,0.007,30,0.188,32,0.094,127,0.699,146,1.199,164,0.005,165,0.005,218,1.916,219,0.493,220,1.439,274,3.257,450,5.009,452,4.802,455,3.806,493,3.237,831,0.021,833,1.002,1131,5.458,1250,1.843,1377,4.467,1378,4.231,1379,3.571,1382,3.571,1384,3.571,1386,6.272,1388,3.571,1390,3.571,1655,8.174,1656,5.032,1657,5.479,1658,5.479,1659,6.158,1660,5.479,1661,6.158,1662,6.158,1663,6.158,1664,6.158,1665,6.158,1666,6.158]],["title/interfaces/IAuthentication.html",[488,2.878,831,0.016]],["body/interfaces/IAuthentication.html",[3,0.1,4,0.1,9,0.091,20,0.361,21,1.672,24,1.695,27,1.886,28,0.007,30,0.161,32,0.1,127,0.621,164,0.006,165,0.006,218,1.702,219,0.438,220,1.278,449,5.39,450,5.221,451,6.574,452,5.005,459,4.501,461,1.954,462,5.024,464,5.024,466,5.86,468,5.86,488,4.812,490,1.305,502,5.382,831,0.023,833,1.071,1667,5.86,1668,6.587,1669,6.587,1670,6.587,1671,6.587,1672,6.587,1673,6.587,1674,6.587,1675,6.587,1676,6.587]],["title/interfaces/IBaseMapping.html",[526,1.283,831,0.016]],["body/interfaces/IBaseMapping.html",[3,0.085,4,0.085,9,0.077,20,0.307,21,1.511,24,1.684,27,1.873,28,0.007,30,0.196,32,0.085,127,0.708,164,0.005,165,0.005,218,1.94,219,0.5,220,1.457,461,1.191,490,1.11,526,1.938,530,3.199,537,1.229,538,1.827,542,1.708,576,2.175,577,2.63,578,1.242,579,1.15,831,0.019,833,0.911,836,2.265,854,4.191,855,4.191,856,4.191,857,4.191,858,4.191,859,4.191,860,4.191,862,1.998,864,1.998,866,1.998,868,3.138,871,1.998,873,1.998,876,1.998,899,2.807,1016,1.998,1289,2.175,1656,4.576,1657,4.983,1658,4.983,1660,4.983,1677,7.05,1678,5.601,1679,5.601,1680,5.601,1681,5.601,1682,5.601,1683,5.601,1684,5.601,1685,5.601,1686,5.601,1687,5.601,1688,5.601]],["title/interfaces/IBaseRepository.html",[570,2.135,831,0.016]],["body/interfaces/IBaseRepository.html",[3,0.084,4,0.084,9,0.076,20,0.302,21,1.496,24,1.608,27,1.789,28,0.007,30,0.194,32,0.109,127,0.676,164,0.005,165,0.005,218,1.853,219,0.477,220,1.391,222,0.697,366,2.734,367,3.116,461,2.012,490,1.093,516,3.761,517,3.36,518,3.548,519,3.761,522,3.651,529,3.193,530,3.186,532,3.751,533,3.274,535,1.111,536,3.089,537,1.133,538,1.634,539,4.304,540,3.73,542,1.682,543,3.651,548,3.193,570,3.193,576,2.141,577,2.589,578,0.947,579,1.132,659,2.523,660,2.141,661,2.99,831,0.024,833,0.897,1199,3.769,1677,6.81,1689,3.598,1690,5.515,1691,5.515,1692,5.515,1693,5.515,1694,5.515,1695,3.968,1696,4.206,1697,4.906,1698,4.906,1699,3.769,1700,4.906,1701,4.906,1702,4.906]],["title/interfaces/IBaseService.html",[727,2.993,831,0.016]],["body/interfaces/IBaseService.html",[3,0.082,4,0.082,9,0.074,20,0.295,21,1.474,24,1.669,27,1.856,28,0.007,30,0.192,32,0.082,127,0.689,164,0.005,165,0.005,218,1.888,219,0.486,220,1.417,222,0.683,461,2.038,490,1.069,516,3.708,517,3.312,518,4.482,519,3.708,522,3.599,529,3.148,530,3.167,532,3.72,533,3.228,535,1.039,536,3.952,537,1.236,538,1.903,539,4.243,540,3.691,542,2.152,543,3.599,548,3.148,572,2.293,578,0.927,579,1.108,659,3.228,660,2.739,661,2.925,727,4.412,730,4.408,831,0.018,833,0.877,1703,8.159,1704,3.687,1705,5.394,1706,5.394,1707,5.394,1708,4.799,1709,5.394,1710,5.394,1711,5.394,1712,5.394]],["title/interfaces/ICollectionSubscription.html",[831,0.016,840,2.878]],["body/interfaces/ICollectionSubscription.html",[3,0.099,4,0.099,9,0.089,20,0.355,21,1.656,24,1.462,27,1.627,28,0.007,29,3.01,30,0.194,32,0.121,127,0.615,164,0.006,165,0.006,218,1.685,219,0.469,220,1.265,222,0.694,461,1.82,490,1.284,524,6.043,530,2.312,535,0.856,576,2.516,577,3.043,831,0.027,832,3.898,833,1.054,834,5.583,835,5.295,836,1.588,837,4.229,838,4.229,839,4.229,840,4.765,841,6.473,842,6.473,1520,7.049,1521,7.049,1713,6.481,1714,6.481]],["title/interfaces/ICommentsRepository.html",[831,0.016,917,3.442]],["body/interfaces/ICommentsRepository.html",[3,0.101,4,0.101,9,0.091,20,0.363,21,1.678,24,1.223,27,1.361,28,0.007,30,0.211,32,0.101,127,0.514,164,0.006,165,0.006,218,1.41,219,0.363,220,1.058,222,0.636,461,1.838,490,1.313,537,1.26,538,1.973,542,2.636,570,3.856,572,2.817,647,2.226,831,0.023,833,1.078,843,3.843,845,2.496,848,2.414,879,4.529,905,6.126,912,6.126,917,5.778,938,5.24,1689,4.324,1715,7.145,1716,6.627]],["title/interfaces/ICommentsService.html",[831,0.016,946,3.65]],["body/interfaces/ICommentsService.html",[3,0.101,4,0.101,9,0.091,20,0.363,21,1.678,24,1.223,27,1.361,28,0.007,30,0.211,32,0.101,127,0.514,164,0.006,165,0.006,218,1.41,219,0.363,220,1.058,222,0.636,461,1.838,490,1.313,537,1.26,538,1.973,542,2.636,647,2.226,727,5.405,729,3.986,831,0.023,833,1.078,843,3.843,845,2.496,848,2.414,879,4.529,905,6.126,912,6.126,938,5.24,946,6.126,1704,4.529,1717,7.145,1718,6.627]],["title/interfaces/ISeasonsRepository.html",[831,0.016,1719,3.65]],["body/interfaces/ISeasonsRepository.html",[3,0.111,4,0.111,9,0.1,28,0.007,30,0.208,32,0.111,146,1.416,164,0.006,165,0.006,570,4.01,572,3.091,647,2.442,831,0.025,833,1.183,845,2.638,1250,2.176,1689,4.744,1719,6.473,1720,6.469]],["title/interfaces/ISeasonsService.html",[831,0.016,1721,3.65]],["body/interfaces/ISeasonsService.html",[3,0.103,4,0.103,9,0.093,20,0.369,21,1.695,24,1.244,27,1.384,28,0.007,30,0.213,32,0.103,127,0.523,146,1.312,164,0.006,165,0.006,218,1.433,219,0.369,220,1.076,222,0.641,461,1.851,472,2.934,490,1.335,647,2.263,727,5.444,729,4.053,831,0.023,833,1.096,845,2.522,1208,4.397,1250,2.017,1699,4.605,1704,4.605,1708,5.995,1721,6.188,1722,7.217,1723,7.217,1724,7.217,1725,5.506,1726,5.506,1727,5.506]],["title/interfaces/ISeriesRepository.html",[831,0.016,1728,3.65]],["body/interfaces/ISeriesRepository.html",[3,0.11,4,0.11,9,0.099,28,0.007,30,0.219,32,0.11,146,1.4,153,2.036,164,0.006,165,0.006,570,3.991,572,3.057,647,2.415,831,0.025,833,1.17,845,2.621,1250,2.152,1315,3.376,1689,4.691,1728,6.431,1729,6.397]],["title/interfaces/ISeriesService.html",[831,0.016,1730,3.65]],["body/interfaces/ISeriesService.html",[3,0.108,4,0.108,9,0.097,28,0.007,30,0.217,32,0.108,146,1.378,153,2.004,164,0.006,165,0.006,647,2.378,727,5.559,729,4.258,831,0.024,833,1.152,845,2.597,1208,4.619,1250,2.119,1315,3.324,1699,4.838,1704,4.838,1725,5.784,1726,5.784,1727,5.784,1730,6.373,1731,6.299]],["title/interfaces/IStrapiAuthentication.html",[640,2.083,831,0.016]],["body/interfaces/IStrapiAuthentication.html",[3,0.107,4,0.107,9,0.096,20,0.384,21,1.737,24,1.295,27,1.441,28,0.007,30,0.203,32,0.107,164,0.006,165,0.006,222,0.517,461,1.493,488,5.326,490,1.391,611,2.792,640,3.619,642,3.295,831,0.024,833,1.141,845,2.583,1412,7.235,1732,7.394,1733,6.244,1734,7.018,1735,7.018]],["title/interfaces/ITasksRepository.html",[831,0.016,1736,3.65]],["body/interfaces/ITasksRepository.html",[3,0.111,4,0.111,9,0.1,28,0.007,30,0.208,32,0.111,164,0.006,165,0.006,570,4.01,572,3.091,647,2.442,831,0.025,833,1.183,845,2.638,1689,4.744,1736,6.473,1737,6.469,1738,4.969,1739,5.941]],["title/interfaces/ITasksService.html",[831,0.016,1740,3.65]],["body/interfaces/ITasksService.html",[3,0.109,4,0.109,9,0.098,28,0.007,30,0.206,32,0.109,164,0.006,165,0.006,647,2.404,727,5.585,729,4.305,831,0.024,833,1.164,845,2.614,1208,4.671,1699,4.892,1704,4.892,1725,5.849,1726,5.849,1727,5.849,1738,4.892,1739,5.849,1740,6.414,1741,6.369]],["title/injectables/JsonServerRepositoryService.html",[438,0.462,1742,3.65]],["body/injectables/JsonServerRepositoryService.html",[3,0.064,4,0.064,9,0.057,20,0.229,21,1.239,23,1.196,24,1.517,27,1.625,28,0.007,30,0.221,31,0.26,32,0.09,33,0.192,66,1.913,127,0.638,164,0.004,165,0.004,204,0.829,215,1.866,218,1.749,219,0.45,220,1.313,222,0.676,229,1.866,286,1.433,343,1.589,351,2.731,366,2.073,367,1.821,368,1.866,371,1.072,438,0.572,439,1.405,461,1.869,474,1.275,475,1.523,487,1.252,488,4.509,490,0.829,492,0.972,494,0.844,512,1.964,516,3.117,517,2.784,518,2.94,519,3.117,522,3.025,525,1.915,526,1.847,529,2.646,530,3.017,532,3.345,533,1.913,535,0.911,536,2.343,537,1.164,538,1.573,539,3.567,540,3.235,542,1.275,543,2.133,548,2.646,568,1.405,570,1.866,571,1.742,572,1.778,574,2.198,575,2.073,576,1.624,577,1.964,578,0.718,579,0.859,582,2.425,603,2.425,623,5.009,625,2.858,626,2.569,627,3.94,628,3.995,630,3.025,636,2.425,637,2.858,638,2.343,639,2.616,643,3.417,644,3.19,645,2.616,646,1.821,647,1.992,648,2.343,649,2.616,650,2.616,651,2.616,652,2.616,653,1.866,654,3.117,655,2.616,656,2.616,657,2.616,659,1.913,660,1.624,661,2.267,831,0.014,836,1.025,845,1.843,899,1.624,939,4.59,1130,2.073,1335,2.616,1337,2.729,1338,1.913,1343,4.31,1344,2.729,1348,2.616,1349,2.729,1350,2.729,1351,3.869,1353,2.729,1354,2.729,1355,2.729,1356,3.869,1360,2.729,1361,2.729,1364,2.729,1365,2.729,1366,2.729,1368,2.729,1370,2.729,1372,2.729,1742,4.523,1743,4.845,1744,4.523,1745,4.182,1746,4.182,1747,4.182,1748,4.182,1749,4.182,1750,3.721,1751,2.616,1752,2.616,1753,3.709,1754,2.343,1755,3.721,1756,3.721,1757,5.276,1758,3.721,1759,3.721,1760,3.721,1761,3.721,1762,3.721]],["title/injectables/LanguageService.html",[214,3.442,438,0.462]],["body/injectables/LanguageService.html",[3,0.083,4,0.083,9,0.075,20,0.297,21,1.481,23,1.096,24,1.672,27,1.716,28,0.007,29,2.996,30,0.173,31,0.337,32,0.083,33,0.249,35,3.513,127,0.612,164,0.005,165,0.005,193,2.423,194,2.485,200,1.239,204,1.076,207,0.847,211,6.304,214,5.098,218,1.677,219,0.475,220,1.259,221,6.304,222,0.699,224,7.016,230,2.066,371,0.865,438,0.684,439,1.824,474,2.161,475,2.581,494,1.096,768,4.437,977,5.027,1763,4.832,1764,7.886,1765,7.886,1766,7.886,1767,8.358,1768,8.358,1769,7.085,1770,5.431,1771,7.085,1772,5.431,1773,5.431,1774,5.431,1775,7.085,1776,5.431,1777,7.886,1778,7.085,1779,5.431,1780,5.431,1781,5.431,1782,5.431,1783,7.085,1784,5.431,1785,5.431,1786,5.431,1787,5.431,1788,5.431,1789,5.431,1790,5.431,1791,5.431,1792,5.431,1793,5.431]],["title/interfaces/Large.html",[831,0.016,1612,2.594]],["body/interfaces/Large.html",[3,0.065,4,0.065,9,0.059,20,0.234,23,0.86,28,0.007,30,0.202,31,0.265,32,0.136,33,0.196,51,3.972,56,3.78,77,3.78,127,0.674,164,0.004,165,0.004,200,1.052,201,3.794,207,0.719,208,1.731,219,0.495,222,0.726,230,1.757,337,2.312,343,1.621,351,1.554,371,0.85,372,1.23,461,0.907,487,1.277,490,0.845,503,2.981,505,2.242,508,2.312,535,0.564,537,1.292,568,1.433,626,1.461,640,2.618,642,2.003,646,3.78,647,1.433,732,1.951,769,2.057,771,2.057,772,2.057,831,0.03,833,0.694,845,1.326,846,1.771,891,1.277,1251,1.813,1253,1.813,1336,2.057,1342,2.176,1345,2.176,1346,3.359,1347,2.176,1501,1.903,1574,2.473,1610,3.902,1611,1.857,1612,4.101,1613,3.553,1614,3.776,1615,3.776,1616,2.473,1617,2.389,1618,3.26,1619,2.565,1620,2.565,1621,2.565,1622,2.565,1623,5.222,1624,5.222,1625,5.222,1626,2.565,1627,2.003,1628,5.222,1629,4.864,1630,2.565,1631,2.565,1632,2.389,1633,2.565,1634,2.565,1635,2.473,1636,2.565,1637,4.038,1638,2.565,1639,2.473,1640,2.565,1641,2.565,1642,2.565,1643,2.565]],["title/components/LoginPage.html",[0,1.406,136,2.247]],["body/components/LoginPage.html",[0,1.599,1,1.323,2,2.32,3,0.043,4,0.043,5,1.527,6,1.527,7,1.527,8,1.527,9,0.039,13,1.358,14,3.996,15,3.555,16,2.019,18,2.019,20,0.154,21,0.922,23,0.89,24,1.491,27,1.373,28,0.007,29,2.34,30,0.164,31,0.175,32,0.043,33,0.129,46,3.273,47,4.422,48,1.762,49,1.838,50,1.762,51,3.393,52,1.633,53,2.472,54,3.155,56,2.682,57,2.472,58,4.155,59,4.183,61,3.273,62,3.704,63,2.76,64,2.559,65,1.762,66,1.289,67,3.273,70,1.578,73,3.048,74,2.472,75,1.694,77,2.682,78,2.559,80,1.633,81,1.633,82,2.778,83,2.472,84,3.747,85,1.578,86,1.578,87,2.393,88,4.155,90,2.027,91,2.027,92,3.747,93,1.48,95,3.606,96,4.155,98,1.838,99,2.472,100,3.175,101,4.686,103,4.3,104,1.762,105,1.925,107,2.472,109,4.524,110,2.559,111,1.694,112,1.48,113,1.762,114,1.838,115,2.301,117,2.301,120,2.027,121,1.17,122,2.393,123,2.393,124,1.358,125,4.021,126,1.527,127,0.519,128,1.527,129,1.358,130,1.527,131,1.48,132,1.396,133,1.527,134,1.257,135,1.527,136,2.892,137,1.527,138,1.323,139,0.985,140,2.393,141,1.323,142,1.527,143,1.323,144,1.527,145,1.289,146,0.859,147,2.393,148,1.289,149,1.527,150,1.289,151,2.393,152,1.289,153,1.541,154,1.358,155,1.289,156,1.527,157,1.289,158,1.396,159,1.48,160,1.48,161,1.323,162,1.48,163,1.527,164,0.003,165,0.003,187,1.437,189,0.812,199,1.396,200,0.952,207,0.528,209,2.76,215,2.428,216,5.336,218,0.939,219,0.366,220,0.705,222,0.492,229,1.257,230,1.554,251,3.571,252,3.155,253,3.606,261,3.606,263,2.027,265,1.633,269,3.155,272,2.027,273,1.633,281,2.301,284,2.027,294,1.633,368,2.428,371,0.539,413,3.915,419,2.149,422,2.88,440,1.762,474,0.859,475,1.026,520,3.053,779,3.366,787,5.797,1043,2.86,1080,1.925,1130,1.396,1155,2.86,1156,1.838,1169,1.925,1170,1.925,1310,1.323,1393,3.706,1394,3.706,1613,2.252,1696,2.149,1754,1.578,1794,2.506,1795,5.442,1796,4.413,1797,5.442,1798,4.841,1799,6.159,1800,6.159,1801,4.431,1802,3.927,1803,5.48,1804,3.175,1805,2.149,1806,4.431,1807,3.606,1808,4.841,1809,5.657,1810,4.413,1811,3.366,1812,2.817,1813,2.817,1814,2.817,1815,3.927,1816,5.032,1817,4.431,1818,2.817,1819,3.915,1820,2.817,1821,3.915,1822,2.817,1823,2.301,1824,2.817,1825,2.506,1826,2.817,1827,2.027,1828,2.817,1829,2.506,1830,2.817,1831,2.149,1832,3.175,1833,2.301,1834,2.149,1835,2.301,1836,2.149,1837,2.149,1838,1.838,1839,2.506,1840,2.149,1841,3.927,1842,2.817,1843,2.817,1844,2.506,1845,2.817,1846,6.831,1847,2.506,1848,3.606,1849,3.927,1850,2.817,1851,3.927,1852,2.817,1853,2.817,1854,2.817,1855,2.817,1856,2.301,1857,4.841,1858,2.817,1859,2.817,1860,2.817,1861,2.817,1862,2.301,1863,2.817,1864,2.817,1865,2.817,1866,2.817,1867,7.094,1868,3.606,1869,3.927,1870,4.413,1871,6.312,1872,5.48,1873,3.927,1874,1.925,1875,2.301,1876,3.175,1877,2.301,1878,2.506,1879,2.506,1880,2.301,1881,2.301,1882,2.027,1883,1.838,1884,1.633,1885,2.027,1886,3.175,1887,3.175,1888,2.506,1889,2.506,1890,2.506]],["title/modules/LoginPageModule.html",[166,1.743,1891,3.65]],["body/modules/LoginPageModule.html",[3,0.098,4,0.098,9,0.088,28,0.007,30,0.227,31,0.398,32,0.098,33,0.294,121,2.659,136,4.355,164,0.006,165,0.006,166,2.332,168,2.722,169,3.365,170,4.936,171,3.713,172,3.472,173,2.857,178,4.56,179,3.713,180,3.713,182,3.509,183,3.598,184,4.919,185,3.851,186,5.999,187,3.267,188,4.56,189,1.847,190,4.005,346,5.658,413,4.607,1891,7.237,1892,5.697,1893,5.697,1894,5.697,1895,6.673,1896,6.403,1897,5.697]],["title/modules/LoginPageRoutingModule.html",[166,1.743,1895,3.442]],["body/modules/LoginPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,136,3.887,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.98,199,3.456,200,1.22,201,3.111,202,4.361,1895,5.956,1897,6.203,1898,6.972]],["title/interfaces/MediaRaw.html",[831,0.016,1255,2.594]],["body/interfaces/MediaRaw.html",[3,0.067,4,0.067,9,0.061,11,0.813,20,0.241,28,0.007,30,0.205,31,0.274,32,0.137,33,0.202,127,0.595,146,1.198,164,0.004,165,0.004,189,1.27,200,1.342,204,0.873,207,0.736,219,0.241,222,0.565,371,1.068,438,0.594,471,2.814,472,2.678,492,1.024,494,0.889,525,1.224,526,1.649,535,0.937,537,1.088,538,1.006,571,1.294,578,1.057,579,0.904,611,2.066,831,0.03,833,0.717,836,2.318,848,2.582,862,1.572,864,1.572,866,1.572,871,1.572,873,1.572,876,1.572,891,1.319,896,1.918,1016,1.572,1105,3.483,1113,3.563,1246,2.124,1247,2.068,1248,2.554,1249,4.159,1250,1.319,1251,3.261,1252,2.554,1253,1.873,1254,2.247,1255,3.335,1256,2.388,1257,1.319,1258,3.186,1259,2.978,1260,3.335,1261,3.086,1262,3.086,1263,3.086,1264,1.918,1265,2.121,1266,2.554,1267,1.965,1268,2.388,1269,2.554,1270,1.829,1271,2.247,1272,2.247,1273,2.247,1274,1.748,1275,2.388,1276,2.554,1277,3.446,1278,2.016,1279,2.016,1280,2.468,1281,4.975,1282,2.554,1283,2.554,1284,2.554,1285,2.468,1286,2.554,1287,2.554,1288,2.554,1289,1.71,1290,2.124,1291,1.54,1292,1.54,1293,1.748,1294,2.554,1295,1.748,1296,2.554,1297,3.567,1298,2.124,1299,2.124,1300,2.124,1301,2.124,1302,2.124,1303,2.554,1304,2.554,1305,2.554,1306,2.124,1307,2.554,1308,2.554,1309,2.554,1310,2.068,1311,2.554,1312,3.616,1313,3.418]],["title/interfaces/Medium.html",[831,0.016,1613,2.441]],["body/interfaces/Medium.html",[3,0.065,4,0.065,9,0.059,20,0.234,23,0.86,28,0.007,30,0.202,31,0.265,32,0.136,33,0.196,51,3.972,56,3.78,77,3.78,127,0.674,164,0.004,165,0.004,200,1.052,201,3.794,207,0.719,208,1.731,219,0.495,222,0.726,230,1.757,337,2.312,343,1.621,351,1.554,371,0.85,372,1.23,461,0.907,487,1.277,490,0.845,503,2.981,505,2.242,508,2.312,535,0.564,537,1.292,568,1.433,626,1.461,640,2.618,642,2.003,646,3.78,647,1.433,732,1.951,769,2.057,771,2.057,772,2.057,831,0.03,833,0.694,845,1.326,846,1.771,891,1.277,1251,1.813,1253,1.813,1336,2.057,1342,2.176,1345,2.176,1346,3.359,1347,2.176,1501,1.903,1574,2.473,1610,3.902,1611,1.857,1612,3.776,1613,3.858,1614,3.776,1615,3.776,1616,2.473,1617,2.389,1618,3.26,1619,2.565,1620,2.565,1621,2.565,1622,2.565,1623,5.222,1624,5.222,1625,5.222,1626,2.565,1627,2.003,1628,5.222,1629,4.864,1630,2.565,1631,2.565,1632,2.389,1633,2.565,1634,2.565,1635,2.473,1636,2.565,1637,4.038,1638,2.565,1639,2.473,1640,2.565,1641,2.565,1642,2.565,1643,2.565]],["title/interfaces/Meta.html",[831,0.016,1259,1.858]],["body/interfaces/Meta.html",[3,0.068,4,0.068,9,0.061,11,0.824,28,0.007,30,0.205,31,0.277,32,0.138,33,0.205,127,0.599,146,1.209,164,0.004,165,0.004,189,1.288,200,1.35,204,0.885,222,0.568,371,1.072,438,0.599,471,2.842,472,2.704,492,1.038,494,0.901,525,1.241,526,1.665,535,0.944,537,1.093,538,1.02,571,1.312,578,1.067,579,0.917,611,2.086,831,0.031,833,0.726,836,2.288,848,2.601,862,1.594,864,1.594,866,1.594,871,1.594,873,1.594,876,1.594,891,1.337,896,1.945,1016,1.594,1105,3.496,1113,3.577,1246,2.154,1247,2.097,1248,2.579,1249,4.184,1250,1.337,1251,2.64,1252,2.59,1253,1.899,1254,2.278,1255,2.422,1256,2.422,1257,1.337,1258,3.205,1259,3.149,1260,3.367,1261,3.109,1262,3.109,1263,3.109,1264,1.945,1265,2.137,1266,2.59,1267,1.993,1268,2.422,1269,2.59,1270,1.855,1271,2.278,1272,2.278,1273,2.278,1274,1.773,1275,2.422,1276,2.59,1277,3.479,1278,2.044,1279,2.044,1280,2.502,1281,4.994,1282,2.59,1283,2.59,1284,2.59,1285,2.502,1286,2.59,1287,2.59,1288,2.59,1289,1.734,1290,2.154,1291,1.561,1292,1.561,1293,1.773,1294,2.59,1295,1.773,1296,2.59,1297,3.601,1298,2.154,1299,2.154,1300,2.154,1301,2.154,1302,2.154,1303,2.59,1304,2.59,1305,2.59,1306,2.154,1307,2.59,1308,2.59,1309,2.59,1310,2.097,1311,2.59,1312,3.642,1313,3.443]],["title/interfaces/Meta-1.html",[286,1.372,831,0.014,1259,1.555]],["body/interfaces/Meta-1.html",[3,0.078,4,0.078,9,0.071,11,0.95,28,0.007,30,0.208,31,0.32,32,0.134,33,0.236,127,0.596,146,1.002,153,1.936,164,0.005,165,0.005,200,1.343,204,1.02,222,0.503,371,1.108,438,0.66,474,1.569,492,1.195,494,1.038,525,1.43,526,1.833,535,1.015,537,1.103,538,1.174,571,1.511,578,1.174,579,1.056,831,0.029,833,0.837,836,2.293,862,1.836,864,1.836,866,1.836,871,1.836,873,1.836,876,1.836,896,2.24,1016,1.836,1105,2.088,1113,2.136,1247,2.416,1248,2.839,1250,1.54,1257,2.449,1259,3.307,1265,2.298,1267,3.426,1270,2.839,1274,2.042,1278,2.354,1279,2.354,1289,1.997,1290,2.481,1291,1.799,1292,1.799,1293,2.042,1295,2.042,1298,2.481,1299,2.481,1300,2.481,1301,2.481,1302,2.481,1306,2.481,1313,3.703,1314,2.789,1315,2.416,1316,3.218,1317,3.297,1318,3.703,1319,3.218,1320,4.672,1321,3.964,1322,2.983,1323,3.516,1324,3.357,1325,3.218,1326,3.516,1327,3.218,1328,3.516,1329,3.516,1330,4.672,1331,3.516,1332,3.516,1333,4.453]],["title/interfaces/Meta-2.html",[287,1.88,831,0.014,1259,1.555]],["body/interfaces/Meta-2.html",[3,0.071,4,0.071,9,0.064,20,0.255,23,0.939,28,0.007,30,0.225,31,0.289,32,0.125,33,0.214,164,0.004,165,0.004,200,0.814,204,0.922,207,0.764,215,2.076,219,0.255,222,0.578,229,2.076,230,1.081,286,1.594,343,1.768,351,2.327,366,2.307,367,2.026,368,2.076,371,1.122,438,0.616,461,1.751,487,1.393,490,0.922,492,1.081,494,0.939,512,2.185,525,1.294,526,1.247,529,2.076,530,2.603,532,2.076,533,2.129,535,0.615,537,1.109,538,1.458,540,2.185,542,1.419,548,2.076,568,1.563,570,2.076,571,1.877,572,1.978,574,2.446,575,2.307,576,1.807,577,2.185,578,0.799,579,0.955,582,2.698,603,2.698,623,3.705,626,2.189,627,3.358,628,2.698,630,2.374,636,2.698,638,2.607,639,2.911,640,2.782,641,3.18,642,2.185,645,2.911,646,2.026,647,2.146,648,2.607,649,2.911,650,2.911,651,2.911,652,2.911,653,2.076,654,3.358,655,2.911,656,2.911,657,2.911,659,2.129,660,1.807,661,2.523,769,2.244,771,2.244,772,2.244,831,0.027,833,0.757,836,1.788,845,1.446,869,2.911,891,1.393,1248,1.933,1259,3.049,1334,3.18,1335,2.911,1336,2.244,1337,3.036,1338,2.129,1339,5.788,1340,3.348,1341,3.036,1342,2.374,1343,5.148,1344,3.036,1345,2.374,1346,3.519,1347,2.374,1348,2.911,1349,3.036,1350,3.036,1351,4.169,1352,3.348,1353,3.036,1354,3.036,1355,3.036,1356,4.169,1357,3.348,1358,5.249,1359,3.348,1360,3.036,1361,3.036,1362,3.348,1363,3.348,1364,3.036,1365,3.036,1366,3.036,1367,3.348,1368,3.036,1369,3.348,1370,3.036,1371,3.348,1372,3.036,1373,3.348,1374,3.348]],["title/interfaces/Model.html",[576,1.858,831,0.016]],["body/interfaces/Model.html",[3,0.107,4,0.107,9,0.097,20,0.385,28,0.007,32,0.107,164,0.006,165,0.006,207,0.995,219,0.485,220,1.463,222,0.698,535,1.171,576,3.231,831,0.024,833,1.144,846,3.681,898,4.399,1501,3.955,1899,6.257,1900,7.033,1901,7.033]],["title/injectables/MySeasonsService.html",[438,0.462,1902,3.442]],["body/injectables/MySeasonsService.html",[3,0.085,4,0.085,9,0.076,20,0.304,21,1.501,23,1.448,24,1.47,27,1.138,28,0.007,30,0.214,31,0.344,32,0.121,33,0.254,66,2.536,127,0.618,146,1.079,164,0.005,165,0.005,207,0.859,218,1.527,219,0.436,220,1.147,222,0.643,230,1.957,343,2.106,351,2.901,371,0.972,438,0.693,439,1.862,461,1.694,474,1.691,475,2.019,490,1.099,518,3.56,530,1.978,535,0.733,536,3.105,537,1.267,538,1.639,542,1.691,568,1.862,578,0.952,579,1.138,625,3.788,627,3.774,630,2.828,659,2.536,660,2.152,831,0.025,836,1.358,848,2.019,899,2.152,1130,2.748,1250,1.659,1258,2.302,1261,2.413,1262,2.413,1263,2.413,1264,2.413,1265,1.659,1291,1.938,1292,1.938,1338,2.536,1751,3.467,1752,3.467,1753,4.491,1754,3.105,1902,5.166,1903,5.497,1904,4.228,1905,7.18,1906,5.543,1907,5.867,1908,3.788,1909,3.788,1910,3.617,1911,3.788,1912,3.788,1913,4.529,1914,3.788,1915,3.788,1916,4.529,1917,4.529,1918,4.529,1919,3.788,1920,4.529]],["title/injectables/MySeriesService.html",[438,0.462,1921,3.442]],["body/injectables/MySeriesService.html",[3,0.085,4,0.085,9,0.076,20,0.304,21,1.502,23,1.45,24,1.471,27,1.14,28,0.007,30,0.219,31,0.345,32,0.122,33,0.255,66,2.541,127,0.619,146,1.081,153,1.572,164,0.005,165,0.005,207,0.86,218,1.529,219,0.437,220,1.148,222,0.621,230,1.959,343,2.11,351,2.903,371,0.973,438,0.694,439,1.865,461,1.695,474,1.694,475,2.023,490,1.1,518,3.564,530,1.981,535,0.734,536,3.111,537,1.267,538,1.641,542,1.694,568,1.865,578,0.954,579,1.14,625,3.795,627,3.778,630,2.833,659,2.541,660,2.156,831,0.025,836,1.361,899,2.156,1130,2.753,1250,1.662,1257,1.662,1265,1.662,1291,1.941,1292,1.941,1315,2.607,1317,2.678,1318,2.678,1338,2.541,1751,3.473,1752,3.473,1753,4.496,1754,3.111,1903,5.5,1908,3.795,1909,3.795,1910,3.623,1911,3.795,1912,3.795,1914,3.795,1915,3.795,1919,3.795,1921,5.172,1922,4.235,1923,7.188,1924,5.553,1925,5.873,1926,4.537,1927,4.537,1928,4.537]],["title/directives/OnlyAllowedCharactersDirective.html",[124,2.308,161,2.247]],["body/directives/OnlyAllowedCharactersDirective.html",[3,0.089,4,0.089,9,0.08,13,2.819,14,3.315,20,0.32,21,1.553,23,1.179,24,1.586,27,1.2,28,0.007,29,2.823,30,0.143,31,0.363,32,0.089,33,0.268,124,3.583,127,0.577,160,3.072,161,3.488,162,4.516,164,0.005,165,0.005,200,1.428,218,1.58,219,0.447,220,1.186,222,0.547,367,3.234,372,1.686,474,1.783,475,2.129,768,4.776,961,5.375,1884,4.982,1929,7.248,1930,7.248,1931,5.2,1932,7.429,1933,5.345,1934,7.429,1935,5.845,1936,7.429,1937,5.845,1938,7.026,1939,7.429,1940,7.429,1941,5.2,1942,7.429,1943,5.845,1944,5.845,1945,5.845,1946,5.845,1947,4.776,1948,5.845,1949,5.845,1950,5.2,1951,8.166,1952,5.845,1953,7.429,1954,5.2]],["title/interfaces/Paginated.html",[578,0.822,831,0.016]],["body/interfaces/Paginated.html",[3,0.106,4,0.106,9,0.096,20,0.382,28,0.007,32,0.106,164,0.006,165,0.006,207,0.99,219,0.5,530,2.954,537,1.275,538,2.016,542,2.693,578,1.422,660,2.707,831,0.024,833,1.134,836,2.164,899,3.429,1015,5.318,1016,2.488,1955,6.203,1956,6.972]],["title/interfaces/PaginatedRaw.html",[831,0.016,1338,2.189]],["body/interfaces/PaginatedRaw.html",[3,0.084,4,0.084,9,0.075,20,0.3,23,1.105,28,0.007,30,0.213,31,0.34,32,0.121,33,0.251,66,3.837,127,0.425,146,1.066,164,0.005,165,0.005,207,0.852,219,0.497,222,0.617,230,1.655,343,2.081,351,1.995,371,0.967,438,0.687,461,1.515,490,1.085,530,2.825,535,0.724,537,1.31,568,1.84,578,0.941,579,1.125,611,2.817,659,2.506,660,2.127,831,0.024,833,0.891,836,2.055,848,1.995,899,3.256,1130,4.157,1250,1.639,1258,2.275,1261,2.385,1262,2.385,1263,2.385,1264,2.385,1265,1.639,1291,1.915,1292,1.915,1338,3.26,1751,5.245,1752,5.245,1753,4.456,1754,4.698,1902,3.941,1903,3.574,1904,4.178,1907,4.475,1908,3.743,1909,3.743,1910,3.574,1911,3.743,1912,3.743,1913,4.475,1914,3.743,1915,3.743,1916,4.475,1917,4.475,1918,4.475,1919,3.743,1920,4.475]],["title/interfaces/PaginatedRaw-1.html",[286,1.372,831,0.014,1338,1.832]],["body/interfaces/PaginatedRaw-1.html",[3,0.084,4,0.084,9,0.075,20,0.3,23,1.107,28,0.007,30,0.218,31,0.341,32,0.121,33,0.252,66,3.839,127,0.426,146,1.068,153,1.553,164,0.005,165,0.005,207,0.853,219,0.497,222,0.584,230,1.657,343,2.085,351,1.998,371,0.967,438,0.688,461,1.517,490,1.087,530,2.828,535,0.725,537,1.311,568,1.843,578,0.942,579,1.127,611,2.819,659,2.51,660,2.13,831,0.024,833,0.892,836,2.056,899,3.258,1130,4.16,1250,1.642,1257,1.642,1265,1.642,1291,1.918,1292,1.918,1315,2.576,1317,2.646,1318,2.646,1338,3.263,1751,5.248,1752,5.248,1753,4.461,1754,4.701,1903,3.58,1908,3.749,1909,3.749,1910,3.58,1911,3.749,1912,3.749,1914,3.749,1915,3.749,1919,3.749,1921,3.947,1922,4.185,1925,4.483,1926,4.483,1927,4.483,1928,4.483]],["title/interfaces/PaginatedRaw-2.html",[287,1.88,831,0.014,1338,1.832]],["body/interfaces/PaginatedRaw-2.html",[3,0.071,4,0.071,9,0.064,20,0.256,23,0.941,28,0.007,30,0.225,31,0.29,32,0.098,33,0.214,66,3.598,164,0.004,165,0.004,204,0.925,207,0.766,215,2.082,219,0.477,222,0.538,229,2.082,286,1.599,343,1.773,351,2.332,366,2.314,367,2.032,368,2.082,371,1.099,438,0.618,461,1.673,487,1.397,488,3.85,490,0.925,492,1.084,494,0.941,512,2.191,525,1.297,526,1.251,529,2.082,530,2.94,532,2.082,537,1.279,538,1.065,540,2.191,548,2.082,568,1.568,570,2.082,571,1.881,572,1.984,574,2.453,575,2.314,576,1.812,577,2.191,578,0.802,579,0.958,582,2.706,603,2.706,611,2.641,623,3.712,626,2.194,627,3.365,628,2.706,630,2.381,636,2.706,637,3.189,638,2.614,639,2.919,643,3.813,644,3.56,645,2.919,646,2.032,647,2.15,648,2.614,649,2.919,650,2.919,651,2.919,652,2.919,653,2.082,654,3.365,655,2.919,656,2.919,657,2.919,659,2.135,660,1.812,661,2.53,831,0.016,833,0.759,836,1.927,845,1.451,899,3.053,1130,3.898,1335,2.919,1337,3.045,1338,2.929,1343,4.57,1344,3.045,1348,2.919,1349,3.045,1350,3.045,1351,4.177,1353,3.045,1354,3.045,1355,3.045,1356,4.177,1360,3.045,1361,3.045,1364,3.045,1365,3.045,1366,3.045,1368,3.045,1370,3.045,1372,3.045,1742,3.56,1743,3.813,1744,3.56,1751,4.918,1752,4.918,1753,4.004,1754,4.405,1755,4.152,1756,4.152,1757,5.696,1758,4.152,1759,4.152,1760,4.152,1761,4.152,1762,4.152]],["title/interfaces/PaginatedRaw-3.html",[290,2.881,831,0.014,1338,1.832]],["body/interfaces/PaginatedRaw-3.html",[3,0.07,4,0.07,9,0.063,20,0.252,23,0.929,28,0.007,30,0.225,31,0.286,32,0.125,33,0.212,164,0.004,165,0.004,200,0.806,204,0.913,207,0.759,215,2.056,219,0.347,222,0.576,229,2.056,230,1.07,286,1.579,343,1.75,351,2.311,366,2.284,367,2.006,368,2.056,371,1.12,438,0.612,461,1.745,487,1.379,490,0.913,492,1.07,494,0.929,512,2.163,525,1.281,526,1.235,529,2.056,530,2.59,532,2.056,533,2.108,535,0.609,537,1.105,538,1.448,540,2.163,542,1.405,548,2.056,568,1.547,570,2.056,571,1.864,572,1.958,574,2.421,575,2.284,576,1.789,577,2.163,578,0.791,579,0.946,582,2.671,603,2.671,623,3.679,626,2.174,627,3.335,628,2.671,630,2.35,636,2.671,638,2.581,639,2.881,640,2.763,641,3.148,642,2.163,645,2.881,646,2.006,647,2.131,648,2.581,649,2.881,650,2.881,651,2.881,652,2.881,653,2.056,654,3.335,655,2.881,656,2.881,657,2.881,659,2.108,660,1.789,661,2.498,769,2.222,771,2.222,772,2.222,831,0.027,833,0.749,836,2.168,845,1.432,869,2.881,891,1.379,1248,1.913,1259,3.436,1334,3.148,1335,2.881,1336,2.222,1337,3.006,1338,2.903,1339,4.736,1340,3.314,1341,3.006,1342,2.35,1343,5.13,1344,3.006,1345,2.35,1346,3.5,1347,2.35,1348,2.881,1349,3.006,1350,3.006,1351,4.14,1352,3.314,1353,3.006,1354,3.006,1355,3.006,1356,4.14,1357,3.314,1358,5.222,1359,3.314,1360,3.006,1361,3.006,1362,3.314,1363,3.314,1364,3.006,1365,3.006,1366,3.006,1367,3.314,1368,3.006,1369,3.314,1370,3.006,1371,3.314,1372,3.006,1373,3.314,1374,3.314]],["title/interfaces/Pagination.html",[831,0.016,1339,3.122]],["body/interfaces/Pagination.html",[3,0.069,4,0.069,9,0.062,20,0.247,23,0.911,28,0.007,30,0.224,31,0.281,32,0.124,33,0.207,164,0.004,165,0.004,200,0.79,204,0.895,207,0.749,215,2.015,219,0.425,222,0.571,229,2.015,230,1.049,286,1.547,343,1.716,351,2.28,366,2.239,367,1.966,368,2.015,371,1.116,438,0.604,461,1.732,487,1.352,490,0.895,492,1.049,494,0.911,512,2.121,525,1.255,526,1.211,529,2.015,530,2.563,532,2.015,533,2.066,535,0.597,537,1.252,538,1.859,540,2.121,542,2.365,548,2.015,568,1.517,570,2.015,571,1.839,572,1.92,574,2.374,575,2.239,576,1.754,577,2.121,578,0.776,579,0.927,582,2.619,603,2.619,623,3.629,626,2.144,627,3.289,628,2.619,630,2.304,636,2.619,638,2.53,639,2.825,640,2.725,641,3.086,642,2.121,645,2.825,646,1.966,647,2.102,648,2.53,649,2.825,650,2.825,651,2.825,652,2.825,653,2.015,654,3.289,655,2.825,656,2.825,657,2.825,659,2.066,660,1.754,661,2.449,769,2.178,771,2.178,772,2.178,831,0.027,833,0.735,836,1.76,845,1.404,869,4.85,891,1.352,1248,1.876,1259,2.789,1334,3.086,1335,2.825,1336,2.178,1337,2.947,1338,2.066,1339,5.06,1340,5.579,1341,2.947,1342,2.304,1343,5.094,1344,2.947,1345,2.304,1346,3.464,1347,2.304,1348,2.825,1349,2.947,1350,2.947,1351,4.084,1352,3.249,1353,2.947,1354,2.947,1355,2.947,1356,4.084,1357,3.249,1358,5.167,1359,3.249,1360,2.947,1361,2.947,1362,3.249,1363,3.249,1364,2.947,1365,2.947,1366,2.947,1367,3.249,1368,2.947,1369,3.249,1370,2.947,1371,3.249,1372,2.947,1373,3.249,1374,3.249]],["title/components/PictureSelectableComponent.html",[0,1.406,138,2.247]],["body/components/PictureSelectableComponent.html",[0,1.634,1,1.368,2,2.382,3,0.044,4,0.044,5,1.58,6,1.58,7,1.58,8,1.58,9,0.062,11,0.836,12,2.837,13,1.405,14,4.018,15,3.552,16,2.073,18,2.073,20,0.16,21,0.947,22,3.2,23,0.914,24,1.627,27,1.674,28,0.007,29,3.319,30,0.153,31,0.181,32,0.069,33,0.134,47,3.807,52,1.689,53,1.632,55,1.752,56,2.959,57,2.539,58,3.514,61,1.752,62,1.752,64,2.628,65,1.822,66,1.333,67,1.752,70,3.115,73,3.514,74,3.115,77,1.973,78,1.689,80,1.689,81,1.689,82,3.119,83,1.632,84,1.632,85,3.115,86,3.115,87,2.457,88,2.539,92,2.539,96,3.514,99,1.632,101,1.632,107,1.632,109,4.031,121,1.21,122,2.457,123,2.457,124,1.405,125,3.901,126,1.58,127,0.645,128,1.58,129,1.405,130,1.58,131,1.531,132,1.444,133,1.58,134,1.3,135,1.58,136,1.368,137,1.58,138,3.191,139,3.023,140,2.457,141,1.368,142,1.58,143,1.368,144,1.58,145,1.333,146,0.882,147,2.457,148,1.333,149,1.58,150,1.333,151,2.457,152,1.333,153,1.574,154,1.405,155,1.333,156,1.58,157,1.333,158,1.444,159,1.531,160,1.531,161,1.368,162,1.531,163,1.58,164,0.003,165,0.003,172,1.58,187,1.486,189,0.84,200,0.51,207,0.542,208,2.257,218,1.652,219,0.447,220,1.302,222,0.409,230,1.458,251,1.689,252,1.689,254,1.901,263,3.26,265,2.628,269,2.628,272,3.26,273,1.689,276,2.592,277,2.096,282,1.991,284,2.096,294,1.689,372,1.604,378,2.222,473,3.015,474,2.073,475,2.475,490,0.577,542,0.889,746,2.834,963,1.822,968,3.115,985,2.096,997,2.582,998,2.436,1155,1.531,1310,1.368,1470,2.725,1519,5.125,1838,4.093,1874,1.991,1875,2.381,1884,1.689,1938,5.488,1947,3.702,1954,4.032,1957,7.259,1958,6.777,1959,2.222,1960,4.947,1961,4.947,1962,3.702,1963,4.032,1964,4.947,1965,4.032,1966,5.561,1967,4.531,1968,5.581,1969,4.947,1970,4.531,1971,4.531,1972,4.531,1973,4.032,1974,4.032,1975,4.032,1976,4.032,1977,2.914,1978,4.032,1979,2.914,1980,2.914,1981,2.914,1982,2.914,1983,2.592,1984,2.592,1985,2.914,1986,4.531,1987,2.914,1988,2.914,1989,2.914,1990,4.032,1991,2.914,1992,4.947,1993,4.032,1994,2.914,1995,2.592,1996,2.914,1997,4.032,1998,2.914,1999,4.032,2000,2.914,2001,2.592,2002,4.531,2003,2.914,2004,2.592,2005,3.702,2006,3.702,2007,2.381,2008,2.381,2009,2.914,2010,2.914,2011,2.914,2012,2.914,2013,2.914,2014,2.914,2015,4.531,2016,2.914,2017,2.592,2018,2.592,2019,2.914,2020,2.914,2021,2.914,2022,2.914,2023,2.914,2024,2.914,2025,2.914,2026,2.914,2027,2.914,2028,2.914,2029,2.592,2030,2.592,2031,2.914,2032,2.914,2033,2.914,2034,2.592,2035,2.914,2036,2.914,2037,2.914,2038,2.914,2039,2.914,2040,4.032,2041,4.543,2042,3.702,2043,2.381,2044,2.381,2045,2.381,2046,2.222,2047,2.592,2048,2.222,2049,2.381,2050,2.914,2051,2.914,2052,2.914,2053,2.914,2054,2.914,2055,2.914,2056,3.26]],["title/classes/Port.html",[33,0.22,959,2.774]],["body/classes/Port.html",[0,2.127,3,0.059,4,0.059,9,0.053,11,0.715,12,2.864,14,1.729,15,1.538,16,1.773,18,1.773,20,0.212,22,1.977,23,0.782,24,1.219,28,0.007,29,1.472,30,0.22,31,0.241,32,0.101,33,0.303,35,1.921,82,1.609,127,0.562,134,1.729,146,1.41,150,2.569,153,2.269,157,2.569,164,0.004,165,0.004,189,1.117,193,1.729,194,1.773,200,1.266,207,0.672,208,3.641,219,0.362,220,1.28,222,0.533,230,1.92,286,1.924,287,1.819,327,2.171,344,2.171,372,1.619,385,3.256,422,2.528,461,0.824,473,3.58,475,1.411,490,0.768,504,2.33,520,3.81,535,0.957,537,0.89,578,0.666,611,2.692,660,1.504,724,2.424,954,4.646,955,3.166,956,3.837,959,4.646,961,4.13,962,3.837,963,2.424,964,2.648,965,2.648,966,2.648,967,2.528,968,2.171,969,3.829,970,2.33,971,3.663,972,2.247,973,2.528,974,2.424,975,2.528,976,2.648,977,3.377,978,2.528,979,2.788,980,4.587,981,2.424,982,2.788,983,3.447,984,3.166,985,2.788,986,3.447,987,3.447,988,2.648,989,2.648,990,2.956,991,3.166,992,2.648,993,3.447,994,3.447,995,2.956,996,2.648,997,1.472,998,2.18,999,3.447,1000,3.447,1001,3.166,1002,2.648,1003,2.648,1004,2.788,1005,2.956,1006,2.648,1007,2.648,1008,2.648,1009,2.648,1010,2.648,1011,2.648,1012,2.956,1013,2.956,1014,2.648,1015,2.956,1016,1.383,1017,2.788,1018,5.014,1019,3.447,1020,3.663,1021,4.995,1022,5.874,1023,4.995,1024,4.995,1025,3.663,1026,3.663,1027,3.663,1028,3.447,1029,3.663,1030,3.663,1031,3.166,1032,4.995,1033,3.447,1034,4.724,1035,2.956,1036,3.447,1037,2.956,1038,3.447,1039,3.447,1040,3.447,1041,2.956,1042,2.956,1043,4.344,1044,3.447,1045,2.956,1046,3.447,1047,3.512,1048,3.837,1049,3.837,1050,3.837,1051,2.956,1052,3.447,1053,2.956,1054,3.447,1055,3.447,1056,3.447,1057,3.447,1058,3.447,1059,2.788,2057,3.875,2058,3.875,2059,3.875]],["title/classes/Port-1.html",[33,0.184,286,1.372,959,2.322]],["body/classes/Port-1.html",[0,1.621,3,0.044,4,0.044,9,0.04,11,0.532,12,2.291,14,1.285,15,1.143,16,1.318,18,1.318,20,0.341,22,1.469,23,0.581,24,1.019,28,0.007,29,1.094,30,0.211,31,0.179,32,0.084,33,0.253,35,1.428,82,2.292,89,1.613,93,3.276,112,2.36,127,0.484,146,0.561,152,2.055,153,2.25,155,1.318,164,0.003,165,0.003,189,0.83,193,1.285,194,1.318,200,1.448,207,0.537,208,3.46,209,1.801,219,0.302,220,1.144,222,0.459,229,1.285,230,1.924,286,2.136,287,1.352,327,2.516,344,2.516,371,0.548,372,1.949,386,3.09,449,1.801,461,1.174,473,3.664,474,0.878,487,0.862,490,0.571,504,1.732,517,1.352,520,3.09,535,0.824,537,1.008,538,0.657,542,0.878,578,0.771,611,1.854,663,3.231,724,1.801,832,2.701,834,2.93,837,2.93,838,1.879,839,1.879,840,2.701,891,1.344,899,1.118,938,3.601,954,4.152,956,3.069,959,4.152,961,3.452,962,3.069,963,1.801,964,1.968,965,3.069,966,3.069,967,2.93,968,2.516,969,3.2,970,1.732,971,2.93,972,1.67,973,1.879,974,1.801,975,1.879,976,1.968,977,2.701,981,1.801,988,1.968,989,1.968,992,1.968,996,1.968,997,1.094,998,2.42,1002,1.968,1003,1.968,1004,4.485,1006,1.968,1007,1.968,1008,1.968,1009,1.968,1010,1.968,1011,1.968,1013,2.197,1014,1.968,1017,2.072,1018,4.067,1020,1.879,1025,4.067,1026,4.067,1027,4.067,1029,1.879,1030,1.879,1034,2.93,1043,4.065,1047,1.801,1048,1.968,1049,1.968,1050,1.968,1051,2.197,1053,2.197,1059,2.072,1060,2.353,1064,2.072,1065,2.072,1066,2.197,1067,2.197,1068,3.231,1069,2.93,1070,1.732,1071,2.562,1072,2.562,1073,2.072,1074,4.26,1075,2.353,1076,2.353,1077,2.353,1078,4.485,1079,2.197,1080,4.26,1081,2.197,1082,3.069,1083,2.197,1084,2.072,1085,2.197,1086,1.801,1087,2.197,1088,2.562,1089,2.562,1090,2.197,1091,2.197,1092,3.231,1093,2.197,1094,1.968,1095,2.562,1096,2.562,1097,2.562,1098,2.562,1099,2.197,1100,2.562,1101,3.669,1102,2.197,1103,3.231,1104,3.231,1105,2.743,1106,2.197,1107,3.425,1108,3.995,1109,4.21,1110,4.21,1111,2.562,1112,3.995,1113,2.974,1114,2.562,1115,2.562,1116,2.197,1117,3.425,1118,2.562,1119,2.197,1120,2.562,1121,2.072,1122,2.072,1123,3.231,1124,2.353,1125,3.231,1126,2.562,1127,2.353,1128,3.669,1129,2.562,1130,3.09,1131,2.93,1132,3.995,1133,3.995,1134,2.353,1135,2.072,1136,2.353,1137,2.353,1138,2.353,1139,2.072,1140,2.353,1141,2.562,1142,2.353,1143,2.562,1144,2.353,1145,2.353,1146,2.562,1147,2.197,1148,2.562,1149,3.069,1150,3.772,1151,2.197,1152,2.197,1153,2.197,1154,2.562,1155,2.901,1156,3.601,1157,2.562,1158,2.197,1159,2.562,1160,2.562,1161,2.562,1162,3.425,1163,2.197,1164,2.197,1165,2.562,1166,2.197,1167,2.197,1168,2.072,1169,1.968,1170,3.069,1171,2.197,1172,2.197,1173,2.562,1174,2.197,2060,2.88,2061,2.88,2062,2.88]],["title/classes/Port-2.html",[33,0.184,287,1.88,959,2.322]],["body/classes/Port-2.html",[0,1.579,3,0.042,4,0.042,9,0.038,11,0.51,12,2.218,14,1.233,15,1.097,16,1.264,18,1.264,20,0.334,22,1.41,23,0.557,24,0.992,28,0.007,29,1.05,30,0.209,31,0.172,32,0.082,33,0.247,35,1.37,82,2.232,89,1.548,93,3.203,112,2.285,127,0.473,145,1.989,146,1.485,148,1.264,153,1.231,164,0.003,165,0.003,189,0.797,193,1.233,194,1.264,200,1.432,207,0.52,208,3.427,209,1.728,219,0.294,220,1.124,222,0.449,229,1.233,230,1.903,241,2.837,286,2.088,287,1.298,327,2.436,344,2.436,367,2.34,368,2.719,371,0.531,372,1.911,385,2.521,386,2.155,393,2.258,449,1.728,461,1.143,473,3.593,474,0.843,487,0.827,490,0.548,504,1.662,517,1.298,520,3.022,535,0.876,537,0.992,538,0.631,542,0.843,578,0.747,611,1.805,663,3.128,671,1.662,724,1.728,832,2.615,834,2.837,837,2.837,838,1.803,839,1.803,840,2.615,891,1.301,899,1.073,938,3.507,954,4.081,956,2.971,959,4.081,961,3.362,962,2.971,963,1.728,964,1.889,965,2.971,966,2.971,967,2.837,968,2.436,969,3.117,970,1.662,971,2.837,972,1.602,973,1.803,974,1.728,975,1.803,976,1.889,977,2.615,978,1.803,988,1.889,989,1.889,995,2.108,996,1.889,997,1.05,998,2.366,1002,1.889,1003,1.889,1005,4.649,1006,1.889,1007,1.889,1008,1.889,1009,1.889,1010,1.889,1011,1.889,1012,2.108,1014,1.889,1018,3.977,1020,1.803,1025,3.977,1026,3.977,1027,3.977,1029,1.803,1030,1.803,1034,2.837,1035,2.108,1037,2.108,1041,2.108,1042,2.108,1043,4.009,1045,2.108,1047,1.728,1048,1.889,1049,1.889,1050,1.889,1065,1.988,1067,2.108,1068,3.128,1069,2.837,1070,1.662,1073,1.988,1074,3.673,1078,4.385,1079,2.108,1080,4.165,1081,2.108,1082,2.971,1083,2.108,1084,1.988,1085,2.108,1086,1.728,1087,2.108,1090,2.108,1091,2.108,1092,3.128,1093,2.108,1094,1.889,1099,2.108,1102,2.108,1103,3.128,1104,3.128,1105,2.69,1106,2.108,1107,3.316,1109,4.1,1110,4.1,1113,2.923,1116,2.108,1117,3.316,1119,2.108,1121,1.988,1122,1.988,1123,3.128,1125,3.128,1130,3.022,1131,2.837,1135,1.988,1139,1.988,1147,2.108,1149,2.971,1150,3.673,1151,2.108,1152,2.108,1153,2.108,1155,2.825,1156,3.507,1158,2.108,1162,3.316,1163,2.108,1164,2.108,1166,2.108,1167,2.108,1168,1.988,1169,1.889,1170,2.971,1171,2.108,1172,2.108,1174,2.108,1175,2.258,1179,1.988,1180,2.108,1181,2.459,1182,2.459,1183,2.459,1184,2.459,1185,2.459,1186,2.459,1187,2.459,1188,2.459,1189,2.459,1190,2.459,1191,2.459,1192,2.459,1193,2.459,1194,3.868,1195,2.108,1196,2.459,1197,2.459,1198,2.459,1199,1.889,1200,3.128,1201,2.459,1202,5.423,1203,2.459,1204,3.868,1205,2.459,1206,4.782,1207,2.258,1208,1.803,1209,2.459,1210,2.459,1211,3.868,1212,2.459,1213,3.868,1214,2.459,1215,2.459,1216,2.459,1217,2.459,1218,2.459,1219,2.459,1220,2.459,1221,3.868,1222,3.316,1223,3.868,1224,3.868,1225,3.868,1226,2.459,1227,2.459,1228,2.459,1229,2.459,1230,2.459,1231,2.459,1232,2.459,1233,2.459,1234,2.459,1235,2.459,1236,2.459,1237,2.459,1238,2.459,1239,2.459,1240,2.459,1241,2.459,1242,2.459,1243,2.459,1244,2.459,1245,2.459,2063,2.763,2064,2.763,2065,2.763]],["title/components/ProfilePage.html",[0,1.406,141,2.247]],["body/components/ProfilePage.html",[0,1.218,1,0.89,2,1.68,3,0.029,4,0.029,5,1.028,6,1.028,7,1.028,8,1.028,9,0.044,11,0.59,12,2.115,13,0.914,14,3.696,15,3.254,16,1.463,18,1.463,20,0.104,21,0.668,22,2.483,23,0.645,24,1.456,27,1.116,28,0.007,29,0.72,30,0.161,31,0.118,32,0.029,33,0.087,35,4.214,46,2.493,47,4.084,48,2,49,1.237,50,1.186,51,1.463,52,1.854,53,3.513,54,2.404,55,1.14,56,2.119,57,2.322,58,3.044,59,1.186,61,1.923,62,1.14,63,2,64,2.404,67,1.14,68,5.1,69,1.446,70,3.513,71,3.044,72,2,73,3.301,74,2.726,77,1.392,80,2.404,81,2.404,82,2.847,83,2.726,84,3.044,85,3.044,86,3.044,87,1.733,88,3.971,89,1.062,92,3.841,94,1.446,96,4.183,97,1.549,98,1.237,99,3.044,101,4.183,102,1.237,103,2.404,104,2,105,1.296,107,1.062,109,3.301,110,1.099,111,1.14,112,0.996,116,1.446,121,0.787,122,1.733,123,1.733,124,0.914,125,2.947,126,1.028,127,0.566,128,1.028,129,0.914,130,1.028,131,0.996,132,0.94,133,1.028,134,0.846,135,1.028,136,0.89,137,1.028,138,0.89,139,1.9,140,1.733,141,2.285,142,1.028,143,0.89,144,1.028,145,0.867,146,0.622,147,1.733,148,0.867,149,1.028,150,0.867,151,1.733,152,0.867,153,1.174,154,0.914,155,0.867,156,1.028,157,0.867,158,0.94,159,0.996,160,0.996,161,0.89,162,0.996,163,1.028,164,0.002,165,0.002,187,0.967,189,0.547,193,0.846,194,0.867,200,1.497,207,0.382,215,2.172,218,0.882,219,0.361,220,0.868,222,0.462,229,0.846,230,1.369,240,2.844,241,1.237,251,2.404,252,2.404,265,1.854,269,3.417,273,2.404,274,2.712,282,2.185,284,1.364,293,1.296,294,1.099,366,1.585,367,1.392,368,2.172,371,0.719,372,0.922,440,2,459,2.185,471,0.867,474,1.264,475,1.51,490,0.376,503,2.413,508,1.028,520,3.702,522,0.967,611,1.979,746,2,762,1.364,970,1.14,977,3.771,985,1.364,997,1.215,998,1.241,1043,4.711,1094,2.185,1155,2.558,1195,1.446,1200,1.364,1207,1.549,1208,2.705,1222,2.439,1253,0.806,1310,0.89,1393,2.552,1398,2.621,1407,2.621,1408,2.413,1448,1.549,1449,1.687,1459,1.687,1470,1.923,1475,2.982,1492,2.844,1553,1.687,1557,1.364,1695,1.364,1801,3.501,1804,2.3,1806,4.24,1809,4.783,1816,1.549,1817,2.982,1819,4.933,1821,2.982,1823,1.549,1827,1.364,1832,3.501,1833,1.549,1834,4.495,1835,4.815,1836,4.783,1837,1.446,1840,4.495,1874,1.296,1876,2.3,1881,1.549,1882,1.364,1884,1.854,1885,1.364,1886,2.3,1887,2.3,1938,3.712,1947,1.549,2029,1.687,2030,1.687,2034,1.687,2041,1.549,2042,1.549,2043,1.549,2044,1.549,2045,1.549,2046,1.446,2048,1.446,2049,1.549,2056,2.3,2066,1.687,2067,4.145,2068,3.197,2069,4.145,2070,5.435,2071,3.688,2072,4.145,2073,2.844,2074,3.197,2075,4.867,2076,1.896,2077,3.688,2078,4.145,2079,5.579,2080,1.896,2081,2.844,2082,1.896,2083,1.687,2084,1.896,2085,3.197,2086,1.896,2087,1.896,2088,1.896,2089,2.844,2090,1.896,2091,1.896,2092,1.896,2093,1.896,2094,1.896,2095,1.687,2096,1.896,2097,1.446,2098,1.896,2099,1.687,2100,1.896,2101,1.896,2102,1.687,2103,3.197,2104,1.896,2105,1.896,2106,1.896,2107,4.145,2108,1.896,2109,1.896,2110,1.896,2111,1.687,2112,1.896,2113,4.835,2114,1.687,2115,1.896,2116,3.197,2117,1.687,2118,4.145,2119,1.896,2120,4.145,2121,1.896,2122,2.844,2123,1.687,2124,1.687,2125,1.687,2126,1.687,2127,1.687,2128,1.687,2129,1.687,2130,1.687,2131,1.687,2132,1.687,2133,3.688,2134,3.197,2135,2.844,2136,2.844,2137,1.896,2138,2.844,2139,2.844,2140,1.687,2141,1.896,2142,1.896,2143,3.197,2144,1.896,2145,1.896,2146,1.896,2147,1.896,2148,1.687,2149,1.896,2150,5.243,2151,3.197,2152,3.688,2153,1.687,2154,4.145,2155,2.844,2156,1.896,2157,3.197,2158,1.687,2159,1.896,2160,1.896,2161,1.896,2162,1.896,2163,2.844,2164,1.896,2165,1.896,2166,1.687,2167,1.687,2168,1.896,2169,1.896,2170,1.896,2171,1.896,2172,3.197,2173,1.896,2174,1.896,2175,1.896,2176,1.896,2177,1.896,2178,1.896,2179,1.896,2180,1.896,2181,1.896,2182,1.896,2183,1.896,2184,1.896,2185,1.896,2186,1.687,2187,1.896,2188,1.896,2189,1.896,2190,3.197,2191,1.896,2192,1.896,2193,1.896,2194,1.896,2195,1.896,2196,1.896,2197,1.896,2198,1.896,2199,1.687,2200,1.687,2201,1.687,2202,1.687,2203,3.197,2204,3.197,2205,3.197,2206,3.197,2207,3.197,2208,4.867,2209,3.197,2210,3.197,2211,3.197,2212,3.197,2213,3.197,2214,3.197,2215,3.197,2216,1.687,2217,1.896,2218,1.687,2219,1.687,2220,1.296,2221,1.549,2222,1.296,2223,1.687,2224,1.446,2225,1.896]],["title/modules/ProfilePageModule.html",[166,1.743,2226,3.65]],["body/modules/ProfilePageModule.html",[3,0.091,4,0.091,9,0.082,28,0.007,30,0.231,31,0.371,32,0.091,33,0.274,68,4.299,121,2.482,141,4.281,161,4.281,164,0.005,165,0.005,166,2.177,168,2.54,169,3.141,170,4.784,171,3.465,172,3.24,173,2.666,178,4.368,179,3.465,180,3.465,182,3.361,183,3.447,184,4.712,185,3.594,186,5.746,187,3.048,188,4.368,189,1.723,190,3.737,192,4.712,193,2.666,194,2.734,306,6.231,346,5.42,1929,4.882,1930,4.882,2226,7.341,2227,5.316,2228,5.316,2229,5.316,2230,6.56,2231,5.975,2232,5.316,2233,5.975,2234,5.975]],["title/modules/ProfilePageRoutingModule.html",[166,1.743,2230,3.442]],["body/modules/ProfilePageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,141,3.887,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.98,199,3.456,200,1.22,201,3.111,202,4.361,2230,5.956,2232,6.203,2235,6.972]],["title/interfaces/ProviderMetadata.html",[831,0.016,1629,2.68]],["body/interfaces/ProviderMetadata.html",[3,0.07,4,0.07,9,0.063,20,0.252,23,0.927,28,0.007,30,0.207,31,0.285,32,0.138,33,0.211,51,3.749,56,3.567,77,3.567,127,0.636,164,0.004,165,0.004,200,1.108,201,3.485,207,0.757,208,1.865,219,0.397,222,0.725,230,1.815,337,2.491,343,1.745,351,1.673,371,0.885,372,1.325,461,0.977,487,1.375,490,0.91,503,3.139,505,2.414,508,2.491,535,0.607,537,1.276,568,1.543,626,1.574,640,2.757,642,2.157,646,3.567,647,1.543,732,2.102,769,2.215,771,2.215,772,2.215,831,0.03,833,0.747,845,1.428,846,1.908,891,1.375,1251,1.953,1253,1.953,1336,2.215,1342,2.343,1345,2.343,1346,3.495,1347,2.343,1501,2.05,1574,2.664,1610,4.06,1611,2,1612,3.929,1613,3.697,1614,3.929,1615,3.929,1616,2.664,1617,2.573,1618,3.433,1619,2.763,1620,2.763,1621,2.763,1622,2.763,1623,4.928,1624,4.928,1625,4.928,1626,2.763,1627,2.157,1628,4.928,1629,4.862,1630,4.698,1631,4.698,1632,2.573,1633,2.763,1634,2.763,1635,2.664,1636,2.763,1637,4.202,1638,2.763,1639,2.664,1640,2.763,1641,2.763,1642,2.763,1643,2.763]],["title/components/RegisterPage.html",[0,1.406,143,2.247]],["body/components/RegisterPage.html",[0,1.236,1,0.909,2,1.71,3,0.03,4,0.03,5,1.05,6,1.05,7,1.05,8,1.05,9,0.027,11,0.601,12,2.147,13,0.934,14,3.713,15,3.303,16,1.489,18,1.489,20,0.106,21,0.68,22,2.516,23,0.656,24,1.587,27,1.42,28,0.007,29,2.406,30,0.155,31,0.12,32,0.03,33,0.089,46,2.531,47,4.002,48,1.211,50,1.211,51,3.163,52,1.122,53,1.823,54,3.189,55,1.164,56,2.147,57,1.084,58,3.547,59,3.726,61,3.308,62,3.809,63,2.632,64,2.44,65,2.632,66,1.926,67,2.531,70,1.084,73,2.358,74,1.823,75,1.164,77,2.147,78,1.886,80,1.122,81,1.122,82,2.63,83,1.823,84,3.547,85,1.084,86,1.084,87,1.764,88,4.114,90,2.341,91,1.393,92,3.337,93,2.212,95,2.658,96,4.114,98,1.263,99,1.823,100,2.341,101,4.212,103,4.009,104,1.211,105,1.323,107,1.823,109,4.298,110,1.886,111,1.957,112,1.017,113,1.211,114,1.263,115,1.582,117,1.582,120,1.393,121,0.804,122,1.764,123,1.764,124,0.934,125,3.433,126,1.05,127,0.583,128,1.05,129,0.934,130,1.05,131,1.017,132,0.96,133,1.05,134,0.864,135,1.05,136,0.909,137,1.05,138,0.909,139,0.677,140,1.764,141,0.909,142,1.05,143,2.316,144,1.05,145,0.886,146,0.633,147,1.764,148,0.886,149,1.05,150,0.886,151,1.764,152,0.886,153,1.191,154,0.934,155,0.886,156,1.05,157,0.886,158,0.96,159,1.017,160,1.017,161,0.909,162,1.017,163,1.05,164,0.002,165,0.002,187,0.988,189,0.558,199,0.96,200,1.284,207,0.389,209,2.632,215,2.201,216,4.556,218,1.049,219,0.402,220,0.788,222,0.565,229,0.864,230,1.544,236,1.722,251,2.86,252,2.44,253,2.658,257,1.393,258,1.393,261,2.658,263,1.393,265,1.122,268,1.582,269,2.44,272,1.393,273,1.122,274,1.21,281,1.582,284,1.393,291,1.582,294,1.122,367,2.147,368,1.878,371,0.844,372,0.558,413,1.393,419,3.21,422,1.263,440,1.211,459,2.223,474,1.677,475,2.421,520,3.428,648,1.823,653,2.201,746,1.211,779,5.07,787,6.731,802,5.299,810,2.482,891,0.579,997,2.09,998,1.263,1043,2.592,1073,3.028,1080,1.323,1092,2.341,1130,0.96,1155,1.71,1156,1.263,1169,1.323,1170,1.323,1310,0.909,1393,3.246,1394,3.825,1398,2.652,1407,2.652,1408,2.445,1470,1.164,1475,3.548,1555,2.482,1557,4.974,1613,1.66,1695,1.393,1754,1.084,1798,3.744,1801,3.548,1802,2.895,1803,4.388,1804,2.341,1805,1.477,1806,3.548,1807,3.438,1808,4.388,1809,4.83,1811,2.482,1815,2.895,1816,4.03,1817,3.957,1819,3.028,1821,3.028,1823,1.582,1825,1.722,1827,2.341,1831,1.477,1832,4.285,1833,1.582,1834,1.477,1835,1.582,1836,1.477,1837,1.477,1838,1.263,1839,1.722,1840,1.477,1841,2.895,1844,1.722,1846,2.895,1847,1.722,1848,3.438,1849,1.722,1857,2.895,1862,1.582,1868,2.658,1869,5.914,1871,6.949,1872,6.356,1873,2.895,1874,1.323,1875,1.582,1876,2.341,1877,1.582,1878,1.722,1879,1.722,1880,1.582,1881,1.582,1882,1.393,1883,1.263,1884,1.886,1885,1.393,1886,2.341,1887,2.341,1888,1.722,1889,1.722,1890,1.722,2071,3.744,2073,2.895,2081,2.895,2083,1.722,2089,2.895,2095,1.722,2097,1.477,2099,1.722,2102,1.722,2111,1.722,2113,4.893,2122,2.895,2123,1.722,2124,1.722,2125,1.722,2126,1.722,2127,1.722,2128,1.722,2129,1.722,2130,1.722,2131,1.722,2132,1.722,2153,1.722,2155,1.722,2158,1.722,2166,2.895,2167,1.722,2199,1.722,2200,1.722,2201,1.722,2202,1.722,2236,1.722,2237,4.208,2238,3.253,2239,4.208,2240,4.208,2241,4.208,2242,4.932,2243,3.253,2244,4.932,2245,4.932,2246,4.932,2247,3.253,2248,1.936,2249,1.936,2250,1.936,2251,1.936,2252,1.936,2253,3.253,2254,1.936,2255,1.936,2256,1.936,2257,1.936,2258,1.936,2259,1.936,2260,1.936,2261,1.936,2262,1.936,2263,1.936,2264,1.936,2265,1.936,2266,1.936,2267,1.936,2268,1.936,2269,1.936,2270,1.936,2271,1.936,2272,2.658,2273,2.658,2274,1.936,2275,3.438,2276,1.936,2277,1.936,2278,1.936,2279,1.936,2280,1.936,2281,1.936,2282,1.936,2283,1.936,2284,3.253,2285,3.253,2286,1.936,2287,1.936,2288,4.932,2289,1.936,2290,3.253,2291,1.936,2292,1.936,2293,1.936,2294,1.936,2295,1.936,2296,1.936,2297,1.936,2298,1.936,2299,1.936,2300,1.936,2301,1.936,2302,1.936,2303,1.722,2304,1.936,2305,1.936,2306,1.936,2307,1.936,2308,1.936,2309,1.936,2310,1.936,2311,1.936,2312,5.956,2313,3.253,2314,3.253,2315,4.932,2316,3.253,2317,4.388,2318,6.647,2319,5.956,2320,6.647,2321,4.932,2322,4.932,2323,3.253,2324,2.895,2325,3.253,2326,3.253,2327,3.253,2328,3.253,2329,3.253,2330,1.936,2331,3.253,2332,3.253,2333,1.936,2334,1.936,2335,1.936,2336,1.936,2337,1.936,2338,3.253,2339,3.253,2340,1.936,2341,1.582,2342,1.936]],["title/modules/RegisterPageModule.html",[166,1.743,2343,3.65]],["body/modules/RegisterPageModule.html",[3,0.096,4,0.096,9,0.087,28,0.007,30,0.229,31,0.392,32,0.096,33,0.29,121,2.623,143,4.341,164,0.005,165,0.005,166,2.3,168,2.685,169,3.319,170,4.905,171,3.662,172,3.424,173,2.818,178,4.521,179,3.662,180,3.662,182,3.479,183,3.568,184,4.877,185,3.798,186,5.948,187,3.222,188,4.521,189,1.821,190,3.95,192,4.877,193,2.818,194,2.89,346,5.61,419,4.817,2343,7.219,2344,5.619,2345,5.619,2346,5.619,2347,6.651,2348,6.315,2349,5.619]],["title/modules/RegisterPageRoutingModule.html",[166,1.743,2347,3.442]],["body/modules/RegisterPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,143,3.887,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.98,199,3.456,200,1.22,201,3.111,202,4.361,2347,5.956,2349,6.203,2350,6.972]],["title/interfaces/SearchParams.html",[540,2.247,831,0.016]],["body/interfaces/SearchParams.html",[3,0.1,4,0.1,9,0.09,24,1.211,28,0.007,30,0.211,32,0.122,164,0.006,165,0.006,222,0.695,366,3.252,367,3.475,461,1.984,490,1.3,529,2.927,530,2.848,532,2.927,533,3.002,535,0.867,540,3.748,543,3.347,548,2.927,570,2.927,576,2.547,577,3.08,578,1.127,579,1.347,659,3.002,660,2.547,661,3.557,831,0.027,833,1.067,1199,4.483,1677,6.088,1689,4.28,1695,5.742,1696,5.004,1697,5.836,1698,5.836,1699,4.483,1700,5.836,1701,5.836,1702,5.836,2351,6.56,2352,6.56]],["title/interfaces/Season.html",[146,0.932,831,0.016]],["body/interfaces/Season.html",[3,0.098,4,0.098,9,0.089,20,0.353,28,0.007,30,0.158,32,0.098,127,0.663,146,1.539,164,0.006,165,0.006,207,0.945,219,0.515,220,1.422,222,0.7,472,3.719,537,1.2,576,3.317,831,0.022,833,1.05,845,2.457,848,3.111,850,4.924,1261,3.719,1262,3.719,1263,3.719,1264,3.441,1265,2.557,1599,4.037,1600,4.924,1601,4.924,1602,4.924,1603,3.743,2353,5.743,2354,6.455,2355,6.455]],["title/interfaces/SeasonAttributes.html",[831,0.016,1249,2.594]],["body/interfaces/SeasonAttributes.html",[3,0.063,4,0.063,9,0.057,11,0.761,20,0.226,28,0.007,30,0.2,31,0.256,32,0.135,33,0.189,127,0.653,146,1.143,164,0.004,165,0.004,189,1.189,200,1.303,204,0.817,207,0.702,219,0.461,222,0.654,274,2.543,371,1.05,438,0.566,471,2.686,472,2.556,492,0.958,494,0.832,525,1.146,526,1.574,535,0.903,537,1.211,538,0.941,571,1.211,578,1.008,579,0.847,611,2.502,831,0.03,833,0.671,836,2.259,848,2.981,862,1.471,864,1.471,866,1.471,871,1.471,873,1.471,876,1.471,891,1.234,896,1.795,1016,1.471,1105,3.418,1113,3.497,1246,1.988,1247,1.936,1248,2.438,1249,4.269,1250,1.234,1251,2.496,1252,2.391,1253,1.753,1254,2.103,1255,2.235,1256,3.707,1257,1.234,1258,3.094,1259,2.892,1260,3.183,1261,3.563,1262,3.563,1263,3.563,1264,2.976,1265,2.449,1266,2.391,1267,1.84,1268,2.235,1269,2.391,1270,1.712,1271,2.103,1272,2.103,1273,2.103,1274,1.636,1275,2.235,1276,2.391,1277,3.289,1278,1.886,1279,1.886,1280,2.31,1281,4.882,1282,2.391,1283,2.391,1284,2.391,1285,2.31,1286,2.391,1287,2.391,1288,2.391,1289,1.601,1290,1.988,1291,1.441,1292,1.441,1293,1.636,1294,2.391,1295,1.636,1296,2.391,1297,3.404,1298,1.988,1299,1.988,1300,1.988,1301,1.988,1302,1.988,1303,2.391,1304,2.391,1305,2.391,1306,1.988,1307,2.391,1308,2.391,1309,2.391,1310,1.936,1311,2.391,1312,3.488,1313,3.297]],["title/interfaces/SeasonData.html",[831,0.016,1260,2.594]],["body/interfaces/SeasonData.html",[3,0.067,4,0.067,9,0.061,11,0.813,20,0.241,28,0.007,30,0.205,31,0.274,32,0.137,33,0.202,127,0.595,146,1.198,164,0.004,165,0.004,189,1.27,200,1.342,204,0.873,207,0.736,219,0.241,222,0.565,371,1.068,438,0.594,471,2.814,472,2.678,492,1.024,494,0.889,525,1.224,526,1.649,535,0.937,537,1.088,538,1.006,571,1.294,578,1.057,579,0.904,611,2.066,831,0.03,833,0.717,836,2.318,848,2.582,862,1.572,864,1.572,866,1.572,871,1.572,873,1.572,876,1.572,891,1.319,896,1.918,1016,1.572,1105,3.483,1113,3.563,1246,2.124,1247,2.068,1248,2.554,1249,4.533,1250,1.319,1251,2.615,1252,2.554,1253,1.873,1254,2.247,1255,2.388,1256,2.388,1257,1.319,1258,3.186,1259,2.978,1260,3.843,1261,3.086,1262,3.086,1263,3.086,1264,1.918,1265,2.121,1266,2.554,1267,1.965,1268,2.388,1269,2.554,1270,1.829,1271,2.247,1272,2.247,1273,2.247,1274,1.748,1275,2.388,1276,2.554,1277,3.446,1278,2.016,1279,2.016,1280,2.468,1281,4.975,1282,2.554,1283,2.554,1284,2.554,1285,2.468,1286,2.554,1287,2.554,1288,2.554,1289,1.71,1290,2.124,1291,1.54,1292,1.54,1293,1.748,1294,2.554,1295,1.748,1296,2.554,1297,3.567,1298,2.124,1299,2.124,1300,2.124,1301,2.124,1302,2.124,1303,2.554,1304,2.554,1305,2.554,1306,2.124,1307,2.554,1308,2.554,1309,2.554,1310,2.068,1311,2.554,1312,3.616,1313,3.418]],["title/components/SeasonModalComponent.html",[0,1.406,145,2.189]],["body/components/SeasonModalComponent.html",[0,1.435,1,1.123,2,2.036,3,0.036,4,0.036,5,1.297,6,1.297,7,1.297,8,1.297,9,0.033,11,0.715,12,2.491,13,1.153,14,3.881,15,3.424,16,1.773,18,1.773,20,0.131,21,0.81,22,2.864,23,0.782,24,1.617,27,1.356,28,0.007,29,2.344,30,0.162,31,0.149,32,0.036,33,0.11,35,4.525,46,2.937,47,4.305,48,1.496,49,1.561,50,1.496,51,2.822,52,1.387,53,1.34,54,1.387,55,1.439,56,2.126,57,1.34,58,3.145,59,3.511,70,3.455,71,2.423,72,1.496,73,3.145,74,2.735,75,1.439,77,1.041,78,1.387,80,2.246,81,2.246,82,2.561,83,3.145,84,2.735,85,3.145,86,3.145,87,1.297,88,3.699,89,1.34,92,1.34,96,3.894,99,2.735,101,3.894,102,1.561,103,3.255,107,1.34,109,3.455,110,2.246,111,1.439,112,1.257,113,1.496,114,1.561,116,1.824,121,0.993,122,2.101,123,2.101,124,1.153,125,3.344,126,1.297,127,0.61,128,1.297,129,1.153,130,1.297,131,1.257,132,1.186,133,1.297,134,1.067,135,1.297,136,1.123,137,1.297,138,1.123,139,0.836,140,2.101,141,1.123,142,1.297,143,1.123,144,1.297,145,2.569,146,1.693,147,2.101,148,1.094,149,1.297,150,1.094,151,2.101,152,1.094,153,1.968,154,1.153,155,1.094,156,1.297,157,1.094,158,1.186,159,1.257,160,1.257,161,1.123,162,1.257,163,1.297,164,0.003,165,0.003,187,1.22,189,0.69,200,0.678,207,0.463,208,1.982,218,1.194,219,0.43,220,0.897,230,1.534,251,3.255,252,3.255,254,2.528,265,2.831,269,2.831,273,2.246,282,2.648,291,1.954,293,1.635,294,2.246,371,0.849,372,1.779,386,3.446,461,0.824,473,3.044,474,1.712,475,2.045,490,0.474,848,2.045,968,2.735,969,4.031,972,1.387,974,1.496,978,5.755,990,1.824,991,1.954,992,2.648,997,1.472,998,1.504,1001,1.954,1047,2.423,1074,2.648,1082,2.648,1086,2.423,1149,2.648,1150,2.648,1155,1.257,1179,6.346,1261,2.444,1262,2.444,1263,2.444,1265,1.68,1801,4.039,1804,2.787,1805,1.824,1806,3.513,1811,1.824,1817,1.721,1819,1.721,1821,5.208,1827,1.721,1831,1.824,1832,4.75,1838,1.561,1876,4.75,1882,1.721,1883,1.561,1884,3.255,1885,1.721,1886,2.787,1887,2.787,1933,2.787,2056,1.721,2097,1.824,2220,1.635,2221,3.165,2222,1.635,2224,1.824,2275,1.954,2341,1.954,2356,1.954,2357,4.344,2358,3.447,2359,4.705,2360,4.282,2361,3.447,2362,2.392,2363,3.874,2364,3.874,2365,2.128,2366,3.447,2367,2.392,2368,2.392,2369,2.392,2370,2.128,2371,2.392,2372,2.128,2373,2.392,2374,2.128,2375,2.392,2376,2.392,2377,2.392,2378,2.392,2379,2.392,2380,2.392,2381,2.392,2382,2.392,2383,2.392,2384,2.392,2385,2.128,2386,2.392,2387,2.392,2388,2.392,2389,2.392,2390,2.128,2391,2.128,2392,2.392,2393,2.392,2394,2.392,2395,2.392,2396,2.392,2397,3.447,2398,2.392,2399,2.392,2400,2.392,2401,2.392,2402,2.392,2403,2.392,2404,2.392,2405,1.824,2406,1.824,2407,1.824,2408,2.128,2409,2.128,2410,2.392,2411,2.392,2412,2.392,2413,2.128,2414,2.392,2415,3.447,2416,2.128,2417,1.954,2418,2.128,2419,2.128,2420,2.128,2421,2.128,2422,2.128,2423,2.955,2424,2.392,2425,2.128,2426,2.128,2427,2.392,2428,2.392,2429,2.128,2430,3.874,2431,3.874,2432,3.874,2433,3.874,2434,3.874,2435,3.874,2436,3.874,2437,3.874,2438,3.874,2439,3.874,2440,3.874,2441,3.874,2442,3.874,2443,3.874,2444,2.128]],["title/interfaces/SeasonRaw.html",[831,0.016,1258,1.987]],["body/interfaces/SeasonRaw.html",[3,0.085,4,0.085,9,0.076,20,0.304,23,1.12,28,0.007,30,0.214,31,0.345,32,0.122,33,0.255,66,2.541,127,0.654,146,1.081,164,0.005,165,0.005,207,0.86,219,0.499,222,0.701,230,1.67,343,2.11,351,2.023,371,0.973,438,0.694,461,1.529,490,1.1,530,1.981,535,1.114,537,1.267,568,1.865,578,0.954,579,1.14,659,2.541,660,2.156,831,0.025,833,0.903,836,1.361,848,3.071,899,2.156,1130,2.753,1250,1.662,1258,2.985,1261,3.67,1262,3.67,1263,3.67,1264,3.47,1265,2.523,1291,1.941,1292,1.941,1338,2.541,1751,3.473,1752,3.473,1753,4.496,1754,3.111,1902,3.995,1903,3.623,1904,4.235,1907,4.537,1908,3.795,1909,3.795,1910,3.623,1911,3.795,1912,3.795,1913,4.537,1914,3.795,1915,3.795,1916,4.537,1917,4.537,1918,4.537,1919,3.795,1920,4.537]],["title/interfaces/SeasonRaw-1.html",[286,1.372,831,0.014,1258,1.663]],["body/interfaces/SeasonRaw-1.html",[3,0.078,4,0.078,9,0.07,11,0.944,20,0.28,28,0.007,30,0.2,31,0.318,32,0.104,33,0.235,127,0.66,146,0.995,164,0.005,165,0.005,204,1.013,207,0.814,219,0.489,220,1.087,222,0.693,371,1.106,375,3.335,438,0.657,474,1.559,492,1.188,494,1.031,525,1.421,526,1.825,535,1.079,537,1.178,538,1.167,571,1.502,578,1.17,579,1.05,831,0.017,833,0.831,848,3.184,862,1.824,864,1.824,866,1.824,871,1.824,873,1.824,876,1.824,886,3.335,903,4.439,1016,1.824,1105,3.548,1113,3.631,1246,2.465,1250,1.53,1258,2.827,1261,3.701,1262,3.701,1263,3.701,1264,3.333,1265,2.443,1270,2.827,1271,3.473,1272,3.473,1273,3.473,1274,2.702,1275,2.772,1278,2.339,1279,2.339,1289,1.985,1291,1.787,1292,1.787,1293,2.029,1295,2.029,1312,4.164,1327,3.197,1603,2.964,2445,3.678,2446,3.899,2447,6.057,2448,4.548,2449,4.548,2450,4.548,2451,4.548,2452,4.548,2453,4.548,2454,4.548,2455,4.548,2456,3.899,2457,3.197]],["title/interfaces/SeasonRaw-2.html",[287,1.88,831,0.014,1258,1.663]],["body/interfaces/SeasonRaw-2.html",[3,0.083,4,0.083,9,0.075,11,1.008,20,0.299,28,0.007,30,0.212,31,0.339,32,0.083,33,0.251,127,0.614,146,1.384,164,0.005,165,0.005,189,1.574,204,1.082,207,0.85,219,0.497,222,0.684,371,1.087,372,2.05,438,0.686,492,1.268,494,1.101,525,1.517,526,1.905,535,1.045,537,1.129,571,1.604,578,1.221,579,1.121,660,2.119,671,3.283,672,3.73,710,4.122,831,0.019,833,0.888,836,1.338,848,3.163,862,1.948,864,1.948,866,1.948,871,1.948,873,1.948,876,1.948,886,3.562,898,3.414,903,4.584,1016,1.948,1246,2.632,1250,1.634,1254,2.785,1258,3.283,1261,3.442,1262,3.442,1263,3.442,1264,3.095,1265,2.366,1270,2.267,1271,2.785,1272,2.785,1273,2.785,1274,2.166,1289,2.119,1291,1.908,1292,1.908,1293,2.166,1295,2.166,1312,4.272,1599,3.414,1600,4.164,1601,4.164,1602,4.164,1603,3.165,2456,4.164,2457,3.414,2458,4.164,2459,4.858,2460,4.638]],["title/interfaces/SeasonRaw-3.html",[290,2.881,831,0.014,1258,1.663]],["body/interfaces/SeasonRaw-3.html",[3,0.067,4,0.067,9,0.06,11,0.805,20,0.239,28,0.007,30,0.204,31,0.271,32,0.137,33,0.2,127,0.593,146,1.19,164,0.004,165,0.004,189,1.258,200,1.336,204,0.865,207,0.731,219,0.335,222,0.562,371,1.066,438,0.59,471,2.796,472,2.66,492,1.014,494,0.88,525,1.213,526,1.638,535,0.932,537,1.084,538,0.996,571,1.282,578,1.05,579,0.896,611,2.052,831,0.03,833,0.71,836,2.333,848,2.568,862,1.557,864,1.557,866,1.557,871,1.557,873,1.557,876,1.557,891,1.306,896,1.9,1016,1.557,1105,3.473,1113,3.554,1246,2.104,1247,2.049,1248,2.537,1249,4.142,1250,1.306,1251,2.597,1252,2.53,1253,1.855,1254,2.226,1255,2.366,1256,2.366,1257,1.306,1258,3.34,1259,3.445,1260,3.313,1261,3.07,1262,3.07,1263,3.07,1264,1.9,1265,2.11,1266,2.53,1267,1.947,1268,2.366,1269,2.53,1270,1.812,1271,2.226,1272,2.226,1273,2.226,1274,1.732,1275,2.366,1276,2.53,1277,3.423,1278,1.996,1279,1.996,1280,2.444,1281,4.962,1282,2.53,1283,2.53,1284,2.53,1285,2.444,1286,2.53,1287,2.53,1288,2.53,1289,1.694,1290,2.104,1291,1.525,1292,1.525,1293,1.732,1294,2.53,1295,1.732,1296,2.53,1297,3.543,1298,2.104,1299,2.104,1300,2.104,1301,2.104,1302,2.104,1303,2.53,1304,2.53,1305,2.53,1306,2.104,1307,2.53,1308,2.53,1309,2.53,1310,2.049,1311,2.53,1312,3.597,1313,3.4]],["title/components/SeasonViewComponent.html",[0,1.406,150,2.189]],["body/components/SeasonViewComponent.html",[0,1.716,1,1.479,2,2.529,3,0.048,4,0.048,5,1.708,6,1.708,7,1.708,8,1.708,9,0.043,13,1.519,14,4.068,15,3.598,16,2.202,18,2.202,20,0.173,21,1.006,23,0.971,24,1.207,27,0.647,28,0.007,29,1.197,30,0.143,31,0.196,32,0.048,33,0.145,35,4.129,46,2.895,47,4.327,48,1.97,49,2.056,50,1.97,51,3.397,52,1.827,53,1.765,54,3.791,55,1.895,56,1.372,57,1.765,58,4.462,59,4.644,61,3.932,62,4.79,63,1.97,64,2.791,65,4.405,66,3.222,67,2.895,69,3.671,70,3.662,71,3.01,72,1.97,73,3.662,74,3.272,75,1.895,77,1.372,78,1.827,80,1.827,81,1.827,82,3.083,83,3.662,84,3.945,85,3.272,86,3.272,87,2.609,88,4.666,89,3.272,90,2.267,91,2.267,92,3.945,96,4.462,98,2.056,99,3.272,100,3.463,101,4.462,102,3.14,103,4.305,104,1.97,105,2.153,107,2.696,109,3.662,110,3.386,111,3.512,112,1.656,113,1.97,114,2.056,120,2.267,121,1.308,122,2.609,123,2.609,124,1.519,125,3.545,126,1.708,127,0.507,128,1.708,129,1.519,130,1.708,131,1.656,132,1.562,133,1.708,134,1.406,135,1.708,136,1.479,137,1.708,138,1.479,139,1.101,140,2.609,141,1.479,142,1.708,143,1.479,144,1.708,145,1.441,146,1.775,147,2.609,148,1.441,149,1.708,150,2.991,151,2.609,152,1.441,153,1.653,154,1.519,155,1.441,156,1.708,157,1.441,158,1.562,159,1.656,160,1.656,161,1.479,162,1.656,163,1.708,164,0.003,165,0.003,189,0.908,207,0.576,218,0.67,219,0.32,220,0.503,230,1.118,251,2.791,252,2.791,254,3.81,257,2.267,258,2.267,265,1.827,269,2.791,273,1.827,277,2.267,286,1.079,293,3.289,294,2.791,474,0.961,475,1.148,654,1.656,746,1.97,762,2.267,968,3.662,969,4.479,974,1.97,978,4.595,979,5.067,997,1.829,998,1.869,1086,3.01,1265,0.943,1838,2.056,1883,2.056,1884,2.791,1933,3.463,2220,2.153,2222,2.153,2359,5.372,2360,4.987,2405,2.403,2406,2.403,2407,2.403,2423,2.403,2461,2.574,2462,4.282,2463,5.196,2464,4.282,2465,2.803,2466,4.282,2467,2.803,2468,2.803,2469,4.813,2470,7.424,2471,4.813,2472,6.537,2473,6.537,2474,6.537,2475,2.574,2476,6.266,2477,2.803,2478,2.803,2479,5.196,2480,2.803,2481,2.803,2482,2.803]],["title/injectables/SeasonsLocalStorageMapping.html",[438,0.462,2458,3.65]],["body/injectables/SeasonsLocalStorageMapping.html",[3,0.072,4,0.072,9,0.065,11,0.869,20,0.258,21,1.346,24,1.613,27,1.794,28,0.007,29,2.447,30,0.202,31,0.292,32,0.072,33,0.216,127,0.678,146,1.732,164,0.005,165,0.005,189,1.358,204,0.933,218,1.858,219,0.478,220,1.395,222,0.347,371,1.042,372,1.857,438,0.621,439,1.581,492,1.094,494,0.95,525,2.473,526,1.726,537,1.15,538,1.47,542,1.436,571,1.383,578,1.261,579,0.967,660,1.828,671,5.35,672,3.217,710,3.734,831,0.016,836,2.211,848,2.346,854,3.734,855,3.734,856,3.734,857,3.734,858,3.734,859,3.734,860,3.734,862,2.298,864,2.298,866,2.298,868,2.637,871,2.298,873,2.298,876,2.298,886,3.072,898,2.945,899,2.501,903,4.256,1016,1.68,1246,4.29,1250,1.409,1254,2.402,1258,3.857,1270,1.955,1271,2.402,1272,2.402,1273,2.402,1274,1.869,1289,1.828,1291,1.646,1292,1.646,1293,1.869,1295,1.869,1312,4.026,1599,2.945,1600,3.591,1601,3.591,1602,3.591,1603,2.73,2456,3.591,2457,2.945,2458,4.913,2459,4.401,2460,4.202,2483,4.708,2484,4.708,2485,4.708,2486,4.189,2487,4.708,2488,4.708,2489,4.708]],["title/injectables/SeasonsMappingFirebaseService.html",[438,0.462,2490,3.909]],["body/injectables/SeasonsMappingFirebaseService.html",[3,0.061,4,0.061,9,0.055,11,0.736,20,0.218,21,1.197,23,0.804,24,1.603,27,1.711,28,0.007,30,0.209,31,0.248,32,0.061,33,0.183,127,0.684,146,1.756,164,0.004,165,0.004,200,0.697,204,0.79,207,0.685,218,1.814,219,0.426,220,1.362,222,0.293,230,1.559,274,1.482,338,2.161,371,1.017,386,2.84,438,0.553,439,1.339,442,2.094,471,3.069,472,1.735,487,1.193,492,0.926,494,0.804,513,2.6,515,4.196,523,2.493,525,2.451,526,1.536,528,3.322,535,0.757,537,1.171,538,1.774,542,1.747,550,3.546,551,2.397,552,2.397,553,2.493,555,2.723,567,2.397,571,1.171,575,1.976,578,1.152,579,0.818,584,2.493,606,3.915,836,2.161,848,2.087,854,3.322,855,3.322,856,3.322,857,3.322,858,3.322,859,3.322,860,3.322,862,2.044,864,2.044,866,2.044,868,3.21,869,4.196,871,2.044,873,2.044,876,2.044,878,4.826,880,3.04,881,3.04,882,3.04,883,3.256,886,4.786,887,5.481,890,4.681,891,1.193,894,3.256,896,1.735,897,3.256,898,4.588,899,1.547,900,3.256,901,3.04,902,3.04,903,3.89,1246,4.252,1250,1.193,1261,2.495,1262,2.495,1263,2.495,1265,1.715,1325,4.588,1596,6.725,2490,4.681,2491,5.097,2492,3.985,2493,3.985,2494,3.546,2495,3.985,2496,3.985,2497,3.546,2498,3.546,2499,3.256,2500,3.985,2501,6.526,2502,7.335,2503,7.335,2504,7.335,2505,3.985,2506,3.985,2507,3.985,2508,3.985,2509,3.985,2510,3.985,2511,3.985]],["title/injectables/SeasonsMappingJsonServer.html",[438,0.462,2446,3.65]],["body/injectables/SeasonsMappingJsonServer.html",[3,0.068,4,0.068,9,0.061,11,0.821,20,0.244,21,1.294,24,1.588,27,1.766,28,0.007,30,0.188,31,0.276,32,0.094,33,0.204,127,0.692,146,1.735,164,0.004,165,0.004,204,0.881,218,1.83,219,0.471,220,1.374,222,0.567,371,1.071,375,5.725,438,0.598,439,1.494,474,1.357,492,1.033,494,0.897,525,2.439,526,1.66,535,0.588,537,1.182,538,1.626,542,1.357,571,1.307,578,1.224,579,0.913,831,0.015,836,2.15,848,2.595,854,3.591,855,3.591,856,3.591,857,3.591,858,3.591,859,3.591,860,3.591,862,2.209,864,2.209,866,2.209,868,2.492,871,2.209,873,2.209,876,2.209,886,2.902,899,2.404,903,4.131,1016,1.587,1105,3.404,1113,3.482,1246,4.231,1250,1.331,1258,3.849,1261,2.696,1262,2.696,1263,2.696,1264,1.936,1265,1.331,1270,2.572,1271,3.159,1272,3.159,1273,3.159,1274,2.458,1275,2.412,1278,2.035,1279,2.035,1289,1.727,1291,1.555,1292,1.555,1293,1.765,1295,1.765,1312,3.93,1327,2.782,1603,2.579,2445,3.2,2446,4.723,2447,5.509,2448,3.957,2449,3.957,2450,3.957,2451,3.957,2452,3.957,2453,3.957,2454,3.957,2455,3.957,2456,3.393,2457,2.782,2512,4.448,2513,4.448,2514,4.448,2515,4.448,2516,4.448,2517,3.957,2518,4.448]],["title/injectables/SeasonsMappingStrapi.html",[438,0.462,1268,2.594]],["body/injectables/SeasonsMappingStrapi.html",[3,0.057,4,0.057,9,0.051,11,0.686,20,0.204,21,1.139,24,1.506,27,1.676,28,0.007,30,0.193,31,0.231,32,0.132,33,0.171,127,0.683,146,1.629,164,0.004,165,0.004,189,1.072,200,1.242,204,0.737,218,1.736,219,0.447,220,1.303,222,0.523,371,1.021,438,0.526,439,1.249,471,3.249,472,2.372,492,0.864,494,0.75,525,2.326,526,1.46,535,0.852,537,1.186,538,1.472,542,1.134,571,1.092,578,1.108,579,0.763,611,1.83,831,0.029,836,2.34,848,2.349,854,3.159,855,3.159,856,3.159,857,3.159,858,3.159,859,3.159,860,3.159,862,1.944,864,1.944,866,1.944,868,2.083,871,1.944,873,1.944,876,1.944,891,1.113,896,1.619,899,2.115,1016,1.327,1105,3.312,1113,3.389,1246,4.036,1247,1.746,1248,2.263,1249,3.85,1250,1.113,1251,2.316,1252,2.156,1253,1.581,1254,1.897,1255,2.016,1256,2.016,1257,1.113,1258,3.696,1259,2.757,1260,3.85,1261,2.808,1262,2.808,1263,2.808,1264,1.619,1265,1.93,1266,2.156,1267,1.659,1268,2.954,1269,2.156,1270,1.544,1271,1.897,1272,1.897,1273,1.897,1274,1.476,1275,2.016,1276,2.156,1277,3.052,1278,1.701,1279,1.701,1280,2.083,1281,4.732,1282,2.156,1283,2.156,1284,2.156,1285,2.083,1286,2.156,1287,2.156,1288,2.156,1289,1.444,1290,1.793,1291,1.3,1292,1.3,1293,1.476,1294,2.156,1295,1.476,1296,2.156,1297,3.159,1298,1.793,1299,1.793,1300,1.793,1301,1.793,1302,1.793,1303,2.156,1304,2.156,1305,2.156,1306,1.793,1307,2.156,1308,2.156,1309,2.156,1310,1.746,1311,2.156,1312,3.29,1313,3.11,2519,3.718,2520,3.718,2521,3.718,2522,3.718,2523,3.718,2524,3.718,2525,3.718]],["title/modules/SeasonsPageModule.html",[166,1.743,2526,3.65]],["body/modules/SeasonsPageModule.html",[3,0.098,4,0.098,9,0.088,28,0.007,30,0.227,31,0.398,32,0.098,33,0.294,121,2.659,148,4.244,164,0.006,165,0.006,166,2.332,168,2.722,169,3.365,170,4.936,171,3.713,172,3.472,173,2.857,178,4.56,179,3.713,180,3.713,182,3.509,183,3.598,184,4.919,185,3.851,188,4.56,189,1.847,190,4.005,192,4.005,193,2.857,194,2.93,385,3.713,1653,4.884,2526,7.237,2527,5.697,2528,5.697,2529,5.697,2530,6.673,2531,6.403,2532,5.697]],["title/modules/SeasonsPageRoutingModule.html",[166,1.743,2530,3.442]],["body/modules/SeasonsPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,148,3.788,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.98,199,3.456,200,1.22,201,3.111,202,4.361,2530,5.956,2532,6.203,2533,6.972]],["title/injectables/SeasonsService.html",[327,2.68,438,0.462]],["body/injectables/SeasonsService.html",[3,0.079,4,0.079,9,0.071,11,0.951,20,0.282,21,1.43,23,1.381,24,1.65,27,1.799,28,0.007,30,0.219,31,0.32,32,0.079,33,0.237,127,0.68,146,1.003,164,0.005,165,0.005,204,1.021,218,1.864,219,0.48,220,1.399,222,0.677,274,1.917,286,1.766,327,3.834,371,0.629,438,0.66,439,1.731,461,1.931,472,2.243,487,1.542,490,1.021,494,1.039,512,3.214,516,3.597,517,3.214,518,3.81,519,3.597,522,3.492,529,2.299,530,2.922,532,3.429,533,2.358,535,1.016,543,2.629,548,2.299,568,1.731,572,2.19,611,2.299,647,1.731,715,5.925,717,3.707,729,3.099,732,2.358,845,2.127,939,4.942,940,3.93,941,4.21,942,3.93,943,3.93,944,3.93,945,3.93,951,3.93,1250,1.542,1719,6.246,1721,5.221,1723,6.089,1724,6.089,2534,4.584,2535,5.153,2536,5.153,2537,5.153,2538,3.93,2539,5.153,2540,5.153,2541,5.153,2542,5.153,2543,5.153,2544,5.153,2545,5.153,2546,5.153]],["title/interfaces/Serie.html",[153,1.355,831,0.016]],["body/interfaces/Serie.html",[3,0.095,4,0.095,9,0.086,20,0.342,28,0.007,30,0.19,32,0.095,127,0.654,139,3.078,146,1.714,153,2.194,164,0.005,165,0.005,207,0.927,219,0.517,220,1.406,222,0.648,385,5.105,537,1.186,576,3.27,831,0.021,833,1.017,845,2.409,850,4.77,891,2.709,1265,2.521,1317,4.062,1318,4.062,1387,6.333,1599,3.912,1603,3.626,1608,4.77,1609,4.77,2499,5.11,2547,5.564,2548,5.11,2549,5.11,2550,5.11,2551,5.11,2552,5.11]],["title/interfaces/SerieAttributes.html",[831,0.016,1267,2.135]],["body/interfaces/SerieAttributes.html",[3,0.067,4,0.067,9,0.061,11,0.813,20,0.241,28,0.007,30,0.205,31,0.274,32,0.137,33,0.202,127,0.666,146,1.198,164,0.004,165,0.004,189,1.27,200,1.342,204,0.873,207,0.736,219,0.241,222,0.616,371,1.068,438,0.594,471,2.814,472,2.678,492,1.024,494,0.889,525,1.224,526,1.649,535,0.937,537,1.088,538,1.006,571,1.294,578,1.057,579,0.904,611,2.066,831,0.03,833,0.717,836,2.283,848,2.582,862,1.572,864,1.572,866,1.572,871,1.572,873,1.572,876,1.572,891,1.319,896,1.918,1016,1.572,1105,3.483,1113,3.563,1246,2.124,1247,2.068,1248,2.554,1249,4.159,1250,1.319,1251,2.615,1252,2.554,1253,1.873,1254,2.247,1255,2.388,1256,2.388,1257,1.319,1258,3.186,1259,2.978,1260,3.335,1261,3.086,1262,3.086,1263,3.086,1264,1.918,1265,2.121,1266,2.554,1267,2.744,1268,2.388,1269,2.554,1270,1.829,1271,2.247,1272,2.247,1273,2.247,1274,1.748,1275,2.388,1276,2.554,1277,3.446,1278,2.016,1279,2.016,1280,2.468,1281,4.975,1282,2.554,1283,2.554,1284,2.554,1285,2.468,1286,2.554,1287,2.554,1288,2.554,1289,1.71,1290,2.124,1291,1.54,1292,1.54,1293,1.748,1294,2.554,1295,1.748,1296,2.554,1297,3.567,1298,2.124,1299,2.124,1300,2.124,1301,2.124,1302,2.124,1303,2.554,1304,2.554,1305,2.554,1306,2.124,1307,2.554,1308,2.554,1309,2.554,1310,2.068,1311,2.554,1312,3.616,1313,3.418]],["title/interfaces/SerieAttributes-1.html",[286,1.372,831,0.014,1267,1.787]],["body/interfaces/SerieAttributes-1.html",[3,0.075,4,0.075,9,0.067,11,0.905,20,0.268,28,0.007,30,0.205,31,0.304,32,0.132,33,0.225,127,0.67,146,0.954,153,1.874,164,0.005,165,0.005,200,1.311,204,0.971,207,0.792,219,0.439,222,0.636,371,1.096,438,0.639,474,1.495,492,1.139,494,0.989,525,1.362,526,1.774,535,0.99,537,1.21,538,1.119,571,1.44,578,1.137,579,1.006,831,0.029,833,0.797,836,2.274,862,1.749,864,1.749,866,1.749,871,1.749,873,1.749,876,1.749,896,2.134,1016,1.749,1105,1.99,1113,2.036,1247,2.302,1248,2.749,1250,1.467,1257,2.402,1259,3.116,1265,2.585,1267,3.581,1270,2.749,1274,1.945,1278,2.243,1279,2.243,1289,1.903,1290,2.364,1291,1.714,1292,1.714,1293,1.945,1295,1.945,1298,2.364,1299,2.364,1300,2.364,1301,2.364,1302,2.364,1306,2.364,1313,3.614,1314,2.658,1315,2.302,1316,3.066,1317,4.042,1318,4.165,1319,3.066,1320,4.523,1321,3.838,1322,2.842,1323,3.35,1324,3.198,1325,3.066,1326,3.35,1327,3.066,1328,3.35,1329,3.35,1330,4.523,1331,3.35,1332,3.35,1333,4.346]],["title/interfaces/SerieData.html",[831,0.016,1316,2.993]],["body/interfaces/SerieData.html",[3,0.077,4,0.077,9,0.07,11,0.935,20,0.277,28,0.007,30,0.207,31,0.315,32,0.133,33,0.232,127,0.591,146,0.986,153,1.915,164,0.005,165,0.005,200,1.333,204,1.004,207,0.809,219,0.277,222,0.498,371,1.104,438,0.653,474,1.544,492,1.176,494,1.021,525,1.408,526,1.813,535,1.007,537,1.096,538,1.156,571,1.488,578,1.162,579,1.04,831,0.029,833,0.824,836,2.329,862,1.807,864,1.807,866,1.807,871,1.807,873,1.807,876,1.807,896,2.205,1016,1.807,1105,2.055,1113,2.103,1247,2.378,1248,2.809,1250,1.516,1257,2.434,1259,3.157,1265,2.28,1267,3.781,1270,2.809,1274,2.01,1278,2.317,1279,2.317,1289,1.966,1290,2.442,1291,1.77,1292,1.77,1293,2.01,1295,2.01,1298,2.442,1299,2.442,1300,2.442,1301,2.442,1302,2.442,1306,2.442,1313,3.674,1314,2.745,1315,2.378,1316,4.231,1317,3.263,1318,3.674,1319,3.167,1320,4.623,1321,3.923,1322,2.936,1323,3.46,1324,3.304,1325,3.167,1326,3.46,1327,3.167,1328,3.46,1329,3.46,1330,4.623,1331,3.46,1332,3.46,1333,4.418]],["title/components/SerieModalComponent.html",[0,1.406,152,2.189]],["body/components/SerieModalComponent.html",[0,1.352,1,1.03,2,1.898,3,0.033,4,0.033,5,1.19,6,1.19,7,1.19,8,1.19,9,0.03,11,0.667,12,2.347,13,1.058,14,3.815,15,3.363,16,1.652,18,1.652,20,0.12,21,0.755,22,2.72,23,0.728,24,1.549,27,1.376,28,0.007,29,2.026,30,0.171,31,0.136,32,0.033,33,0.101,35,4.386,46,2.768,47,4.184,48,1.373,49,1.432,50,1.373,51,2.697,52,1.272,53,1.229,54,1.272,55,1.32,56,2.003,57,1.229,58,2.987,59,3.335,70,3.302,71,2.259,72,1.373,73,2.987,74,2.578,75,1.32,77,0.955,78,1.272,80,2.094,81,2.094,82,2.448,83,2.987,84,2.578,85,2.987,86,2.987,87,1.19,88,3.552,89,1.229,92,1.229,96,3.754,99,2.987,101,4.184,102,1.432,103,3.092,107,1.229,109,3.552,110,2.094,111,1.32,112,1.153,113,1.373,114,1.432,116,1.674,121,0.911,122,1.958,123,1.958,124,1.058,125,3.196,126,1.19,127,0.594,128,1.19,129,1.058,130,1.19,131,1.153,132,1.088,133,1.19,134,0.979,135,1.19,136,1.03,137,1.19,138,1.03,139,1.864,140,1.958,141,1.03,142,1.19,143,1.03,144,1.19,145,1.004,146,0.703,147,1.958,148,1.004,149,1.19,150,1.004,151,1.958,152,2.44,153,2.44,154,1.058,155,1.004,156,1.19,157,1.004,158,1.088,159,1.153,160,1.153,161,1.03,162,1.153,163,1.19,164,0.003,165,0.003,187,1.12,189,0.633,193,0.979,194,1.004,200,1.269,207,0.432,214,4.821,218,1.134,219,0.397,220,0.852,222,0.339,230,1.627,232,1.952,251,3.092,252,3.092,254,2.356,265,2.668,269,2.668,273,2.094,282,2.468,293,2.468,294,2.094,371,0.774,372,1.538,474,1.403,475,1.676,490,0.435,520,3.322,646,1.572,654,1.153,754,5.112,757,4.744,760,1.952,762,2.598,780,1.952,891,0.657,968,2.987,969,3.886,970,1.32,972,1.272,977,4.031,981,5.3,997,2.026,998,2.462,1043,3.812,1047,2.259,1064,6.097,1082,1.5,1086,2.878,1130,1.088,1149,2.468,1150,2.468,1155,2.803,1265,1.596,1317,2.843,1318,2.572,1470,1.32,1557,1.579,1637,1.272,1695,1.579,1801,3.837,1804,2.598,1805,1.674,1806,3.837,1809,4.068,1811,2.755,1817,2.598,1819,4.561,1821,5.037,1827,1.579,1831,1.674,1832,3.837,1834,2.755,1836,2.755,1837,1.674,1838,1.432,1840,2.755,1851,1.952,1876,4.561,1882,2.598,1883,1.432,1884,2.668,1885,1.579,1886,2.598,1887,2.598,1933,2.598,2056,1.579,2079,4.744,2097,1.674,2133,1.952,2135,1.952,2136,1.952,2139,1.952,2148,1.952,2150,1.952,2152,3.213,2219,1.952,2220,1.5,2221,2.951,2222,1.5,2224,1.674,2275,1.793,2341,1.793,2356,1.793,2357,4.094,2358,3.213,2359,4.496,2360,4.068,2361,3.213,2365,1.952,2366,3.213,2370,1.952,2372,1.952,2374,1.952,2385,1.952,2390,1.952,2391,1.952,2397,4.094,2405,1.674,2406,1.674,2407,1.674,2408,1.952,2409,1.952,2413,1.952,2415,3.213,2416,1.952,2417,1.793,2418,1.952,2419,1.952,2420,3.213,2421,4.094,2422,1.952,2423,1.674,2425,1.952,2426,1.952,2429,1.952,2444,1.952,2475,1.793,2553,4.601,2554,3.611,2555,4.601,2556,4.601,2557,2.194,2558,3.611,2559,2.194,2560,2.194,2561,2.194,2562,2.194,2563,3.611,2564,2.194,2565,2.194,2566,2.194,2567,2.194,2568,2.194,2569,2.194,2570,2.194,2571,2.194,2572,2.194,2573,2.194,2574,2.194,2575,2.194,2576,2.194,2577,2.194,2578,2.194,2579,2.194,2580,2.194,2581,2.194,2582,2.194,2583,2.194,2584,2.194,2585,2.194,2586,3.611,2587,2.194,2588,2.194,2589,2.194,2590,2.194,2591,4.601,2592,2.194,2593,2.194,2594,2.194,2595,2.194,2596,2.194,2597,2.194,2598,2.194,2599,2.194,2600,2.194,2601,3.611,2602,2.194,2603,3.611,2604,3.611,2605,3.611,2606,3.611,2607,3.611,2608,3.611,2609,3.611,2610,3.611,2611,3.611,2612,3.611,2613,3.611,2614,2.194]],["title/interfaces/SerieRaw.html",[831,0.016,1257,1.432]],["body/interfaces/SerieRaw.html",[3,0.087,4,0.087,9,0.078,20,0.312,23,1.15,28,0.007,30,0.22,31,0.354,32,0.123,33,0.262,66,2.608,127,0.661,146,1.11,153,1.614,164,0.005,165,0.005,207,0.874,219,0.482,222,0.69,230,1.699,343,2.166,351,2.076,371,0.985,438,0.705,461,1.555,490,1.13,530,2.034,535,1.125,537,1.273,568,1.915,578,0.979,579,1.17,659,2.608,660,2.213,831,0.025,833,0.927,836,1.397,899,2.213,1130,2.826,1250,1.706,1257,2.188,1265,2.548,1291,1.993,1292,1.993,1315,2.677,1317,4.106,1318,4.106,1338,2.608,1751,3.565,1752,3.565,1753,4.573,1754,3.193,1903,3.719,1908,3.895,1909,3.895,1910,3.719,1911,3.895,1912,3.895,1914,3.895,1915,3.895,1919,3.895,1921,4.101,1922,4.348,1925,4.657,1926,4.657,1927,4.657,1928,4.657]],["title/interfaces/SerieRaw-1.html",[286,1.372,831,0.014,1257,1.199]],["body/interfaces/SerieRaw-1.html",[3,0.067,4,0.067,9,0.061,11,0.815,20,0.242,28,0.007,30,0.205,31,0.274,32,0.137,33,0.203,127,0.596,146,1.2,164,0.004,165,0.004,189,1.274,200,1.343,204,0.875,207,0.737,219,0.242,222,0.566,371,1.069,438,0.595,471,2.82,472,2.683,492,1.026,494,0.891,525,1.228,526,1.652,535,0.938,537,1.089,538,1.008,571,1.298,578,1.059,579,0.907,611,2.07,831,0.03,833,0.718,836,2.319,848,2.585,862,1.576,864,1.576,866,1.576,871,1.576,873,1.576,876,1.576,891,1.322,896,1.923,1016,1.576,1105,3.485,1113,3.566,1246,2.13,1247,2.074,1248,2.559,1249,4.164,1250,1.322,1251,2.62,1252,2.561,1253,1.878,1254,2.253,1255,2.395,1256,2.395,1257,1.845,1258,3.19,1259,2.982,1260,3.341,1261,3.09,1262,3.09,1263,3.09,1264,1.923,1265,2.124,1266,2.561,1267,1.971,1268,2.395,1269,2.561,1270,1.834,1271,2.253,1272,2.253,1273,2.253,1274,1.753,1275,2.395,1276,2.561,1277,3.452,1278,2.021,1279,2.021,1280,2.475,1281,4.979,1282,2.561,1283,2.561,1284,2.561,1285,2.475,1286,2.561,1287,2.561,1288,2.561,1289,1.715,1290,2.13,1291,1.544,1292,1.544,1293,1.753,1294,2.561,1295,1.753,1296,2.561,1297,3.573,1298,2.13,1299,2.13,1300,2.13,1301,2.13,1302,2.13,1303,2.561,1304,2.561,1305,2.561,1306,2.13,1307,2.561,1308,2.561,1309,2.561,1310,2.074,1311,2.561,1312,3.621,1313,3.423]],["title/interfaces/SerieRaw-2.html",[287,1.88,831,0.014,1257,1.199]],["body/interfaces/SerieRaw-2.html",[3,0.084,4,0.084,9,0.076,11,1.02,20,0.303,28,0.007,30,0.213,31,0.343,32,0.109,33,0.254,146,1.076,153,2.028,164,0.005,165,0.005,204,1.095,207,0.857,219,0.477,222,0.686,371,0.97,372,2.514,375,3.604,438,0.691,492,1.284,494,1.114,525,1.536,526,1.92,535,1.112,537,1.225,538,1.261,571,1.623,578,1.231,579,1.134,653,3.754,710,5.055,831,0.019,833,0.899,862,1.971,864,1.971,866,1.971,871,1.971,873,1.971,876,1.971,1016,1.971,1250,1.653,1257,2.144,1265,2.518,1274,2.193,1289,2.145,1291,1.931,1292,1.931,1293,2.193,1295,2.193,1314,2.995,1315,2.594,1317,4.057,1318,4.057,1321,3.203,1322,3.203,1333,3.203,2445,3.974,2457,3.455,2459,5.957,2460,5.688,2615,4.214,2616,4.915,2617,4.214,2618,4.915,2619,7.074]],["title/interfaces/SerieRaw-3.html",[290,2.881,831,0.014,1257,1.199]],["body/interfaces/SerieRaw-3.html",[3,0.082,4,0.082,9,0.074,11,0.994,20,0.295,28,0.007,30,0.217,31,0.335,32,0.082,33,0.247,127,0.61,139,3.023,146,1.049,153,1.995,164,0.005,165,0.005,189,1.553,204,1.067,207,0.843,219,0.502,222,0.653,371,1.083,372,2.032,438,0.68,492,1.251,494,1.086,525,1.497,526,1.889,535,1.038,537,1.123,571,1.582,578,1.21,579,1.106,660,2.091,671,3.239,672,3.68,710,4.086,831,0.018,833,0.876,836,1.32,862,1.922,864,1.922,866,1.922,871,1.922,873,1.922,876,1.922,898,3.368,903,4.554,1016,1.922,1250,1.612,1254,2.747,1257,2.351,1265,2.351,1270,2.237,1274,2.137,1289,2.091,1291,1.883,1292,1.883,1293,2.137,1295,2.137,1314,2.92,1315,2.529,1317,3.788,1318,3.788,1321,3.123,1322,3.123,1333,4.831,1387,5.757,1599,3.368,1603,3.123,1608,4.108,1609,4.108,2457,3.368,2459,4.816,2460,4.598,2548,4.4,2549,4.4,2550,4.4,2551,4.4,2552,4.4,2617,4.108,2620,4.108,2621,4.791,2622,4.791,2623,4.791,2624,4.791,2625,4.791]],["title/interfaces/SerieRaw-4.html",[831,0.014,1257,1.199,2626,4.005]],["body/interfaces/SerieRaw-4.html",[3,0.076,4,0.076,9,0.069,11,0.924,20,0.274,28,0.007,30,0.207,31,0.311,32,0.133,33,0.23,127,0.588,146,0.975,153,1.901,164,0.005,165,0.005,200,1.325,204,0.993,207,0.803,219,0.368,222,0.494,371,1.101,438,0.648,474,1.528,492,1.164,494,1.01,525,1.392,526,1.8,535,1.001,537,1.091,538,1.143,571,1.471,578,1.154,579,1.028,831,0.029,833,0.815,836,2.345,862,1.787,864,1.787,866,1.787,871,1.787,873,1.787,876,1.787,896,2.181,1016,1.787,1105,2.033,1113,2.08,1247,2.352,1248,2.789,1250,1.499,1257,2.527,1259,3.548,1265,2.268,1267,3.381,1270,2.789,1274,1.988,1278,2.292,1279,2.292,1289,1.945,1290,2.415,1291,1.751,1292,1.751,1293,1.988,1295,1.988,1298,2.415,1299,2.415,1300,2.415,1301,2.415,1302,2.415,1306,2.415,1313,3.654,1314,2.716,1315,2.352,1316,3.133,1317,3.239,1318,3.654,1319,3.133,1320,4.589,1321,3.894,1322,2.904,1323,3.423,1324,3.268,1325,3.133,1326,3.423,1327,3.133,1328,3.423,1329,3.423,1330,4.589,1331,3.423,1332,3.423,1333,4.393]],["title/interfaces/SerieRaw-5.html",[118,3.563,831,0.014,1257,1.199]],["body/interfaces/SerieRaw-5.html",[3,0.076,4,0.076,9,0.068,11,0.916,20,0.272,28,0.007,30,0.197,31,0.308,32,0.132,33,0.228,127,0.626,139,2.333,164,0.005,165,0.005,204,0.983,207,0.798,219,0.365,222,0.723,274,3.224,371,1.027,438,0.644,455,3.309,491,2.69,492,1.153,493,2.608,494,1.001,535,1.146,537,0.899,578,0.852,579,1.019,626,1.7,653,3.599,831,0.03,833,0.807,846,2.772,997,3.064,998,2.928,1257,1.998,1376,2.877,1377,2.46,1378,3.134,1379,2.877,1382,2.877,1384,2.877,1388,2.877,1390,2.877,1393,3.787,1394,3.134,1395,2.984,1396,2.984,1398,4.271,1407,3.89,1408,3.739,1501,2.978,1611,2.16,1627,3.134,2627,3.739,2628,4.174,2629,4.174,2630,3.739,2631,4.014,2632,4.225,2633,3.739,2634,2.877,2635,3.104,2636,3.104,2637,3.87,2638,2.877,2639,3.104,2640,3.104,2641,3.104,2642,3.104,2643,3.104,2644,3.104,2645,4.174,2646,4.174,2647,4.174,2648,4.174,2649,4.174,2650,3.104,2651,3.104,2652,3.104,2653,3.104,2654,3.104,2655,3.104]],["title/components/SerieSelectableComponent.html",[0,1.406,154,2.308]],["body/components/SerieSelectableComponent.html",[0,1.217,1,0.89,2,1.679,3,0.029,4,0.029,5,1.027,6,1.027,7,1.027,8,1.027,9,0.026,11,0.59,12,2.114,13,0.914,14,3.792,15,3.253,16,1.462,18,1.462,20,0.175,21,0.668,22,2.482,23,0.645,24,1.634,27,1.619,28,0.007,29,3.147,30,0.153,31,0.118,32,0.029,33,0.087,35,2.412,46,1.14,47,3.84,51,0.867,52,1.099,53,1.061,54,2.402,56,2.365,57,2.725,58,3.3,61,1.922,62,1.922,63,1.185,64,2.402,65,2.592,66,1.462,67,1.14,70,3.84,71,3.043,72,1.999,73,3.97,74,3.3,75,1.14,76,2.843,77,2.729,78,1.853,80,1.099,81,1.099,82,2.447,83,1.79,84,3.3,85,3.512,86,3.512,87,2.246,88,3.043,89,1.79,92,2.725,93,2.557,94,3.16,96,2.725,98,3.174,99,3.97,101,4.348,102,3.174,103,1.853,104,1.185,107,1.061,109,3.3,110,2.402,121,0.787,122,1.732,123,1.732,124,0.914,125,2.638,126,1.027,127,0.612,128,1.027,129,0.914,130,1.027,131,0.996,132,0.939,133,1.027,134,0.845,135,1.027,136,0.89,137,1.027,138,0.89,139,0.662,140,1.732,141,0.89,142,1.027,143,0.89,144,1.027,145,0.867,146,0.622,147,1.732,148,0.867,149,1.027,150,0.867,151,1.732,152,0.867,153,2.367,154,2.841,155,0.867,156,1.027,157,0.867,158,0.939,159,0.996,160,0.996,161,0.89,162,0.996,163,1.027,164,0.003,165,0.002,172,1.732,187,0.967,189,0.546,200,1.03,207,0.382,208,2.391,218,1.588,219,0.469,220,1.24,222,0.358,230,1.369,251,1.853,252,1.853,254,2.703,257,1.363,258,1.363,262,2.843,263,1.363,265,1.099,267,1.548,268,1.548,269,3.416,272,1.363,273,1.853,277,1.363,286,1.42,287,0.89,294,1.853,297,5.577,344,2.725,371,0.231,372,1.403,378,2.437,386,2.693,461,0.881,473,3.571,474,2.367,475,2.827,490,0.376,520,2.054,535,0.25,537,0.558,538,0.729,542,0.975,578,0.549,611,2.56,660,0.736,724,1.999,746,1.185,810,1.445,891,1.456,899,1.241,961,1.185,963,1.185,967,2.703,970,1.14,971,1.236,972,1.099,973,1.236,975,1.236,981,5.562,990,1.445,992,2.184,997,2.238,998,0.736,1004,1.363,1015,1.445,1016,0.676,1017,3.5,1018,3.174,1020,1.236,1025,2.085,1026,2.085,1027,2.085,1029,1.236,1030,1.236,1031,1.548,1034,2.085,1043,0.996,1059,1.363,1074,2.184,1075,3.385,1076,3.385,1077,2.611,1078,4.238,1101,1.548,1121,2.299,1122,1.363,1123,2.299,1124,1.548,1125,2.299,1127,1.548,1128,2.611,1134,1.548,1135,1.363,1136,1.548,1137,1.548,1138,1.548,1139,2.299,1140,1.548,1142,1.548,1144,1.548,1145,1.548,1168,1.363,1310,0.89,1348,1.999,1402,1.548,1403,1.686,1470,3.543,1519,3.975,1754,1.061,1874,1.295,1877,1.548,1880,1.548,1883,2.703,1884,1.853,1938,4.144,1941,1.686,1959,1.445,1960,3.686,1961,3.686,1963,2.843,1964,3.686,1965,2.843,1968,2.843,1969,3.686,1973,2.843,1974,2.843,1975,2.843,1976,2.843,1978,1.686,1983,1.686,1984,1.686,1990,2.843,1992,3.686,1993,2.843,1995,1.686,1997,2.843,1999,2.843,2001,1.686,2004,1.686,2005,3.385,2006,3.385,2007,2.611,2008,2.611,2017,1.686,2018,1.686,2041,3.385,2042,2.611,2043,1.548,2044,1.548,2045,1.548,2046,1.445,2048,1.445,2056,1.363,2114,1.686,2186,1.686,2216,1.686,2218,2.843,2220,2.184,2222,1.295,2223,1.686,2224,2.437,2656,7.265,2657,4.865,2658,3.195,2659,4.143,2660,3.195,2661,3.195,2662,3.195,2663,4.865,2664,3.195,2665,3.195,2666,3.195,2667,3.195,2668,1.895,2669,3.195,2670,1.895,2671,6.855,2672,1.895,2673,3.195,2674,1.895,2675,1.895,2676,1.895,2677,1.895,2678,1.895,2679,1.895,2680,1.895,2681,1.895,2682,1.895,2683,1.895,2684,1.895,2685,1.895,2686,1.895,2687,1.895,2688,1.895,2689,1.895,2690,3.195,2691,1.895,2692,1.895,2693,1.895,2694,1.895,2695,1.895,2696,1.895,2697,1.895,2698,3.195,2699,3.195,2700,1.895,2701,1.895,2702,1.895,2703,1.895,2704,1.895,2705,1.895,2706,1.895,2707,1.895,2708,1.895,2709,1.895,2710,1.895,2711,1.895,2712,1.895,2713,1.895,2714,1.895,2715,1.895,2716,1.895,2717,4.143,2718,1.895,2719,1.895,2720,1.895,2721,1.895,2722,1.895,2723,1.895,2724,1.895,2725,1.895,2726,3.195,2727,1.895,2728,1.895,2729,1.895,2730,1.895,2731,1.895,2732,1.895,2733,1.895,2734,3.195,2735,3.195,2736,3.195,2737,2.843,2738,3.195,2739,1.895,2740,4.143,2741,1.895,2742,1.686,2743,1.895,2744,1.895,2745,1.895,2746,1.895,2747,1.895,2748,1.895,2749,1.895,2750,3.195,2751,1.895,2752,3.195,2753,3.195]],["title/components/SerieViewComponent.html",[0,1.406,157,2.189]],["body/components/SerieViewComponent.html",[0,1.681,1,1.432,2,2.467,3,0.046,4,0.046,5,1.653,6,1.653,7,1.653,8,1.653,9,0.042,13,1.47,14,4.047,15,3.579,16,2.147,18,2.147,20,0.167,21,0.981,23,0.947,24,1.186,27,0.626,28,0.007,29,1.158,30,0.14,31,0.189,32,0.046,33,0.14,35,3.908,46,3.442,47,4.277,48,3.579,49,1.989,50,1.907,51,3.353,52,3.318,53,1.708,54,4.024,55,1.834,56,2.043,57,2.629,58,4.529,59,4.584,61,4.174,62,4.863,63,2.936,64,3.318,65,4.34,66,3.175,67,2.823,69,3.58,70,3.887,71,2.936,72,1.907,73,3.887,74,3.6,75,2.823,77,2.491,78,1.768,80,2.721,81,2.721,82,3.171,83,3.887,84,4.106,85,3.6,86,3.6,87,2.545,88,4.706,89,3.206,90,2.194,91,2.194,92,4.106,96,4.529,98,1.989,99,3.206,100,3.377,101,4.415,102,3.062,103,4.25,104,1.907,105,2.084,107,2.629,109,3.6,110,3.318,111,3.442,112,1.602,113,1.907,114,1.989,120,2.194,121,1.266,122,2.545,123,2.545,124,1.47,125,3.484,126,1.653,127,0.499,128,1.653,129,1.47,130,1.653,131,1.602,132,1.511,133,1.653,134,1.36,135,1.653,136,1.432,137,1.653,138,1.432,139,1.066,140,2.545,141,1.432,142,1.653,143,1.432,144,1.653,145,1.395,146,1.427,147,2.545,148,1.395,149,1.653,150,1.395,151,2.545,152,1.395,153,2.553,154,1.47,155,1.395,156,1.653,157,2.941,158,1.511,159,1.602,160,1.602,161,1.432,162,1.602,163,1.653,164,0.003,165,0.003,189,0.879,207,0.561,218,0.649,219,0.313,220,0.487,230,1.091,251,2.721,252,2.721,254,3.734,257,2.194,258,2.194,265,1.768,269,2.721,273,2.721,277,2.194,282,2.084,286,1.045,293,3.207,294,2.721,298,2.713,474,0.93,475,1.111,654,1.602,746,3.579,762,2.194,968,3.6,969,4.427,972,1.768,981,4.34,982,4.992,997,1.783,998,1.822,1086,2.936,1265,0.913,1310,1.432,1838,1.989,1874,2.084,1883,1.989,1884,2.721,1933,3.377,2040,2.713,2046,2.326,2047,2.713,2048,2.326,2049,2.491,2220,2.084,2222,2.084,2359,5.293,2360,4.902,2405,2.326,2406,2.326,2407,2.326,2423,2.326,2461,2.491,2462,4.176,2463,5.091,2464,4.176,2465,2.713,2466,4.176,2467,2.713,2468,2.713,2475,2.491,2476,6.174,2477,2.713,2478,2.713,2479,5.091,2480,2.713,2481,2.713,2482,2.713,2737,6.52,2742,2.713,2754,4.693,2755,4.693,2756,6.426,2757,6.426]],["title/injectables/SeriesLocalStorageMapping.html",[438,0.462,2620,3.65]],["body/injectables/SeriesLocalStorageMapping.html",[3,0.07,4,0.07,9,0.064,11,0.853,20,0.253,21,1.329,24,1.604,27,1.785,28,0.007,29,2.416,30,0.208,31,0.287,32,0.07,33,0.212,127,0.675,139,2.223,146,0.9,153,2.507,164,0.004,165,0.004,189,1.332,204,0.916,218,1.849,219,0.476,220,1.388,371,1.036,372,1.833,438,0.613,439,1.552,492,1.073,494,0.932,525,2.461,526,1.704,537,1.143,538,1.451,542,1.409,571,1.357,578,1.249,579,0.949,660,1.794,671,5.326,672,3.157,679,4.11,710,3.686,831,0.016,836,2.202,854,3.686,855,3.686,856,3.686,857,3.686,858,3.686,859,3.686,860,3.686,862,2.268,864,2.268,866,2.268,868,2.588,871,2.268,873,2.268,876,2.268,898,2.89,899,2.468,903,4.215,1016,1.648,1250,1.383,1254,2.357,1257,2.771,1270,1.919,1274,1.834,1289,1.794,1291,1.615,1292,1.615,1293,1.834,1295,1.834,1314,4.801,1315,2.169,1321,2.679,1322,2.679,1333,4.54,1599,2.89,1603,2.679,1608,3.524,1609,3.524,2457,2.89,2459,4.345,2460,4.148,2486,4.11,2548,3.775,2549,3.775,2550,3.775,2551,3.775,2552,3.775,2617,3.524,2620,4.849,2621,4.11,2622,4.11,2623,4.11,2624,4.11,2625,4.11,2758,4.62,2759,4.62,2760,4.62,2761,4.62,2762,4.62]],["title/injectables/SeriesMappingFirebaseService.html",[438,0.462,2763,3.909]],["body/injectables/SeriesMappingFirebaseService.html",[3,0.061,4,0.061,9,0.055,11,0.734,20,0.218,21,1.195,23,0.802,24,1.602,27,1.71,28,0.007,30,0.209,31,0.247,32,0.061,33,0.183,127,0.684,139,1.999,153,2.552,164,0.004,165,0.004,200,0.695,204,0.788,207,0.684,218,1.813,219,0.425,220,1.361,222,0.572,230,1.556,338,2.155,371,1.017,438,0.552,439,1.335,442,2.089,471,3.699,487,1.19,492,0.924,494,0.802,513,2.594,515,4.19,523,2.486,525,2.449,526,1.533,528,3.316,535,1.068,537,1.17,538,1.672,542,1.744,551,2.391,552,2.391,553,2.486,567,2.391,571,1.168,575,1.971,578,1.151,579,0.816,584,2.486,646,1.731,836,2.159,854,3.316,855,3.316,856,3.316,857,3.316,858,3.316,859,3.316,860,3.316,862,2.041,864,2.041,866,2.041,868,3.204,871,2.041,873,2.041,876,2.041,878,4.82,881,3.032,882,3.032,891,2.419,896,1.731,899,2.845,901,3.032,902,3.032,903,3.884,914,3.537,1265,1.712,1277,3.204,1280,2.227,1285,2.227,1314,4.778,1315,1.867,1317,2.758,1318,2.758,1324,4.78,1325,4.582,1606,6.502,1612,2.155,1613,2.028,1614,2.155,1615,2.155,2491,5.088,2494,3.537,2497,3.537,2498,3.537,2501,6.518,2763,4.673,2764,3.975,2765,3.975,2766,3.975,2767,3.975,2768,3.975,2769,7.326,2770,8.329,2771,3.975,2772,3.975,2773,3.975,2774,3.975,2775,3.975]],["title/injectables/SeriesMappingJsonServer.html",[438,0.462,2615,3.65]],["body/injectables/SeriesMappingJsonServer.html",[3,0.072,4,0.072,9,0.065,11,0.868,20,0.257,21,1.345,24,1.612,27,1.793,28,0.007,29,2.445,30,0.202,31,0.292,32,0.098,33,0.216,127,0.678,146,0.915,153,2.517,164,0.005,165,0.005,204,0.932,218,1.858,219,0.478,220,1.395,222,0.54,371,0.895,372,2.382,375,5.802,438,0.621,439,1.579,492,1.092,494,0.948,525,2.472,526,1.725,535,0.621,537,1.215,538,1.674,542,1.434,571,1.381,578,1.26,579,0.965,653,2.098,710,4.79,831,0.016,836,2.179,854,3.731,855,3.731,856,3.731,857,3.731,858,3.731,859,3.731,860,3.731,862,2.296,864,2.296,866,2.296,868,2.634,871,2.296,873,2.296,876,2.296,899,2.498,1016,1.677,1250,1.407,1257,2.473,1265,1.407,1274,1.866,1289,1.825,1291,1.644,1292,1.644,1293,1.866,1295,1.866,1314,4.821,1315,2.207,1317,2.267,1318,2.267,1321,2.726,1322,2.726,1333,2.726,2445,3.382,2457,2.94,2459,5.645,2460,5.39,2517,4.183,2615,4.908,2616,4.183,2617,3.586,2618,4.183,2619,6.526,2776,4.701,2777,4.701,2778,4.701,2779,4.701,2780,4.701,2781,4.701]],["title/injectables/SeriesMappingStrapi.html",[438,0.462,1319,2.993]],["body/injectables/SeriesMappingStrapi.html",[3,0.064,4,0.064,9,0.057,11,0.771,20,0.229,21,1.238,24,1.56,27,1.735,28,0.007,30,0.194,31,0.259,32,0.125,33,0.192,127,0.691,146,0.813,153,2.522,164,0.004,165,0.004,200,1.204,204,0.828,218,1.798,219,0.463,220,1.35,222,0.436,371,1.054,438,0.572,439,1.403,474,1.274,492,0.97,494,0.842,525,2.4,526,1.588,535,0.91,537,1.2,538,1.572,542,1.274,571,1.227,578,1.183,579,0.858,831,0.027,836,2.35,854,3.435,855,3.435,856,3.435,857,3.435,858,3.435,859,3.435,860,3.435,862,2.114,864,2.114,866,2.114,868,2.34,871,2.114,873,2.114,876,2.114,896,1.818,899,2.3,1016,1.49,1105,1.695,1113,1.734,1247,1.961,1248,2.46,1250,1.25,1257,2.723,1259,2.909,1265,2.061,1267,3.072,1270,2.46,1274,1.658,1278,1.911,1279,1.911,1289,1.622,1290,2.014,1291,1.46,1292,1.46,1293,1.658,1295,1.658,1298,2.014,1299,2.014,1300,2.014,1301,2.014,1302,2.014,1306,2.014,1313,3.32,1314,4.682,1315,1.961,1316,4.306,1317,2.857,1318,3.32,1319,3.706,1320,4.049,1321,3.435,1322,2.422,1323,2.854,1324,2.725,1325,2.612,1326,2.854,1327,2.612,1328,2.854,1329,2.854,1330,4.049,1331,2.854,1332,2.854,1333,3.992,2782,4.176,2783,4.176,2784,4.176,2785,4.176,2786,4.176,2787,4.176,2788,4.176]],["title/modules/SeriesPageModule.html",[166,1.743,2789,3.65]],["body/modules/SeriesPageModule.html",[3,0.098,4,0.098,9,0.088,28,0.007,30,0.227,31,0.398,32,0.098,33,0.294,121,2.659,155,4.244,164,0.006,165,0.006,166,2.332,168,2.722,169,3.365,170,4.936,171,3.713,172,3.472,173,2.857,178,4.56,179,3.713,180,3.713,182,3.509,183,3.598,184,4.919,185,3.851,188,4.56,189,1.847,190,4.005,192,4.005,193,2.857,194,2.93,386,3.174,1653,4.884,2789,7.237,2790,5.697,2791,5.697,2792,5.697,2793,6.673,2794,6.403,2795,5.697]],["title/modules/SeriesPageRoutingModule.html",[166,1.743,2793,3.442]],["body/modules/SeriesPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,155,3.788,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.98,199,3.456,200,1.22,201,3.111,202,4.361,2793,5.956,2795,6.203,2796,6.972]],["title/injectables/SeriesService.html",[344,2.68,438,0.462]],["body/injectables/SeriesService.html",[3,0.065,4,0.065,9,0.059,11,0.788,20,0.234,21,1.258,23,1.214,24,1.57,27,1.7,28,0.007,30,0.219,31,0.265,32,0.065,33,0.196,82,1.774,127,0.642,146,1.473,153,1.704,164,0.004,165,0.004,200,1.219,204,0.846,218,1.761,219,0.453,220,1.322,222,0.626,230,0.992,286,1.463,327,4.239,344,3.372,366,2.117,367,1.859,371,1.01,385,4.388,438,0.581,439,1.434,461,1.878,487,1.278,490,0.846,494,0.862,512,2.826,516,3.163,517,3.273,518,3.455,519,3.163,522,3.07,529,1.906,530,2.7,532,3.11,533,2.754,535,1.054,537,1.115,538,1.591,542,1.303,543,2.179,548,1.906,568,1.434,572,1.815,578,1.034,579,0.877,647,1.434,715,5.667,717,3.073,729,2.569,732,1.954,740,5.355,836,1.047,845,1.871,939,4.626,940,3.258,942,3.258,943,3.258,944,3.258,945,3.258,951,3.258,1084,5.014,1250,1.278,1315,2.005,1343,2.671,1433,4.33,1555,3.258,1728,5.772,1730,4.591,2538,3.258,2797,3.8,2798,6.019,2799,4.271,2800,4.271,2801,6.019,2802,4.271,2803,3.489,2804,4.271,2805,4.271,2806,4.271,2807,4.271,2808,4.271,2809,4.271,2810,6.019,2811,4.271,2812,6.019,2813,4.271,2814,4.271,2815,4.271,2816,6.019,2817,4.271,2818,6.97,2819,4.271,2820,4.271,2821,4.271,2822,4.271,2823,4.271,2824,4.271,2825,4.271,2826,4.271,2827,3.8,2828,4.271,2829,4.271,2830,4.271,2831,4.271,2832,4.271,2833,4.271,2834,4.271,2835,4.271,2836,4.271,2837,4.271,2838,4.271,2839,4.271]],["title/modules/SharedModule.html",[166,1.743,306,3.27]],["body/modules/SharedModule.html",[3,0.079,4,0.079,9,0.071,28,0.007,30,0.229,31,0.32,32,0.079,33,0.237,121,2.14,138,4.424,145,4.311,150,4.311,152,4.311,154,4.544,157,4.311,164,0.005,165,0.005,166,1.877,168,2.19,169,2.708,170,4.456,171,2.988,172,2.794,173,3.429,178,3.969,179,2.988,180,2.988,182,2.299,183,3.132,184,4.281,185,3.099,187,2.629,188,3.969,189,1.486,192,3.223,193,2.299,194,2.358,306,6.667,346,4.924,979,3.707,980,5.592,982,3.707,1064,3.707,1065,4.924,1179,3.707,1653,3.93,1958,3.93,2656,4.21,2840,4.584,2841,4.584,2842,4.584,2843,5.153,2844,7.685,2845,6.844,2846,5.153,2847,6.844]],["title/interfaces/SignInPayload.html",[831,0.016,1377,2.372]],["body/interfaces/SignInPayload.html",[3,0.101,4,0.101,9,0.091,20,0.362,28,0.007,32,0.132,127,0.623,139,2.312,164,0.006,165,0.006,207,0.959,219,0.439,222,0.728,274,2.984,535,0.874,831,0.03,833,1.076,997,3.048,1377,3.977,1378,3.106,1393,4.389,1394,4.318,1398,3.868,1407,3.868,1408,3.977,2848,5.045]],["title/interfaces/SignUpPayload.html",[831,0.016,1378,2.247]],["body/interfaces/SignUpPayload.html",[3,0.094,4,0.094,9,0.085,20,0.338,28,0.007,32,0.128,127,0.7,139,2.157,164,0.005,165,0.005,207,0.919,219,0.51,222,0.732,274,3.353,535,0.815,831,0.029,833,1.004,997,3.329,1377,3.059,1378,3.609,1393,4.316,1394,4.233,1398,4.347,1407,4.347,1408,4.469,2848,4.706]],["title/interfaces/Small.html",[831,0.016,1614,2.594]],["body/interfaces/Small.html",[3,0.065,4,0.065,9,0.059,20,0.234,23,0.86,28,0.007,30,0.202,31,0.265,32,0.136,33,0.196,51,3.972,56,3.78,77,3.78,127,0.674,164,0.004,165,0.004,200,1.052,201,3.794,207,0.719,208,1.731,219,0.495,222,0.726,230,1.757,337,2.312,343,1.621,351,1.554,371,0.85,372,1.23,461,0.907,487,1.277,490,0.845,503,2.981,505,2.242,508,2.312,535,0.564,537,1.292,568,1.433,626,1.461,640,2.618,642,2.003,646,3.78,647,1.433,732,1.951,769,2.057,771,2.057,772,2.057,831,0.03,833,0.694,845,1.326,846,1.771,891,1.277,1251,1.813,1253,1.813,1336,2.057,1342,2.176,1345,2.176,1346,3.359,1347,2.176,1501,1.903,1574,2.473,1610,3.902,1611,1.857,1612,3.776,1613,3.553,1614,4.101,1615,3.776,1616,2.473,1617,2.389,1618,3.26,1619,2.565,1620,2.565,1621,2.565,1622,2.565,1623,5.222,1624,5.222,1625,5.222,1626,2.565,1627,2.003,1628,5.222,1629,4.864,1630,2.565,1631,2.565,1632,2.389,1633,2.565,1634,2.565,1635,2.473,1636,2.565,1637,4.038,1638,2.565,1639,2.473,1640,2.565,1641,2.565,1642,2.565,1643,2.565]],["title/components/SplashPage.html",[0,1.406,158,2.372]],["body/components/SplashPage.html",[0,2.124,1,2.148,2,3.318,3,0.07,4,0.07,5,2.48,6,2.48,7,2.48,8,2.48,9,0.063,11,1.165,12,3.689,13,2.206,14,4.27,15,3.786,16,2.889,18,2.889,20,0.25,21,1.32,22,3.977,23,1.274,24,1.439,27,1.296,28,0.007,29,2.747,30,0.212,31,0.284,32,0.07,33,0.21,121,1.9,122,3.423,123,3.423,124,2.206,125,4.227,126,2.48,127,0.635,128,2.48,129,2.206,130,2.48,131,2.404,132,2.268,133,2.48,134,2.041,135,2.48,136,2.148,137,2.48,138,2.148,139,1.599,140,3.423,141,2.148,142,2.48,143,2.148,144,2.48,145,2.093,146,1.229,147,3.423,148,2.093,149,2.48,150,2.093,151,3.423,152,2.093,153,2.047,154,2.206,155,2.093,156,2.48,157,2.093,158,3.865,159,3.8,160,2.404,161,2.148,162,2.404,163,2.48,164,0.004,165,0.004,182,2.817,188,4.193,189,1.319,193,2.041,199,2.268,201,2.817,207,0.755,209,3.949,215,3.226,216,5.609,218,1.343,219,0.396,220,1.008,229,2.041,230,1.467,347,4.07,348,5.159,349,4.07,350,3.737,368,2.817,440,2.861,474,1.395,475,1.666,490,0.907,795,5.617,1470,2.751,1829,4.07,2303,4.07,2849,4.07,2850,4.574,2851,7.23,2852,7.23,2853,6.314,2854,7.23,2855,6.314,2856,4.574,2857,4.574,2858,4.574,2859,6.314,2860,8.459,2861,4.574,2862,7.23,2863,6.314,2864,6.314,2865,6.314,2866,6.314,2867,4.574,2868,4.574,2869,4.574,2870,4.574,2871,4.574,2872,4.574,2873,4.574]],["title/modules/SplashPageRoutingModule.html",[166,1.743,2874,3.909]],["body/modules/SplashPageRoutingModule.html",[0,2.048,3,0.106,4,0.106,9,0.096,28,0.007,30,0.216,31,0.433,32,0.106,33,0.32,158,4.104,164,0.006,165,0.006,168,2.964,173,3.111,182,3.111,183,3.788,196,4.193,197,4.788,198,4.98,199,3.456,200,1.22,201,3.111,202,4.361,2874,6.764,2875,6.972,2876,6.972]],["title/injectables/StrapiAuthMappingService.html",[438,0.462,2638,2.774]],["body/injectables/StrapiAuthMappingService.html",[3,0.068,4,0.068,9,0.061,11,0.822,20,0.244,21,1.295,24,1.496,27,1.664,28,0.007,30,0.189,31,0.277,32,0.128,33,0.204,127,0.692,139,2.167,164,0.004,165,0.004,204,0.883,218,1.723,219,0.444,220,1.294,222,0.712,274,3.316,371,0.989,438,0.598,439,1.496,450,4.044,452,3.877,455,3.073,491,2.415,492,1.035,493,2.341,494,0.898,535,0.942,537,0.835,578,0.765,579,0.914,626,2.874,653,1.987,831,0.029,846,2.574,997,2.929,998,2.768,1131,4.652,1257,1.333,1376,2.583,1377,4.017,1378,3.939,1379,3.594,1382,3.594,1384,3.594,1386,5.064,1388,3.594,1390,3.594,1393,3.619,1394,2.91,1395,2.679,1396,2.679,1398,4.15,1407,3.717,1408,3.534,1501,2.766,1611,3.652,1627,2.91,2627,4.318,2628,3.877,2629,3.877,2630,4.318,2631,3.728,2632,3.994,2633,4.318,2634,3.594,2635,2.786,2636,2.786,2637,4.134,2638,3.594,2639,2.786,2640,2.786,2641,2.786,2642,2.786,2643,2.786,2644,2.786,2645,3.877,2646,3.877,2647,3.877,2648,3.877,2649,3.877,2650,2.786,2651,2.786,2652,2.786,2653,2.786,2654,2.786,2655,2.786,2877,4.454,2878,4.454,2879,4.454,2880,4.454,2881,4.454]],["title/injectables/StrapiAuthenticationService.html",[438,0.462,2882,3.909]],["body/injectables/StrapiAuthenticationService.html",[3,0.053,4,0.053,9,0.047,11,0.636,20,0.189,21,1.076,23,1.038,24,1.676,27,1.635,28,0.007,30,0.205,31,0.214,32,0.053,33,0.158,127,0.568,164,0.004,165,0.004,200,0.602,204,0.682,207,0.616,208,3.118,215,4.021,218,1.455,219,0.48,220,1.092,222,0.673,229,1.536,230,1.85,274,2.293,329,2.627,330,2.627,331,2.627,343,1.308,351,2.667,371,1.021,372,1.778,438,0.497,439,1.157,441,2.627,442,4.398,443,4.206,444,4.206,445,4.206,446,4.206,447,4.702,449,4.278,450,3.359,451,5.217,452,3.22,453,4.206,455,3.391,457,5.036,459,3.518,461,1.884,462,3.926,464,2.627,469,4.206,470,5.588,471,2.82,472,1.499,473,3.342,474,2.428,475,2.9,476,4.206,478,3.064,479,2.814,481,2.814,483,2.814,484,4.58,485,2.814,487,1.031,490,0.682,491,1.867,492,0.8,493,1.81,494,0.695,502,2.814,520,3.056,568,1.157,611,2.459,626,1.18,627,3.24,640,2.241,642,1.617,647,1.157,658,3.064,732,1.576,741,2.154,769,1.661,771,1.661,772,2.482,829,3.064,845,1.6,939,5.079,1043,1.81,1155,1.81,1156,2.247,1346,2.482,1378,3.438,1393,1.617,1394,1.617,1398,1.661,1407,1.661,1412,5.588,1419,4.58,1424,3.064,1425,3.064,1426,3.064,1427,3.064,1428,3.064,1429,3.064,1430,3.064,1431,3.064,1432,3.064,1433,2.478,1434,2.627,1441,3.064,1442,3.064,1465,5.484,1466,4.58,1467,4.58,1468,4.58,1469,3.064,1470,2.071,1472,3.064,1488,3.064,1489,3.064,1496,3.064,1497,3.064,1498,3.064,1611,3.188,1616,1.997,1635,1.997,1639,2.985,2627,1.929,2630,1.929,2631,4.114,2632,2.884,2633,1.929,2882,4.206,2883,5.147,2884,3.444,2885,6.164,2886,5.484,2887,5.147,2888,3.444,2889,3.444,2890,3.444,2891,3.444,2892,3.444,2893,3.444,2894,3.444,2895,3.444,2896,3.064,2897,3.444,2898,3.444,2899,3.444,2900,3.444,2901,3.444,2902,3.444,2903,7.961,2904,3.444,2905,3.444,2906,3.444,2907,3.444,2908,3.444,2909,3.444,2910,3.444,2911,5.147,2912,5.147,2913,5.147,2914,3.444,2915,3.444,2916,3.444,2917,3.444,2918,3.444,2919,3.444,2920,3.444,2921,5.147,2922,3.444,2923,3.444,2924,3.444,2925,3.444,2926,3.444]],["title/interfaces/StrapiMeResponse.html",[831,0.016,2627,2.68]],["body/interfaces/StrapiMeResponse.html",[3,0.069,4,0.069,9,0.062,11,0.832,20,0.247,28,0.007,30,0.19,31,0.28,32,0.128,33,0.207,127,0.67,139,2.846,164,0.004,165,0.004,204,0.894,207,0.748,219,0.501,220,0.999,222,0.727,274,3.133,371,0.993,438,0.603,455,3.1,491,2.445,492,1.048,493,2.37,494,0.91,535,1.113,537,1.044,578,0.775,579,0.926,626,1.545,653,2.012,831,0.03,833,0.734,846,3.38,997,3.345,998,2.787,1257,1.35,1376,2.615,1377,2.236,1378,2.936,1379,2.615,1382,2.615,1384,2.615,1388,2.615,1390,2.615,1393,4.055,1394,2.936,1395,2.713,1396,2.713,1398,4.364,1407,4.165,1408,3.558,1501,3.632,1611,1.964,1627,3.822,2627,4.02,2628,5.091,2629,5.091,2630,3.503,2631,3.761,2632,4.02,2633,3.503,2634,2.615,2635,2.821,2636,2.821,2637,3.626,2638,2.615,2639,2.821,2640,2.821,2641,2.821,2642,2.821,2643,2.821,2644,2.821,2645,3.911,2646,3.911,2647,3.911,2648,3.911,2649,3.911,2650,2.821,2651,2.821,2652,2.821,2653,2.821,2654,2.821,2655,2.821]],["title/interfaces/StrapiMedia.html",[831,0.016,1251,2.034]],["body/interfaces/StrapiMedia.html",[3,0.07,4,0.07,9,0.063,20,0.252,23,0.927,28,0.007,30,0.207,31,0.285,32,0.138,33,0.211,51,3.749,56,3.567,77,3.567,127,0.636,164,0.004,165,0.004,200,1.108,201,3.485,207,0.757,208,1.865,219,0.397,222,0.722,230,1.815,337,2.491,343,1.745,351,1.673,371,0.885,372,1.325,461,0.977,487,1.375,490,0.91,503,3.139,505,2.414,508,2.491,535,1.032,537,1.286,568,1.543,626,1.574,640,2.757,642,2.157,646,3.567,647,1.543,732,2.102,769,2.215,771,2.215,772,2.215,831,0.03,833,0.747,845,1.428,846,1.908,891,1.375,1248,3.01,1251,2.692,1253,1.953,1336,2.215,1342,2.343,1345,2.343,1346,3.495,1347,2.343,1501,2.05,1574,2.664,1610,4.06,1611,2,1612,3.929,1613,3.697,1614,3.929,1615,3.929,1616,2.664,1617,2.573,1618,4.235,1619,2.763,1620,2.763,1621,2.763,1622,2.763,1623,4.928,1624,4.928,1625,4.928,1626,2.763,1627,2.157,1628,4.928,1629,4.745,1630,2.763,1631,2.763,1632,2.573,1633,2.763,1634,2.763,1635,2.664,1636,2.763,1637,4.202,1638,2.763,1639,2.664,1640,2.763,1641,2.763,1642,2.763,1643,2.763]],["title/interfaces/StrapiMediaData.html",[831,0.016,1618,2.594]],["body/interfaces/StrapiMediaData.html",[3,0.061,4,0.061,9,0.055,20,0.22,23,0.812,28,0.007,30,0.199,31,0.25,32,0.135,33,0.185,51,3.913,56,3.724,77,3.724,127,0.664,164,0.004,165,0.004,200,1.009,201,3.288,207,0.69,208,1.634,219,0.514,222,0.727,230,1.712,337,2.182,343,1.529,351,1.466,371,0.823,372,1.161,461,0.856,487,1.205,490,0.798,503,2.861,505,2.115,508,2.182,535,0.974,537,1.291,568,1.352,626,1.379,640,2.512,642,1.89,646,3.724,647,1.352,732,1.842,769,1.941,771,1.941,772,1.941,831,0.029,833,0.655,845,1.251,846,3.06,891,1.205,1251,1.711,1253,1.711,1336,1.941,1342,2.053,1345,2.053,1346,3.253,1347,2.053,1501,3.288,1574,2.334,1610,4.791,1611,1.752,1612,3.657,1613,3.441,1614,3.657,1615,3.657,1616,2.334,1617,2.255,1618,3.657,1619,2.421,1620,2.421,1621,4.432,1622,4.432,1623,5.144,1624,5.144,1625,5.144,1626,4.432,1627,3.46,1628,5.144,1629,4.791,1630,2.421,1631,2.421,1632,2.255,1633,2.421,1634,2.421,1635,2.334,1636,2.421,1637,3.911,1638,2.421,1639,2.334,1640,2.421,1641,2.421,1642,2.421,1643,2.421]],["title/classes/StrapiMediaService.html",[33,0.22,1632,2.68]],["body/classes/StrapiMediaService.html",[3,0.066,4,0.066,9,0.059,20,0.236,21,1.266,23,1.222,24,1.293,27,1.244,28,0.007,30,0.203,31,0.268,32,0.137,33,0.198,51,3.663,56,3.486,77,3.486,127,0.662,164,0.004,165,0.004,200,1.06,201,3.39,208,2.843,218,1.289,219,0.384,220,0.968,222,0.721,230,1.929,337,2.337,343,1.638,351,2.916,371,0.855,372,1.243,461,1.289,487,1.29,490,0.854,503,3.767,504,2.593,505,2.266,506,4.95,507,3.522,508,4.12,535,0.57,537,1.265,568,1.448,626,2.4,640,3.308,642,2.024,646,3.486,647,1.448,732,1.972,769,2.922,771,2.922,772,2.079,831,0.03,845,1.883,846,1.79,891,1.29,939,2.5,1251,1.832,1253,1.832,1336,2.079,1342,2.199,1345,3.877,1346,3.378,1347,2.199,1501,1.923,1574,2.5,1610,3.924,1611,3.05,1612,3.798,1613,3.574,1614,3.798,1615,3.798,1616,2.5,1617,2.415,1618,3.285,1619,2.593,1620,2.593,1621,2.593,1622,2.593,1623,4.815,1624,4.815,1625,4.815,1626,2.593,1627,2.024,1628,4.815,1629,4.651,1630,2.593,1631,2.593,1632,3.394,1633,2.593,1634,3.644,1635,2.5,1636,2.593,1637,4.062,1638,2.593,1639,2.5,1640,2.593,1641,2.593,1642,2.593,1643,2.593,2927,4.311,2928,4.311,2929,4.311,2930,4.311]],["title/injectables/StrapiRepositoryService.html",[438,0.462,1341,3.122]],["body/injectables/StrapiRepositoryService.html",[3,0.059,4,0.059,9,0.053,20,0.21,21,1.166,23,1.126,24,1.522,27,1.641,28,0.007,30,0.217,31,0.239,32,0.117,33,0.176,127,0.62,164,0.004,165,0.004,200,0.672,204,0.762,215,1.714,218,1.699,219,0.438,220,1.276,222,0.676,229,1.714,230,1.527,286,1.317,343,1.46,351,2.627,366,1.905,367,1.673,368,1.714,371,1.081,438,0.538,439,1.291,461,1.86,474,1.172,475,1.4,487,1.15,490,0.762,492,0.893,494,0.775,512,1.804,516,2.933,517,2.62,518,2.767,519,2.933,522,2.847,525,1.827,526,1.761,529,2.49,530,2.942,532,3.218,533,2.553,535,0.953,536,2.152,537,1.16,538,1.646,539,3.356,540,3.086,542,1.702,543,1.96,548,2.49,568,1.291,570,1.714,571,1.639,572,1.633,574,2.019,575,1.905,576,1.492,577,1.804,578,0.66,579,0.789,582,2.228,603,2.228,623,4.897,625,2.626,626,2.471,627,3.79,628,3.81,630,2.847,636,2.228,638,2.152,639,2.403,640,3.14,641,2.626,642,1.804,645,2.403,646,1.673,647,1.874,648,2.152,649,2.403,650,2.403,651,2.403,652,2.403,653,1.714,654,2.933,655,2.403,656,2.403,657,2.403,659,1.758,660,1.492,661,2.083,769,2.691,771,2.691,772,1.853,831,0.025,836,1.61,845,1.735,869,2.403,891,1.15,939,4.441,1248,1.596,1259,2.551,1334,4.491,1335,2.403,1336,1.853,1337,2.507,1338,1.758,1339,4.288,1340,2.764,1341,3.641,1342,1.96,1343,4.791,1344,2.507,1345,3.679,1346,3.169,1347,1.96,1348,2.403,1349,2.507,1350,2.507,1351,3.641,1352,2.764,1353,2.507,1354,2.507,1355,2.507,1356,3.641,1357,2.764,1358,4.728,1359,2.764,1360,2.507,1361,2.507,1362,2.764,1363,2.764,1364,2.507,1365,2.507,1366,2.507,1367,2.764,1368,2.507,1369,2.764,1370,2.507,1371,2.764,1372,2.507,1373,2.764,1374,2.764,1750,3.419,2931,3.842,2932,3.842,2933,3.842,2934,3.842,2935,3.842,2936,3.842]],["title/interfaces/StrapiSignIn.html",[831,0.016,2634,2.774]],["body/interfaces/StrapiSignIn.html",[3,0.076,4,0.076,9,0.068,11,0.916,20,0.272,28,0.007,30,0.197,31,0.308,32,0.132,33,0.228,127,0.626,139,2.333,164,0.005,165,0.005,204,0.983,207,0.798,219,0.365,222,0.723,274,3.224,371,1.027,438,0.644,455,3.309,491,2.69,492,1.153,493,2.608,494,1.001,535,0.997,537,0.899,578,0.852,579,1.019,626,1.7,653,2.214,831,0.03,833,0.807,846,2.772,997,3.064,998,2.928,1257,1.485,1376,2.877,1377,2.46,1378,3.134,1379,2.877,1382,2.877,1384,2.877,1388,2.877,1390,2.877,1393,3.787,1394,3.952,1395,2.984,1396,2.984,1398,4.271,1407,3.89,1408,3.739,1501,2.978,1611,2.16,1627,3.134,1856,6.162,2627,3.739,2628,4.174,2629,4.174,2630,3.739,2631,4.014,2632,4.225,2633,3.739,2634,3.87,2635,3.104,2636,3.104,2637,3.87,2638,2.877,2639,3.104,2640,3.104,2641,3.104,2642,3.104,2643,3.104,2644,3.104,2645,4.174,2646,4.174,2647,4.174,2648,4.174,2649,4.174,2650,3.104,2651,3.104,2652,3.104,2653,3.104,2654,3.104,2655,3.104]],["title/interfaces/StrapiSignInResponse.html",[831,0.016,2630,2.68]],["body/interfaces/StrapiSignInResponse.html",[3,0.076,4,0.076,9,0.068,11,0.916,20,0.272,28,0.007,30,0.197,31,0.308,32,0.132,33,0.228,127,0.626,139,2.333,164,0.005,165,0.005,204,0.983,207,0.798,219,0.365,222,0.721,274,3.393,371,1.027,438,0.644,455,3.309,491,2.69,492,1.153,493,2.608,494,1.001,535,0.997,537,0.899,578,0.852,579,1.019,626,1.7,653,2.214,831,0.03,833,0.807,846,2.772,997,3.064,998,2.928,1257,1.485,1376,2.877,1377,2.46,1378,3.134,1379,2.877,1382,2.877,1384,2.877,1388,2.877,1390,2.877,1393,3.787,1394,3.134,1395,2.984,1396,2.984,1398,4.271,1407,3.89,1408,3.739,1501,2.978,1611,2.16,1627,3.134,2627,3.739,2628,4.174,2629,4.174,2630,4.225,2631,5.062,2632,4.715,2633,3.739,2634,2.877,2635,3.104,2636,3.104,2637,3.87,2638,2.877,2639,3.104,2640,3.104,2641,3.104,2642,3.104,2643,3.104,2644,3.104,2645,4.174,2646,4.174,2647,4.174,2648,4.174,2649,4.174,2650,3.104,2651,3.104,2652,3.104,2653,3.104,2654,3.104,2655,3.104]],["title/interfaces/StrapiSignUp.html",[831,0.016,2637,2.774]],["body/interfaces/StrapiSignUp.html",[3,0.073,4,0.073,9,0.066,11,0.887,20,0.263,28,0.007,30,0.195,31,0.299,32,0.131,33,0.221,127,0.682,139,2.284,164,0.005,165,0.005,204,0.953,207,0.781,219,0.456,222,0.726,274,3.194,371,1.016,438,0.63,455,3.238,491,2.606,492,1.117,493,2.526,494,0.97,535,0.981,537,0.88,578,0.826,579,0.987,626,1.647,653,2.145,831,0.03,833,0.782,846,2.713,997,3.025,998,2.881,1257,1.439,1376,2.787,1377,2.383,1378,3.067,1379,2.787,1382,2.787,1384,2.787,1388,2.787,1390,2.787,1393,4.125,1394,3.909,1395,2.891,1396,2.891,1398,4.419,1407,4.236,1408,3.678,1501,2.914,1611,2.093,1627,3.067,2627,3.659,2628,4.085,2629,4.085,2630,3.659,2631,3.929,2632,4.156,2633,3.659,2634,2.787,2635,3.006,2636,3.006,2637,4.302,2638,2.787,2639,3.006,2640,3.006,2641,3.006,2642,3.006,2643,3.006,2644,3.006,2645,4.085,2646,4.085,2647,4.085,2648,4.085,2649,4.085,2650,3.006,2651,3.006,2652,3.006,2653,3.006,2654,3.006,2655,3.006]],["title/interfaces/StrapiSignUpResponse.html",[831,0.016,2633,2.68]],["body/interfaces/StrapiSignUpResponse.html",[3,0.076,4,0.076,9,0.068,11,0.916,20,0.272,28,0.007,30,0.197,31,0.308,32,0.132,33,0.228,127,0.626,139,2.333,164,0.005,165,0.005,204,0.983,207,0.798,219,0.365,222,0.721,274,3.393,371,1.027,438,0.644,455,3.309,491,2.69,492,1.153,493,2.608,494,1.001,535,0.997,537,0.899,578,0.852,579,1.019,626,1.7,653,2.214,831,0.03,833,0.807,846,2.772,997,3.064,998,2.928,1257,1.485,1376,2.877,1377,2.46,1378,3.134,1379,2.877,1382,2.877,1384,2.877,1388,2.877,1390,2.877,1393,3.787,1394,3.134,1395,2.984,1396,2.984,1398,4.271,1407,3.89,1408,3.739,1501,2.978,1611,2.16,1627,3.134,2627,3.739,2628,4.174,2629,4.174,2630,3.739,2631,5.062,2632,4.715,2633,4.225,2634,2.877,2635,3.104,2636,3.104,2637,3.87,2638,2.877,2639,3.104,2640,3.104,2641,3.104,2642,3.104,2643,3.104,2644,3.104,2645,4.174,2646,4.174,2647,4.174,2648,4.174,2649,4.174,2650,3.104,2651,3.104,2652,3.104,2653,3.104,2654,3.104,2655,3.104]],["title/interfaces/StrapiUser.html",[831,0.016,2632,2.68]],["body/interfaces/StrapiUser.html",[3,0.07,4,0.07,9,0.063,11,0.843,20,0.25,28,0.007,30,0.191,31,0.284,32,0.129,33,0.21,127,0.673,139,2.205,164,0.004,165,0.004,204,0.905,207,0.754,219,0.497,222,0.727,274,3.145,371,0.998,438,0.609,455,3.127,491,2.477,492,1.061,493,2.401,494,0.921,535,1.117,537,1.05,578,0.785,579,0.938,626,1.565,653,2.038,831,0.03,833,0.743,846,3.396,997,3.355,998,2.805,1257,1.367,1376,2.649,1377,2.264,1378,2.962,1379,2.649,1382,2.649,1384,2.649,1388,2.649,1390,2.649,1393,4.069,1394,2.962,1395,2.747,1396,2.747,1398,4.375,1407,4.179,1408,3.582,1501,3.648,1611,1.989,1627,3.839,2627,3.534,2628,5.114,2629,5.114,2630,3.534,2631,3.794,2632,4.365,2633,3.534,2634,2.649,2635,2.857,2636,2.857,2637,3.657,2638,2.649,2639,2.857,2640,2.857,2641,2.857,2642,2.857,2643,2.857,2644,2.857,2645,3.945,2646,3.945,2647,3.945,2648,3.945,2649,3.945,2650,2.857,2651,2.857,2652,2.857,2653,2.857,2654,2.857,2655,2.857]],["title/interfaces/Task.html",[831,0.016,1738,3.27]],["body/interfaces/Task.html",[3,0.107,4,0.107,9,0.096,20,0.383,28,0.007,30,0.203,32,0.107,146,1.723,164,0.006,165,0.006,207,0.993,219,0.455,576,3.435,831,0.024,833,1.139,845,2.58,850,5.341,1264,4.066,1738,5.672,2499,5.721,2937,6.23,2938,8.847,2939,7.002,2940,7.002]],["title/injectables/TasksService.html",[438,0.462,2941,3.909]],["body/injectables/TasksService.html",[3,0.085,4,0.085,9,0.076,11,1.023,20,0.304,21,1.501,23,1.448,24,1.65,27,1.792,28,0.007,30,0.219,31,0.344,32,0.085,33,0.254,127,0.677,164,0.005,165,0.005,204,1.099,218,1.856,219,0.478,220,1.394,222,0.658,438,0.693,439,1.862,461,1.856,487,1.659,494,1.118,512,3.371,516,3.774,517,3.371,518,3.948,519,3.774,522,3.663,529,2.473,530,3.006,532,3.554,533,2.536,535,1.053,543,2.828,548,2.473,572,2.356,647,1.862,715,6.018,717,3.988,729,3.334,732,2.536,845,2.232,939,5.06,940,4.228,941,4.529,942,4.228,943,4.228,944,4.228,945,4.228,951,4.228,1736,6.426,1738,3.788,1739,4.529,1740,5.477,2941,5.867,2942,4.932,2943,5.543,2944,4.529,2945,5.543,2946,5.543,2947,5.543]],["title/interfaces/Thumbnail.html",[831,0.016,1615,2.594]],["body/interfaces/Thumbnail.html",[3,0.065,4,0.065,9,0.059,20,0.234,23,0.86,28,0.007,30,0.202,31,0.265,32,0.136,33,0.196,51,3.972,56,3.78,77,3.78,127,0.674,164,0.004,165,0.004,200,1.052,201,3.794,207,0.719,208,1.731,219,0.495,222,0.726,230,1.757,337,2.312,343,1.621,351,1.554,371,0.85,372,1.23,461,0.907,487,1.277,490,0.845,503,2.981,505,2.242,508,2.312,535,0.564,537,1.292,568,1.433,626,1.461,640,2.618,642,2.003,646,3.78,647,1.433,732,1.951,769,2.057,771,2.057,772,2.057,831,0.03,833,0.694,845,1.326,846,1.771,891,1.277,1251,1.813,1253,1.813,1336,2.057,1342,2.176,1345,2.176,1346,3.359,1347,2.176,1501,1.903,1574,2.473,1610,3.902,1611,1.857,1612,3.776,1613,3.553,1614,3.776,1615,4.101,1616,2.473,1617,2.389,1618,3.26,1619,2.565,1620,2.565,1621,2.565,1622,2.565,1623,5.222,1624,5.222,1625,5.222,1626,2.565,1627,2.003,1628,5.222,1629,4.864,1630,2.565,1631,2.565,1632,2.389,1633,2.565,1634,2.565,1635,2.473,1636,2.565,1637,4.038,1638,2.565,1639,2.473,1640,2.565,1641,2.565,1642,2.565,1643,2.565]],["title/pipes/TogglePasswordPipe.html",[741,2.993,2948,3.909]],["body/pipes/TogglePasswordPipe.html",[3,0.104,4,0.104,9,0.094,11,1.26,13,3.291,21,1.426,24,1.26,27,1.401,28,0.007,30,0.167,31,0.424,32,0.104,33,0.313,93,3.587,127,0.679,164,0.006,165,0.006,218,1.452,219,0.374,220,1.09,222,0.602,371,0.833,741,5.113,743,5.576,746,4.268,749,7.272,997,3.325,1394,3.204,2948,6.679,2949,7.272,2950,6.071,2951,8.174,2952,8.174,2953,6.824,2954,8.174]],["title/interfaces/User.html",[274,1.78,831,0.016]],["body/interfaces/User.html",[3,0.094,4,0.094,9,0.085,20,0.337,28,0.007,32,0.127,127,0.699,139,3.059,164,0.005,165,0.005,207,0.917,219,0.51,220,1.225,222,0.732,274,3.109,535,1.156,831,0.029,833,1,997,3.325,1377,3.047,1378,2.886,1393,4.312,1394,3.6,1398,4.343,1407,4.343,1408,4.464,2848,4.688]],["title/interfaces/UserRaw.html",[831,0.016,1256,2.594]],["body/interfaces/UserRaw.html",[3,0.067,4,0.067,9,0.061,11,0.815,20,0.242,28,0.007,30,0.205,31,0.274,32,0.137,33,0.203,127,0.596,146,1.2,164,0.004,165,0.004,189,1.274,200,1.343,204,0.875,207,0.737,219,0.242,222,0.566,371,1.069,438,0.595,471,2.82,472,2.683,492,1.026,494,0.891,525,1.228,526,1.652,535,0.938,537,1.089,538,1.008,571,1.298,578,1.059,579,0.907,611,2.07,831,0.03,833,0.718,836,2.319,848,2.585,862,1.576,864,1.576,866,1.576,871,1.576,873,1.576,876,1.576,891,1.322,896,1.923,1016,1.576,1105,3.485,1113,3.566,1246,2.13,1247,2.074,1248,2.559,1249,4.164,1250,1.322,1251,2.62,1252,2.561,1253,1.878,1254,2.253,1255,2.395,1256,3.341,1257,1.322,1258,3.19,1259,2.982,1260,3.341,1261,3.09,1262,3.09,1263,3.09,1264,1.923,1265,2.124,1266,2.561,1267,1.971,1268,2.395,1269,2.561,1270,1.834,1271,2.253,1272,2.253,1273,2.253,1274,1.753,1275,2.395,1276,2.561,1277,3.452,1278,2.021,1279,2.021,1280,2.475,1281,4.979,1282,2.561,1283,2.561,1284,2.561,1285,2.475,1286,2.561,1287,2.561,1288,2.561,1289,1.715,1290,2.13,1291,1.544,1292,1.544,1293,1.753,1294,2.561,1295,1.753,1296,2.561,1297,3.573,1298,2.13,1299,2.13,1300,2.13,1301,2.13,1302,2.13,1303,2.561,1304,2.561,1305,2.561,1306,2.13,1307,2.561,1308,2.561,1309,2.561,1310,2.074,1311,2.561,1312,3.621,1313,3.423]],["title/coverage.html",[2955,5.794]],["body/coverage.html",[0,2.345,1,0.882,9,0.026,10,1.671,28,0.007,33,0.301,82,4.134,124,0.906,129,0.906,131,0.987,134,0.838,136,0.882,138,0.882,141,0.882,143,0.882,145,0.859,146,0.366,148,0.859,150,0.859,152,0.859,153,0.532,154,0.906,155,0.859,157,0.859,158,0.931,161,0.882,164,0.002,165,0.002,203,1.671,214,1.351,215,0.838,219,0.174,274,0.699,307,1.535,316,1.535,317,1.535,318,1.535,319,1.535,320,1.535,321,1.535,322,1.535,323,1.535,324,1.535,325,1.535,327,1.052,329,1.433,330,1.433,331,1.433,332,1.535,333,1.535,334,1.535,335,1.535,336,1.535,337,1.018,338,1.018,339,1.535,340,1.535,344,1.052,358,2.419,360,1.535,361,1.535,362,1.433,365,5.837,372,0.542,375,3.156,380,1.535,403,1.535,405,1.535,438,0.86,440,2.575,441,3.14,455,0.931,488,1.13,503,0.931,505,3.913,510,1.535,511,3.14,512,2.271,513,3.826,525,2.446,526,0.503,540,0.882,554,1.351,570,0.838,573,1.535,574,0.987,576,0.729,578,0.323,623,1.089,624,1.671,626,2.341,636,1.089,637,1.284,638,1.052,640,0.818,670,1.535,671,3.251,672,3.694,715,1.225,716,1.671,727,1.175,731,1.535,741,1.984,742,1.535,744,1.671,754,1.433,755,1.671,831,0.033,832,1.13,834,2.069,835,2.591,836,1.009,840,1.13,843,1.089,844,1.671,852,1.433,853,3.14,875,1.433,904,1.535,916,1.535,917,1.351,934,1.671,946,1.433,948,1.535,954,2.387,955,3.364,959,2.387,978,2.069,979,1.351,981,2.575,982,1.351,1060,3.364,1064,1.351,1066,1.433,1069,1.225,1070,2.91,1175,3.364,1179,1.351,1180,1.433,1246,3.794,1247,3.748,1249,1.018,1251,0.798,1255,1.018,1256,1.018,1257,1.755,1258,2.009,1259,1.598,1260,1.018,1267,1.415,1268,1.018,1314,3.94,1316,1.175,1319,1.175,1334,3.694,1335,3.905,1336,0.906,1338,2.213,1339,1.225,1341,1.225,1375,1.535,1376,3.961,1377,0.931,1378,0.882,1434,1.433,1515,1.535,1516,1.671,1564,1.535,1596,1.433,1597,2.591,1598,1.671,1606,1.433,1607,1.671,1610,1.052,1611,3.598,1612,1.018,1613,0.958,1614,1.018,1615,1.018,1617,1.052,1618,1.018,1629,1.052,1632,1.052,1655,1.671,1656,2.591,1667,1.671,1677,3.14,1689,3.826,1703,1.671,1704,3.694,1715,1.671,1717,1.671,1719,1.433,1720,1.671,1721,1.433,1722,1.671,1728,1.433,1729,1.671,1730,1.433,1731,1.671,1732,1.671,1733,1.671,1736,1.433,1737,1.671,1738,1.284,1740,1.433,1741,1.671,1742,1.433,1743,2.591,1744,2.419,1763,1.671,1794,1.671,1856,1.535,1899,1.671,1902,1.351,1903,3.826,1904,3.14,1921,1.351,1922,3.14,1929,1.535,1930,1.535,1931,1.671,1955,1.671,1957,2.591,1958,2.419,1959,3.14,1962,1.535,2066,1.671,2236,1.671,2272,1.535,2273,1.535,2353,1.671,2356,2.591,2445,3.48,2446,1.433,2458,1.433,2461,2.591,2490,1.535,2534,1.671,2538,1.433,2547,1.671,2615,1.433,2620,1.433,2627,1.052,2630,1.052,2632,1.052,2633,1.052,2634,1.089,2637,1.089,2638,1.089,2656,1.535,2763,1.535,2797,1.671,2803,1.535,2848,3.14,2849,1.671,2882,1.535,2937,1.671,2941,1.535,2942,1.671,2944,1.535,2948,1.535,2949,1.671,2950,1.671,2955,1.671,2956,1.878,2957,1.878,2958,1.671,2959,9.361,2960,1.671,2961,9.575,2962,7.266,2963,1.671,2964,1.671,2965,7.982,2966,8.603,2967,7.444,2968,5.864,2969,6.831,2970,4.838,2971,4.838,2972,5.864,2973,7.444,2974,6.522,2975,1.671,2976,1.535,2977,1.671,2978,1.535,2979,7.964,2980,1.671,2981,1.671,2982,1.671,2983,1.671,2984,1.671,2985,1.878,2986,3.172,2987,3.172,2988,4.117,2989,1.878,2990,1.671,2991,1.671,2992,2.822,2993,1.878,2994,1.878,2995,1.878,2996,3.172,2997,3.172,2998,1.878,2999,1.671,3000,1.671,3001,1.878,3002,1.878]],["title/dependencies.html",[169,3.022,3003,3.563]],["body/dependencies.html",[28,0.007,31,0.383,164,0.005,165,0.005,169,3.243,185,3.711,187,3.148,189,1.779,193,3.735,194,2.823,199,3.059,311,6.838,312,6.28,348,6.28,350,5.041,355,5.489,356,5.489,384,4.706,490,1.223,630,3.148,984,5.041,985,4.439,3004,6.17,3005,9.502,3006,6.17,3007,6.17,3008,6.17,3009,6.17,3010,6.17,3011,6.17,3012,8.371,3013,6.17,3014,6.17,3015,8.371,3016,6.17,3017,6.17,3018,6.17,3019,6.17,3020,6.17,3021,6.17,3022,5.489,3023,6.17,3024,6.17,3025,6.17,3026,6.17,3027,6.17,3028,6.17,3029,6.17,3030,6.17,3031,6.17,3032,6.17,3033,6.17,3034,6.17,3035,6.17,3036,6.17,3037,6.17,3038,6.17,3039,6.17,3040,6.17,3041,6.17,3042,6.17]],["title/miscellaneous/functions.html",[3043,2.737,3044,5.116]],["body/miscellaneous/functions.html",[20,0.315,27,1.854,28,0.007,127,0.721,153,1.628,164,0.005,165,0.005,169,4.745,218,1.977,219,0.509,220,1.484,222,0.629,307,4.699,351,2.678,370,5.117,380,6.007,524,4.387,611,2.47,630,2.934,1346,3.908,2272,6.007,2273,6.007,2417,4.699,2974,4.699,2975,6.541,2976,6.007,2977,6.541,2978,6.007,2990,5.117,2991,6.541,2992,5.117,3043,3.93,3044,5.117,3045,7.599,3046,5.751,3047,5.751,3048,7.352,3049,5.751,3050,9.459,3051,7.599,3052,5.751,3053,7.352,3054,5.751,3055,5.751,3056,7.352,3057,7.352,3058,5.751,3059,7.352,3060,5.751,3061,5.751,3062,8.541,3063,7.352,3064,5.751]],["title/index.html",[20,0.219,3065,4.005,3066,4.005]],["body/index.html",[28,0.005,164,0.005,165,0.005,241,4.011,366,3.047,368,3.904,386,4.618,648,3.443,654,4.949,779,4.688,791,5.469,810,6.375,1208,4.011,1222,4.688,1402,5.022,1475,4.422,1555,4.688,1696,4.688,1699,4.2,1868,5.022,2117,5.469,2138,5.469,2140,7.785,2317,5.469,2827,7.435,3022,5.469,3067,6.146,3068,6.146,3069,6.822,3070,6.146,3071,6.146,3072,6.146,3073,7.668,3074,6.146,3075,7.668,3076,6.146,3077,6.146,3078,7.668,3079,7.668,3080,6.146,3081,8.357,3082,7.668,3083,6.146,3084,6.146,3085,7.668,3086,7.668,3087,6.146,3088,6.146,3089,6.146,3090,6.146,3091,6.146,3092,6.146,3093,6.146,3094,6.146,3095,6.146,3096,7.668,3097,8.357,3098,5.469,3099,8.357,3100,6.146,3101,7.668,3102,6.146,3103,6.146,3104,6.146,3105,6.146,3106,6.146,3107,6.146,3108,6.146,3109,6.146,3110,6.146,3111,6.146]],["title/modules.html",[168,2.768]],["body/modules.html",[28,0.006,164,0.006,165,0.006,167,4.924,168,2.744,177,4.644,300,4.924,305,4.644,306,4.411,312,7.822,1644,4.924,1648,4.644,1891,4.924,1895,4.644,2226,4.924,2230,4.644,2343,4.924,2347,4.644,2526,4.924,2530,4.644,2789,4.924,2793,4.644,2874,5.274,3112,9.574,3113,9.574,3114,9.872,3115,9.574,3116,9.574]],["title/overview.html",[3117,5.794]],["body/overview.html",[1,3.46,2,2.493,28,0.007,121,1.97,124,2.287,129,4.221,134,3.288,136,3.46,138,4.11,141,3.46,143,3.46,145,4.005,148,3.372,150,4.005,152,4.005,154,4.221,155,3.372,157,4.005,161,3.46,164,0.005,165,0.005,166,1.728,167,6.524,168,2.016,169,2.493,170,2.75,171,2.75,172,2.571,173,2.116,174,4.219,175,4.219,176,4.219,177,5.301,178,3.753,179,2.75,180,2.75,197,2.571,286,1.625,287,2.227,300,6.893,301,4.219,302,4.219,303,4.219,304,4.219,305,5.301,306,6.618,439,1.593,504,2.852,743,3.875,833,0.771,1644,6.524,1645,4.219,1646,4.219,1647,4.219,1648,5.301,1891,6.524,1892,4.219,1893,4.219,1894,4.219,1895,5.301,2226,6.972,2227,4.219,2228,4.219,2229,4.219,2230,5.301,2324,4.219,2343,6.524,2344,4.219,2345,4.219,2346,4.219,2347,5.301,2526,6.524,2527,4.219,2528,4.219,2529,4.219,2530,5.301,2789,6.524,2790,4.219,2791,4.219,2792,4.219,2793,5.301,2840,4.219,2841,4.219,2842,4.219,3117,4.219,3118,4.743,3119,4.743,3120,4.743,3121,4.743,3122,4.743]],["title/properties.html",[207,0.688,3003,3.563]],["body/properties.html",[28,0.007,134,3.327,164,0.006,165,0.006,207,0.892,3069,7.662,3123,7.457,3124,7.457,3125,7.457,3126,7.457,3127,7.457,3128,7.457,3129,7.457]],["title/routes.html",[197,3.531]],["body/routes.html",[28,0.006,164,0.006,165,0.006,197,4.179]],["title/miscellaneous/typealiases.html",[3043,2.737,3130,5.75]],["body/miscellaneous/typealiases.html",[20,0.412,28,0.006,164,0.006,165,0.006,219,0.412,505,4.55,1611,3.277,1617,4.85,1618,4.081,3043,5.143,3131,7.526,3132,7.526]],["title/miscellaneous/variables.html",[3043,2.737,3133,5.116]],["body/miscellaneous/variables.html",[20,0.137,28,0.007,132,1.993,138,1.175,146,0.487,153,2.005,164,0.003,165,0.003,200,1.008,215,3.007,216,2.892,219,0.444,222,0.371,316,3.284,317,3.284,318,3.284,319,3.284,320,3.284,321,3.284,322,3.284,323,3.284,324,3.284,325,3.284,329,3.841,330,3.841,331,3.841,332,6.509,333,4.114,334,4.114,335,4.114,336,4.114,337,2.73,338,4.227,339,4.114,340,4.114,351,2.455,358,4.397,360,3.284,361,3.284,367,2.51,368,1.793,371,0.972,372,2.755,375,2.623,378,4.397,379,4.48,381,4.48,384,3.841,385,1.452,386,1.241,395,2.227,397,3.576,403,3.284,405,3.284,413,1.801,422,1.633,447,3.066,452,1.566,474,2.938,475,3.497,503,1.241,525,1.602,526,0.671,528,2.92,573,3.284,574,2.112,626,1.725,627,1.316,628,1.452,630,3.221,636,2.331,637,2.747,638,2.252,640,1.09,671,2.417,710,4.405,731,3.284,756,5.129,843,1.452,916,5.158,948,4.114,998,1.955,1066,3.841,1104,1.801,1105,3.233,1180,3.841,1195,3.066,1199,2.747,1200,1.801,1310,1.887,1336,1.938,1433,2.892,1434,3.841,1448,3.284,1470,4.429,1475,4.147,1557,2.892,1565,3.576,1580,5.129,1744,3.066,1807,3.284,1848,2.045,1862,2.045,1910,2.623,1950,3.576,1957,2.045,1958,1.91,1959,3.066,1962,3.284,2005,2.045,2006,2.045,2007,2.045,2008,2.045,2077,3.576,2163,3.576,2460,4.957,2538,3.066,2803,3.284,2886,2.227,2896,3.576,2944,3.284,2958,3.576,2960,3.576,2963,2.227,2964,2.227,2974,2.045,2976,4.114,2978,4.114,2979,2.227,2980,3.576,2981,4.48,2982,5.617,2983,5.617,2984,3.576,2999,2.227,3000,2.227,3043,1.711,3045,7.219,3051,5.997,3098,3.576,3133,2.227,3134,9.297,3135,2.503,3136,2.503,3137,2.503,3138,2.503,3139,2.503,3140,2.503,3141,2.503,3142,2.503,3143,2.503,3144,2.503,3145,2.503,3146,2.503,3147,2.503,3148,2.503,3149,2.503,3150,2.503,3151,2.503,3152,2.503,3153,2.503,3154,2.503,3155,2.503,3156,2.503,3157,2.503,3158,2.503,3159,2.503,3160,2.503,3161,2.503,3162,2.503,3163,2.503,3164,2.503,3165,2.503,3166,2.503,3167,2.503,3168,2.503,3169,2.503,3170,2.503,3171,2.503,3172,4.019,3173,4.019,3174,2.503,3175,2.503,3176,2.503,3177,2.503,3178,4.019,3179,7.598,3180,2.503,3181,2.503,3182,2.503,3183,2.503,3184,2.503,3185,2.503,3186,2.503,3187,2.503,3188,2.503,3189,2.503,3190,4.019,3191,4.019,3192,4.019,3193,4.019,3194,4.019,3195,4.019,3196,4.019,3197,4.019,3198,4.019,3199,4.019,3200,5.765,3201,4.019,3202,4.019,3203,4.019,3204,4.019,3205,4.019,3206,4.019,3207,4.019,3208,4.019,3209,2.503,3210,2.503,3211,2.503,3212,5.036,3213,2.503,3214,2.503,3215,2.503,3216,2.503,3217,4.019,3218,2.503,3219,2.503,3220,4.019,3221,4.019,3222,4.019,3223,6.74,3224,4.019,3225,4.019,3226,4.019,3227,4.019,3228,4.019,3229,4.019,3230,4.019,3231,4.019,3232,4.019,3233,4.019,3234,2.503,3235,2.503,3236,2.503,3237,2.503]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["0')).join",{"_index":2132,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["0.0.1",{"_index":3124,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":2220,"title":{},"body":{"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["0.1",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/CohereService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["0.14.2",{"_index":3042,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["0.24.0",{"_index":3018,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":2216,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["0.3s",{"_index":2047,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["0.5",{"_index":108,"title":{},"body":{"components/AboutPage.html":{}}}],["0.6",{"_index":2218,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["0.75",{"_index":824,"title":{},"body":{"injectables/CohereService.html":{}}}],["0.9",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["0/1",{"_index":2961,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2970,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2972,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2987,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2997,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2985,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2988,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2986,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2973,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2994,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2965,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2998,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2995,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":2996,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2967,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2969,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2962,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2968,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2966,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2971,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["0px",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["1",{"_index":286,"title":{"classes/Country-1.html":{},"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PaginatedRaw-1.html":{},"classes/Port-1.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieRaw-1.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsService.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"overview.html":{}}}],["1.8.3",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":910,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["100",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["100).pipe",{"_index":2830,"title":{},"body":{"injectables/SeriesService.html":{}}}],["100px",{"_index":119,"title":{},"body":{"components/AboutPage.html":{}}}],["100vh",{"_index":2333,"title":{},"body":{"components/RegisterPage.html":{}}}],["11.2.0",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["12.0.0",{"_index":3030,"title":{},"body":{"dependencies.html":{}}}],["120px",{"_index":95,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["12px",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["14px",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["150",{"_index":821,"title":{},"body":{"injectables/CohereService.html":{}}}],["150px",{"_index":2215,"title":{},"body":{"components/ProfilePage.html":{}}}],["15fb6",{"_index":3226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15fb6.firebaseapp.com",{"_index":3224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15fb6.firebasestorage.app",{"_index":3228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":2742,"title":{},"body":{"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["16",{"_index":3119,"title":{},"body":{"overview.html":{}}}],["16.0.0",{"_index":3021,"title":{},"body":{"dependencies.html":{}}}],["16.0.3",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":96,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["17.18.12",{"_index":3033,"title":{},"body":{"dependencies.html":{}}}],["17px",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["18",{"_index":3118,"title":{},"body":{"overview.html":{}}}],["18.0.0",{"_index":3005,"title":{},"body":{"dependencies.html":{}}}],["1:282424850144:web:a72ef0bae5e4fcecec4285",{"_index":3231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":1880,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["2",{"_index":287,"title":{"classes/Country-2.html":{},"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"classes/Port-2.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SerieRaw-2.html":{}},"body":{"components/AppComponent.html":{},"injectables/CohereService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":3040,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":1837,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["200px",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/SerieViewComponent.html":{}}}],["20px",{"_index":75,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["24",{"_index":3122,"title":{},"body":{"overview.html":{}}}],["24px",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["25",{"_index":724,"title":{},"body":{"injectables/BaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["255",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["256",{"_index":2126,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["282424850144",{"_index":3230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28px",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["2px",{"_index":1883,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["3",{"_index":290,"title":{"interfaces/PaginatedRaw-3.html":{},"interfaces/SeasonRaw-3.html":{},"interfaces/SerieRaw-3.html":{}},"body":{"components/AppComponent.html":{},"injectables/CohereService.html":{}}}],["3.0.3",{"_index":3027,"title":{},"body":{"dependencies.html":{}}}],["3.11.8",{"_index":3010,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":2150,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["300px",{"_index":2040,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["31",{"_index":3120,"title":{},"body":{"overview.html":{}}}],["32px",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/SerieSelectableComponent.html":{}}}],["333",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["34",{"_index":86,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["3px",{"_index":97,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["3rem",{"_index":2225,"title":{},"body":{"components/ProfilePage.html":{}}}],["4",{"_index":2626,"title":{"interfaces/SerieRaw-4.html":{}},"body":{}}],["400px",{"_index":1877,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["40px",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["48px",{"_index":2224,"title":{},"body":{"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["4px",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["5",{"_index":118,"title":{"interfaces/SerieRaw-5.html":{}},"body":{"components/AboutPage.html":{}}}],["5.12.2",{"_index":3029,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":2223,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["500px",{"_index":2746,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["57",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["576px",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["600",{"_index":105,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["600px",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["60px",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["64",{"_index":2330,"title":{},"body":{"components/RegisterPage.html":{}}}],["666",{"_index":2482,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["7.0.0",{"_index":3015,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":3012,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":3038,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":3121,"title":{},"body":{"overview.html":{}}}],["768px",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":2324,"title":{},"body":{"components/RegisterPage.html":{},"overview.html":{}}}],["8.0.0",{"_index":3019,"title":{},"body":{"dependencies.html":{}}}],["8.4.0",{"_index":3036,"title":{},"body":{"dependencies.html":{}}}],["80vh",{"_index":2055,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["87",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["8px",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["9l59hyrs5x",{"_index":3233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_authenticated",{"_index":443,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_authenticated:behaviorsubject",{"_index":495,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["_filteredseasons",{"_index":1184,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["_filteredseries",{"_index":1075,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["_items",{"_index":673,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["_items:t",{"_index":684,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["_picture",{"_index":1966,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_ready",{"_index":444,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_ready:behaviorsubject",{"_index":499,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["_season",{"_index":2377,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["_season.id",{"_index":2396,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["_seasons",{"_index":1183,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["_seasons:behaviorsubject",{"_index":993,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["_serie",{"_index":2567,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["_serie.id",{"_index":2578,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["_serie.picture",{"_index":2583,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["_series",{"_index":1074,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["_series:behaviorsubject",{"_index":990,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["_token",{"_index":1411,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["_user",{"_index":445,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_user:behaviorsubject",{"_index":497,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["a.name",{"_index":1026,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825",{"_index":2089,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["aa",{"_index":2208,"title":{},"body":{"components/ProfilePage.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":687,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["about'},{'name",{"_index":128,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["about.email",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["about.email2",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["about.github",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["about.github2",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["about.info",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["about.info2",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["about.name",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["about.name2",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["about.number",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["about.number2",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page",{"_index":191,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["aboutpagemodule",{"_index":167,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules.html":{},"overview.html":{}}}],["aboutpageroutingmodule",{"_index":177,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["abstract",{"_index":448,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{}}}],["abstractcontrol",{"_index":3062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["accept",{"_index":774,"title":{},"body":{"injectables/CohereService.html":{}}}],["acceso",{"_index":3207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":1804,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["activated",{"_index":1885,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["activatedroute",{"_index":1808,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["actual",{"_index":3202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual_component",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["actualizar",{"_index":1222,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"index.html":{}}}],["add",{"_index":516,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["add(entity",{"_index":529,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["adddoc",{"_index":558,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["added",{"_index":837,"title":{},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["adicionales",{"_index":1450,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["admin",{"_index":1408,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["admin:false",{"_index":1410,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["administrador",{"_index":2315,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkey",{"_index":2113,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["adminkeycontrol",{"_index":2278,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeycontrol?.clearvalidators",{"_index":2281,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeycontrol?.setvalidators([validators.required",{"_index":2280,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeycontrol?.setvalue",{"_index":2282,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeycontrol?.updatevalueandvalidity",{"_index":2283,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeyfieldtype",{"_index":2239,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeyhash",{"_index":2240,"title":{},"body":{"components/RegisterPage.html":{}}}],["adminkeyhashed",{"_index":2069,"title":{},"body":{"components/ProfilePage.html":{}}}],["adminsecret123",{"_index":2276,"title":{},"body":{"components/RegisterPage.html":{}}}],["ai",{"_index":3017,"title":{},"body":{"dependencies.html":{}}}],["aizasyautcuihsvee1mi3abmamwx5bjj_n2mwfw",{"_index":3221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":1557,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{},"miscellaneous/variables.html":{}}}],["alert",{"_index":1162,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alert.present",{"_index":1174,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alertcontroller",{"_index":965,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alertctrl",{"_index":1087,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alertyesnobuttons",{"_index":1079,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["alguna",{"_index":3107,"title":{},"body":{"index.html":{}}}],["alias",{"_index":2989,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":3131,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["allowed",{"_index":1930,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"modules/ProfilePageModule.html":{},"coverage.html":{}}}],["allowedcharacters",{"_index":1945,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["alternativetext",{"_index":1621,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["amigable",{"_index":3092,"title":{},"body":{"index.html":{}}}],["analizar",{"_index":818,"title":{},"body":{"injectables/CohereService.html":{}}}],["angular",{"_index":3022,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["angular/compiler",{"_index":3006,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3007,"title":{},"body":{"dependencies.html":{}}}],["angular/material/card",{"_index":1652,"title":{},"body":{"modules/HomePageModule.html":{}}}],["angular/platform",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":199,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"dependencies.html":{}}}],["angular2trimestre.netlify.app",{"_index":3104,"title":{},"body":{"index.html":{}}}],["animación",{"_index":2866,"title":{},"body":{"components/SplashPage.html":{}}}],["animatedavatar",{"_index":1009,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["animatedavatarcontainer",{"_index":1011,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["animationcontroller",{"_index":966,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["animationctrl",{"_index":1083,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["animationitem",{"_index":2860,"title":{},"body":{"components/SplashPage.html":{}}}],["animationoptions",{"_index":2862,"title":{},"body":{"components/SplashPage.html":{}}}],["anonymous",{"_index":1590,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["any):serie",{"_index":2619,"title":{},"body":{"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["apellido/s",{"_index":2322,"title":{},"body":{"components/RegisterPage.html":{}}}],["api",{"_index":649,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["api_url_token",{"_index":636,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":756,"title":{},"body":{"injectables/CohereService.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":627,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["apiurl:\"http://localhost:1337",{"_index":3234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl:\"https://seasons",{"_index":3218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl:string",{"_index":1909,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["aplicación",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["apollo/client",{"_index":3009,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["app.component",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":129,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":3212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":770,"title":{},"body":{"injectables/CohereService.html":{}}}],["appmodule",{"_index":300,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":3214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apponlyallowedcharacters",{"_index":162,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["approutingmodule",{"_index":305,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archivo",{"_index":2865,"title":{},"body":{"components/SplashPage.html":{}}}],["arguments",{"_index":1937,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["array",{"_index":1210,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["array.from(new",{"_index":2128,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["array.isarray(res",{"_index":2544,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["array.isarray(seasonsdata",{"_index":2832,"title":{},"body":{"injectables/SeriesService.html":{}}}],["asegurarse",{"_index":2181,"title":{},"body":{"components/ProfilePage.html":{}}}],["asociadas",{"_index":2828,"title":{},"body":{"injectables/SeriesService.html":{}}}],["assets/i18n",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/icon/fav.png",{"_index":2733,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["assets/lotties/splash.json",{"_index":2863,"title":{},"body":{"components/SplashPage.html":{}}}],["async",{"_index":520,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["async)?.name",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["async)?.username",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["atractiva",{"_index":811,"title":{},"body":{"injectables/CohereService.html":{}}}],["attachment",{"_index":2335,"title":{},"body":{"components/RegisterPage.html":{}}}],["attributes",{"_index":1248,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/StrapiMedia.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{}}}],["attributes.name",{"_index":1302,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["attributes.numepisodes",{"_index":1304,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.numseason",{"_index":1303,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.rating",{"_index":1306,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["attributes.releasedate",{"_index":1305,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.releaseyear",{"_index":1332,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["attributes.serieid",{"_index":1307,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.synopsis",{"_index":1331,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["attributes.user",{"_index":1309,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes.user?.data?.id.tostring",{"_index":1311,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["attributes:strapimediadata",{"_index":1620,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["autenticación",{"_index":3203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autenticado",{"_index":1580,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":626,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.model",{"_index":851,"title":{},"body":{"interfaces/Comment.html":{}}}],["auth:iauthentication",{"_index":3185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_mapping_token",{"_index":1434,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_me_api_url_token",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_sign_in_api_url_token",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_sign_up_api_url_token",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token",{"_index":637,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdomain",{"_index":3222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":446,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authenticated$:observable",{"_index":496,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.interface",{"_index":642,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["authentication.interface.ts",{"_index":1733,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{},"coverage.html":{}}}],["authentication.interface.ts:5",{"_index":1734,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["authentication.service",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryHttpService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["authentication.service.ts",{"_index":441,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{}}}],["authentication.service.ts:12",{"_index":477,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:13",{"_index":482,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:15",{"_index":480,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:159",{"_index":1415,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:16",{"_index":486,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:17",{"_index":478,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:18",{"_index":484,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:19",{"_index":456,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:25",{"_index":458,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:26",{"_index":463,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:27",{"_index":467,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:28",{"_index":465,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:29",{"_index":460,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:30",{"_index":1423,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:31",{"_index":1422,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:32",{"_index":1413,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:48",{"_index":2889,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authenticationservicefactory",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmapping",{"_index":457,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authmapping:iauthmapping",{"_index":501,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authmappingfactory",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":3128,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":771,"title":{},"body":{"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["authpayload",{"_index":464,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authservice",{"_index":2077,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["authservice.authenticated",{"_index":3201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.ready$.pipe",{"_index":3194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authsvc",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["authsvc.user",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["authsvc:baseauthenticationservice",{"_index":1829,"title":{},"body":{"components/LoginPage.html":{},"components/SplashPage.html":{}}}],["authuser",{"_index":1471,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authuser.id",{"_index":1477,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["auto",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["available",{"_index":3116,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["avatars",{"_index":1007,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["await",{"_index":1043,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["b",{"_index":1025,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["b.tostring(16).padstart(2",{"_index":2131,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["backend",{"_index":2163,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["backend:string",{"_index":3172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend_token",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["badge",{"_index":2477,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["base",{"_index":647,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["base.model",{"_index":850,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Season.html":{},"interfaces/Serie.html":{},"interfaces/Task.html":{}}}],["base64response",{"_index":2187,"title":{},"body":{"components/ProfilePage.html":{}}}],["base64response.blob",{"_index":2189,"title":{},"body":{"components/ProfilePage.html":{}}}],["baseauthenticationservice",{"_index":215,"title":{"injectables/BaseAuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseauthenticationservice:107",{"_index":2890,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:109",{"_index":1420,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:12",{"_index":1424,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:13",{"_index":1427,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:139",{"_index":1418,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:148",{"_index":1416,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:15",{"_index":1426,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:16",{"_index":1429,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:163",{"_index":1421,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:17",{"_index":1425,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:18",{"_index":1428,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:52",{"_index":2888,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:57",{"_index":2891,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:69",{"_index":2893,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:72",{"_index":1414,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:87",{"_index":2892,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:95",{"_index":2894,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:99",{"_index":1417,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["basemediaservice",{"_index":503,"title":{"classes/BaseMediaService.html":{}},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basemediaservice:116",{"_index":2930,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["basemediaservice:27",{"_index":1567,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["baserepositoryfirebaseservice",{"_index":510,"title":{"injectables/BaseRepositoryFirebaseService.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"coverage.html":{}}}],["baserepositoryhttpservice",{"_index":623,"title":{"injectables/BaseRepositoryHttpService.html":{}},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["baserepositoryhttpservice:35",{"_index":1750,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:39",{"_index":1747,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:47",{"_index":1749,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:59",{"_index":2934,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:62",{"_index":1746,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:69",{"_index":1748,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:81",{"_index":2932,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:89",{"_index":2936,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:97",{"_index":2933,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserespositorylocalstorageservice",{"_index":670,"title":{"injectables/BaseRespositoryLocalStorageService.html":{}},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"coverage.html":{}}}],["baseservice",{"_index":715,"title":{"injectables/BaseService.html":{}},"body":{"injectables/BaseService.html":{},"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["baseservice:18",{"_index":942,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["baseservice:24",{"_index":943,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["baseservice:28",{"_index":940,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["baseservice:32",{"_index":944,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["baseservice:36",{"_index":941,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/TasksService.html":{}}}],["baseservice:49",{"_index":2800,"title":{},"body":{"injectables/SeriesService.html":{}}}],["bearer",{"_index":772,"title":{},"body":{"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["behaviorsubject",{"_index":473,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["behaviorsubject(false",{"_index":476,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["behaviorsubject(undefined",{"_index":479,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["between",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["blob",{"_index":508,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["blob.type",{"_index":1586,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["block",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["blocked",{"_index":2629,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["bold",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":997,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":171,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["bottom",{"_index":92,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["box",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["brand",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1113,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["breve",{"_index":781,"title":{},"body":{"injectables/CohereService.html":{}}}],["browse",{"_index":3114,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browserlang",{"_index":1783,"title":{},"body":{"injectables/LanguageService.html":{}}}],["browsermodule",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer",{"_index":2122,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["button",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["button.picture",{"_index":2050,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["buttons",{"_index":1169,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["callback",{"_index":3059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cambio",{"_index":2183,"title":{},"body":{"components/ProfilePage.html":{}}}],["cambios",{"_index":1197,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["campo",{"_index":2161,"title":{},"body":{"components/ProfilePage.html":{}}}],["campos",{"_index":2173,"title":{},"body":{"components/ProfilePage.html":{}}}],["canactivate",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":3190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":1170,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["capacitor.config.ts",{"_index":2958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":3011,"title":{},"body":{"dependencies.html":{}}}],["capacitor/cli",{"_index":3013,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":3014,"title":{},"body":{"dependencies.html":{}}}],["capacitor/screen",{"_index":984,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"dependencies.html":{}}}],["capacitorconfig",{"_index":3211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalize",{"_index":745,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["capitalizepipe",{"_index":742,"title":{"pipes/CapitalizePipe.html":{}},"body":{"pipes/CapitalizePipe.html":{},"coverage.html":{}}}],["caption",{"_index":1622,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["caracter",{"_index":2328,"title":{},"body":{"components/RegisterPage.html":{}}}],["caracteres",{"_index":2320,"title":{},"body":{"components/RegisterPage.html":{}}}],["características",{"_index":3076,"title":{},"body":{"index.html":{}}}],["card",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/ProfilePage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["cards",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["cargados",{"_index":1202,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["cargando",{"_index":2137,"title":{},"body":{"components/ProfilePage.html":{}}}],["case",{"_index":1105,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":1094,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{}}}],["catch(error",{"_index":1506,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["center",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["change.data",{"_index":1116,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["change.doc.data",{"_index":1541,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["change.doc.id",{"_index":1539,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["change.id",{"_index":1110,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["change.type",{"_index":1103,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["changedata",{"_index":1538,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["changedata.data",{"_index":1540,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["changelanguage",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{}}}],["changepicture",{"_index":1970,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":1980,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture:string",{"_index":2020,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["char",{"_index":752,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["char.touppercase",{"_index":753,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["characters.directive",{"_index":2234,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["characters.directive.ts",{"_index":1931,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"coverage.html":{}}}],["characters.directive.ts:11",{"_index":1939,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["characters.directive.ts:7",{"_index":1936,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["checkbox",{"_index":2339,"title":{},"body":{"components/RegisterPage.html":{}}}],["chevron",{"_index":2745,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["circles",{"_index":2136,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["class",{"_index":33,"title":{"classes/BaseMediaService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"classes/StrapiMediaService.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["classes",{"_index":504,"title":{},"body":{"classes/BaseMediaService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"classes/StrapiMediaService.html":{},"overview.html":{}}}],["clave",{"_index":2166,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["clear",{"_index":2749,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["close",{"_index":1838,"title":{},"body":{"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":174,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":175,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":176,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":1645,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1646,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":1647,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule",{"_index":1892,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":1894,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_imports",{"_index":1893,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule",{"_index":2227,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":2229,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_imports",{"_index":2228,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule",{"_index":2344,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":2345,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_imports",{"_index":2346,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_seasonspagemodule",{"_index":2527,"title":{},"body":{"modules/SeasonsPageModule.html":{},"overview.html":{}}}],["cluster_seasonspagemodule_declarations",{"_index":2529,"title":{},"body":{"modules/SeasonsPageModule.html":{},"overview.html":{}}}],["cluster_seasonspagemodule_imports",{"_index":2528,"title":{},"body":{"modules/SeasonsPageModule.html":{},"overview.html":{}}}],["cluster_seriespagemodule",{"_index":2790,"title":{},"body":{"modules/SeriesPageModule.html":{},"overview.html":{}}}],["cluster_seriespagemodule_declarations",{"_index":2792,"title":{},"body":{"modules/SeriesPageModule.html":{},"overview.html":{}}}],["cluster_seriespagemodule_imports",{"_index":2791,"title":{},"body":{"modules/SeriesPageModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2840,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2842,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2841,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":688,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["cohereservice",{"_index":754,"title":{"injectables/CohereService.html":{}},"body":{"injectables/CohereService.html":{},"components/SerieModalComponent.html":{},"coverage.html":{}}}],["coinciden",{"_index":2332,"title":{},"body":{"components/RegisterPage.html":{}}}],["col",{"_index":1890,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["collection",{"_index":554,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{}}}],["collection(this.db",{"_index":587,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["collection_subscription_token",{"_index":2980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["collectionchange",{"_index":832,"title":{"interfaces/CollectionChange.html":{}},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["collectionname",{"_index":524,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"miscellaneous/functions.html":{}}}],["collectionref",{"_index":514,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["collectionsubscriptiontoken",{"_index":3057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["color",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["column",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["command",{"_index":776,"title":{},"body":{"injectables/CohereService.html":{}}}],["comment",{"_index":843,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["comments.map(comment",{"_index":926,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["comments_api_url_token",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments_collection_subscription_token",{"_index":2981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments_repository_mapping_token",{"_index":916,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments_repository_token",{"_index":948,"title":{},"body":{"injectables/CommentsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments_resource_name_token",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentscollectionsubscriptionfactory",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentsmappingfactory",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentsmappingfirebaseservice",{"_index":852,"title":{"injectables/CommentsMappingFirebaseService.html":{}},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"coverage.html":{}}}],["commentspage",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{}}}],["commentsrepository",{"_index":935,"title":{},"body":{"injectables/CommentsService.html":{}}}],["commentsrepositoryfactory",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentsrepositoryfirebaseservice",{"_index":904,"title":{"injectables/CommentsRepositoryFirebaseService.html":{}},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"coverage.html":{}}}],["commentsrepositoryfirebaseservice(firebaseconfig",{"_index":3183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commentsservice",{"_index":362,"title":{"injectables/CommentsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CommentsService.html":{},"coverage.html":{}}}],["commonmodule",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{}}}],["complete",{"_index":2908,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["completos",{"_index":2141,"title":{},"body":{"components/ProfilePage.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"modules/SeasonsPageRoutingModule.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SeriesPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["componentprops",{"_index":1049,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"overview.html":{}}}],["components/picture",{"_index":2846,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/season",{"_index":2847,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/serie",{"_index":2844,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":2140,"title":{},"body":{"components/ProfilePage.html":{},"index.html":{}}}],["concisa",{"_index":805,"title":{},"body":{"injectables/CohereService.html":{}}}],["config",{"_index":2960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmed",{"_index":2628,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["confirmpassword",{"_index":2246,"title":{},"body":{"components/RegisterPage.html":{}}}],["conjunto",{"_index":1205,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["console.error('error",{"_index":2148,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["console.error(`error",{"_index":1543,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["console.error(err",{"_index":2304,"title":{},"body":{"components/RegisterPage.html":{}}}],["console.error(error",{"_index":2197,"title":{},"body":{"components/ProfilePage.html":{}}}],["console.log('animación",{"_index":2870,"title":{},"body":{"components/SplashPage.html":{}}}],["console.log('formulario",{"_index":2427,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["console.log(enteredkeyhash",{"_index":2291,"title":{},"body":{"components/RegisterPage.html":{}}}],["console.log(error",{"_index":2033,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["const",{"_index":200,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"modules/HomePageRoutingModule.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageRoutingModule.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":592,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["constraints.push(startafter(lastdoc",{"_index":595,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["constraints.push(where('serieid",{"_index":930,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["constructor(@inject(firebase_config_token",{"_index":881,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["constructor(authmapping",{"_index":454,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["constructor(el",{"_index":1935,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["constructor(fb",{"_index":1805,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["constructor(firebaseconfig",{"_index":523,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["constructor(formbuilder",{"_index":2076,"title":{},"body":{"components/ProfilePage.html":{}}}],["constructor(http",{"_index":625,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["constructor(languageservice",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(modalctrl",{"_index":2465,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["constructor(picturemodal",{"_index":1977,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":768,"title":{},"body":{"injectables/CohereService.html":{},"injectables/LanguageService.html":{},"directives/OnlyAllowedCharactersDirective.html":{}}}],["constructor(repository",{"_index":717,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["constructor(resource",{"_index":675,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["constructor(router",{"_index":2856,"title":{},"body":{"components/SplashPage.html":{}}}],["constructor(seriessvc",{"_index":2668,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["constructor(signinurl",{"_index":2884,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["constructor(translate",{"_index":1770,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructor(uploadurl",{"_index":2927,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["contact",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["contactarme",{"_index":3111,"title":{},"body":{"index.html":{}}}],["contain",{"_index":1875,"title":{},"body":{"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{}}}],["container",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["content",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/CohereService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["contenttype",{"_index":1585,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["continuar",{"_index":2165,"title":{},"body":{"components/ProfilePage.html":{}}}],["contraseña",{"_index":1857,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["contraseñas",{"_index":2331,"title":{},"body":{"components/RegisterPage.html":{}}}],["control",{"_index":2417,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"miscellaneous/functions.html":{}}}],["control.value",{"_index":2421,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["control?.dirty",{"_index":2419,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["controlvalueaccessor",{"_index":1960,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["core/guards/auth.guard",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/logged.guard",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/repositories/repository.factory",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["core/repositories/repository.tokens",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/base",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["core/services/impl/comments.service",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/seasons.service",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/series.service",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/language.service",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["correcto",{"_index":1873,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["country",{"_index":954,"title":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{}},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["cover",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["coverage",{"_index":2955,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":3079,"title":{},"body":{"index.html":{}}}],["creación",{"_index":3078,"title":{},"body":{"index.html":{}}}],["creada",{"_index":2871,"title":{},"body":{"components/SplashPage.html":{}}}],["creadas",{"_index":3084,"title":{},"body":{"index.html":{}}}],["creador",{"_index":3087,"title":{},"body":{"index.html":{}}}],["crear",{"_index":2312,"title":{},"body":{"components/RegisterPage.html":{}}}],["createbaseauthmappingfactory",{"_index":2975,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createbaseauthmappingfactory(auth_mapping_token",{"_index":3182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaseauthmappingfactory(token",{"_index":3049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbasemappingfactory",{"_index":2976,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbasemappingfactory(token",{"_index":3052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbaserepositoryfactory",{"_index":2977,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createbaserepositoryfactory(seasons_repository_token",{"_index":3188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(series_repository_token",{"_index":3189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(token",{"_index":3054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcollectionsubscriptionfactory",{"_index":2978,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createcollectionsubscriptionfactory(collectionname",{"_index":3055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":846,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Model.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["createdat?:string",{"_index":1900,"title":{},"body":{"interfaces/Model.html":{}}}],["createtranslateloader",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1437,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":1487,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["crypto.subtle.digest('sha",{"_index":2125,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["cssclass",{"_index":1167,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["cualquier",{"_index":793,"title":{},"body":{"injectables/CohereService.html":{}}}],["cuenta",{"_index":1869,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["currentlang",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["currentseasons",{"_index":1193,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.findindex",{"_index":1211,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.findindex((p",{"_index":1214,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.push(change.data",{"_index":1212,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.sort((a",{"_index":1213,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons.splice(removeindex",{"_index":1216,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseasons[index",{"_index":1215,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["currentseries",{"_index":1100,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.findindex",{"_index":1108,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.findindex((p",{"_index":1114,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.push(change.data",{"_index":1111,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.sort((a",{"_index":1112,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries.splice(removeindex",{"_index":1118,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentseries[index",{"_index":1115,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["currentvalue",{"_index":2105,"title":{},"body":{"components/ProfilePage.html":{}}}],["currentvalue.tolowercase",{"_index":2110,"title":{},"body":{"components/ProfilePage.html":{}}}],["currentvalue.touppercase",{"_index":2109,"title":{},"body":{"components/ProfilePage.html":{}}}],["cursor",{"_index":2044,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["custom",{"_index":1168,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["custom_elements_schema",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["custommetadata",{"_index":1587,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["danger",{"_index":1817,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["data",{"_index":836,"title":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{}},"body":{"interfaces/CollectionChange.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["data.attributes",{"_index":1299,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data.createdat",{"_index":888,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["data.data.attributes",{"_index":1298,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data.data.id",{"_index":1300,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data.id",{"_index":896,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data.map(item",{"_index":901,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["data.name",{"_index":2501,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["data.numepisodes",{"_index":2503,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.numseason",{"_index":2502,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.picture",{"_index":2770,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["data.picture.url",{"_index":2775,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["data.picture?.url",{"_index":2771,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["data.rating",{"_index":1325,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["data.reaction",{"_index":885,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["data.releasedate",{"_index":2504,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.releaseyear",{"_index":1324,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["data.serieid",{"_index":886,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["data.serieid?.id",{"_index":897,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.synopsis",{"_index":2769,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["data.text",{"_index":884,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["data.user",{"_index":2511,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["data.userid",{"_index":887,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["data:any):paginated",{"_index":1682,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["data:data",{"_index":1290,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["data:data.map((d:data",{"_index":1328,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["data:data.map((d:data|seasonraw",{"_index":1294,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["data:data.map((d:seasonraw",{"_index":2456,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["data:data.map((d:serieraw",{"_index":2617,"title":{},"body":{"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["data:res.data.map((d:seasonraw",{"_index":1913,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["data:res.data.map((d:serieraw",{"_index":1926,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{}}}],["data:seasonraw",{"_index":2455,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["data:serieraw",{"_index":2616,"title":{},"body":{"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["data:t",{"_index":1956,"title":{},"body":{"interfaces/Paginated.html":{}}}],["data[key",{"_index":1281,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["datamapping",{"_index":883,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["datamapping:firebaseseason",{"_index":2500,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["dataurl",{"_index":3060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":2991,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":3058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":1264,"title":{},"body":{"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/Task.html":{},"interfaces/UserRaw.html":{}}}],["date()).toisostring",{"_index":701,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["date().toisostring",{"_index":889,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["date:date",{"_index":2940,"title":{},"body":{"interfaces/Task.html":{}}}],["datos",{"_index":1449,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{}}}],["daulrgtqsx0mbyolsxcpllhnnrzl1jmdtzlndcuh",{"_index":3220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":515,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["de",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":787,"title":{},"body":{"injectables/CohereService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["debe/n",{"_index":2323,"title":{},"body":{"components/RegisterPage.html":{}}}],["declarations",{"_index":170,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decorators",{"_index":1941,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/SerieSelectableComponent.html":{}}}],["default",{"_index":474,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-1.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingStrapi.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":1764,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defecto",{"_index":1403,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"components/SerieSelectableComponent.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{}}}],["del",{"_index":654,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{}}}],["delete",{"_index":517,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["delete(id",{"_index":533,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["deletedoc",{"_index":560,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["deletedoc(docref",{"_index":621,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["deleteoperations",{"_index":2835,"title":{},"body":{"injectables/SeriesService.html":{}}}],["deleteoperations.length",{"_index":2838,"title":{},"body":{"injectables/SeriesService.html":{}}}],["dependencies",{"_index":169,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["deps",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["desarrollada",{"_index":3068,"title":{},"body":{"index.html":{}}}],["desc",{"_index":924,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["description",{"_index":3125,"title":{},"body":{"properties.html":{}}}],["desde",{"_index":1476,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["deselect",{"_index":2660,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["deselect(popover",{"_index":2670,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["deselect(popover:ionpopover|null=null",{"_index":2727,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["desktop",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["destruir",{"_index":1558,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["detail",{"_index":2479,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["details",{"_index":2476,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["detallada",{"_index":783,"title":{},"body":{"injectables/CohereService.html":{}}}],["direction",{"_index":90,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["directive",{"_index":124,"title":{"directives/OnlyAllowedCharactersDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":160,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["dirtyvalues",{"_index":2415,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["dirtyvalues[key",{"_index":2420,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["disabled",{"_index":2657,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["disabled:boolean",{"_index":2705,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["diseñada",{"_index":3093,"title":{},"body":{"index.html":{}}}],["dislike",{"_index":849,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["dismiss",{"_index":2360,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["display",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["div.user",{"_index":2039,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["doc",{"_index":555,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["doc(this.db",{"_index":606,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["doc.data",{"_index":602,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["doc.exists",{"_index":609,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["doc.id",{"_index":601,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["docref",{"_index":605,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["docref.id",{"_index":616,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["docsnap.data",{"_index":1513,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["documentation",{"_index":2956,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1530,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["documentos",{"_index":1198,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["documentreference",{"_index":880,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["donde",{"_index":3088,"title":{},"body":{"index.html":{}}}],["dos",{"_index":2319,"title":{},"body":{"components/RegisterPage.html":{}}}],["dudes",{"_index":3110,"title":{},"body":{"index.html":{}}}],["duration",{"_index":1836,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["dynamic",{"_index":3008,"title":{},"body":{"dependencies.html":{}}}],["dígito",{"_index":2327,"title":{},"body":{"components/RegisterPage.html":{}}}],["e",{"_index":2117,"title":{},"body":{"components/ProfilePage.html":{},"index.html":{}}}],["e.target?.result",{"_index":2119,"title":{},"body":{"components/ProfilePage.html":{}}}],["ease",{"_index":2048,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["edit",{"_index":1150,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["el",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":123,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["elementref",{"_index":961,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["eliminar",{"_index":2825,"title":{},"body":{"injectables/SeriesService.html":{}}}],["email",{"_index":1393,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["email:response.email",{"_index":2654,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["email:response.user.email",{"_index":2649,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["en",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"injectables/CohereService.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"index.html":{}}}],["end",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["enteredkey",{"_index":2155,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["enteredkeyhash",{"_index":2290,"title":{},"body":{"components/RegisterPage.html":{}}}],["entity",{"_index":532,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["entity).pipe(map(res=>this.mapping.getadded(res",{"_index":666,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["entity).pipe(map(res=>this.mapping.getupdated(res",{"_index":668,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["entity.createdat",{"_index":700,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["entity.id",{"_index":698,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["enviar",{"_index":2162,"title":{},"body":{"components/ProfilePage.html":{}}}],["environment",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"injectables/CohereService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apikey",{"_index":763,"title":{},"body":{"injectables/CohereService.html":{}}}],["environment.apiurl}/api",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/auth/local",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/auth/local/register",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/upload",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/users/me",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.firebaseconfig",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["eres",{"_index":2314,"title":{},"body":{"components/RegisterPage.html":{}}}],["err",{"_index":1156,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["err.error.error.message",{"_index":1854,"title":{},"body":{"components/LoginPage.html":{}}}],["err.error?.error?.message",{"_index":1853,"title":{},"body":{"components/LoginPage.html":{}}}],["error",{"_index":1155,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["error(\"backend",{"_index":3179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(\"id",{"_index":711,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["error(\"method",{"_index":2459,"title":{},"body":{"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["error('no",{"_index":1473,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["error('usuario",{"_index":1579,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["errormessage",{"_index":1851,"title":{},"body":{"components/LoginPage.html":{},"components/SerieModalComponent.html":{}}}],["es",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["escribe",{"_index":778,"title":{},"body":{"injectables/CohereService.html":{}}}],["español",{"_index":1777,"title":{},"body":{"injectables/LanguageService.html":{}}}],["especial",{"_index":2329,"title":{},"body":{"components/RegisterPage.html":{}}}],["específicos",{"_index":1726,"title":{},"body":{"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{}}}],["esperar",{"_index":3197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esta",{"_index":3067,"title":{},"body":{"index.html":{}}}],["estar",{"_index":792,"title":{},"body":{"injectables/CohereService.html":{}}}],["estas",{"_index":3083,"title":{},"body":{"index.html":{}}}],["estilos",{"_index":2475,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["ev",{"_index":2683,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["event",{"_index":1938,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["event.stoppropagation",{"_index":1954,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{}}}],["event.target",{"_index":2114,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["event.target.value.tolowercase",{"_index":1122,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["exactamente",{"_index":803,"title":{},"body":{"injectables/CohereService.html":{}}}],["excepto",{"_index":2175,"title":{},"body":{"components/ProfilePage.html":{}}}],["existe",{"_index":1209,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["existing",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["existingindex",{"_index":1107,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["exitoso",{"_index":1847,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["experiencia",{"_index":3094,"title":{},"body":{"index.html":{}}}],["explicar",{"_index":815,"title":{},"body":{"injectables/CohereService.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}}}],["exports",{"_index":173,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageRoutingModule.html":{},"overview.html":{}}}],["ext",{"_index":1624,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["extendidos",{"_index":1474,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["extends",{"_index":845,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Season.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["f44336",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["f4511e",{"_index":1886,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["fab",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["factory",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["factoryprovider",{"_index":3051,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":998,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/variables.html":{}}}],["favoritas",{"_index":3075,"title":{},"body":{"index.html":{}}}],["fb",{"_index":1811,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["fb8c00",{"_index":1887,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["fb:formbuilder",{"_index":2404,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["fetch(this.selectedimage",{"_index":2188,"title":{},"body":{"components/ProfilePage.html":{}}}],["ff5722",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["ff9800",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["ffe9e2",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["fff",{"_index":2478,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["fff5f2",{"_index":1879,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["ffffff",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["field",{"_index":2342,"title":{},"body":{"components/RegisterPage.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["fileloader",{"_index":1986,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":2035,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files?.length>0",{"_index":2027,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":2028,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":2025,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader:htmlinputelement",{"_index":2024,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":1581,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["filereader",{"_index":2029,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["filter",{"_index":1430,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["filter(isready",{"_index":3195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtered",{"_index":1125,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["filteredseasons",{"_index":1185,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["filteredseries",{"_index":1076,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["filteredvalue",{"_index":1951,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["filters",{"_index":539,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filters)).pipe",{"_index":928,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["filters:searchparams",{"_index":661,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filters[${k}]=${v",{"_index":1352,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filters['serieid",{"_index":929,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["finally",{"_index":2151,"title":{},"body":{"components/ProfilePage.html":{}}}],["firebase",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthMappingService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.service.ts",{"_index":513,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"coverage.html":{}}}],["firebase.service.ts:112",{"_index":911,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:124",{"_index":907,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:130",{"_index":915,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:138",{"_index":908,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:14",{"_index":2491,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:18",{"_index":2497,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:22",{"_index":861,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:27",{"_index":874,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:30",{"_index":550,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:31",{"_index":527,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:32",{"_index":906,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:34",{"_index":2765,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:38",{"_index":877,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:41",{"_index":546,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:42",{"_index":2494,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:43",{"_index":913,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:49",{"_index":867,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:51",{"_index":2767,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:53",{"_index":541,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:54",{"_index":2495,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:60",{"_index":870,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:62",{"_index":2492,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:63",{"_index":914,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:65",{"_index":2496,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:67",{"_index":2766,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:68",{"_index":2493,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["firebase.service.ts:69",{"_index":863,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:71",{"_index":2764,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase.service.ts:73",{"_index":872,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:76",{"_index":544,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:77",{"_index":865,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{}}}],["firebase.service.ts:82",{"_index":909,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["firebase.service.ts:87",{"_index":531,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:92",{"_index":549,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:99",{"_index":534,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase/app",{"_index":552,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase/auth",{"_index":1392,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["firebase/firestore",{"_index":567,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["firebase/storage",{"_index":1573,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["firebase_collection_token",{"_index":573,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebase_config_token",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseauthenticationservice",{"_index":1069,"title":{"injectables/FirebaseAuthenticationService.html":{}},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["firebaseauthenticationservice(firebaseconfig",{"_index":3181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseauthmappingservice",{"_index":1375,"title":{"injectables/FirebaseAuthMappingService.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{},"coverage.html":{}}}],["firebasecollectionsubscriptionservice",{"_index":1515,"title":{"injectables/FirebaseCollectionSubscriptionService.html":{}},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{}}}],["firebasecomment",{"_index":875,"title":{"interfaces/FirebaseComment.html":{}},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"coverage.html":{}}}],["firebaseconfig",{"_index":528,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"miscellaneous/variables.html":{}}}],["firebaseconfig:any",{"_index":3173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasemediaservice",{"_index":1564,"title":{"injectables/FirebaseMediaService.html":{}},"body":{"injectables/FirebaseMediaService.html":{},"coverage.html":{}}}],["firebasemediaservice(firebaseconfig",{"_index":3186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseseason",{"_index":1596,"title":{"interfaces/FirebaseSeason.html":{}},"body":{"interfaces/FirebaseSeason.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"coverage.html":{}}}],["firebaseserie",{"_index":1606,"title":{"interfaces/FirebaseSerie.html":{}},"body":{"interfaces/FirebaseSerie.html":{},"injectables/SeriesMappingFirebaseService.html":{},"coverage.html":{}}}],["firebasesignout",{"_index":1438,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["firebaseuser",{"_index":1380,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["firestore",{"_index":878,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["first",{"_index":1751,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["firstvaluefrom",{"_index":1432,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this._ready.pipe(filter(ready",{"_index":1469,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this._user",{"_index":1472,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["fit",{"_index":1874,"title":{},"body":{"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["fixed",{"_index":2336,"title":{},"body":{"components/RegisterPage.html":{}}}],["flex",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["fn",{"_index":1992,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["focused",{"_index":2741,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["font",{"_index":103,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["for(let",{"_index":690,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["forkjoin",{"_index":2806,"title":{},"body":{"injectables/SeriesService.html":{}}}],["forkjoin(deleteoperations).pipe",{"_index":2839,"title":{},"body":{"injectables/SeriesService.html":{}}}],["forkjoin(serieswithseasons$).pipe",{"_index":2820,"title":{},"body":{"injectables/SeriesService.html":{}}}],["form",{"_index":1876,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formats",{"_index":1610,"title":{"interfaces/Formats.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["formbuilder",{"_index":1806,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formcontrol",{"_index":2389,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["formdata",{"_index":1637,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"components/SerieModalComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["formdata.append('files",{"_index":1638,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["formgroup",{"_index":1821,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formgroup.get(key",{"_index":2418,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formgroup:formgroup",{"_index":2390,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["formsmodule",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["formvalue",{"_index":2286,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.adminkey",{"_index":2300,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.adminkey?.trim",{"_index":2289,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.email",{"_index":2296,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.name",{"_index":2298,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.password",{"_index":2297,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.surname",{"_index":2299,"title":{},"body":{"components/RegisterPage.html":{}}}],["formvalue.username",{"_index":2295,"title":{},"body":{"components/RegisterPage.html":{}}}],["forwardref",{"_index":2005,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":712,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["framework",{"_index":3129,"title":{},"body":{"properties.html":{}}}],["frase",{"_index":814,"title":{},"body":{"injectables/CohereService.html":{}}}],["from(adddoc(this.collectionref",{"_index":612,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(deletedoc(docref)).pipe",{"_index":933,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(firebasesignout(this.auth)).pipe",{"_index":1507,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(getdoc(docref)).pipe",{"_index":607,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(getdoc(userref",{"_index":1511,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(getdocs(q)).pipe",{"_index":925,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":1482,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(this.auth.getcurrentuser()).pipe",{"_index":1577,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["from(this.getlastdocumentofpreviouspage(page",{"_index":589,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(updatedoc(docref",{"_index":617,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["from(updatedoc(userref",{"_index":1510,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(uploadbytes(storageref",{"_index":1591,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["full",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":3044,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1950,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{}}}],["generado",{"_index":1702,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["generar",{"_index":2596,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["generatesynopsis",{"_index":757,"title":{},"body":{"injectables/CohereService.html":{},"components/SerieModalComponent.html":{}}}],["generatesynopsis(title",{"_index":759,"title":{},"body":{"injectables/CohereService.html":{}}}],["gestionar",{"_index":3072,"title":{},"body":{"index.html":{}}}],["get('seasons.messages.delete_confirm",{"_index":1244,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["get('series.messages.delete_confirm",{"_index":1165,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["getadded",{"_index":854,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getadded(data",{"_index":862,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getadded(data:any):t",{"_index":1684,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getadminkey",{"_index":2270,"title":{},"body":{"components/RegisterPage.html":{}}}],["getall",{"_index":518,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["getall():observable",{"_index":1712,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["getall(page",{"_index":536,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["getall(page:number",{"_index":659,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"injectables/StrapiRepositoryService.html":{}}}],["getauth",{"_index":1435,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getauth(app",{"_index":1444,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getbyid",{"_index":519,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["getbyid(id",{"_index":543,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["getbyuserid",{"_index":1723,"title":{},"body":{"interfaces/ISeasonsService.html":{},"injectables/SeasonsService.html":{}}}],["getbyuserid(userid",{"_index":1724,"title":{},"body":{"interfaces/ISeasonsService.html":{},"injectables/SeasonsService.html":{}}}],["getcommentsbyserieid",{"_index":905,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{}}}],["getcommentsbyserieid(serieid",{"_index":912,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{}}}],["getconfirmpassword",{"_index":2268,"title":{},"body":{"components/RegisterPage.html":{}}}],["getcurrentlang",{"_index":1767,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrentuser",{"_index":449,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["getcurrentuser():promise",{"_index":1676,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["getdeleted",{"_index":855,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getdeleted(data",{"_index":864,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getdeleted(data:any):t",{"_index":1686,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getdirtyvalues",{"_index":2361,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["getdirtyvalues(formgroup",{"_index":2366,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["getdoc",{"_index":556,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["getdoc(userdoc",{"_index":1455,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getdocs",{"_index":557,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["getdocs(q",{"_index":598,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["getdownloadurl",{"_index":1571,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getdownloadurl(snapshot.ref",{"_index":1594,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getemail",{"_index":1823,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["getfirestore",{"_index":553,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["getfirestore(app",{"_index":585,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["getfirestore(initializeapp(firebaseconfig",{"_index":882,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["getheaders",{"_index":1345,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["getlastdocumentofpreviouspage",{"_index":521,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["getlastdocumentofpreviouspage(page",{"_index":545,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["getname",{"_index":2097,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["getnumepisodes",{"_index":2381,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["getnumseason",{"_index":2379,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["getone",{"_index":856,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getone(data",{"_index":866,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getone(data:any):t",{"_index":1683,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getpaginated",{"_index":857,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getpaginated(page",{"_index":868,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getpaginated(page:number",{"_index":1289,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getpassword",{"_index":1825,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["getrating",{"_index":2385,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["getreleasedate",{"_index":2383,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["getreleaseyear",{"_index":2571,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["getserieid",{"_index":2387,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["getserieswithseasons",{"_index":2798,"title":{},"body":{"injectables/SeriesService.html":{}}}],["getserieswithseasons(page",{"_index":2801,"title":{},"body":{"injectables/SeriesService.html":{}}}],["getstorage",{"_index":1568,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getstorage(app",{"_index":1576,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getstoredlanguage",{"_index":1768,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getsurname",{"_index":2099,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["getsynopsis",{"_index":2569,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["getting",{"_index":3065,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1412,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["gettoken():string",{"_index":1735,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["getupdated",{"_index":858,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["getupdated(data",{"_index":871,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["getupdated(data:any):t",{"_index":1685,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getusername",{"_index":2095,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["google/generative",{"_index":3016,"title":{},"body":{"dependencies.html":{}}}],["gracias",{"_index":3105,"title":{},"body":{"index.html":{}}}],["gradient(145deg",{"_index":1878,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["gradient(45deg",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["graph",{"_index":3115,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":2743,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["grid",{"_index":115,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["group",{"_index":2341,"title":{},"body":{"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["grow",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["guardar",{"_index":2182,"title":{},"body":{"components/ProfilePage.html":{}}}],["h1",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["h2",{"_index":2481,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["handleimageerror",{"_index":2661,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["handleimageerror(event",{"_index":2673,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["handler",{"_index":1172,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["hash",{"_index":1623,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["hasharray",{"_index":2127,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hasharray.map((b",{"_index":2130,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hashbuffer",{"_index":2124,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hashed",{"_index":2157,"title":{},"body":{"components/ProfilePage.html":{}}}],["hashstring",{"_index":2073,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hashstring(str",{"_index":2081,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["hasvalue",{"_index":1967,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["hasvalue:boolean",{"_index":2011,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["hay",{"_index":1727,"title":{},"body":{"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{}}}],["header",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["headers",{"_index":769,"title":{},"body":{"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["height",{"_index":56,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["hidden",{"_index":2042,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["highlight",{"_index":1882,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["home",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Country.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"classes/Port.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["home.page",{"_index":1650,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":986,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["home.page.scss",{"_index":987,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["homepage",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{},"properties.html":{}}}],["homepagemodule",{"_index":1644,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":1648,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["hostlistener",{"_index":1943,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["hostlistener('input",{"_index":1942,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["hostlisteners",{"_index":1934,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["hover",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["html",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["htmlimageelement",{"_index":2731,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["htmlinputelement",{"_index":1947,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["htmlioninfinitescrollelement",{"_index":1139,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["http",{"_index":630,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["http.service",{"_index":1337,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["http.service.ts",{"_index":624,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"coverage.html":{}}}],["http.service.ts:18",{"_index":629,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:31",{"_index":633,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:35",{"_index":634,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:39",{"_index":631,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:43",{"_index":635,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:47",{"_index":632,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http://localhost:3000/seasons",{"_index":1907,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["http://localhost:3000/series",{"_index":1925,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{}}}],["http:httpclient",{"_index":1910,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpclient:httpclient",{"_index":1635,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["httpclientmodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":766,"title":{},"body":{"injectables/CohereService.html":{}}}],["https://api.cohere.ai/v1/generate",{"_index":765,"title":{},"body":{"injectables/CohereService.html":{}}}],["https://ionicframework.com",{"_index":3127,"title":{},"body":{"properties.html":{}}}],["https://youtu.be/mquyndeqhjq",{"_index":3100,"title":{},"body":{"index.html":{}}}],["https://youtu.be/zyzx6fsg_wc",{"_index":3102,"title":{},"body":{"index.html":{}}}],["iauthentication",{"_index":488,"title":{"interfaces/IAuthentication.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthentication.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{}}}],["iauthmapping",{"_index":455,"title":{"interfaces/IAuthMapping.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["ibasemapping",{"_index":526,"title":{"interfaces/IBaseMapping.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ibaserepository",{"_index":570,"title":{"interfaces/IBaseRepository.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ITasksRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["ibaseservice",{"_index":727,"title":{"interfaces/IBaseService.html":{}},"body":{"injectables/BaseService.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"coverage.html":{}}}],["icollectionsubscription",{"_index":840,"title":{"interfaces/ICollectionSubscription.html":{}},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["icommentsrepository",{"_index":917,"title":{"interfaces/ICommentsRepository.html":{}},"body":{"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/ICommentsRepository.html":{},"coverage.html":{}}}],["icommentsservice",{"_index":946,"title":{"interfaces/ICommentsService.html":{}},"body":{"injectables/CommentsService.html":{},"interfaces/ICommentsService.html":{},"coverage.html":{}}}],["icon",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["id",{"_index":535,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Formats.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}}}],["id.tostring",{"_index":1301,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["id:d.id",{"_index":1914,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["id:data.id",{"_index":2457,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["id:number",{"_index":1619,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["id:response.id.tostring",{"_index":2650,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["id:response.user.id.tostring",{"_index":2645,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["id:string",{"_index":898,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Model.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["identifier",{"_index":1856,"title":{},"body":{"components/LoginPage.html":{},"interfaces/StrapiSignIn.html":{},"coverage.html":{}}}],["identifier:payload.email",{"_index":2640,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["identifier:string",{"_index":2635,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["idioma",{"_index":794,"title":{},"body":{"injectables/CohereService.html":{}}}],["ids",{"_index":1206,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["if(_season",{"_index":2395,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["if(_serie",{"_index":2577,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["if(fileloader.files",{"_index":2026,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["if(id",{"_index":2716,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["if(index>=0",{"_index":707,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["if(obj",{"_index":2014,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["if(page",{"_index":1355,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["if(popover",{"_index":2729,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["if(propagate",{"_index":2719,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["if(this.page",{"_index":1032,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["image",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["imagen",{"_index":2186,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["img",{"_index":2043,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["imgelement",{"_index":2730,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["imgelement.src",{"_index":2732,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["implemented",{"_index":2460,"title":{},"body":{"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{}}}],["import('./pages/about/about.module').then",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/comments/comments.page').then(m",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/login/login.module').then",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/profile/profile.module').then",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/register/register.module').then",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/seasons/seasons.module').then",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/series/series.module').then",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/splash/splash.page').then(m",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":2052,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["imports",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{}}}],["incluir",{"_index":806,"title":{},"body":{"injectables/CohereService.html":{}}}],["incorrecta",{"_index":2167,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["incorrectos",{"_index":1858,"title":{},"body":{"components/LoginPage.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2351,"title":{},"body":{"interfaces/SearchParams.html":{}}}],["infinite",{"_index":2752,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["infinitescrollcustomevent",{"_index":967,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}}}],["información",{"_index":3081,"title":{},"body":{"index.html":{}}}],["ingles",{"_index":1781,"title":{},"body":{"injectables/LanguageService.html":{}}}],["inherited",{"_index":939,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["inicia",{"_index":2313,"title":{},"body":{"components/RegisterPage.html":{}}}],["iniciar",{"_index":1867,"title":{},"body":{"components/LoginPage.html":{}}}],["inicio",{"_index":1852,"title":{},"body":{"components/LoginPage.html":{}}}],["initializeapp",{"_index":551,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["initializeapp(firebaseconfig",{"_index":583,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["inject",{"_index":487,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["inject(api_url_token",{"_index":645,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(auth_mapping_token",{"_index":1441,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_me_api_url_token",{"_index":2901,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_sign_in_api_url_token",{"_index":2899,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_sign_up_api_url_token",{"_index":2900,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_token",{"_index":644,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["inject(baseauthenticationservice",{"_index":3192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(comments_repository_mapping_token",{"_index":919,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["inject(comments_repository_token",{"_index":950,"title":{},"body":{"injectables/CommentsService.html":{}}}],["inject(firebase_collection_token",{"_index":581,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["inject(firebase_config_token",{"_index":580,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["inject(repository_mapping_token",{"_index":582,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(repository_token",{"_index":733,"title":{},"body":{"injectables/BaseService.html":{}}}],["inject(resource_name_token",{"_index":651,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(router",{"_index":3193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(seasons_collection_subscription_token",{"_index":1187,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["inject(seasons_repository_token",{"_index":2540,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["inject(series_collection_subscription_token",{"_index":1088,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["inject(series_repository_token",{"_index":2808,"title":{},"body":{"injectables/SeriesService.html":{}}}],["inject(strapi_auth_token",{"_index":1342,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["inject(tasks_repository_token",{"_index":2947,"title":{},"body":{"injectables/TasksService.html":{}}}],["inject(upload_api_url_token",{"_index":1633,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["injectable",{"_index":438,"title":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["injectables",{"_index":439,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":3050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectiontoken('apiurl",{"_index":3140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authmeapiurl",{"_index":3142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authsigninapiurl",{"_index":3143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authsignupapiurl",{"_index":3144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('backend",{"_index":3146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('commentsapiurl",{"_index":3148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('commentsresourcename",{"_index":3152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('firebase_collection_token",{"_index":3153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('firebase_config_token",{"_index":3154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iauthentication",{"_index":3145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('icommentsrepository",{"_index":3151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iseasonsrepository",{"_index":3161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iseriesrepository",{"_index":3166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('istrapiauthentication",{"_index":3168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('itasksrepository",{"_index":3170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('resourcename",{"_index":3157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('seasonsapiurl",{"_index":3158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('seasonsresourcename",{"_index":3162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('seriesapiurl",{"_index":3163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('seriesresourcename",{"_index":3167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('tasksapiurl",{"_index":3169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('uploadapiurl",{"_index":3171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('collectionsubscriptiontoken",{"_index":3147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('commentscollectionsubscriptiontoken",{"_index":3149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iauthmapping",{"_index":3141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('ibaserepositorymapping",{"_index":3155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('icommentsrepositorymapping",{"_index":3150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iseasonsrepositorymapping",{"_index":3160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iseriesrepositorymapping",{"_index":3165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('repository_token",{"_index":3156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('seasonscollectionsubscriptiontoken",{"_index":3159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('seriescollectionsubscriptiontoken",{"_index":3164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inner",{"_index":2054,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["input",{"_index":1884,"title":{},"body":{"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["input('apponlyallowedcharacters",{"_index":1944,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["input.files",{"_index":2115,"title":{},"body":{"components/ProfilePage.html":{}}}],["input.files[0",{"_index":2116,"title":{},"body":{"components/ProfilePage.html":{}}}],["input.value",{"_index":1953,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["input.value.replace(regex",{"_index":1952,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["inputs",{"_index":1933,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["intefaces/base",{"_index":571,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{}}}],["intefaces/comments",{"_index":918,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["interface",{"_index":831,"title":{"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}},"body":{"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["interfaces",{"_index":833,"title":{},"body":{"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"overview.html":{}}}],["interfaces/auth",{"_index":491,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["interfaces/authentication.interface",{"_index":489,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{}}}],["interfaces/base",{"_index":728,"title":{},"body":{"injectables/BaseService.html":{}}}],["interfaces/collection",{"_index":1532,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["interfaces/comments",{"_index":947,"title":{},"body":{"injectables/CommentsService.html":{}}}],["interfaces/strapi",{"_index":1616,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["interfaces/tasks",{"_index":2946,"title":{},"body":{"injectables/TasksService.html":{}}}],["interfaz",{"_index":3091,"title":{},"body":{"index.html":{}}}],["intrigante",{"_index":809,"title":{},"body":{"injectables/CohereService.html":{}}}],["introducir",{"_index":1871,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["invalid",{"_index":1855,"title":{},"body":{"components/LoginPage.html":{}}}],["inválido",{"_index":2428,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["io.ionic.starter",{"_index":3213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["ionic",{"_index":3069,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ionic/angular",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"interfaces/SerieAttributes.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"interfaces/UserRaw.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{}}}],["ionicmodule.forroot",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":3028,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["ioninput",{"_index":2703,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["ionpopover",{"_index":2671,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["isadmin",{"_index":1073,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["isanimating",{"_index":1014,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["isdisabled",{"_index":1968,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["isdisabled:boolean",{"_index":2010,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["iseasonsrepository",{"_index":1719,"title":{"interfaces/ISeasonsRepository.html":{}},"body":{"interfaces/ISeasonsRepository.html":{},"injectables/SeasonsService.html":{},"coverage.html":{}}}],["iseasonsservice",{"_index":1721,"title":{"interfaces/ISeasonsService.html":{}},"body":{"interfaces/ISeasonsService.html":{},"injectables/SeasonsService.html":{},"coverage.html":{}}}],["iseriesrepository",{"_index":1728,"title":{"interfaces/ISeriesRepository.html":{}},"body":{"interfaces/ISeriesRepository.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["iseriesservice",{"_index":1730,"title":{"interfaces/ISeriesService.html":{}},"body":{"interfaces/ISeriesService.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["isgeneratingsynopsis",{"_index":2553,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["isloggedin",{"_index":3205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ismobile",{"_index":2359,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["isready",{"_index":3196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isseasonraw",{"_index":1296,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["isseasonraw(data",{"_index":1297,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["isserieraw",{"_index":1329,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["isserieraw(data",{"_index":1330,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["istrapiauthentication",{"_index":640,"title":{"interfaces/IStrapiAuthentication.html":{}},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isuppercase",{"_index":2070,"title":{},"body":{"components/ProfilePage.html":{}}}],["isweb",{"_index":996,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["itasksrepository",{"_index":1736,"title":{"interfaces/ITasksRepository.html":{}},"body":{"interfaces/ITasksRepository.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["itasksservice",{"_index":1740,"title":{"interfaces/ITasksService.html":{}},"body":{"interfaces/ITasksService.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["item",{"_index":107,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["items",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"interfaces/SeasonRaw.html":{},"components/SeasonViewComponent.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["items.length",{"_index":931,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["js",{"_index":3035,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(this._items",{"_index":704,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["jsonserverrepositoryservice",{"_index":1742,"title":{"injectables/JsonServerRepositoryService.html":{}},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{}}}],["justify",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["jwt",{"_index":2631,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["jwt_token",{"_index":2883,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["jwt_token:string|null",{"_index":2898,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["k",{"_index":823,"title":{},"body":{"injectables/CohereService.html":{}}}],["key",{"_index":1695,"title":{},"body":{"interfaces/IBaseRepository.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"components/SerieModalComponent.html":{}}}],["keyof",{"_index":2179,"title":{},"body":{"components/ProfilePage.html":{}}}],["k}_like=${v",{"_index":1755,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["la",{"_index":648,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/RegisterPage.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{}}}],["label",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{}}}],["lang",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{}}}],["lang_key",{"_index":1766,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languageservice",{"_index":214,"title":{"injectables/LanguageService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{},"components/SerieModalComponent.html":{},"coverage.html":{}}}],["languague",{"_index":760,"title":{},"body":{"injectables/CohereService.html":{},"components/SerieModalComponent.html":{}}}],["languague).subscribe",{"_index":2593,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["large",{"_index":1612,"title":{"interfaces/Large.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["large:data.picture.large",{"_index":2622,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["large:string",{"_index":2549,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["las",{"_index":1555,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/RegisterPage.html":{},"injectables/SeriesService.html":{},"index.html":{}}}],["last",{"_index":1754,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"components/RegisterPage.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{}}}],["lastdoc",{"_index":594,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["lastvaluefrom",{"_index":970,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["lastvaluefrom(this.authservice.updateuser(this.user.id",{"_index":2195,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.mediaservice.upload(blob",{"_index":2191,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.seriessvc.getbyid(id",{"_index":2718,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["lastvaluefrom(this.seriesvc.getall",{"_index":1151,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["lastvaluefrom(this.translateservice.get('common.error.load",{"_index":2149,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.translateservice.get('common.error.save",{"_index":2198,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.translateservice.get('ia.error",{"_index":2597,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["lastvaluefrom(this.translateservice.get('ia.generating",{"_index":2590,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["lastvaluefrom(this.translateservice.get('ia.name_required",{"_index":2587,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["left",{"_index":116,"title":{},"body":{"components/AboutPage.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["legend",{"_index":121,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"modules/SeasonsPageModule.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"overview.html":{}}}],["limit",{"_index":562,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["limit(pagesize",{"_index":593,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["limpiar",{"_index":1553,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/ProfilePage.html":{}}}],["linear",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["list",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["literal",{"_index":1387,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{}}}],["lo",{"_index":1400,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["loadchildren",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadcomponent",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadedids",{"_index":1081,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["loader",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loading",{"_index":2133,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["loading.dismiss",{"_index":2152,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["loading.present",{"_index":2139,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["loadingcontroller",{"_index":2079,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["loadingctrl",{"_index":2555,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["loadmoreseasons(notify",{"_index":1229,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["loadmoreseasons(notify:htmlioninfinitescrollelement",{"_index":1039,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["loadmoreseries",{"_index":2662,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["loadmoreseries(notify",{"_index":1138,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["loadmoreseries(notify:htmlioninfinitescrollelement",{"_index":1031,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SerieSelectableComponent.html":{}}}],["loadseasons",{"_index":1035,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["loadseries",{"_index":1017,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["local",{"_index":671,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"classes/Country-2.html":{},"classes/Port-2.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localecompare(b.name",{"_index":1027,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["localstorage.getitem('seasons",{"_index":2904,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.getitem(this.lang_key",{"_index":1791,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.removeitem('seasons",{"_index":2920,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.setitem(\"seasons",{"_index":2911,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.setitem(this.lang_key",{"_index":1793,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem(this.resource",{"_index":703,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["loggedguard",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["login.page",{"_index":1897,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":1796,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1795,"title":{},"body":{"components/LoginPage.html":{}}}],["loginform",{"_index":1797,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":136,"title":{"components/LoginPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpagemodule",{"_index":1891,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules.html":{},"overview.html":{}}}],["loginpageroutingmodule",{"_index":1895,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["logo",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["logout",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["los",{"_index":1699,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"interfaces/SearchParams.html":{},"index.html":{}}}],["lottie",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["lottiecomponent",{"_index":2851,"title":{},"body":{"components/SplashPage.html":{}}}],["m",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.aboutpagemodule",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.commentspage",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.registerpagemodule",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.seasonspagemodule",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.seriespagemodule",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.splashpage",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["maneja",{"_index":1401,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["manejo",{"_index":2185,"title":{},"body":{"components/ProfilePage.html":{}}}],["map",{"_index":568,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieRaw.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["map(([k",{"_index":1350,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["map((response",{"_index":829,"title":{},"body":{"injectables/CohereService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["map(doc",{"_index":608,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["map(docref",{"_index":614,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["map(docsnap",{"_index":1512,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["map(entity",{"_index":620,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(isloggedin",{"_index":3204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(lastdoc",{"_index":591,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["map(res",{"_index":2543,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["map(seasonspaginated",{"_index":2815,"title":{},"body":{"injectables/SeriesService.html":{}}}],["map(serieswithseasons",{"_index":2821,"title":{},"body":{"injectables/SeriesService.html":{}}}],["map(snapshot",{"_index":599,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["map(url",{"_index":1595,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["map(user",{"_index":1509,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["map(usercredential",{"_index":1484,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["mappeddata",{"_index":1277,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.name",{"_index":1280,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.numepisodes",{"_index":1283,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.numseason",{"_index":1282,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.picture",{"_index":2774,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["mappeddata.rating",{"_index":1285,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.releasedate",{"_index":1284,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.releaseyear",{"_index":2773,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["mappeddata.serieid",{"_index":1286,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mappeddata.synopsis",{"_index":2772,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["mappeddata.user",{"_index":1287,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["mapping",{"_index":525,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapping.interface",{"_index":492,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserRaw.html":{}}}],["mapping.interface.ts",{"_index":1656,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{},"coverage.html":{}}}],["mapping.interface.ts:10",{"_index":1679,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:11",{"_index":1678,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:12",{"_index":1680,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:13",{"_index":1681,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:5",{"_index":1659,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["mapping.interface.ts:6",{"_index":1661,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["mapping.interface.ts:7",{"_index":1658,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:8",{"_index":1660,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:9",{"_index":1657,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.service",{"_index":2897,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["mapping.service.ts",{"_index":1376,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["mapping.service.ts:10",{"_index":1385,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:102",{"_index":2877,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:17",{"_index":1391,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:25",{"_index":1383,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:37",{"_index":1389,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:49",{"_index":1381,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:66",{"_index":2879,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:72",{"_index":2881,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:81",{"_index":2878,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:91",{"_index":2880,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping:iauthmapping",{"_index":3177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapping:ibasemapping",{"_index":657,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["mappingtoken",{"_index":3056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["margin",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["matcardmodule",{"_index":1651,"title":{},"body":{"modules/HomePageModule.html":{}}}],["matching",{"_index":165,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this._items.length",{"_index":691,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["math.ceil(total",{"_index":900,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["math.min",{"_index":694,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["max",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["max_tokens",{"_index":820,"title":{},"body":{"injectables/CohereService.html":{}}}],["mayúscula",{"_index":2325,"title":{},"body":{"components/RegisterPage.html":{}}}],["me():observable",{"_index":502,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["me(response",{"_index":1379,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["me(response:any):user",{"_index":1666,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["measurementid",{"_index":3232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":113,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["media.service",{"_index":1253,"title":{},"body":{"interfaces/Data.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{}}}],["media.service.ts",{"_index":505,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["media.service.ts:109",{"_index":2929,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["media.service.ts:18",{"_index":1566,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["media.service.ts:4",{"_index":509,"title":{},"body":{"classes/BaseMediaService.html":{}}}],["media.service.ts:99",{"_index":2928,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["mediaraw",{"_index":1255,"title":{"interfaces/MediaRaw.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["mediaservice",{"_index":2078,"title":{},"body":{"components/ProfilePage.html":{}}}],["mediaservicefactory",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":1613,"title":{"interfaces/Medium.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["medium:data.picture.medium",{"_index":2623,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["medium:string",{"_index":2550,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["menos",{"_index":2318,"title":{},"body":{"components/RegisterPage.html":{}}}],["mensaje",{"_index":2169,"title":{},"body":{"components/ProfilePage.html":{}}}],["menu",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.about",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["menu.home",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.logout",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.profile",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.seasons",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.series",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.title",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap",{"_index":569,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["mergemap(entity",{"_index":932,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["mergemap(q",{"_index":597,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["message",{"_index":1819,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["messagingsenderid",{"_index":3229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meta",{"_index":1259,"title":{"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/FirebaseMediaService.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"pipes/TogglePasswordPipe.html":{}}}],["metadata)).pipe",{"_index":1592,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{}}}],["meurl",{"_index":2886,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["meurl.replace('/users/me",{"_index":2902,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["meurl:string",{"_index":3176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mi",{"_index":3223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middleware",{"_index":3026,"title":{},"body":{"dependencies.html":{}}}],["mime",{"_index":1625,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["min",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["minúscula",{"_index":2326,"title":{},"body":{"components/RegisterPage.html":{}}}],["miscellaneous",{"_index":3043,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mitad",{"_index":813,"title":{},"body":{"injectables/CohereService.html":{}}}],["mobile",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["mockuplist:any",{"_index":689,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["modal",{"_index":1047,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal'},{'name",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["modal.auto",{"_index":2053,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modal.component",{"_index":1065,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"modules/SharedModule.html":{}}}],["modal.component.html",{"_index":2358,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.scss",{"_index":2357,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts",{"_index":2356,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:104",{"_index":2365,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts:106",{"_index":2568,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:110",{"_index":2570,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:114",{"_index":2572,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:118",{"_index":2573,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:122",{"_index":2561,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:14",{"_index":2371,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:141",{"_index":2562,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:15",{"_index":2373,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:156",{"_index":2559,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:16",{"_index":2372,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts:17",{"_index":2370,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts:18",{"_index":2374,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["modal.component.ts:19",{"_index":2565,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:20",{"_index":2364,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:21",{"_index":2558,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:24",{"_index":2363,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:32",{"_index":2557,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:34",{"_index":2362,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:53",{"_index":2368,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:55",{"_index":2378,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:56",{"_index":2560,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.component.ts:59",{"_index":2380,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:63",{"_index":2382,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:67",{"_index":2384,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:71",{"_index":2386,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:75",{"_index":2388,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:79",{"_index":2367,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:92",{"_index":2369,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["modal.component.ts:95",{"_index":2564,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["modal.ondiddismiss().then((response",{"_index":1152,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["modal.present",{"_index":1050,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["modal/season",{"_index":1179,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["modal/serie",{"_index":1064,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieModalComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["modalcontroller",{"_index":968,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["modalctrl",{"_index":1086,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["modalctrl:modalcontroller",{"_index":1001,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SeasonModalComponent.html":{}}}],["mode",{"_index":1149,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["mode:'new'|'edit",{"_index":2391,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["mode=='edit",{"_index":2429,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["mode==\\'edit",{"_index":2444,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["model",{"_index":576,"title":{"interfaces/Model.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/Serie.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["modelo",{"_index":650,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["models/auth.model",{"_index":493,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["models/base.model",{"_index":577,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["models/comment.model",{"_index":879,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{}}}],["models/firebase/firebase",{"_index":2498,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["models/paginated.model",{"_index":579,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserRaw.html":{}}}],["models/season.model",{"_index":1250,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/IAuthMapping.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/UserRaw.html":{}}}],["models/serie.model",{"_index":1315,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{}}}],["models/task.model",{"_index":1739,"title":{},"body":{"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/TasksService.html":{}}}],["modeltype",{"_index":3053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modificados",{"_index":2174,"title":{},"body":{"components/ProfilePage.html":{}}}],["modified",{"_index":838,"title":{},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["module",{"_index":166,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":168,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mostrar",{"_index":2168,"title":{},"body":{"components/ProfilePage.html":{}}}],["multi",{"_index":2008,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["myseasonsservice",{"_index":1902,"title":{"injectables/MySeasonsService.html":{}},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{},"coverage.html":{}}}],["myseriesservice",{"_index":1921,"title":{"injectables/MySeriesService.html":{}},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{},"coverage.html":{}}}],["método",{"_index":2824,"title":{},"body":{"injectables/SeriesService.html":{}}}],["métodos",{"_index":1725,"title":{},"body":{"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{}}}],["n\\n",{"_index":826,"title":{},"body":{"injectables/CohereService.html":{}}}],["name",{"_index":127,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"miscellaneous/functions.html":{}}}],["name:d.name",{"_index":1915,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["name:data.name",{"_index":1270,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["name:data.nombre",{"_index":2618,"title":{},"body":{"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["name:response.name",{"_index":2652,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["name:response.user.name",{"_index":2647,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["name:string",{"_index":1599,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["native",{"_index":2051,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["nav",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["necesario",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["necesitamos",{"_index":1397,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["necesites",{"_index":1698,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["netlify",{"_index":3103,"title":{},"body":{"index.html":{}}}],["new",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":674,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["newid():string",{"_index":685,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["next",{"_index":1130,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{},"interfaces/SeasonRaw.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{}}}],["next:(resp",{"_index":2906,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["next:(response",{"_index":2710,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["next:(response:paginated",{"_index":1021,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["ng_value_accessor",{"_index":2006,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["ngondestroy",{"_index":1519,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SplashPage.html":{}}}],["ngx",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"modules/HomePageModule.html":{},"injectables/LanguageService.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"components/SerieModalComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["nombre",{"_index":653,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["none",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"injectables/CohereService.html":{},"components/SerieSelectableComponent.html":{}}}],["nos",{"_index":1399,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["notify",{"_index":2676,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["notify?.complete",{"_index":1034,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["nuestro",{"_index":1204,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["nuevo",{"_index":1203,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["null",{"_index":611,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/UserRaw.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":537,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{}}}],["number(data[key",{"_index":1288,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["number|null",{"_index":1753,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["numepisodes",{"_index":1262,"title":{},"body":{"interfaces/Data.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["numepisodes:d.numepisodes",{"_index":1917,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["numepisodes:data.numepisodes",{"_index":1272,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["numepisodes:number",{"_index":1601,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{}}}],["numericvalueaccessor",{"_index":1254,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"interfaces/UserRaw.html":{}}}],["numseason",{"_index":1261,"title":{},"body":{"interfaces/Data.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["numseason:d.numseason",{"_index":1916,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["numseason:data.numseason",{"_index":1271,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["numseason:string",{"_index":1600,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{}}}],["o",{"_index":1696,"title":{},"body":{"interfaces/IBaseRepository.html":{},"components/LoginPage.html":{},"interfaces/SearchParams.html":{},"index.html":{}}}],["obj",{"_index":1999,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["object",{"_index":1310,"title":{},"body":{"interfaces/Data.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/UserRaw.html":{},"miscellaneous/variables.html":{}}}],["object.entries(filters",{"_index":1349,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["object.keys(data).foreach(key",{"_index":1278,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["object.keys(formgroup.controls).foreach(key",{"_index":2416,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["object.keys(this.registerform.controls).foreach(key",{"_index":2176,"title":{},"body":{"components/ProfilePage.html":{}}}],["observable",{"_index":461,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["observable(observer",{"_index":1486,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["observer.complete",{"_index":1503,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["observer.error(error",{"_index":1505,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["observer.next(this.authmapping.signup(usercredential.user",{"_index":1502,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["obtener",{"_index":1448,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["of(this.auth.currentuser).pipe",{"_index":1508,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["of(this.mapping.getadded(entity",{"_index":705,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(this.mapping.getdeleted(entity",{"_index":714,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(this.mapping.getone(this._items.find(item=>item.id",{"_index":697,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(this.mapping.getupdated(this._items[index",{"_index":709,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(true).pipe(tap(_",{"_index":2919,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["ok",{"_index":1171,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["onaddseason",{"_index":1241,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["onaddserie",{"_index":1159,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["onanimationcreated",{"_index":2855,"title":{},"body":{"components/SplashPage.html":{}}}],["onanimationcreated(animationitem",{"_index":2859,"title":{},"body":{"components/SplashPage.html":{}}}],["onauthstatechanged",{"_index":1439,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["onauthstatechanged(this.auth",{"_index":1445,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["onchangepicture",{"_index":1971,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":1985,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event:event",{"_index":2023,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture",{"_index":1972,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":1988,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event:event",{"_index":2036,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeleteseason(season",{"_index":1243,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["ondeleteserie(serie",{"_index":1161,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["ondestroy",{"_index":1961,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["onforgotpassword",{"_index":1799,"title":{},"body":{"components/LoginPage.html":{}}}],["onimageselected",{"_index":2074,"title":{},"body":{"components/ProfilePage.html":{}}}],["onimageselected(event",{"_index":2085,"title":{},"body":{"components/ProfilePage.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SplashPage.html":{}}}],["oninput",{"_index":1932,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["oninput(event",{"_index":1940,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["onioninfinite(ev",{"_index":1147,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["onioninfinite(ev:infinitescrollcustomevent",{"_index":1058,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["onloadseries",{"_index":2663,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onlogin",{"_index":2242,"title":{},"body":{"components/RegisterPage.html":{}}}],["onlyallowedcharactersdirective",{"_index":161,"title":{"directives/OnlyAllowedCharactersDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["onmoreseries",{"_index":2664,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onmoreseries(ev",{"_index":2681,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onmoreseries(ev:infinitescrollcustomevent",{"_index":2713,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onregister",{"_index":1800,"title":{},"body":{"components/LoginPage.html":{}}}],["onsearch",{"_index":2665,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onsearch(event",{"_index":1121,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["onserieclicked",{"_index":2666,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onserieclicked(popover",{"_index":2685,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onserieclicked(popover:ionpopover",{"_index":2723,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["onsnapshot",{"_index":1528,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["onsubmit",{"_index":1801,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["openseasondetail(season",{"_index":1042,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["openseriedetail(serie",{"_index":1051,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{}}}],["optimizada",{"_index":3095,"title":{},"body":{"index.html":{}}}],["option",{"_index":2750,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["optional",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw-1.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":2854,"title":{},"body":{"components/SplashPage.html":{}}}],["oraciones",{"_index":804,"title":{},"body":{"injectables/CohereService.html":{}}}],["order",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["orderby",{"_index":566,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["orderby('createdat",{"_index":923,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["otros",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["outline",{"_index":1839,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["overflow",{"_index":2041,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["override",{"_index":1343,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["overview",{"_index":3117,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":2938,"title":{},"body":{"interfaces/Task.html":{}}}],["owner:season",{"_index":2939,"title":{},"body":{"interfaces/Task.html":{}}}],["p",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"injectables/CohereService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["p.id",{"_index":1109,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["package",{"_index":3003,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["page",{"_index":542,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["page'},{'name",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["page*pagesize",{"_index":693,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["page+1)*pagesize",{"_index":695,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["page:number",{"_index":1015,"title":{},"body":{"classes/Country.html":{},"interfaces/Paginated.html":{},"classes/Port.html":{},"components/SerieSelectableComponent.html":{}}}],["page:page",{"_index":1291,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["page_",{"_index":988,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["pagecount",{"_index":1340,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["pages",{"_index":899,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["pages:number",{"_index":1016,"title":{},"body":{"classes/Country.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Paginated.html":{},"classes/Port.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["pages:pages",{"_index":1293,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["pages:res.pages",{"_index":1912,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["pagesize",{"_index":538,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/UserRaw.html":{}}}],["pagesize)).pipe",{"_index":590,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["pagesize).pipe",{"_index":2810,"title":{},"body":{"injectables/SeriesService.html":{}}}],["pagesize:number",{"_index":660,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"classes/Country.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-3.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/StrapiRepositoryService.html":{}}}],["pagesize:number):observable",{"_index":734,"title":{},"body":{"injectables/BaseService.html":{}}}],["pagesize:number=25",{"_index":735,"title":{},"body":{"injectables/BaseService.html":{}}}],["pagesize:pagesize",{"_index":1292,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["pagina",{"_index":3086,"title":{},"body":{"index.html":{}}}],["paginated",{"_index":578,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["paginatedraw",{"_index":1338,"title":{"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{}},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["pagination",{"_index":1339,"title":{"interfaces/Pagination.html":{}},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["para",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/CohereService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"interfaces/SearchParams.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{}}}],["parameters",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":471,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"components/ProfilePage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/UserRaw.html":{}}}],["password",{"_index":1394,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{}}}],["password)).pipe",{"_index":1483,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["password.pipe.ts",{"_index":2950,"title":{},"body":{"pipes/TogglePasswordPipe.html":{},"coverage.html":{}}}],["password.pipe.ts:7",{"_index":2953,"title":{},"body":{"pipes/TogglePasswordPipe.html":{}}}],["password:payload.password",{"_index":2641,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["password:string",{"_index":2636,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["passwordfieldtype",{"_index":1798,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["passwordfieldtype2",{"_index":2241,"title":{},"body":{"components/RegisterPage.html":{}}}],["passwordsmatchvalidator",{"_index":2272,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordsmatchvalidator(serie",{"_index":3061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordvalidator",{"_index":2273,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordvalidator(control",{"_index":3064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":201,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Formats.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/Large.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["pathmatch",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern.svg",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["payload",{"_index":1386,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{}}}],["payload.email",{"_index":1395,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["payload.name",{"_index":2643,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["payload.password",{"_index":1396,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["payload.surname",{"_index":2644,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["payload.username",{"_index":2642,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["perfil",{"_index":2138,"title":{},"body":{"components/ProfilePage.html":{},"index.html":{}}}],["permite",{"_index":3070,"title":{},"body":{"index.html":{}}}],["permitir",{"_index":3206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pero",{"_index":782,"title":{},"body":{"injectables/CohereService.html":{}}}],["person.errors.email_invalid",{"_index":2212,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.email_required",{"_index":2211,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.name_min_length",{"_index":2205,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.name_required",{"_index":2204,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.surname_min_length",{"_index":2207,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.surname_required",{"_index":2206,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.username_min_length",{"_index":2210,"title":{},"body":{"components/ProfilePage.html":{}}}],["person.errors.username_required",{"_index":2209,"title":{},"body":{"components/ProfilePage.html":{}}}],["pestaña",{"_index":3085,"title":{},"body":{"index.html":{}}}],["picture",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseSerie.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"interfaces/Serie.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["picture_selectable_value_accessor",{"_index":1962,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":1979,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["picturemodal:modalcontroller",{"_index":2012,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":138,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":741,"title":{"pipes/CapitalizePipe.html":{},"pipes/TogglePasswordPipe.html":{}},"body":{"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"pipes/TogglePasswordPipe.html":{},"coverage.html":{}}}],["pipe(map((resp:strapisignupresponse",{"_index":2917,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["pipe(map((response:strapiuploadresponse",{"_index":1642,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["pipe(map(res",{"_index":1757,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["pipes",{"_index":743,"title":{},"body":{"pipes/CapitalizePipe.html":{},"pipes/TogglePasswordPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":749,"title":{},"body":{"pipes/CapitalizePipe.html":{},"pipes/TogglePasswordPipe.html":{}}}],["placeholder",{"_index":2740,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["platform",{"_index":969,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["player",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{}}}],["pointer",{"_index":2045,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{}}}],["popover",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["popover.dismiss",{"_index":2726,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["por",{"_index":1402,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"components/SerieSelectableComponent.html":{},"index.html":{}}}],["port",{"_index":959,"title":{"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["ports",{"_index":956,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["portssubscription",{"_index":989,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["position",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["pregunta",{"_index":3108,"title":{},"body":{"index.html":{}}}],["preloadallmodules",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["premisa",{"_index":807,"title":{},"body":{"injectables/CohereService.html":{}}}],["presentmodalseason",{"_index":1238,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["presentmodalseason(season:season|undefined=undefined",{"_index":1046,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["presentmodalserie",{"_index":1148,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["presentmodalserie(serie:serie|undefined=undefined",{"_index":1054,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["presenttoast",{"_index":1802,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["presenttoast(message",{"_index":1815,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["prev",{"_index":1752,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["previewurl",{"_index":1626,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["primary",{"_index":2171,"title":{},"body":{"components/ProfilePage.html":{}}}],["primeicons",{"_index":3031,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":3032,"title":{},"body":{"dependencies.html":{}}}],["primer",{"_index":3098,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["primera",{"_index":800,"title":{},"body":{"injectables/CohereService.html":{}}}],["principal",{"_index":808,"title":{},"body":{"injectables/CohereService.html":{}}}],["principales",{"_index":3077,"title":{},"body":{"index.html":{}}}],["private",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["procesar",{"_index":1196,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["production",{"_index":3217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{}}}],["profile'},{'name",{"_index":142,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["profile.already_admin",{"_index":2213,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.page",{"_index":2232,"title":{},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":2068,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":2067,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.title",{"_index":2203,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.update",{"_index":2214,"title":{},"body":{"components/ProfilePage.html":{}}}],["profilepage",{"_index":141,"title":{"components/ProfilePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["profilepagemodule",{"_index":2226,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepageroutingmodule",{"_index":2230,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["project",{"_index":3126,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":3225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":459,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["prompt",{"_index":777,"title":{},"body":{"injectables/CohereService.html":{}}}],["propagate",{"_index":2690,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["propagate:boolean=false",{"_index":2715,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["propagatechange",{"_index":1969,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["properties",{"_index":207,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"properties.html":{}}}],["protected",{"_index":442,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["provide",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":494,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/UserRaw.html":{}}}],["providedin:'root",{"_index":1908,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["providehttpclient",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["providelottieoptions",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{}}}],["provider",{"_index":1627,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["provider_metadata",{"_index":1628,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["providermetadata",{"_index":1629,"title":{"interfaces/ProviderMetadata.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["providers",{"_index":172,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"components/SerieSelectableComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["providers:[picture_selectable_value_accessor",{"_index":2009,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["proxy",{"_index":3025,"title":{},"body":{"dependencies.html":{}}}],["proyecto",{"_index":3097,"title":{},"body":{"index.html":{}}}],["public",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["public_id",{"_index":1630,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["puede",{"_index":791,"title":{},"body":{"injectables/CohereService.html":{},"index.html":{}}}],["pusher",{"_index":3034,"title":{},"body":{"dependencies.html":{}}}],["p}${v",{"_index":1354,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["públicas",{"_index":3236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["q",{"_index":921,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["qu",{"_index":816,"title":{},"body":{"injectables/CohereService.html":{}}}],["que",{"_index":1199,"title":{},"body":{"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"interfaces/IBaseRepository.html":{},"classes/Port-2.html":{},"interfaces/SearchParams.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":561,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["query(this.collectionref",{"_index":596,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["queryconstraint",{"_index":565,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["querylist",{"_index":962,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["queryparams",{"_index":1862,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["querysnapshot",{"_index":1529,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["radius",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["rating",{"_index":1265,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["rating:d.rating",{"_index":1919,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["rating:data.rating",{"_index":1274,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["rating:number",{"_index":1603,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["rc2",{"_index":3037,"title":{},"body":{"dependencies.html":{}}}],["reaction",{"_index":847,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["reactiveformsmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":2699,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["reader",{"_index":985,"title":{},"body":{"classes/Country.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"dependencies.html":{}}}],["reader.onerror",{"_index":2032,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":2030,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["reader.readasdataurl(file",{"_index":2034,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["readonly",{"_index":1765,"title":{},"body":{"injectables/LanguageService.html":{}}}],["readserietitle(serietitle",{"_index":1055,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["ready",{"_index":447,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["ready$:observable",{"_index":500,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["recuerda",{"_index":789,"title":{},"body":{"injectables/CohereService.html":{}}}],["recurso",{"_index":655,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["red",{"_index":1889,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["redactada",{"_index":798,"title":{},"body":{"injectables/CohereService.html":{}}}],["redactarse",{"_index":788,"title":{},"body":{"injectables/CohereService.html":{}}}],["redirectto",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirigir",{"_index":3208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((p",{"_index":1353,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["ref",{"_index":1569,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["ref(this.storage",{"_index":1584,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["regex",{"_index":1948,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["regexp(`[^${this.allowedcharacters",{"_index":1949,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["register",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{}}}],["register'},{'name",{"_index":144,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["register.page",{"_index":2349,"title":{},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{}}}],["register.page.html",{"_index":2238,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":2237,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerform",{"_index":2071,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["registeronchange",{"_index":1973,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["registeronchange(fn",{"_index":1990,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["registerontouched",{"_index":1974,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["registerontouched(fn",{"_index":1993,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["registerpage",{"_index":143,"title":{"components/RegisterPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["registerpagemodule",{"_index":2343,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpageroutingmodule",{"_index":2347,"title":{"modules/RegisterPageRoutingModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpayload",{"_index":468,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{}}}],["registrar",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["registrarse",{"_index":2306,"title":{},"body":{"components/RegisterPage.html":{}}}],["registro",{"_index":1223,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["regla",{"_index":801,"title":{},"body":{"injectables/CohereService.html":{}}}],["reglas",{"_index":786,"title":{},"body":{"injectables/CohereService.html":{}}}],["regístrate",{"_index":1870,"title":{},"body":{"components/LoginPage.html":{}}}],["relative",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["releasedate",{"_index":1263,"title":{},"body":{"interfaces/Data.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["releasedate:d.releasedate",{"_index":1918,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["releasedate:data.releasedate",{"_index":1273,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["releasedate:date",{"_index":1602,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/Season.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{}}}],["releaseyear",{"_index":1318,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["releaseyear:d.releaseyear",{"_index":1928,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{}}}],["releaseyear:data.releaseyear",{"_index":1322,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["releaseyear:number",{"_index":1609,"title":{},"body":{"interfaces/FirebaseSerie.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["relevante",{"_index":3082,"title":{},"body":{"index.html":{}}}],["removed",{"_index":839,"title":{},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["removeindex",{"_index":1117,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["replace(/\\b\\w/g",{"_index":751,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["replaceurl",{"_index":2308,"title":{},"body":{"components/RegisterPage.html":{}}}],["replaceurl:true",{"_index":1864,"title":{},"body":{"components/LoginPage.html":{}}}],["repositories/intefaces/base",{"_index":730,"title":{},"body":{"injectables/BaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseService.html":{}}}],["repositories/intefaces/comments",{"_index":949,"title":{},"body":{"injectables/CommentsService.html":{}}}],["repositories/intefaces/seasons",{"_index":2539,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["repositories/intefaces/series",{"_index":2805,"title":{},"body":{"injectables/SeriesService.html":{}}}],["repositories/intefaces/tasks",{"_index":2945,"title":{},"body":{"injectables/TasksService.html":{}}}],["repositories/repository.tokens",{"_index":732,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{}}}],["repositorio",{"_index":656,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["repositorios",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":512,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["repository.interface",{"_index":572,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseService.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ITasksRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["repository.interface.ts",{"_index":1689,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ITasksRepository.html":{},"interfaces/SearchParams.html":{},"coverage.html":{}}}],["repository.interface.ts:10",{"_index":1693,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:11",{"_index":1690,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:12",{"_index":1694,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:13",{"_index":1691,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:5",{"_index":2352,"title":{},"body":{"interfaces/SearchParams.html":{}}}],["repository.interface.ts:6",{"_index":1716,"title":{},"body":{"interfaces/ICommentsRepository.html":{}}}],["repository.interface.ts:9",{"_index":1692,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.service.ts",{"_index":1335,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:27",{"_index":1745,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["repository.service.ts:40",{"_index":2931,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:52",{"_index":2935,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.tokens",{"_index":575,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["repository_mapping_token",{"_index":574,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository_token",{"_index":731,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requestbody",{"_index":775,"title":{},"body":{"injectables/CohereService.html":{}}}],["res",{"_index":663,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["res.data",{"_index":1360,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.data.map((elem:data",{"_index":1363,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.data[0",{"_index":2546,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["res.map((elem:any",{"_index":1759,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["res.meta.pagination.total",{"_index":1359,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.pages",{"_index":1758,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["res[0",{"_index":2545,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["reset",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resource",{"_index":628,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["resource:string",{"_index":652,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["resource_name_token",{"_index":638,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource_type",{"_index":1631,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["resp",{"_index":1844,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["resp.jwt",{"_index":2913,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["response",{"_index":1131,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/StrapiAuthMappingService.html":{}}}],["response.data",{"_index":1041,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["response.data).subscribe",{"_index":1158,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["response.data.foreach((season",{"_index":1224,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["response.data.foreach((serie",{"_index":1132,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["response.data.map(serie",{"_index":1023,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["response.data.sort((a",{"_index":1135,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["response.data].sort",{"_index":1141,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["response.data].sort((a",{"_index":2711,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["response.displayname",{"_index":1405,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.email",{"_index":1406,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.generations[0].text.trim",{"_index":830,"title":{},"body":{"injectables/CohereService.html":{}}}],["response.map(media=>media.id",{"_index":1643,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["response.pages",{"_index":1030,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["response.photourl",{"_index":1409,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.picture",{"_index":2655,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["response.role",{"_index":1153,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["response.uid",{"_index":1404,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.user.username",{"_index":2646,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["response.username",{"_index":2651,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["respuesta",{"_index":796,"title":{},"body":{"injectables/CohereService.html":{}}}],["result",{"_index":890,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.name",{"_index":2505,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.numepisodes",{"_index":2507,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.numseason",{"_index":2506,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.rating",{"_index":2509,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.reaction",{"_index":893,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["result.releasedate",{"_index":2508,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.serieid",{"_index":894,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.text",{"_index":892,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["result.user",{"_index":2510,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{}}}],["result.userid",{"_index":895,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{}}}],["results",{"_index":164,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":1701,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["return",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/UserRaw.html":{},"miscellaneous/variables.html":{}}}],["return_likelihoods",{"_index":827,"title":{},"body":{"injectables/CohereService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{},"pipes/TogglePasswordPipe.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":1848,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["returnurl:returnurl",{"_index":1863,"title":{},"body":{"components/LoginPage.html":{}}}],["rgb(58",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0",{"_index":1881,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["rgba(255",{"_index":70,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["right",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["ripple",{"_index":2751,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["role",{"_index":1080,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["root",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/UserRaw.html":{}}}],["root'},{'name",{"_index":130,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["route",{"_index":1807,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["route:activatedroute",{"_index":1828,"title":{},"body":{"components/LoginPage.html":{}}}],["router",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/home",{"_index":3237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":3209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router:router",{"_index":2872,"title":{},"body":{"components/SplashPage.html":{}}}],["routereusestrategy",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":198,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":202,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":197,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":190,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{}}}],["routing.module.ts",{"_index":196,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["row",{"_index":2338,"title":{},"body":{"components/RegisterPage.html":{}}}],["ru",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["ruta",{"_index":2864,"title":{},"body":{"components/SplashPage.html":{}}}],["rutas",{"_index":3235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":490,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsService.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesService.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":767,"title":{},"body":{"injectables/CohereService.html":{}}}],["s",{"_index":2316,"title":{},"body":{"components/RegisterPage.html":{}}}],["scale(1.05",{"_index":2049,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieViewComponent.html":{}}}],["scale(1.1",{"_index":2340,"title":{},"body":{"components/RegisterPage.html":{}}}],["schemas",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["screenreader",{"_index":983,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["screenreader.speak",{"_index":1056,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["scroll",{"_index":2753,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["se",{"_index":3089,"title":{},"body":{"index.html":{}}}],["sea",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":1348,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/SerieSelectableComponent.html":{},"injectables/StrapiRepositoryService.html":{}}}],["searchbar",{"_index":2739,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["searchparams",{"_index":540,"title":{"interfaces/SearchParams.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["searchterm",{"_index":1078,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["season",{"_index":146,"title":{"interfaces/Season.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/IAuthMapping.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"interfaces/Task.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["season(_season:season",{"_index":2394,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season):seasondata",{"_index":1269,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["season):seasonraw",{"_index":2447,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["season.edit",{"_index":2430,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.name_min_length",{"_index":2433,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.name_required",{"_index":2432,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.numepisodes_invalid",{"_index":2437,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.numepisodes_required",{"_index":2436,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.numseason_min_length",{"_index":2435,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.numseason_required",{"_index":2434,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.rating_invalid",{"_index":2441,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.rating_required",{"_index":2440,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.releasedate_invalid",{"_index":2439,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.errors.releasedate_required",{"_index":2438,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.model",{"_index":2499,"title":{},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"interfaces/Serie.html":{},"interfaces/Task.html":{}}}],["season.model.ts",{"_index":1598,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"coverage.html":{}}}],["season.name",{"_index":2470,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.name.tolowercase().includes(searchterm",{"_index":1220,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["season.name.tolowercase().includes(this.searchterm",{"_index":1234,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["season.new",{"_index":2431,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.numepisodes",{"_index":2473,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.numseason",{"_index":2472,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.rating",{"_index":2471,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.releasedate",{"_index":2474,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["season.serie",{"_index":2442,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.serieid",{"_index":2818,"title":{},"body":{"injectables/SeriesService.html":{}}}],["season.submit",{"_index":2443,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["season.view",{"_index":2469,"title":{},"body":{"components/SeasonViewComponent.html":{}}}],["seasonattributes",{"_index":1249,"title":{"interfaces/SeasonAttributes.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seasondata",{"_index":1260,"title":{"interfaces/SeasonData.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seasonmodalcomponent",{"_index":145,"title":{"components/SeasonModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["seasonraw",{"_index":1258,"title":{"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seasonraw):season",{"_index":1312,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["seasons",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{},"modules/SeasonsPageModule.html":{},"interfaces/Serie.html":{},"injectables/SeriesService.html":{},"miscellaneous/variables.html":{}}}],["seasons$:observable",{"_index":994,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["seasons'},{'name",{"_index":149,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["seasons.map(season",{"_index":2836,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasons.page",{"_index":2532,"title":{},"body":{"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{}}}],["seasons.page.html",{"_index":1181,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["seasons.page.scss",{"_index":1182,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["seasons.service",{"_index":2807,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasons.service.ts",{"_index":1904,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{},"coverage.html":{}}}],["seasons.service.ts:31",{"_index":1905,"title":{},"body":{"injectables/MySeasonsService.html":{}}}],["seasons.service.ts:38",{"_index":1906,"title":{},"body":{"injectables/MySeasonsService.html":{}}}],["seasons_api_url_token",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasons_collection_subscription_token",{"_index":1180,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasons_repository_mapping_token",{"_index":2982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasons_repository_token",{"_index":2538,"title":{},"body":{"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasons_resource_name_token",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonscollectionsubscriptionfactory",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonsdata.data.filter((season",{"_index":2834,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasonsdata.filter((season",{"_index":2833,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasonslocalstoragemapping",{"_index":2458,"title":{"injectables/SeasonsLocalStorageMapping.html":{}},"body":{"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"coverage.html":{}}}],["seasonsmappingfactory",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonsmappingfirebaseservice",{"_index":2490,"title":{"injectables/SeasonsMappingFirebaseService.html":{}},"body":{"injectables/SeasonsMappingFirebaseService.html":{},"coverage.html":{}}}],["seasonsmappingjsonserver",{"_index":2446,"title":{"injectables/SeasonsMappingJsonServer.html":{}},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{},"coverage.html":{}}}],["seasonsmappingstrapi",{"_index":1268,"title":{"injectables/SeasonsMappingStrapi.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seasonspage",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["seasonspagemodule",{"_index":2526,"title":{"modules/SeasonsPageModule.html":{}},"body":{"modules/SeasonsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["seasonspageroutingmodule",{"_index":2530,"title":{"modules/SeasonsPageRoutingModule.html":{}},"body":{"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["seasonspaginated.data.filter(season",{"_index":2817,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seasonsrepositoryfactory",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonsservice",{"_index":327,"title":{"injectables/SeasonsService.html":{}},"body":{"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["seasonssubscription",{"_index":1188,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["seasonssvc",{"_index":1084,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"injectables/SeriesService.html":{}}}],["seasonssvc:seasonsservice",{"_index":999,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["seasonviewcomponent",{"_index":150,"title":{"components/SeasonViewComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["section",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["segun",{"_index":799,"title":{},"body":{"injectables/CohereService.html":{}}}],["segundo",{"_index":3101,"title":{},"body":{"index.html":{}}}],["según",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["selectable",{"_index":1963,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable'},{'name",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["selectable.component",{"_index":2845,"title":{},"body":{"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":1965,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":1964,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":1959,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:107",{"_index":2682,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:111",{"_index":2691,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:121",{"_index":2693,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:126",{"_index":2687,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:130",{"_index":2688,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:134",{"_index":2692,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:138",{"_index":2679,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:140",{"_index":2686,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:145",{"_index":2672,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:151",{"_index":2674,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:20",{"_index":2000,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:21",{"_index":2003,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:22",{"_index":2001,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:23",{"_index":1978,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:24",{"_index":2695,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:25",{"_index":2701,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:26",{"_index":2694,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:27",{"_index":2696,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:28",{"_index":1983,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:30",{"_index":2700,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:32",{"_index":1984,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:34",{"_index":2004,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":2697,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:36",{"_index":2669,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:37",{"_index":1998,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:38",{"_index":2702,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:41",{"_index":2678,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:44",{"_index":1991,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:45",{"_index":2680,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:48",{"_index":1994,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:49",{"_index":2684,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:51",{"_index":1996,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:55",{"_index":1981,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:61",{"_index":1987,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:65",{"_index":2677,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:79",{"_index":1989,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:83",{"_index":2675,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectable.component.ts:84",{"_index":1982,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable/picture",{"_index":1958,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/serie",{"_index":2656,"title":{},"body":{"components/SerieSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["selected",{"_index":2744,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectedimage",{"_index":2072,"title":{},"body":{"components/ProfilePage.html":{}}}],["selectedlanguage",{"_index":1778,"title":{},"body":{"injectables/LanguageService.html":{}}}],["selectedseason",{"_index":1012,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["selectedserie",{"_index":1013,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["selectserie",{"_index":2667,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectserie(id",{"_index":2689,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["selectserie(id:string|undefined",{"_index":2714,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["ser",{"_index":797,"title":{},"body":{"injectables/CohereService.html":{}}}],["serie",{"_index":153,"title":{"interfaces/Serie.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/CohereService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data-1.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"components/LoginPage.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"components/SplashPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["serie(_serie:serie",{"_index":2576,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie):seriedata",{"_index":1320,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["serie.edit",{"_index":2603,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.name_min_length",{"_index":2606,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.name_required",{"_index":2605,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.rating_invalid",{"_index":2612,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.rating_required",{"_index":2611,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.releaseyear_invalid",{"_index":2610,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.releaseyear_required",{"_index":2609,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.synopsis_min_length",{"_index":2608,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.errors.synopsis_required",{"_index":2607,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.id",{"_index":2819,"title":{},"body":{"injectables/SeriesService.html":{}}}],["serie.model",{"_index":2768,"title":{},"body":{"injectables/SeriesMappingFirebaseService.html":{}}}],["serie.model.ts",{"_index":1607,"title":{},"body":{"interfaces/FirebaseSerie.html":{},"coverage.html":{}}}],["serie.name",{"_index":2737,"title":{},"body":{"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["serie.name.tolowercase().includes(searchterm",{"_index":1127,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["serie.name.tolowercase().includes(this.searchterm",{"_index":1144,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["serie.new",{"_index":2604,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.rating",{"_index":2755,"title":{},"body":{"components/SerieViewComponent.html":{}}}],["serie.releaseyear",{"_index":2757,"title":{},"body":{"components/SerieViewComponent.html":{}}}],["serie.seasons?.sort((a",{"_index":1024,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["serie.submit",{"_index":2613,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["serie.synopsis",{"_index":2756,"title":{},"body":{"components/SerieViewComponent.html":{}}}],["serie.view",{"_index":2754,"title":{},"body":{"components/SerieViewComponent.html":{}}}],["serie:serie",{"_index":2724,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serie_selectable.none",{"_index":2734,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serie_selectable.select_serie",{"_index":2735,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serieattributes",{"_index":1267,"title":{"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["seriedata",{"_index":1316,"title":{"interfaces/SerieData.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"coverage.html":{}}}],["serieid",{"_index":848,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["serieid:d.serieid",{"_index":1920,"title":{},"body":{"injectables/MySeasonsService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SeasonRaw.html":{}}}],["serieid:data.serieid",{"_index":1275,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["serieid?:documentreference",{"_index":1604,"title":{},"body":{"interfaces/FirebaseSeason.html":{}}}],["serieid?:string",{"_index":2354,"title":{},"body":{"interfaces/Season.html":{}}}],["seriemodalcomponent",{"_index":152,"title":{"components/SerieModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country-1.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["serieraw",{"_index":1257,"title":{"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["serieraw):serie",{"_index":1333,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["serieref",{"_index":920,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["series",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/FirebaseComment.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"components/SerieSelectableComponent.html":{},"modules/SeriesPageModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["series$:observable",{"_index":991,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SeasonModalComponent.html":{}}}],["series'},{'name",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["series(series:serie",{"_index":2392,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["series.no_results",{"_index":2738,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["series.page",{"_index":2795,"title":{},"body":{"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{}}}],["series.page.html",{"_index":1071,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["series.page.scss",{"_index":1072,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["series.service.ts",{"_index":1922,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{},"coverage.html":{}}}],["series.service.ts:30",{"_index":1923,"title":{},"body":{"injectables/MySeriesService.html":{}}}],["series.service.ts:37",{"_index":1924,"title":{},"body":{"injectables/MySeriesService.html":{}}}],["series/${date.now()}_${math.random().tostring(36).substring(2",{"_index":1582,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["series/:id/comments",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["series_api_url_token",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["series_collection_subscription_token",{"_index":1066,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["series_repository_mapping_token",{"_index":2983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["series_repository_token",{"_index":2803,"title":{},"body":{"injectables/SeriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["series_resource_name_token",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seriescollectionsubscriptionfactory",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serieseasons",{"_index":2816,"title":{},"body":{"injectables/SeriesService.html":{}}}],["serieselectablecomponent",{"_index":154,"title":{"components/SerieSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["serieselected",{"_index":2658,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serieselected.name",{"_index":2736,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serieselected:serie",{"_index":2704,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["serieslocalstoragemapping",{"_index":2620,"title":{"injectables/SeriesLocalStorageMapping.html":{}},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"coverage.html":{}}}],["seriesmappingfactory",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seriesmappingfirebaseservice",{"_index":2763,"title":{"injectables/SeriesMappingFirebaseService.html":{}},"body":{"injectables/SeriesMappingFirebaseService.html":{},"coverage.html":{}}}],["seriesmappingjsonserver",{"_index":2615,"title":{"injectables/SeriesMappingJsonServer.html":{}},"body":{"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{},"coverage.html":{}}}],["seriesmappingstrapi",{"_index":1319,"title":{"injectables/SeriesMappingStrapi.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"coverage.html":{}}}],["seriespage",{"_index":155,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country-1.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port-1.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["seriespagemodule",{"_index":2789,"title":{"modules/SeriesPageModule.html":{}},"body":{"modules/SeriesPageModule.html":{},"modules.html":{},"overview.html":{}}}],["seriespageroutingmodule",{"_index":2793,"title":{"modules/SeriesPageRoutingModule.html":{}},"body":{"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["seriespaginated",{"_index":2822,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seriespaginated.data.map(serie",{"_index":2813,"title":{},"body":{"injectables/SeriesService.html":{}}}],["seriesrepositoryfactory",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seriesservice",{"_index":344,"title":{"injectables/SeriesService.html":{}},"body":{"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["seriessubscription",{"_index":1089,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["seriessvc",{"_index":2659,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["seriessvc:seriesservice",{"_index":2706,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["seriesvc",{"_index":1085,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["seriesvc:seriesservice",{"_index":1000,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["serieswithseasons",{"_index":2812,"title":{},"body":{"injectables/SeriesService.html":{}}}],["serieswithsortedseasons",{"_index":1022,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["serietitle",{"_index":1057,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["serieviewcomponent",{"_index":157,"title":{"components/SerieViewComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["server",{"_index":1744,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server.service.ts",{"_index":2445,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieRaw-2.html":{},"injectables/SeriesMappingJsonServer.html":{},"coverage.html":{}}}],["server.service.ts:18",{"_index":2781,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:21",{"_index":2517,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:24",{"_index":2779,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:29",{"_index":2778,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:31",{"_index":2518,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:38",{"_index":2776,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:41",{"_index":2780,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:44",{"_index":2777,"title":{},"body":{"injectables/SeriesMappingJsonServer.html":{}}}],["server.service.ts:52",{"_index":2515,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:57",{"_index":2514,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:68",{"_index":2512,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:71",{"_index":2516,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["server.service.ts:74",{"_index":2513,"title":{},"body":{"injectables/SeasonsMappingJsonServer.html":{}}}],["service.interface",{"_index":729,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CommentsService.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["service.interface.ts",{"_index":1704,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"coverage.html":{}}}],["service.interface.ts:10",{"_index":1710,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:11",{"_index":1705,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:12",{"_index":1711,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:13",{"_index":1706,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:6",{"_index":1718,"title":{},"body":{"interfaces/ICommentsService.html":{}}}],["service.interface.ts:7",{"_index":1707,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:8",{"_index":1708,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/ISeasonsService.html":{}}}],["service.interface.ts:9",{"_index":1709,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.service",{"_index":945,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["service.service.ts",{"_index":716,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{}}}],["service.service.ts:13",{"_index":718,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:18",{"_index":721,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:19",{"_index":722,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:20",{"_index":723,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:24",{"_index":725,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:28",{"_index":719,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:32",{"_index":726,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:36",{"_index":720,"title":{},"body":{"injectables/BaseService.html":{}}}],["services/impl/base",{"_index":639,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["services/impl/strapi",{"_index":1252,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["services/interfaces/authentication.interface",{"_index":643,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["services/interfaces/seasons",{"_index":2537,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["services/interfaces/series",{"_index":2804,"title":{},"body":{"injectables/SeriesService.html":{}}}],["services/interfaces/strapi",{"_index":641,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["servicio",{"_index":1559,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["servicios",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["sesión",{"_index":1846,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["set",{"_index":1082,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["setadd",{"_index":859,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["setadd(data",{"_index":873,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["setadd(data:t):any",{"_index":1687,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["setadmin",{"_index":2243,"title":{},"body":{"components/RegisterPage.html":{}}}],["setadmin(value",{"_index":2253,"title":{},"body":{"components/RegisterPage.html":{}}}],["setdisabledstate",{"_index":1975,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1995,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2018,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["setdoc",{"_index":1440,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["setdoc(userref",{"_index":1495,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["setseason(_season",{"_index":2376,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["setserie(_serie",{"_index":2566,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["setseries(series",{"_index":2375,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["setupdate",{"_index":860,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/IBaseMapping.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["setupdate(data",{"_index":876,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/FirebaseComment.html":{},"interfaces/IBaseMapping.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["setupdate(data:any):any",{"_index":1688,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["shadow",{"_index":81,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["shared/shared.module",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":306,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfilePageModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["showerrortoast",{"_index":2554,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["showerrortoast(message",{"_index":2563,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["showpassword",{"_index":2954,"title":{},"body":{"pipes/TogglePasswordPipe.html":{}}}],["si",{"_index":1208,"title":{},"body":{"classes/Country-2.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesService.html":{},"interfaces/ITasksService.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"index.html":{}}}],["side",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["signin",{"_index":450,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signin(authpayload",{"_index":462,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signin(authpayload:any):observable",{"_index":1673,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signin(response",{"_index":1382,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signin(response:any):user",{"_index":1664,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signin:string",{"_index":3174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signinpayload",{"_index":1377,"title":{"interfaces/SignInPayload.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["signinpayload(payload",{"_index":1384,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signinpayload(payload:signinpayload):any",{"_index":1662,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signinpayload):strapisignin",{"_index":2639,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signinurl",{"_index":2887,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["signinwithemailandpassword",{"_index":1436,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signout",{"_index":451,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signout():observable",{"_index":1675,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signup",{"_index":452,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["signup(registerpayload",{"_index":466,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{}}}],["signup(registerpayload:any):observable",{"_index":1674,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signup(response",{"_index":1388,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signup(response:any):user",{"_index":1665,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signup(signuppayload",{"_index":1419,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signup:string",{"_index":3175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signupdata",{"_index":2294,"title":{},"body":{"components/RegisterPage.html":{}}}],["signuppayload",{"_index":1378,"title":{"interfaces/SignUpPayload.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["signuppayload(payload",{"_index":1390,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signuppayload(payload:signuppayload):any",{"_index":1663,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signuppayload.admin",{"_index":1500,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signuppayload.email",{"_index":1488,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signuppayload.name",{"_index":1496,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signuppayload.password",{"_index":1489,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signuppayload.picture",{"_index":1499,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signuppayload.surname",{"_index":1497,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signuppayload.username",{"_index":1498,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signupurl",{"_index":2885,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["sinopsis",{"_index":780,"title":{},"body":{"injectables/CohereService.html":{},"components/SerieModalComponent.html":{}}}],["size",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["small",{"_index":1614,"title":{"interfaces/Small.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["small:data.picture.small",{"_index":2624,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["small:string",{"_index":2551,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["snapshot",{"_index":1536,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["snapshot.docchanges().foreach(change",{"_index":1537,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["snapshot.docs.map(doc",{"_index":600,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["snapshot.size",{"_index":604,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["sobrescribir",{"_index":2823,"title":{},"body":{"injectables/SeriesService.html":{}}}],["solid",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["solo",{"_index":1195,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["sort((a",{"_index":1231,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["sortedseasons",{"_index":1226,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["sortedseries",{"_index":1134,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsRepository.html":{},"interfaces/ISeasonsService.html":{},"interfaces/ISeriesRepository.html":{},"interfaces/ISeriesService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"modules/SeasonsPageModule.html":{},"modules/SeasonsPageRoutingModule.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"modules/SeriesPageModule.html":{},"modules/SeriesPageRoutingModule.html":{},"injectables/SeriesService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{}}}],["space",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["spinner",{"_index":2135,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["splash",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["splash.page",{"_index":2876,"title":{},"body":{"modules/SplashPageRoutingModule.html":{}}}],["splash.page.html",{"_index":2853,"title":{},"body":{"components/SplashPage.html":{}}}],["splash.page.scss",{"_index":2852,"title":{},"body":{"components/SplashPage.html":{}}}],["splashpage",{"_index":158,"title":{"components/SplashPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"coverage.html":{}}}],["splashpageroutingmodule",{"_index":2874,"title":{"modules/SplashPageRoutingModule.html":{}},"body":{"modules/SplashPageRoutingModule.html":{},"modules.html":{}}}],["src/.../app.module.ts",{"_index":3046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.guard.ts",{"_index":3135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../blob.ts",{"_index":3047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":3136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logged.guard.ts",{"_index":3138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../picture",{"_index":3139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../repository.factory.ts",{"_index":3045,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../repository.tokens.ts",{"_index":3134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../strapi",{"_index":3132,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validators.ts",{"_index":3048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":2963,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/logged.guard.ts",{"_index":2964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/models/auth.model",{"_index":2102,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["src/app/core/models/auth.model.ts",{"_index":2848,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/models/base.model.ts",{"_index":1899,"title":{},"body":{"interfaces/Model.html":{},"coverage.html":{}}}],["src/app/core/models/comment.model.ts",{"_index":844,"title":{},"body":{"interfaces/Comment.html":{},"coverage.html":{}}}],["src/app/core/models/firebase/firebase",{"_index":1597,"title":{},"body":{"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"coverage.html":{}}}],["src/app/core/models/paginated.model",{"_index":973,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["src/app/core/models/paginated.model.ts",{"_index":1955,"title":{},"body":{"interfaces/Paginated.html":{},"coverage.html":{}}}],["src/app/core/models/season.model",{"_index":974,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{}}}],["src/app/core/models/season.model.ts",{"_index":2353,"title":{},"body":{"interfaces/Season.html":{},"coverage.html":{}}}],["src/app/core/models/serie.model",{"_index":972,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["src/app/core/models/serie.model.ts",{"_index":2547,"title":{},"body":{"interfaces/Serie.html":{},"coverage.html":{}}}],["src/app/core/models/task.model.ts",{"_index":2937,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/base",{"_index":511,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/comments",{"_index":853,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/json",{"_index":1743,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/seasons",{"_index":1246,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/series",{"_index":1314,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/strapi",{"_index":1334,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/base",{"_index":1677,"title":{},"body":{"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/comments",{"_index":1715,"title":{},"body":{"interfaces/ICommentsRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/seasons",{"_index":1720,"title":{},"body":{"interfaces/ISeasonsRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/series",{"_index":1729,"title":{},"body":{"interfaces/ISeriesRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/tasks",{"_index":1737,"title":{},"body":{"interfaces/ITasksRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/repository.factory.ts",{"_index":2974,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/repositories/repository.tokens",{"_index":1067,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["src/app/core/repositories/repository.tokens.ts",{"_index":2979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/impl/ai.service",{"_index":2574,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["src/app/core/services/impl/ai.service.ts",{"_index":755,"title":{},"body":{"injectables/CohereService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/ai.service.ts:11",{"_index":764,"title":{},"body":{"injectables/CohereService.html":{}}}],["src/app/core/services/impl/ai.service.ts:12",{"_index":758,"title":{},"body":{"injectables/CohereService.html":{}}}],["src/app/core/services/impl/ai.service.ts:16",{"_index":761,"title":{},"body":{"injectables/CohereService.html":{}}}],["src/app/core/services/impl/base",{"_index":440,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"coverage.html":{}}}],["src/app/core/services/impl/comments.service.ts",{"_index":934,"title":{},"body":{"injectables/CommentsService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/comments.service.ts:13",{"_index":936,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/core/services/impl/comments.service.ts:22",{"_index":937,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/core/services/impl/firebase",{"_index":1070,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["src/app/core/services/impl/seasons.service",{"_index":976,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["src/app/core/services/impl/seasons.service.ts",{"_index":2534,"title":{},"body":{"injectables/SeasonsService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/seasons.service.ts:12",{"_index":2535,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["src/app/core/services/impl/seasons.service.ts:19",{"_index":2536,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["src/app/core/services/impl/series.service",{"_index":975,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["src/app/core/services/impl/series.service.ts",{"_index":2797,"title":{},"body":{"injectables/SeriesService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/series.service.ts:15",{"_index":2799,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/app/core/services/impl/series.service.ts:23",{"_index":2802,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/app/core/services/impl/strapi",{"_index":1611,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/impl/tasks.service.ts",{"_index":2942,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/tasks.service.ts:12",{"_index":2943,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/core/services/interfaces/auth",{"_index":1655,"title":{},"body":{"interfaces/IAuthMapping.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts",{"_index":1667,"title":{},"body":{"interfaces/IAuthentication.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:4",{"_index":1670,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:5",{"_index":1672,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:6",{"_index":1671,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:7",{"_index":1669,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:8",{"_index":1668,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/base",{"_index":1703,"title":{},"body":{"interfaces/IBaseService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/collection",{"_index":834,"title":{},"body":{"interfaces/CollectionChange.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/ICollectionSubscription.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/comments",{"_index":1717,"title":{},"body":{"interfaces/ICommentsService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/seasons",{"_index":1722,"title":{},"body":{"interfaces/ISeasonsService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/series",{"_index":1731,"title":{},"body":{"interfaces/ISeriesService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/strapi",{"_index":1732,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/tasks",{"_index":1741,"title":{},"body":{"interfaces/ITasksService.html":{},"coverage.html":{}}}],["src/app/core/services/language.service",{"_index":2575,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["src/app/core/services/language.service.ts",{"_index":1763,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/services/language.service.ts:22",{"_index":1772,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:26",{"_index":1773,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:30",{"_index":1774,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:34",{"_index":1776,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:8",{"_index":1779,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:9",{"_index":1771,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/my",{"_index":1903,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{},"coverage.html":{}}}],["src/app/core/utils/blob.ts",{"_index":2990,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/utils/validators",{"_index":2274,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/core/utils/validators.ts",{"_index":2992,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/directives/only",{"_index":1929,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{},"modules/ProfilePageModule.html":{},"coverage.html":{}}}],["src/app/pages/about/about",{"_index":195,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":26,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:8",{"_index":25,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/comments/comments.page.ts",{"_index":2993,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/home/home",{"_index":1654,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1649,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":955,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:16",{"_index":957,"title":{},"body":{"classes/Country.html":{}}}],["src/app/pages/home/home.page.ts:17",{"_index":958,"title":{},"body":{"classes/Country.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":960,"title":{},"body":{"classes/Country.html":{}}}],["src/app/pages/home/home.page.ts:21",{"_index":2058,"title":{},"body":{"classes/Port.html":{}}}],["src/app/pages/home/home.page.ts:22",{"_index":2059,"title":{},"body":{"classes/Port.html":{}}}],["src/app/pages/home/home.page.ts:23",{"_index":2057,"title":{},"body":{"classes/Port.html":{}}}],["src/app/pages/login/login",{"_index":1898,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/pages/login/login.module.ts",{"_index":1896,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":1794,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/login/login.page.ts:13",{"_index":1822,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:14",{"_index":1810,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:30",{"_index":1818,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:46",{"_index":1820,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:50",{"_index":1814,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:71",{"_index":1813,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:77",{"_index":1812,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:81",{"_index":1824,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:85",{"_index":1826,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/profile/profile",{"_index":2235,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/pages/profile/profile.module.ts",{"_index":2231,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/pages/profile/profile.page.ts",{"_index":2066,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{}}}],["src/app/pages/profile/profile.page.ts:111",{"_index":2087,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:16",{"_index":2092,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:17",{"_index":2094,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:18",{"_index":2091,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:19",{"_index":2093,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:20",{"_index":2090,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:208",{"_index":2096,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:212",{"_index":2098,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:216",{"_index":2100,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:22",{"_index":2088,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:220",{"_index":2101,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:31",{"_index":2080,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:51",{"_index":2086,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:69",{"_index":2082,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:76",{"_index":2084,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/register/register",{"_index":2350,"title":{},"body":{"modules/RegisterPageRoutingModule.html":{}}}],["src/app/pages/register/register.module.ts",{"_index":2348,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/pages/register/register.page.ts",{"_index":2236,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/pages/register/register.page.ts:137",{"_index":2250,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:146",{"_index":2248,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:153",{"_index":2263,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:157",{"_index":2264,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:161",{"_index":2265,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:165",{"_index":2266,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:169",{"_index":2267,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:173",{"_index":2269,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:177",{"_index":2271,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:18",{"_index":2262,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:19",{"_index":2260,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:20",{"_index":2261,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:21",{"_index":2259,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:22",{"_index":2247,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:47",{"_index":2258,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:50",{"_index":2249,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:54",{"_index":2254,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:66",{"_index":2256,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:71",{"_index":2257,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:76",{"_index":2255,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:81",{"_index":2252,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:97",{"_index":2251,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/seasons/seasons",{"_index":2533,"title":{},"body":{"modules/SeasonsPageRoutingModule.html":{}}}],["src/app/pages/seasons/seasons.module.ts",{"_index":2531,"title":{},"body":{"modules/SeasonsPageModule.html":{}}}],["src/app/pages/seasons/seasons.page.ts",{"_index":1175,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"coverage.html":{}}}],["src/app/pages/seasons/seasons.page.ts:31",{"_index":1176,"title":{},"body":{"classes/Country-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:32",{"_index":1177,"title":{},"body":{"classes/Country-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:33",{"_index":1178,"title":{},"body":{"classes/Country-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:36",{"_index":2064,"title":{},"body":{"classes/Port-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:37",{"_index":2065,"title":{},"body":{"classes/Port-2.html":{}}}],["src/app/pages/seasons/seasons.page.ts:38",{"_index":2063,"title":{},"body":{"classes/Port-2.html":{}}}],["src/app/pages/series/series",{"_index":2796,"title":{},"body":{"modules/SeriesPageRoutingModule.html":{}}}],["src/app/pages/series/series.module.ts",{"_index":2794,"title":{},"body":{"modules/SeriesPageModule.html":{}}}],["src/app/pages/series/series.page.ts",{"_index":1060,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"coverage.html":{}}}],["src/app/pages/series/series.page.ts:31",{"_index":1061,"title":{},"body":{"classes/Country-1.html":{}}}],["src/app/pages/series/series.page.ts:32",{"_index":1062,"title":{},"body":{"classes/Country-1.html":{}}}],["src/app/pages/series/series.page.ts:33",{"_index":1063,"title":{},"body":{"classes/Country-1.html":{}}}],["src/app/pages/series/series.page.ts:36",{"_index":2061,"title":{},"body":{"classes/Port-1.html":{}}}],["src/app/pages/series/series.page.ts:37",{"_index":2062,"title":{},"body":{"classes/Port-1.html":{}}}],["src/app/pages/series/series.page.ts:38",{"_index":2060,"title":{},"body":{"classes/Port-1.html":{}}}],["src/app/pages/splash/splash",{"_index":2875,"title":{},"body":{"modules/SplashPageRoutingModule.html":{}}}],["src/app/pages/splash/splash.page.ts",{"_index":2849,"title":{},"body":{"components/SplashPage.html":{},"coverage.html":{}}}],["src/app/pages/splash/splash.page.ts:19",{"_index":2867,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:23",{"_index":2861,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:25",{"_index":2857,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:31",{"_index":2858,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pipes/capitalize.pipe.ts",{"_index":744,"title":{},"body":{"pipes/CapitalizePipe.html":{},"coverage.html":{}}}],["src/app/pipes/capitalize.pipe.ts:8",{"_index":748,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["src/app/pipes/toggle",{"_index":2949,"title":{},"body":{"pipes/TogglePasswordPipe.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":1957,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/season",{"_index":978,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/serie",{"_index":981,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":2233,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2843,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"injectables/CohereService.html":{}}}],["src/environments/environment.prod.ts",{"_index":2999,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3000,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":2850,"title":{},"body":{"components/SplashPage.html":{}}}],["standalone:true",{"_index":2869,"title":{},"body":{"components/SplashPage.html":{}}}],["start",{"_index":67,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["startafter",{"_index":564,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["startat",{"_index":563,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["started",{"_index":3066,"title":{"index.html":{}},"body":{}}],["state",{"_index":3191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.url",{"_index":3210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":2957,"title":{},"body":{"coverage.html":{}}}],["sticky",{"_index":2747,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["stop_sequences",{"_index":825,"title":{},"body":{"injectables/CohereService.html":{}}}],["storage",{"_index":1565,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts",{"_index":672,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"coverage.html":{}}}],["storage.service.ts:16",{"_index":683,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:17",{"_index":681,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:21",{"_index":2488,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:24",{"_index":2489,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:25",{"_index":676,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:27",{"_index":2486,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:30",{"_index":2762,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:32",{"_index":2485,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:33",{"_index":2760,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:38",{"_index":2759,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:43",{"_index":2483,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:46",{"_index":2487,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:49",{"_index":2484,"title":{},"body":{"injectables/SeasonsLocalStorageMapping.html":{}}}],["storage.service.ts:54",{"_index":679,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:57",{"_index":2761,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:60",{"_index":2758,"title":{},"body":{"injectables/SeriesLocalStorageMapping.html":{}}}],["storage.service.ts:68",{"_index":680,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:72",{"_index":677,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:80",{"_index":682,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:90",{"_index":678,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storagebucket",{"_index":3227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageref",{"_index":1583,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["storagereference",{"_index":1572,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["storedlang",{"_index":1786,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storelanguage",{"_index":1769,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storelanguage(lang",{"_index":1775,"title":{},"body":{"injectables/LanguageService.html":{}}}],["str",{"_index":2083,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["strapi",{"_index":2896,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["strapi.service.ts",{"_index":1247,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["strapi.service.ts:115",{"_index":2519,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:118",{"_index":2523,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:121",{"_index":2520,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:35",{"_index":2787,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:45",{"_index":2788,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:53",{"_index":2524,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:63",{"_index":2785,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:66",{"_index":2525,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:68",{"_index":2784,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:82",{"_index":2782,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:85",{"_index":2786,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:88",{"_index":2783,"title":{},"body":{"injectables/SeriesMappingStrapi.html":{}}}],["strapi.service.ts:93",{"_index":2522,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi.service.ts:98",{"_index":2521,"title":{},"body":{"injectables/SeasonsMappingStrapi.html":{}}}],["strapi_auth_token",{"_index":1336,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strapiauthenticationservice",{"_index":2882,"title":{"injectables/StrapiAuthenticationService.html":{}},"body":{"injectables/StrapiAuthenticationService.html":{},"coverage.html":{}}}],["strapiauthenticationservice(signin",{"_index":3180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strapiauthmappingservice",{"_index":2638,"title":{"injectables/StrapiAuthMappingService.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapimedia",{"_index":1251,"title":{"interfaces/StrapiMedia.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["strapimediadata",{"_index":1618,"title":{"interfaces/StrapiMediaData.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapimediaservice",{"_index":1632,"title":{"classes/StrapiMediaService.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapimediaservice(upload",{"_index":3187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strapimeresponse",{"_index":2627,"title":{"interfaces/StrapiMeResponse.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapirepositoryservice",{"_index":1341,"title":{"injectables/StrapiRepositoryService.html":{}},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["strapisignin",{"_index":2634,"title":{"interfaces/StrapiSignIn.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapisigninresponse",{"_index":2630,"title":{"interfaces/StrapiSignInResponse.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapisignup",{"_index":2637,"title":{"interfaces/StrapiSignUp.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapisignupresponse",{"_index":2633,"title":{"interfaces/StrapiSignUpResponse.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapiuploadresponse",{"_index":1617,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapiuser",{"_index":2632,"title":{"interfaces/StrapiUser.html":{}},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["string",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["su",{"_index":2317,"title":{},"body":{"components/RegisterPage.html":{},"index.html":{}}}],["su/s",{"_index":2321,"title":{},"body":{"components/RegisterPage.html":{}}}],["subject",{"_index":1531,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.asobservable",{"_index":1547,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.complete",{"_index":1551,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.error(error",{"_index":1545,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.next(changedata",{"_index":1542,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["submit",{"_index":2221,"title":{},"body":{"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["subscribe",{"_index":1520,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["subscribe('seasons",{"_index":1192,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["subscribe('series",{"_index":1098,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["subscribe((change",{"_index":1099,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["subscribe(collectionname",{"_index":841,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["subscription",{"_index":971,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["subscription.interface",{"_index":1068,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["subscription.interface.ts",{"_index":835,"title":{},"body":{"interfaces/CollectionChange.html":{},"interfaces/ICollectionSubscription.html":{},"coverage.html":{}}}],["subscription.interface.ts:11",{"_index":1713,"title":{},"body":{"interfaces/ICollectionSubscription.html":{}}}],["subscription.interface.ts:12",{"_index":1714,"title":{},"body":{"interfaces/ICollectionSubscription.html":{}}}],["subscription.service.ts",{"_index":1516,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{}}}],["subscription.service.ts:21",{"_index":1526,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:22",{"_index":1527,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:23",{"_index":1522,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:33",{"_index":1524,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:70",{"_index":1525,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.service.ts:84",{"_index":1523,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscriptions",{"_index":1517,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subtitle",{"_index":2217,"title":{},"body":{"components/ProfilePage.html":{}}}],["success",{"_index":1816,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["sugerencia",{"_index":3109,"title":{},"body":{"index.html":{}}}],["super",{"_index":1574,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["super(authmapping",{"_index":1442,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["super(http",{"_index":1344,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["super(repository",{"_index":951,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/TasksService.html":{}}}],["support",{"_index":3112,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":1407,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["surname:response.surname",{"_index":2653,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["surname:response.user.surname",{"_index":2648,"title":{},"body":{"interfaces/SerieRaw-5.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["sus",{"_index":3073,"title":{},"body":{"index.html":{}}}],["suscripciones",{"_index":1556,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["suscripción",{"_index":1544,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["svg",{"_index":3113,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1104,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"miscellaneous/variables.html":{}}}],["switch(backend",{"_index":3178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch(key",{"_index":1279,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["switchmap",{"_index":1433,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["switchmap((seasonsdata",{"_index":2831,"title":{},"body":{"injectables/SeriesService.html":{}}}],["switchmap((seriespaginated",{"_index":2811,"title":{},"body":{"injectables/SeriesService.html":{}}}],["switchmap(snapshot",{"_index":1593,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["switchmap(user",{"_index":1578,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["synopsis",{"_index":1317,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Meta-1.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["synopsis:d.synopsis",{"_index":1927,"title":{},"body":{"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SerieRaw.html":{}}}],["synopsis:data.synopsis",{"_index":1321,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["synopsis:string",{"_index":1608,"title":{},"body":{"interfaces/FirebaseSerie.html":{},"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["t",{"_index":530,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"interfaces/SeasonRaw.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieRaw.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["table",{"_index":3002,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3001,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2895,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["take(1",{"_index":3198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["también",{"_index":2826,"title":{},"body":{"injectables/SeriesService.html":{}}}],["tap",{"_index":1431,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["task",{"_index":1738,"title":{"interfaces/Task.html":{}},"body":{"interfaces/ITasksRepository.html":{},"interfaces/ITasksService.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["tasks_api_url_token",{"_index":2984,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasks_repository_token",{"_index":2944,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksservice",{"_index":2941,"title":{"injectables/TasksService.html":{}},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["televisión",{"_index":784,"title":{},"body":{"injectables/CohereService.html":{}}}],["temperature",{"_index":822,"title":{},"body":{"injectables/CohereService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["temporadas",{"_index":2827,"title":{},"body":{"injectables/SeriesService.html":{},"index.html":{}}}],["tenemos",{"_index":1201,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["tener",{"_index":802,"title":{},"body":{"injectables/CohereService.html":{},"components/RegisterPage.html":{}}}],["terminar",{"_index":812,"title":{},"body":{"injectables/CohereService.html":{}}}],["text",{"_index":93,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/FirebaseComment.html":{},"components/LoginPage.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{},"pipes/TogglePasswordPipe.html":{}}}],["text.input",{"_index":1888,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["textarea",{"_index":2614,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["textencoder().encode(str",{"_index":2123,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["then((user",{"_index":1091,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["then(async",{"_index":1490,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._authenticated.asobservable",{"_index":481,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._authenticated.next(false",{"_index":1466,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._authenticated.next(true",{"_index":1465,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._filteredseasons.asobservable",{"_index":1186,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next([...sortedseasons",{"_index":1228,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next(filtered",{"_index":1221,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next(seasons",{"_index":1190,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next(this._seasons.value",{"_index":1218,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseasons.next(updatedseasons",{"_index":1235,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._filteredseries.asobservable",{"_index":1077,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._filteredseries.next([...sortedseries",{"_index":1137,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._filteredseries.next(filtered",{"_index":1128,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._filteredseries.next(series",{"_index":1096,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this._filteredseries.next(this._series.value",{"_index":1124,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._filteredseries.next(updatedseries",{"_index":1145,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._items.findindex(item=>item.id",{"_index":706,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.length",{"_index":696,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.push(entity",{"_index":702,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.slice",{"_index":692,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.splice(index",{"_index":713,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items[index]=entity",{"_index":708,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._picture.asobservable",{"_index":2002,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":2013,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":2016,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":2021,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._ready.asobservable",{"_index":483,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._ready.next(true",{"_index":1468,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._seasons.asobservable",{"_index":995,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["this._seasons.next([...response.data",{"_index":1038,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this._seasons.next([...sortedseasons",{"_index":1227,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.next([...this._seasons.value",{"_index":1040,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this._seasons.next(currentseasons",{"_index":1217,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.next(updatedseasons",{"_index":1232,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.subscribe((seasons",{"_index":1189,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.value",{"_index":1194,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._seasons.value.filter((season",{"_index":1219,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this._series.asobservable",{"_index":992,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SeasonModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["this._series.next([...serieswithsortedseasons",{"_index":1028,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this._series.next([...sortedseries",{"_index":1136,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._series.next([...this._series.value",{"_index":1033,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this._series.next(currentseries",{"_index":1120,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this._series.next(series",{"_index":2393,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this._series.next(updatedseries",{"_index":1142,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._series.subscribe((series",{"_index":1095,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this._series.value",{"_index":1101,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this._series.value.filter((serie",{"_index":1126,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this._series.value.filter(serie",{"_index":2708,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this._token",{"_index":1446,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._user.asobservable",{"_index":485,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next",{"_index":1458,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._user.next(this.authmapping.me(resp",{"_index":2907,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(this.authmapping.signin(resp",{"_index":2914,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(undefined",{"_index":1467,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this.adminkeyfieldtype",{"_index":2285,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.adminkeyhash",{"_index":2292,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.adminkeyhashed",{"_index":2159,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.alertctrl.create",{"_index":1163,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.apikey",{"_index":773,"title":{},"body":{"injectables/CohereService.html":{}}}],["this.apiurl",{"_index":658,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this.apiurl}/${this.resource",{"_index":1366,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}/${id",{"_index":1370,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}/?_page=${page}&_per_page=${pagesize}&${search",{"_index":1756,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["this.apiurl}/${this.resource}?&${search",{"_index":1361,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}?pagination[page]=${page}&pagination[pagesize]=${pagesize}&${search}&populate=user,serie,picture",{"_index":1357,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/users/${userid",{"_index":2922,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.auth",{"_index":1443,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.auth.gettoken",{"_index":1347,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["this.authmapping.me",{"_index":1514,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.me(response",{"_index":2924,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signin(resp",{"_index":2915,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signin(usercredential.user",{"_index":1485,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signinpayload(authpayload",{"_index":1481,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signinpayload(authpayload)).pipe(map((resp:strapisigninresponse",{"_index":2910,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signup(resp",{"_index":2918,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authservice.getcurrentuser",{"_index":2142,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.authsvc",{"_index":1090,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.authsvc.signin(this.loginform.value).subscribe",{"_index":1843,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authsvc.signout().subscribe",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authsvc.signup(signupdata).subscribe",{"_index":2301,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.changelanguage(storedlang",{"_index":1788,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changepicture",{"_index":2037,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":2031,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.cohereservice.generatesynopsis(title",{"_index":2592,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.collectionname",{"_index":588,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.collectionref",{"_index":586,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.commentsrepository",{"_index":952,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this.commentsrepository.getcommentsbyserieid(serieid",{"_index":953,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this.currentlang",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["this.db",{"_index":584,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["this.defaultlang",{"_index":1792,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.disabled",{"_index":2722,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.el.nativeelement",{"_index":1946,"title":{},"body":{"directives/OnlyAllowedCharactersDirective.html":{}}}],["this.fb.group",{"_index":1831,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formbuilder.group",{"_index":2112,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.formgroup",{"_index":2408,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['name",{"_index":2409,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['name'].setvalue(_season.name",{"_index":2398,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['name'].setvalue(_serie.name",{"_index":2579,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['numepisodes",{"_index":2411,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['numepisodes'].setvalue(_season.numepisodes",{"_index":2400,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['numseason",{"_index":2410,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['numseason'].setvalue(_season.numseason",{"_index":2399,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['picture'].setvalue(_serie.picture.url",{"_index":2584,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['rating",{"_index":2413,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['rating'].setvalue(_season.rating",{"_index":2402,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['rating'].setvalue(_serie.rating",{"_index":2582,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['releasedate",{"_index":2412,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['releasedate'].setvalue(_season.releasedate",{"_index":2401,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['releaseyear",{"_index":2600,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['releaseyear'].setvalue(_serie.releaseyear",{"_index":2581,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['serieid",{"_index":2414,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['serieid'].setvalue(_season.serieid",{"_index":2403,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.formgroup.controls['synopsis",{"_index":2599,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.controls['synopsis'].setvalue(_serie.synopsis",{"_index":2580,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.get('name')?.value",{"_index":2585,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.get('picture')?.value",{"_index":2601,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.get('synopsis')?.markasdirty",{"_index":2595,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.get('synopsis')?.setvalue(synopsis",{"_index":2594,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.formgroup.valid",{"_index":2422,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.formgroup.value",{"_index":2425,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.getall(page",{"_index":2809,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.getdirtyvalues(this.formgroup",{"_index":2426,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.getheaders",{"_index":1641,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.getheaders()).pipe(map((res:paginatedraw",{"_index":1362,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.getheaders()).pipe(map(res",{"_index":1358,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.getheaders()).pipe(map(res=>this.mapping.getdeleted(res",{"_index":1374,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.getone(d",{"_index":1295,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["this.getone(data",{"_index":903,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["this.getone(data.data",{"_index":1313,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{},"interfaces/UserRaw.html":{}}}],["this.getone(item",{"_index":902,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/FirebaseComment.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeriesMappingFirebaseService.html":{}}}],["this.getstoredlanguage",{"_index":1787,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.hashstring(enteredkey",{"_index":2158,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.hasvalue",{"_index":2015,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.http.delete(`${this.apiurl}/${this.resource}/${id",{"_index":1373,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.delete(`${this.apiurl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getdeleted(res",{"_index":669,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get",{"_index":1356,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.get(`${this.apiurl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getone(res",{"_index":664,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get(`${this.apiurl}/${this.resource}`).pipe(map(res=>this.mapping.getpaginated(page",{"_index":662,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get>(`${this.apiurl}/?_page=${page}&_per_page=${pagesize}`).pipe(map(res",{"_index":1911,"title":{},"body":{"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SerieRaw.html":{}}}],["this.http.patch",{"_index":1761,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["this.http.post",{"_index":1365,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.post(`${this.apiurl}/${this.resource",{"_index":665,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.post(this.apiurl",{"_index":828,"title":{},"body":{"injectables/CohereService.html":{}}}],["this.http.put",{"_index":1369,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.put(`${this.apiurl}/${this.resource}/${id",{"_index":667,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.httpclient.get",{"_index":2925,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.httpclient.post",{"_index":1639,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.httpclient.put",{"_index":2923,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.isadmin",{"_index":1092,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/RegisterPage.html":{}}}],["this.isdisabled",{"_index":2019,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.isgeneratingsynopsis",{"_index":2591,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.ismobile",{"_index":2405,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["this.isuppercase",{"_index":2107,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.isweb",{"_index":1002,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.jwt_token",{"_index":2903,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["this.languageservice.getstoredlanguage",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.languageservice.storelanguage(lang",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadedids.add(change.id",{"_index":1106,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.loadedids.add(season.id",{"_index":1225,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.loadedids.add(serie.id",{"_index":1133,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.loadedids.delete(change.id",{"_index":1119,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.loadedids.has(change.id",{"_index":1102,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.loadingcontroller.create",{"_index":2134,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.loadingctrl.create",{"_index":2589,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.loadmoreseasons(ev.target",{"_index":1237,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.loadmoreseries(ev.target",{"_index":1059,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this.loadseasons",{"_index":1005,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["this.loadseries",{"_index":1004,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["this.loginform",{"_index":1830,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.controls['email",{"_index":1865,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.controls['password",{"_index":1866,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.reset",{"_index":1860,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.valid",{"_index":1842,"title":{},"body":{"components/LoginPage.html":{}}}],["this.mapping.getadded",{"_index":615,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.getadded(res",{"_index":1368,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getdeleted(entity",{"_index":622,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.getone",{"_index":610,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.mapping.getone(comment",{"_index":927,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.getone(elem",{"_index":1364,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getpaginated(page",{"_index":603,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getupdated",{"_index":619,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.getupdated(res",{"_index":1372,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setadd(entity",{"_index":1367,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setadd(entity))).pipe",{"_index":613,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.setadd(entity)).pipe(map(res",{"_index":1760,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["this.mapping.setupdate(entity",{"_index":1371,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setupdate(entity))).pipe",{"_index":618,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["this.mapping.setupdate(entity)).pipe(map(res",{"_index":1762,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw-2.html":{}}}],["this.me().subscribe",{"_index":2905,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.meurl}`,{headers:{authorization",{"_index":2926,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.modalctrl.create",{"_index":1048,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.modalctrl.dismiss",{"_index":2423,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["this.modalctrl.dismiss(formdata",{"_index":2602,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.mode",{"_index":2397,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["this.mode=='new",{"_index":2424,"title":{},"body":{"components/SeasonModalComponent.html":{}}}],["this.newid",{"_index":699,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this.page",{"_index":1018,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["this.page=1",{"_index":1036,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this.pages",{"_index":1029,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["this.pagesize).subscribe",{"_index":1020,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["this.passwordfieldtype",{"_index":1841,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.passwordfieldtype2",{"_index":2284,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.picturemodal?.dismiss",{"_index":2038,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.platform.is('android",{"_index":2407,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["this.platform.is('desktop",{"_index":1003,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.platform.is('ios",{"_index":2406,"title":{},"body":{"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["this.popover?.dismiss",{"_index":2707,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.presentmodalseason('edit",{"_index":1236,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.presentmodalseason('new",{"_index":1242,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.presentmodalseason(season",{"_index":1044,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this.presentmodalserie('edit",{"_index":1146,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.presentmodalserie('new",{"_index":1160,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.presentmodalserie(serie",{"_index":1052,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this.presenttoast('clave",{"_index":2293,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.presenttoast('error",{"_index":2305,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.presenttoast('¡inicio",{"_index":1845,"title":{},"body":{"components/LoginPage.html":{}}}],["this.presenttoast('¡registro",{"_index":2302,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.presenttoast(errormessage",{"_index":1859,"title":{},"body":{"components/LoginPage.html":{}}}],["this.propagatechange",{"_index":2017,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["this.propagatechange(picture",{"_index":2022,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(this.serieselected.id",{"_index":2720,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.registerform",{"_index":2111,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.controls['adminkey",{"_index":2311,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['confirmpassword",{"_index":2310,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['email",{"_index":2202,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.controls['name",{"_index":2200,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.controls['password",{"_index":2309,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['surname",{"_index":2201,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.controls['username",{"_index":2199,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.get('adminkey",{"_index":2279,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.get('adminkey')?.clearvalidators",{"_index":2277,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.get('picture')?.markasdirty",{"_index":2121,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.get('username",{"_index":2104,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.get(key)?.dirty",{"_index":2177,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.get(key)?.value",{"_index":2180,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.patchvalue",{"_index":2120,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.registerform.reset",{"_index":2307,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.valid",{"_index":2153,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.registerform.value",{"_index":2287,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value.adminkey?.trim",{"_index":2156,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.repository.add(entity",{"_index":738,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.delete(id",{"_index":740,"title":{},"body":{"injectables/BaseService.html":{},"injectables/SeriesService.html":{}}}],["this.repository.getall(1",{"_index":2541,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["this.repository.getall(page",{"_index":736,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.getbyid(id",{"_index":737,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.update(id",{"_index":739,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1849,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.router.navigate(['/home",{"_index":2303,"title":{},"body":{"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["this.router.navigate(['/login",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterPage.html":{}}}],["this.router.navigate(['/register",{"_index":1861,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl(returnurl",{"_index":1850,"title":{},"body":{"components/LoginPage.html":{}}}],["this.searchterm",{"_index":1123,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["this.seasonssubscription",{"_index":1191,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.seasonssvc.add(response.data).subscribe",{"_index":1239,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.seasonssvc.delete(season.id",{"_index":2837,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.seasonssvc.delete(season.id).subscribe",{"_index":1245,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.seasonssvc.getall",{"_index":2829,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.seasonssvc.getall(1",{"_index":2814,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.seasonssvc.getall(this.page",{"_index":1037,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["this.seasonssvc.update(season!.id",{"_index":1240,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["this.selectedimage",{"_index":2118,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.selectedseason",{"_index":1045,"title":{},"body":{"classes/Country.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-2.html":{}}}],["this.selectedserie",{"_index":1053,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Port.html":{},"classes/Port-1.html":{}}}],["this.selectserie(obj",{"_index":2721,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.selectserie(serie.id",{"_index":2725,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.selectserie(undefined",{"_index":2728,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.serieselected",{"_index":2717,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.seriessubscription",{"_index":1097,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.seriessvc.getall(this.page",{"_index":2709,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["this.seriesvc.add(response.data).subscribe",{"_index":1154,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.seriesvc.delete(serie.id).subscribe",{"_index":1173,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.seriesvc.getall(this.page",{"_index":1129,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.seriesvc.getserieswithseasons(this.page",{"_index":1019,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{}}}],["this.seriesvc.update(serie!.id",{"_index":1157,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["this.showerrortoast(errormessage",{"_index":2598,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.signinurl",{"_index":2909,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.signupurl",{"_index":2916,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.storage",{"_index":1575,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["this.subscriptions.clear",{"_index":1563,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.delete(collectionname",{"_index":1552,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.foreach(subject",{"_index":1561,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.get(collectionname",{"_index":1550,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.get(collectionname)!.asobservable",{"_index":1534,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.has(collectionname",{"_index":1533,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.set(collectionname",{"_index":1535,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.toastcontroller.create",{"_index":1835,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.toastctrl.create",{"_index":2586,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["this.translate",{"_index":1164,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["this.translate.currentlang",{"_index":1790,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(lang",{"_index":1789,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translateservice.get('common.success.save').topromise",{"_index":2196,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.translateservice.get('profile.admin_granted').topromise",{"_index":2160,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.translateservice.get('profile.admin_key_invalid').topromise",{"_index":2164,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.translateservice.get('profile.already_admin').topromise",{"_index":2170,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.unsubscribefunctions.clear",{"_index":1562,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.delete(collectionname",{"_index":1549,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.foreach(unsubscribe",{"_index":1560,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.get(collectionname",{"_index":1548,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.set(collectionname",{"_index":1546,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.uploadurl",{"_index":1640,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.user",{"_index":2143,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.admin",{"_index":2154,"title":{},"body":{"components/ProfilePage.html":{}}}],["throw",{"_index":710,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/SeasonRaw-2.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":1615,"title":{"interfaces/Thumbnail.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["thumbnail:data.picture.thumbnail",{"_index":2625,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["thumbnail:string",{"_index":2552,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["tienes",{"_index":1868,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["timer",{"_index":2868,"title":{},"body":{"components/SplashPage.html":{}}}],["timer(5000).subscribe(_",{"_index":2873,"title":{},"body":{"components/SplashPage.html":{}}}],["tipo",{"_index":1697,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["title",{"_index":762,"title":{},"body":{"injectables/CohereService.html":{},"components/ProfilePage.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["titulada",{"_index":785,"title":{},"body":{"injectables/CohereService.html":{}}}],["titulo",{"_index":790,"title":{},"body":{"injectables/CohereService.html":{}}}],["toast",{"_index":1834,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["toast.present",{"_index":1840,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["toastcontroller",{"_index":1809,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{}}}],["toastctrl",{"_index":2556,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["todas",{"_index":1554,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["toggle",{"_index":2337,"title":{},"body":{"components/RegisterPage.html":{}}}],["toggleadminkeyvisibility",{"_index":2244,"title":{},"body":{"components/RegisterPage.html":{}}}],["togglecase",{"_index":2075,"title":{},"body":{"components/ProfilePage.html":{}}}],["togglepassword",{"_index":2951,"title":{},"body":{"pipes/TogglePasswordPipe.html":{}}}],["togglepasswordpipe",{"_index":2948,"title":{"pipes/TogglePasswordPipe.html":{}},"body":{"pipes/TogglePasswordPipe.html":{},"coverage.html":{}}}],["togglepasswordvisibility",{"_index":1803,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["togglepasswordvisibility2",{"_index":2245,"title":{},"body":{"components/RegisterPage.html":{}}}],["token",{"_index":1346,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{}}}],["token\",resp.jwt",{"_index":2912,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["tolowercase",{"_index":750,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["tomar",{"_index":3199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["top",{"_index":2222,"title":{},"body":{"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["topromise",{"_index":1166,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["toreturn",{"_index":1327,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["toreturn.data['name']=data[key",{"_index":1326,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["toreturn:any",{"_index":2448,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn:seriedata",{"_index":1323,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Meta-1.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"interfaces/SerieRaw-4.html":{},"injectables/SeriesMappingStrapi.html":{}}}],["toreturn['name']=data[key",{"_index":2449,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['numepisodes']=data[key",{"_index":2451,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['numseason']=data[key",{"_index":2450,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['rating']=data[key",{"_index":2453,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['releasedate']=data[key",{"_index":2452,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["toreturn['serieid']=data[key",{"_index":2454,"title":{},"body":{"interfaces/SeasonRaw-1.html":{},"injectables/SeasonsMappingJsonServer.html":{}}}],["total",{"_index":869,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data-2.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["traducción",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["transform",{"_index":746,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"pipes/TogglePasswordPipe.html":{}}}],["transform(showpassword",{"_index":2952,"title":{},"body":{"pipes/TogglePasswordPipe.html":{}}}],["transform(value",{"_index":747,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["transition",{"_index":2046,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["translate",{"_index":35,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/LanguageService.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["translate.addlangs(['español",{"_index":1780,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.getbrowserlang",{"_index":1784,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.setdefaultlang('español",{"_index":1782,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.use(browserlang?.match(/español|ingles",{"_index":1785,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate/core",{"_index":194,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"modules/HomePageModule.html":{},"injectables/LanguageService.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"components/SerieModalComponent.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":1653,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":977,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/LanguageService.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["translatex(8px",{"_index":2480,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["transparent",{"_index":2056,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["trata",{"_index":817,"title":{},"body":{"injectables/CohereService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["trimestre",{"_index":3099,"title":{},"body":{"index.html":{}}}],["true",{"_index":1470,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1492,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{}}}],["tslib",{"_index":3039,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":795,"title":{},"body":{"injectables/CohereService.html":{},"components/SplashPage.html":{}}}],["tus",{"_index":3080,"title":{},"body":{"index.html":{}}}],["tv",{"_index":3074,"title":{},"body":{"index.html":{}}}],["type",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseComment.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/FirebaseSerie.html":{},"interfaces/Formats.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"interfaces/ISeasonsService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"components/SeasonModalComponent.html":{},"interfaces/SeasonRaw.html":{},"interfaces/SeasonRaw-1.html":{},"interfaces/SeasonRaw-2.html":{},"interfaces/SeasonRaw-3.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingJsonServer.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieAttributes-1.html":{},"interfaces/SerieData.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/SerieRaw-2.html":{},"interfaces/SerieRaw-3.html":{},"interfaces/SerieRaw-4.html":{},"interfaces/SerieRaw-5.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingFirebaseService.html":{},"injectables/SeriesMappingJsonServer.html":{},"injectables/SeriesMappingStrapi.html":{},"injectables/SeriesService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"interfaces/Thumbnail.html":{},"pipes/TogglePasswordPipe.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3130,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1308,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["título",{"_index":819,"title":{},"body":{"injectables/CohereService.html":{}}}],["uint8array(hashbuffer",{"_index":2129,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["un",{"_index":1872,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["una",{"_index":779,"title":{},"body":{"injectables/CohereService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["undefined",{"_index":891,"title":{},"body":{"injectables/CommentsMappingFirebaseService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/Data.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/Serie.html":{},"interfaces/SerieAttributes.html":{},"components/SerieModalComponent.html":{},"interfaces/SerieRaw-1.html":{},"components/SerieSelectableComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRaw.html":{}}}],["unknown",{"_index":547,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{}}}],["unsubscribe",{"_index":1521,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["unsubscribe(collectionname",{"_index":842,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["unsubscribefunctions",{"_index":1518,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["update",{"_index":522,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/ProfilePage.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["update(id",{"_index":548,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/CommentsService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/SeasonsService.html":{},"injectables/SeriesService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TasksService.html":{}}}],["updatedat",{"_index":1501,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Model.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["updatedat?:string",{"_index":1901,"title":{},"body":{"interfaces/Model.html":{}}}],["updatedoc",{"_index":559,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["updatedseasons",{"_index":1230,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["updatedseasons.filter((season",{"_index":1233,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{}}}],["updatedseries",{"_index":1140,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{},"components/SerieSelectableComponent.html":{}}}],["updatedseries.filter((serie",{"_index":1143,"title":{},"body":{"classes/Country-1.html":{},"classes/Port-1.html":{}}}],["updatedseries.filter(serie",{"_index":2712,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["updateduser",{"_index":2172,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateduser.admin",{"_index":2184,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateduser.picture",{"_index":2193,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateduser[key",{"_index":2178,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateurl",{"_index":2921,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["updateuser",{"_index":453,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["updateuser(userid",{"_index":469,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["upload",{"_index":506,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"classes/StrapiMediaService.html":{}}}],["upload(blob",{"_index":507,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"classes/StrapiMediaService.html":{}}}],["upload(blob:blob):observable",{"_index":1636,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["upload:string",{"_index":3184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload_api_url_token",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadbytes",{"_index":1570,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploaded",{"_index":1588,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploadresponse",{"_index":2190,"title":{},"body":{"components/ProfilePage.html":{}}}],["uploadresponse.length",{"_index":2192,"title":{},"body":{"components/ProfilePage.html":{}}}],["uploadresponse[0].tostring",{"_index":2194,"title":{},"body":{"components/ProfilePage.html":{}}}],["uploadurl",{"_index":1634,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["url",{"_index":646,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"components/SerieModalComponent.html":{},"injectables/SeriesMappingFirebaseService.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["url(\"/assets/background",{"_index":2334,"title":{},"body":{"components/RegisterPage.html":{}}}],["url('/assets/background",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieViewComponent.html":{}}}],["url:data.picture.url",{"_index":2621,"title":{},"body":{"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["url:string",{"_index":2548,"title":{},"body":{"interfaces/Serie.html":{},"interfaces/SerieRaw-3.html":{},"injectables/SeriesLocalStorageMapping.html":{}}}],["usar",{"_index":3106,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["useexisting",{"_index":2007,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":274,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"interfaces/Comment.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebaseSeason.html":{},"interfaces/IAuthMapping.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SeasonAttributes.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user$:observable",{"_index":498,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["user.admin",{"_index":1093,"title":{},"body":{"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["user.email",{"_index":1459,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{}}}],["user.getidtoken",{"_index":1447,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["user.id",{"_index":1589,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["user.name",{"_index":2145,"title":{},"body":{"components/ProfilePage.html":{}}}],["user.picture",{"_index":2147,"title":{},"body":{"components/ProfilePage.html":{}}}],["user.surname",{"_index":2146,"title":{},"body":{"components/ProfilePage.html":{}}}],["user.uid",{"_index":1453,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["user.username",{"_index":2144,"title":{},"body":{"components/ProfilePage.html":{}}}],["user:data.userid?number(data.userid):null",{"_index":1276,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["user:string",{"_index":1605,"title":{},"body":{"interfaces/FirebaseSeason.html":{}}}],["user:userraw",{"_index":1266,"title":{},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{}}}],["usercredential",{"_index":1491,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usercredential.user.delete",{"_index":1504,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usercredential.user.uid",{"_index":1494,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata",{"_index":470,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["userdata['admin",{"_index":1463,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['name",{"_index":1460,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['picture",{"_index":1464,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['surname",{"_index":1461,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['username",{"_index":1462,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdoc",{"_index":1451,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userid",{"_index":472,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/Comment.html":{},"injectables/CommentsMappingFirebaseService.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseComment.html":{},"interfaces/ISeasonsService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/Season.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingFirebaseService.html":{},"injectables/SeasonsMappingStrapi.html":{},"injectables/SeasonsService.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/UserRaw.html":{}}}],["userid?:string",{"_index":2355,"title":{},"body":{"interfaces/Season.html":{}}}],["userid}).pipe",{"_index":2542,"title":{},"body":{"injectables/SeasonsService.html":{}}}],["username",{"_index":1398,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SerieRaw-5.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["usernamecontrol",{"_index":2103,"title":{},"body":{"components/ProfilePage.html":{}}}],["usernamecontrol.setvalue",{"_index":2108,"title":{},"body":{"components/ProfilePage.html":{}}}],["usernamecontrol.value",{"_index":2106,"title":{},"body":{"components/ProfilePage.html":{}}}],["userraw",{"_index":1256,"title":{"interfaces/UserRaw.html":{}},"body":{"interfaces/Data.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"interfaces/SeasonAttributes.html":{},"interfaces/SeasonData.html":{},"interfaces/SeasonRaw-3.html":{},"injectables/SeasonsMappingStrapi.html":{},"interfaces/SerieAttributes.html":{},"interfaces/SerieRaw-1.html":{},"interfaces/UserRaw.html":{},"coverage.html":{}}}],["userref",{"_index":1493,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["users",{"_index":1452,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnap",{"_index":1454,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnap.data",{"_index":1457,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnap.exists",{"_index":1456,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnapshot",{"_index":1478,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnapshot.data",{"_index":1480,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usersnapshot.exists",{"_index":1479,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usevalue",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["usuario",{"_index":1475,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":3071,"title":{},"body":{"index.html":{}}}],["v",{"_index":1351,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-2.html":{},"interfaces/PaginatedRaw-3.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["valid",{"_index":2219,"title":{},"body":{"components/ProfilePage.html":{},"components/SerieModalComponent.html":{}}}],["validationerrors",{"_index":3063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1827,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["validators.email",{"_index":1833,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["validators.minlength(2",{"_index":2275,"title":{},"body":{"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["validators.required",{"_index":1832,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SerieModalComponent.html":{}}}],["validchars",{"_index":686,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["valor",{"_index":3200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valores",{"_index":1700,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["value",{"_index":475,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"pipes/CapitalizePipe.html":{},"injectables/CohereService.html":{},"injectables/CommentsRepositoryFirebaseService.html":{},"classes/Country.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"injectables/MySeasonsService.html":{},"injectables/MySeriesService.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["variable",{"_index":2959,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3133,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":3090,"title":{},"body":{"index.html":{}}}],["verificar",{"_index":1207,"title":{},"body":{"classes/Country-2.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{}}}],["version",{"_index":3123,"title":{},"body":{"properties.html":{}}}],["video",{"_index":3096,"title":{},"body":{"index.html":{}}}],["view",{"_index":2462,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view'},{'name",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"components/SplashPage.html":{}}}],["view.component",{"_index":980,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"modules/SharedModule.html":{}}}],["view.component.html",{"_index":2464,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view.component.scss",{"_index":2463,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view.component.ts",{"_index":2461,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":2467,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view.component.ts:12",{"_index":2466,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view.component.ts:21",{"_index":2468,"title":{},"body":{"components/SeasonViewComponent.html":{},"components/SerieViewComponent.html":{}}}],["view/season",{"_index":979,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SeasonViewComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["view/serie",{"_index":982,"title":{},"body":{"classes/Country.html":{},"classes/Port.html":{},"components/SerieViewComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":963,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/SerieSelectableComponent.html":{}}}],["viewchild('animatedavatar",{"_index":1008,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["viewchild('animatedavatarcontainer",{"_index":1010,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["viewchild('popover",{"_index":2698,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["viewchildren",{"_index":964,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["viewchildren('avatar",{"_index":1006,"title":{},"body":{"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/CollectionChange.html":{},"classes/Country.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"directives/OnlyAllowedCharactersDirective.html":{},"components/PictureSelectableComponent.html":{},"classes/Port.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"injectables/SeasonsLocalStorageMapping.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"injectables/SeriesLocalStorageMapping.html":{},"injectables/SeriesMappingJsonServer.html":{},"components/SplashPage.html":{}}}],["wantsadmin",{"_index":2288,"title":{},"body":{"components/RegisterPage.html":{}}}],["warning",{"_index":2588,"title":{},"body":{"components/SerieModalComponent.html":{}}}],["web",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["webdir",{"_index":3215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SeasonViewComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["where('serieid",{"_index":922,"title":{},"body":{"injectables/CommentsRepositoryFirebaseService.html":{}}}],["white",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{}}}],["width",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SeasonModalComponent.html":{},"components/SeasonViewComponent.html":{},"components/SerieModalComponent.html":{},"components/SerieSelectableComponent.html":{},"components/SerieViewComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["writevalue",{"_index":1976,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["writevalue(obj",{"_index":1997,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SerieSelectableComponent.html":{}}}],["www",{"_index":3216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":810,"title":{},"body":{"injectables/CohereService.html":{},"components/RegisterPage.html":{},"components/SerieSelectableComponent.html":{},"index.html":{}}}],["ya",{"_index":1200,"title":{},"body":{"classes/Country-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"classes/Port-2.html":{},"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":938,"title":{},"body":{"injectables/CommentsService.html":{},"classes/Country-1.html":{},"classes/Country-2.html":{},"interfaces/ICommentsRepository.html":{},"interfaces/ICommentsService.html":{},"classes/Port-1.html":{},"classes/Port-2.html":{}}}],["z",{"_index":2748,"title":{},"body":{"components/SerieSelectableComponent.html":{}}}],["z1gv.onrender.com",{"_index":3219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":3041,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SeasonsPageModule.html":{},"modules/SeriesPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ 'MENU.ABOUT' | translate }}\n  \n\n\n\n  \n    \n      \n        \n          \n            \n          \n          {{ 'ABOUT.NAME' | translate }}\n        \n  \n        {{ 'ABOUT.INFO' | translate }}\n  \n        \n          \n            \n            {{ 'ABOUT.EMAIL' | translate }}\n          \n  \n          \n            \n            {{ 'ABOUT.NUMBER' | translate }}\n          \n  \n          \n            \n            {{ 'ABOUT.GITHUB' | translate }}\n          \n        \n      \n      \n      \n        \n          \n            \n          \n          {{ 'ABOUT.NAME2' | translate }}\n        \n  \n        {{ 'ABOUT.INFO2' | translate }}\n  \n        \n          \n            \n            {{ 'ABOUT.EMAIL2' | translate }}\n          \n  \n          \n            \n            {{ 'ABOUT.NUMBER2' | translate }}\n          \n  \n          \n            \n            {{ 'ABOUT.GITHUB2' | translate }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                  .about-container {\n    background-image: url('/assets/background-pattern.svg');\n    background-size: cover;\n    background-position: center;\n    min-height: 100%;\n    padding: 24px;\n\n    .cards{\n      display: flex;\n      justify-content: center;\n      align-items: flex-start;\n    }\n  \n    .profile-card {\n      background: rgba(255, 255, 255, 0.9);\n      border-radius: 20px;\n      padding: 32px;\n      width: 100%;\n      max-width: 600px;\n      box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n      margin: 32px;\n  \n      .profile-header {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-bottom: 32px;\n        text-align: center;\n  \n        .profile-avatar {\n          width: 120px;\n          height: 120px;\n          margin-bottom: 16px;\n          border: 3px solid #ff5722;\n        }\n  \n        h1 {\n          color: #333;\n          font-size: 24px;\n          font-weight: 600;\n          margin: 0;\n        }\n      }\n  \n      .contact-info {\n        .info-item {\n          display: flex;\n          align-items: center;\n          padding: 16px;\n          margin-bottom: 12px;\n          border-radius: 12px;\n          background: rgba(255, 255, 255, 0.5);\n  \n          ion-icon {\n            font-size: 24px;\n            color: #ff5722;\n            margin-right: 16px;\n          }\n        }\n      }\n      p {\n        margin: 0;\n        color: #333;\n        font-size: 16px;\n      }\n    }\n  }\n  \n  @media (max-width: 576px) {\n    .about-container {\n      padding: 16px;\n\n      .cards{\n        display: grid;\n      }\n  \n      .profile-card {\n        margin-left: 0px;\n        margin-bottom: .5%;\n  \n        .profile-header {\n          .profile-avatar {\n            width: 100px;\n            height: 100px;\n          }\n  \n          h1 {\n            font-size: 20px;\n          }\n        }\n  \n        .contact-info {\n          .info-item {\n            padding: 12px;\n            \n            ion-icon {\n              font-size: 20px;\n            }\n  \n            p {\n              font-size: 14px;\n            }\n          }\n        }\n      }\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'MENU.ABOUT\\' | translate }}                                                                {{ \\'ABOUT.NAME\\' | translate }}                  {{ \\'ABOUT.INFO\\' | translate }}                                            {{ \\'ABOUT.EMAIL\\' | translate }}                                              {{ \\'ABOUT.NUMBER\\' | translate }}                                              {{ \\'ABOUT.GITHUB\\' | translate }}                                                                                      {{ \\'ABOUT.NAME2\\' | translate }}                  {{ \\'ABOUT.INFO2\\' | translate }}                                            {{ \\'ABOUT.EMAIL2\\' | translate }}                                              {{ \\'ABOUT.NUMBER2\\' | translate }}                                              {{ \\'ABOUT.GITHUB2\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { AboutPageRoutingModule } from './about-routing.module';\nimport { AboutPage } from './about.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authSvc\n                            \n                            \n                                currentLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService, authSvc: BaseAuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseAuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LanguageService } from './core/services/language.service';\nimport { BaseAuthenticationService } from './core/services/impl/base-authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  currentLang: string;\n\n  constructor(\n    private languageService: LanguageService,\n    public authSvc: BaseAuthenticationService,\n    private router: Router\n  ) {\n    this.currentLang = this.languageService.getStoredLanguage();\n  }\n\n  changeLanguage(lang: string) {\n    this.languageService.changeLanguage(lang);\n    this.currentLang = lang;\n    this.languageService.storeLanguage(lang);\n  }\n\n  logout() {\n    this.authSvc.signOut().subscribe(()=>{\n      this.router.navigate(['/login']);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n\n        \n        \n          \n        \n\n        \n        \n          \n            \n            {{ 'MENU.HOME' | translate }}\n          \n\n          \n            \n            {{ 'MENU.SERIES' | translate }}\n          \n\n          \n            \n            {{ 'MENU.SEASONS' | translate }}\n          \n\n          \n            \n            {{ 'MENU.ABOUT' | translate }}\n          \n        \n        \n        \n          \n            \n              \n            \n            \n              \n                ES\n              \n              \n                EN\n              \n              \n                RU\n              \n            \n          \n\n          \n            \n              \n            \n            {{ (authSvc.user$ | async)?.name || (authSvc.user$ | async)?.username }}\n            \n          \n          \n            \n              \n                \n                  \n                    \n                    {{ 'MENU.PROFILE' | translate }}\n                  \n                  \n                    \n                    {{ 'MENU.LOGOUT' | translate }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        {{ 'MENU.TITLE' | translate }}\n      \n    \n    \n      \n        \n          \n          {{ 'MENU.HOME' | translate }}\n        \n        \n          \n          {{ 'MENU.SERIES' | translate }}\n        \n        \n          \n          {{ 'MENU.SEASONS' | translate }}\n        \n        \n          \n          {{ 'MENU.ABOUT' | translate }}\n        \n      \n    \n  \n\n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-navbar {\n  --background: linear-gradient(45deg, #ffffff, #ff5722);\n  --color: white;\n  --min-height: 60px;\n\n  .nav-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 16px;\n    height: 100%;\n\n    .brand-section {\n      .nav-logo {\n        height: 40px;\n        width: auto;\n      }\n    }\n\n    .menu-button-mobile {\n      display: none;\n    }\n\n    .nav-items {\n      display: flex;\n      gap: 8px;\n      \n      ion-button {\n        --color: rgb(58, 57, 57);\n        --padding-start: 12px;\n        --padding-end: 12px;\n        height: 40px;\n        \n        ion-icon {\n          margin-right: 8px;\n        }\n\n        &:hover {\n          --background: rgba(255, 255, 255, 0.1);\n        }\n      }\n    }\n\n    .user-section {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n\n      ion-fab {\n        position: relative;\n        height: 40px;\n        \n        ion-fab-button {\n          --background: rgba(255, 255, 255, 0.9);\n          --color: #ff5722;\n          width: 40px;\n          height: 40px;\n          margin: 0;\n        }\n        ion-fab-list{\n          ion-fab-button {\n            --background: #ffe9e2;\n            --color: #000000;\n            margin-right: 3px ;\n            margin-bottom: 17px;\n          }\n        }\n      }\n\n      .profile-button {\n        --background: rgba(255, 255, 255, 0.1);\n        --color: white;\n        --border-radius: 20px;\n        --padding-start: 8px;\n        --padding-end: 12px;\n        height: 40px;\n\n        ion-avatar {\n          width: 28px;\n          height: 28px;\n          margin-right: 8px;\n        }\n\n        &:hover {\n          --background: rgba(255, 255, 255, 0.2);\n        }\n      }\n    }\n  }\n}\n\n// Mobile styles\n@media (max-width: 768px) {\n  .main-navbar .nav-content {\n    .menu-button-mobile {\n      display: block;\n      order: 1;\n    }\n\n    .brand-section {\n      order: 2;\n      flex-grow: 1;\n      text-align: center;\n    }\n\n    .desktop-menu {\n      display: none;\n    }\n\n    .user-section {\n      order: 3;\n      \n      .profile-button ion-label {\n        display: none;\n      }\n    }\n    .brand-section{\n      display: none;\n    }\n  }\n}\n\n// Side menu styles\nion-menu {\n  --background: #ffffff;\n\n  ion-toolbar {\n    --background: linear-gradient(45deg, #ff5722, #ff9800);\n    --color: white;\n  }\n\n  ion-content {\n    --background: #ffffff;\n  }\n\n  ion-list {\n    background: #ffffff;\n  }\n\n  ion-item {\n    --padding-start: 16px;\n    margin: 8px;\n    border-radius: 8px;\n    --background: linear-gradient(45deg, #ff9800, #ff5722);\n    \n    ion-icon {\n      color: #ffffff;\n      margin-right: 16px;\n      font-weight: bold;\n    }\n  }\n}\n\n.menu-button-mobile {\n  ion-menu-button {\n    --color: #ff5722;\n  }\n}\n\n// Existing popover styles...\nion-popover {\n  --width: 200px;\n  --background: none;\n  ion-list {\n    background: white;\n    --background: white;\n  }\n  ion-item {\n    --padding-start: 16px;\n    --padding-end: 16px;\n    --border-radius: 8px;\n    margin-bottom: 4px;\n    background: white;\n    --background: white;\n    color: #000000;\n\n    ion-icon {\n      color: #ff5722;\n      margin-right: 12px;\n    }\n\n    &.logout-item {\n      color: #f44336;\n      \n      ion-icon {\n        color: #f44336;\n      }\n      &:hover {\n        --background: rgba(255, 87, 34, 0.1);\n        --color: #f44336;\n      }\n    }\n\n    &:hover {\n      --background: rgba(255, 87, 34, 0.1);\n      --color: #000000;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                          {{ \\'MENU.HOME\\' | translate }}                                            {{ \\'MENU.SERIES\\' | translate }}                                            {{ \\'MENU.SEASONS\\' | translate }}                                            {{ \\'MENU.ABOUT\\' | translate }}                                                                                                                            ES                                            EN                                            RU                                                                                                {{ (authSvc.user$ | async)?.name || (authSvc.user$ | async)?.username }}                                                                                                                                    {{ \\'MENU.PROFILE\\' | translate }}                                                                            {{ \\'MENU.LOGOUT\\' | translate }}                                                                                                                {{ \\'MENU.TITLE\\' | translate }}                                                {{ \\'MENU.HOME\\' | translate }}                                    {{ \\'MENU.SERIES\\' | translate }}                                    {{ \\'MENU.SEASONS\\' | translate }}                                    {{ \\'MENU.ABOUT\\' | translate }}                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthenticationServiceFactory, AuthMappingFactory, SeriesMappingFactory, SeriesRepositoryFactory, MediaServiceFactory, SeasonsMappingFactory, SeasonsRepositoryFactory, CommentsMappingFactory, CommentsRepositoryFactory, CommentsCollectionSubscriptionFactory } from './core/repositories/repository.factory';\nimport { SeasonsService } from './core/services/impl/seasons.service';\nimport { AUTH_ME_API_URL_TOKEN, AUTH_SIGN_IN_API_URL_TOKEN, AUTH_SIGN_UP_API_URL_TOKEN, BACKEND_TOKEN, SERIES_API_URL_TOKEN, SERIES_RESOURCE_NAME_TOKEN, SEASONS_API_URL_TOKEN, SEASONS_RESOURCE_NAME_TOKEN, UPLOAD_API_URL_TOKEN, FIREBASE_CONFIG_TOKEN, COMMENTS_API_URL_TOKEN, COMMENTS_RESOURCE_NAME_TOKEN } from './core/repositories/repository.tokens';\nimport { provideHttpClient } from '@angular/common/http';\nimport { SeriesService } from './core/services/impl/series.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { provideLottieOptions } from 'ngx-lottie';\nimport player from 'lottie-web';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { SharedModule } from './shared/shared.module';\nimport { environment } from 'src/environments/environment';\nimport { SeriesCollectionSubscriptionFactory, SeasonsCollectionSubscriptionFactory } from './core/repositories/repository.factory';\nimport { CommentsService } from './core/services/impl/comments.service';\n\n\n\n// Factory function para el loader de traducción\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    SharedModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    provideLottieOptions({\n      player: () => player,\n    }),\n    provideHttpClient(),\n    { provide: BACKEND_TOKEN, useValue: 'firebase' },\n    { provide: SEASONS_RESOURCE_NAME_TOKEN, useValue: 'seasons' },\n    { provide: SERIES_RESOURCE_NAME_TOKEN, useValue: 'series' },\n    { provide: COMMENTS_RESOURCE_NAME_TOKEN, useValue: 'comments' },\n    { provide: SEASONS_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    { provide: SERIES_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    { provide: COMMENTS_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    { provide: AUTH_SIGN_IN_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/auth/local` },\n    { provide: AUTH_SIGN_UP_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/auth/local/register` },\n    { provide: AUTH_ME_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/users/me` },\n    { provide: UPLOAD_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/upload` },\n    {  provide: FIREBASE_CONFIG_TOKEN, useValue: environment.firebaseConfig\n    },\n    \n    SeasonsMappingFactory,\n    SeriesMappingFactory,\n    CommentsMappingFactory,\n    AuthMappingFactory,\n    SeasonsRepositoryFactory,\n    SeriesRepositoryFactory,\n    CommentsRepositoryFactory,\n    // Registrar otros repositorios según sea necesario\n    // Servicios de aplicación\n    {\n      provide: 'SeasonsService',\n      useClass: SeasonsService\n    },\n    {\n      provide: 'SeriesService',\n      useClass: SeriesService\n    },\n    {\n      provide: 'CommentsService',\n      useClass: CommentsService\n    },\n    AuthenticationServiceFactory,\n    MediaServiceFactory,\n    SeriesCollectionSubscriptionFactory,\n    SeasonsCollectionSubscriptionFactory,\n    CommentsCollectionSubscriptionFactory\n\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { authGuard } from './core/guards/auth.guard';\nimport { loggedGuard } from './core/guards/logged.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'splash',\n    pathMatch: 'full'\n  },\n  {\n    path: 'splash',\n    loadComponent: () => \"import('./pages/splash/splash.page').then(m => m.SplashPage)\"\n  },\n  {\n    path: 'login',\n    canActivate: [loggedGuard],\n    loadChildren: () => \"import('./pages/login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'register',\n    canActivate: [loggedGuard],\n    loadChildren: () => \"import('./pages/register/register.module').then( m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'home',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: 'about',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\"\n  },\n  {\n    path: 'series',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/series/series.module').then( m => m.SeriesPageModule)\"\n  },\n  {\n    path: 'seasons',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/seasons/seasons.module').then( m => m.SeasonsPageModule)\"\n  },\n  {\n    path: 'profile',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/profile/profile.module').then( m => m.ProfilePageModule)\"\n  },\n  {\n    path: 'series/:id/comments',\n    canActivate: [authGuard],\n    loadComponent: () => \"import('./pages/comments/comments.page').then(m => m.CommentsPage)\"\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseAuthenticationService.html":{"url":"injectables/BaseAuthenticationService.html","title":"injectable - BaseAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCurrentUser\n                            \n                            \n                                    Abstract\n                                me\n                            \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signOut\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                            \n                                    Abstract\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authMapping: IAuthMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(registerPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(userId: string, userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IAuthentication } from \"../interfaces/authentication.interface\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { User } from \"../../models/auth.model\";\n\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport abstract class BaseAuthenticationService implements IAuthentication{\n    protected _authenticated:BehaviorSubject = new BehaviorSubject(false);\n    public authenticated$:Observable = this._authenticated.asObservable();\n\n    protected _user:BehaviorSubject = new BehaviorSubject(undefined);\n    public user$:Observable = this._user.asObservable();\n    protected _ready:BehaviorSubject = new BehaviorSubject(false);\n    public ready$:Observable = this._ready.asObservable();\n    abstract updateUser(userId: string, userData: Partial): Observable;\n    constructor(\n        protected authMapping:IAuthMapping\n    ){\n\n    }\n    abstract getCurrentUser(): Promise;    \n    abstract signIn(authPayload: any): Observable;\n    abstract signUp(registerPayload: any): Observable;\n    abstract signOut(): Observable;\n    abstract me():Observable;\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMediaService.html":{"url":"classes/BaseMediaService.html","title":"class - BaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-media.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-media.service.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\n  export abstract class BaseMediaService {\n    abstract upload(blob: Blob): Observable;\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepositoryFirebaseService.html":{"url":"injectables/BaseRepositoryFirebaseService.html","title":"injectable - BaseRepositoryFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepositoryFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                collectionRef\n                            \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                    Async\n                                getLastDocumentOfPreviousPage\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, collectionName: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collectionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getLastDocumentOfPreviousPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLastDocumentOfPreviousPage(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        collectionRef\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getFirestore, \n  collection, \n  doc, \n  getDoc, \n  getDocs, \n  addDoc, \n  updateDoc, \n  deleteDoc,\n  query,\n  limit,\n  startAt,\n  startAfter,\n  QueryConstraint,\n  orderBy,\n  or\n} from 'firebase/firestore';\nimport { from, map, Observable, mergeMap } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { FIREBASE_CONFIG_TOKEN, FIREBASE_COLLECTION_TOKEN, REPOSITORY_MAPPING_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRepositoryFirebaseService implements IBaseRepository {\n  private db;\n  private collectionRef;\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(FIREBASE_COLLECTION_TOKEN) protected collectionName: string,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n    this.collectionRef = collection(this.db, this.collectionName);\n  }\n  private async getLastDocumentOfPreviousPage(page: number, pageSize: number) {\n    if (page > {\n    return from(this.getLastDocumentOfPreviousPage(page, pageSize)).pipe(\n      map(lastDoc => {\n        const constraints: QueryConstraint[] = [\n          limit(pageSize)\n        ];\n        \n        if (lastDoc) {\n          constraints.push(startAfter(lastDoc));\n        }\n        \n        return query(this.collectionRef, ...constraints);\n      }),\n      mergeMap(q => getDocs(q)),\n      map(snapshot => {\n        const items = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        return this.mapping.getPaginated(page, pageSize, snapshot.size, items as T[]);\n      })\n    );\n  }\n  getById(id: string): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => {\n        if (doc.exists()) {\n          return this.mapping.getOne({ id: doc.id, ...doc.data() } as T);\n        }\n        return null;\n      })\n    );\n  }\n  add(entity: T): Observable {\n    return from(addDoc(this.collectionRef, this.mapping.setAdd(entity))).pipe(\n      map(docRef => this.mapping.getAdded({ ...entity, id: docRef.id } as T))\n    );\n  }\n  update(id: string, entity: T): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    \n    return from(updateDoc(docRef, this.mapping.setUpdate(entity))).pipe(\n      map(() => this.mapping.getUpdated({ ...entity, id } as T))\n    );\n  }\n  delete(id: string): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => ({ id: doc.id, ...doc.data() } as T)),\n      map(entity => {\n        deleteDoc(docRef);\n        return this.mapping.getDeleted(entity);\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepositoryHttpService.html":{"url":"injectables/BaseRepositoryHttpService.html","title":"injectable - BaseRepositoryHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepositoryHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-http.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRepositoryHttpService implements IBaseRepository {\n\n  constructor(\n    protected http: HttpClient,\n    @Inject(AUTH_TOKEN) protected auth: IAuthentication,\n    @Inject(API_URL_TOKEN) protected apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) protected resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping:IBaseMapping\n  ) {\n    this.apiUrl = apiUrl;\n  }\n\n\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable> {\n    return this.http.get(`${this.apiUrl}/${this.resource}`).pipe(map(res=>this.mapping.getPaginated(page, pageSize, 0, res)));\n  }\n\n  getById(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getOne(res)));\n  }\n\n  add(entity: T): Observable {\n    return this.http.post(`${this.apiUrl}/${this.resource}`, entity).pipe(map(res=>this.mapping.getAdded(res)));\n  }\n\n  update(id: string, entity: T): Observable {\n    return this.http.put(`${this.apiUrl}/${this.resource}/${id}`, entity).pipe(map(res=>this.mapping.getUpdated(res)));\n  }\n\n  delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRespositoryLocalStorageService.html":{"url":"injectables/BaseRespositoryLocalStorageService.html","title":"injectable - BaseRespositoryLocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRespositoryLocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                newID\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newID\n                        \n                    \n                \n            \n            \n                \n                        \n                    newID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { Model } from '../../models/base.model';\nimport { REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRespositoryLocalStorageService implements IBaseRepository {\n\n  _items:T[] = [];\n  private newID():string{\n    const validChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let code = \"\";\n    for (let i = 0; i \n  \n  ) {\n    let mockupList:any[] = [];\n    for(let i = 0; i> {\n    return of(\n      this.mapping.getPaginated(page, pageSize, Math.ceil(this._items.length / pageSize),\n        this._items.slice(\n          page*pageSize, \n          Math.min(\n            (page+1)*pageSize, \n            this._items.length\n          )\n        )\n      )\n    );\n  }\n\n  getById(id: string): Observable {\n    return of(this.mapping.getOne(this._items.find(item=>item.id == id) ?? null));\n  }\n\n  add(entity: T): Observable {\n    entity.id = this.newID();\n    entity.createdAt = (new Date()).toISOString();\n    this._items.push(entity);\n    localStorage.setItem(this.resource, JSON.stringify(this._items));\n    return of(this.mapping.getAdded(entity));\n  }\n\n  update(id: string, entity: T): Observable {\n    let index = this._items.findIndex(item=>item.id == id);\n    if(index>=0){\n      this._items[index]=entity;\n      localStorage.setItem(this.resource, JSON.stringify(this._items));\n      return of(this.mapping.getUpdated(this._items[index]));\n    }\n    throw new Error(\"id not found\"); \n  }\n\n  delete(id: string): Observable {\n    let index = this._items.findIndex(item=>item.id == id);\n    if(index>=0){\n      let entity = this._items.splice(index, 1);\n      localStorage.setItem(this.resource, JSON.stringify(this._items));\n      return of(this.mapping.getDeleted(entity));\n    }\n    throw new Error(\"id not found\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IBaseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/base-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IBaseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    -1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    25\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IBaseService } from '../interfaces/base-service.interface';\nimport { IBaseRepository, SearchParams } from '../../repositories/intefaces/base-repository.interface';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService implements IBaseService {\n  constructor(\n    @Inject(REPOSITORY_TOKEN) protected repository: IBaseRepository\n  ) {}\n\n  getAll(): Observable;\n  getAll(page:number, pageSize:number):Observable>;\n  getAll(page:number=-1, pageSize:number=25, filters:SearchParams={}): Observable> {    \n      return this.repository.getAll(page, pageSize, filters);\n  }\n\n  getById(id: string): Observable {\n    return this.repository.getById(id);\n  }\n\n  add(entity: T): Observable {\n    return this.repository.add(entity);\n  }\n\n  update(id: string, entity: T): Observable {\n    return this.repository.update(id, entity);\n  }\n\n  delete(id: string): Observable {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizePipe.html":{"url":"pipes/CapitalizePipe.html","title":"pipe - CapitalizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Pipes/capitalize.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalize\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pipes/capitalize.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n    return value\n      .toLowerCase()\n      .replace(/\\b\\w/g, char => char.toUpperCase());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CohereService.html":{"url":"injectables/CohereService.html","title":"injectable - CohereService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CohereService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/ai.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiKey\n                            \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateSynopsis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/ai.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateSynopsis\n                        \n                    \n                \n            \n            \n                \ngenerateSynopsis(title: string, languague: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/ai.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                languague\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.ApiKey\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/ai.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.cohere.ai/v1/generate'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/ai.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { map} from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CohereService {\n  private apiKey = environment.ApiKey;\n  private apiUrl = 'https://api.cohere.ai/v1/generate';\n\n  constructor(private http: HttpClient) { }\n\n  generateSynopsis(title: string, languague: string): Observable {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.apiKey}`,\n      'Accept': 'application/json'\n    });\n    \n    const requestBody = {\n      model: 'command',\n      prompt: `Escribe una sinopsis breve pero detallada para una serie de televisión titulada \"${title}\".\n      \n      Reglas:\n      - Debe redactarse en ${languague}.\n      - Recuerda, el titulo puede estar en cualquier idioma pero tu respuesta debe ser redactada segun la primera regla\n      - La sinopsis debe tener exactamente 2-3 oraciones.\n      - Debe ser concisa pero incluir la premisa principal.\n      - Debe ser intrigante y atractiva.\n      - No debe terminar a mitad de frase.\n      - Debe explicar de qué trata la serie, no analizar el título.\n      \n      Sinopsis:`,\n      max_tokens: 150,\n      temperature: 0.1,\n      k: 0,\n      p: 0.75,\n      stop_sequences: [\"\\n\\n\"],\n      return_likelihoods: 'NONE'\n    };\n\n    return this.http.post(this.apiUrl, requestBody, { headers }).pipe(\n      map((response: any) => {\n        return response.generations[0].text.trim();\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectionChange.html":{"url":"interfaces/CollectionChange.html","title":"interface - CollectionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CollectionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/collection-subscription.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"added\" | \"modified\" | \"removed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"added\" | \"modified\" | \"removed\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Model } from \"../../models/base.model\";\n\nexport interface CollectionChange {\n  type: 'added' | 'modified' | 'removed';\n  data?: T;\n  id: string;\n}\n\nexport interface ICollectionSubscription {\n  subscribe(collectionName: string): Observable>;\n  unsubscribe(collectionName: string): void;\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/comment.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            reaction\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reaction:     \"like\" | \"dislike\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"like\" | \"dislike\" | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\nimport { User } from \"./auth.model\";\n\nexport interface Comment extends Model {\n    text: string;\n    reaction: 'like' | 'dislike' | null;\n    serieId: string;\n    userId: string;\n    user?: User;\n    createdAt: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsMappingFirebaseService.html":{"url":"injectables/CommentsMappingFirebaseService.html","title":"injectable - CommentsMappingFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsMappingFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/comments-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Comment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Comment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Comment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Comment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseComment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Partial\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/comments-mapping-firebase.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Comment } from \"../../models/comment.model\";\nimport { doc, DocumentReference, Firestore, getFirestore } from \"firebase/firestore\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\n\nexport interface FirebaseComment {\n  text: string;\n  reaction: 'like' | 'dislike' | null;\n  serieId: DocumentReference;\n  userId: string;\n  createdAt: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsMappingFirebaseService implements IBaseMapping {\n    \n  private db: Firestore;\n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig));\n  }\n\n  setAdd(data: Comment): FirebaseComment {\n    let dataMapping: FirebaseComment = {\n      text: data.text,\n      reaction: data.reaction,\n      serieId: doc(this.db, 'series', data.serieId),\n      userId: data.userId || '',\n      createdAt: data.createdAt || new Date().toISOString()\n    };\n    return dataMapping;\n  }\n  \n  setUpdate(data: Partial): Partial {\n    const result: any = {};\n    \n    if (data.text !== undefined) result.text = data.text;\n    if (data.reaction !== undefined) result.reaction = data.reaction;\n    if (data.serieId !== undefined) result.serieId = doc(this.db, 'series', data.serieId);\n    if (data.userId !== undefined) result.userId = data.userId;\n    \n    return result;\n  }\n  \n  getOne(data: { id: string } & FirebaseComment): Comment {\n    return {\n      id: data.id,\n      text: data.text,\n      reaction: data.reaction,\n      serieId: data.serieId?.id,\n      userId: data.userId,\n      createdAt: data.createdAt\n    };\n  }\n  \n  getPaginated(page: number, pageSize: number, total: number, data: ({id:string} & FirebaseComment)[]): Paginated {\n    return {\n      page,\n      pageSize,\n      pages: Math.ceil(total / pageSize),\n      data: data.map(item => this.getOne(item))\n    };\n  }\n  \n  getAdded(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n  \n  getUpdated(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n  \n  getDeleted(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsRepositoryFirebaseService.html":{"url":"injectables/CommentsRepositoryFirebaseService.html","title":"injectable - CommentsRepositoryFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsRepositoryFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/comments-repository-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                collectionRef\n                            \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                getCommentsBySerieId\n                            \n                            \n                                    Private\n                                    Async\n                                getLastDocumentOfPreviousPage\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                    IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentsBySerieId\n                        \n                    \n                \n            \n            \n                \ngetCommentsBySerieId(serieId: string, page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                serieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getLastDocumentOfPreviousPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLastDocumentOfPreviousPage(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        collectionRef\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/comments-repository-firebase.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getFirestore, \n  collection, \n  doc, \n  getDoc, \n  getDocs, \n  addDoc, \n  updateDoc, \n  deleteDoc,\n  query,\n  where,\n  limit,\n  startAfter,\n  orderBy,\n  QueryConstraint\n} from 'firebase/firestore';\nimport { from, map, Observable, mergeMap } from 'rxjs';\nimport { Comment } from '../../models/comment.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { COMMENTS_REPOSITORY_MAPPING_TOKEN, FIREBASE_CONFIG_TOKEN } from '../repository.tokens';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { ICommentsRepository } from '../intefaces/comments-repository.interface';\nimport { SearchParams } from '../intefaces/base-repository.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsRepositoryFirebaseService implements ICommentsRepository {\n  private db;\n  private collectionRef;\n  \n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(COMMENTS_REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n    this.collectionRef = collection(this.db, 'comments');\n  }\n\n  getCommentsBySerieId(serieId: string, page: number = 1, pageSize: number = 10): Observable {\n    const serieRef = doc(this.db, 'series', serieId);\n    const q = query(\n      this.collectionRef,\n      where('serieId', '==', serieRef),\n      orderBy('createdAt', 'desc'),\n      limit(pageSize)\n    );\n\n    return from(getDocs(q)).pipe(\n      map(snapshot => {\n        const comments = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        return comments.map(comment => this.mapping.getOne(comment as any));\n      })\n    );\n  }\n\n  private async getLastDocumentOfPreviousPage(page: number, pageSize: number, filters: SearchParams = {}) {\n    if (page > {\n    return from(this.getLastDocumentOfPreviousPage(page, pageSize, filters)).pipe(\n      map(lastDoc => {\n        const constraints: QueryConstraint[] = [\n          orderBy('createdAt', 'desc'),\n          limit(pageSize)\n        ];\n        \n        if (lastDoc) {\n          constraints.push(startAfter(lastDoc));\n        }\n        \n        if (filters['serieId']) {\n          const serieRef = doc(this.db, 'series', filters['serieId']);\n          constraints.push(where('serieId', '==', serieRef));\n        }\n        \n        return query(this.collectionRef, ...constraints);\n      }),\n      mergeMap(q => getDocs(q)),\n      map(snapshot => {\n        const items = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        return this.mapping.getPaginated(page, pageSize, items.length, items as any[]);\n      })\n    );\n  }\n\n  getById(id: string): Observable {\n    const docRef = doc(this.db, 'comments', id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => {\n        if (doc.exists()) {\n          return this.mapping.getOne({ id: doc.id, ...doc.data() } as any);\n        }\n        return null;\n      })\n    );\n  }\n\n  add(entity: Comment): Observable {\n    return from(addDoc(this.collectionRef, this.mapping.setAdd(entity))).pipe(\n      map(docRef => this.mapping.getAdded({ ...entity, id: docRef.id } as any))\n    );\n  }\n\n  update(id: string, entity: Comment): Observable {\n    const docRef = doc(this.db, 'comments', id);\n    \n    return from(updateDoc(docRef, this.mapping.setUpdate(entity))).pipe(\n      map(() => this.mapping.getUpdated({ ...entity, id } as any))\n    );\n  }\n\n  delete(id: string): Observable {\n    const docRef = doc(this.db, 'comments', id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => ({ id: doc.id, ...doc.data() } as any)),\n      mergeMap(entity => {\n        return from(deleteDoc(docRef)).pipe(\n          map(() => this.mapping.getDeleted(entity))\n        );\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsService.html":{"url":"injectables/CommentsService.html","title":"injectable - CommentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/comments.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commentsRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCommentsBySerieId\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ICommentsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/comments.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ICommentsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentsBySerieId\n                        \n                    \n                \n            \n            \n                \ngetCommentsBySerieId(serieId: string, page?: number, pageSize?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/comments.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICommentsRepository\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/comments.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Comment } from '../../models/comment.model';\nimport { BaseService } from './base-service.service';\nimport { ICommentsService } from '../interfaces/comments-service.interface';\nimport { COMMENTS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ICommentsRepository } from '../../repositories/intefaces/comments-repository.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService extends BaseService implements ICommentsService {\n  private commentsRepository: ICommentsRepository;\n\n  constructor(\n    @Inject(COMMENTS_REPOSITORY_TOKEN) repository: ICommentsRepository\n  ) {\n    super(repository);\n    this.commentsRepository = repository;\n  }\n\n  getCommentsBySerieId(serieId: string, page?: number, pageSize?: number): Observable {\n    return this.commentsRepository.getCommentsBySerieId(serieId, page, pageSize);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                ports\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Port[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { AlertController, AnimationController, InfiniteScrollCustomEvent, ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SeasonViewComponent } from 'src/app/shared/components/season-view/season-view.component';\nimport { SerieViewComponent } from 'src/app/shared/components/serie-view/serie-view.component';\nimport { ScreenReader } from '@capacitor/screen-reader';\n\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _series:BehaviorSubject = new BehaviorSubject([]);\n  series$:Observable = this._series.asObservable();\n  _seasons:BehaviorSubject = new BehaviorSubject([]);\n  seasons$:Observable = this._seasons.asObservable();\n\n  isWeb: boolean = false;\n\n  constructor(\n    private seasonsSvc:SeasonsService,\n    private serieSvc:SeriesService,\n    private platform: Platform,\n    private modalCtrl:ModalController,\n    private translate: TranslateService,\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeries();\n    this.loadSeasons();\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSeason: any = null;\n  selectedSerie: any = null;\n  isAnimating = false;\n  page:number = 1;\n  pageSize:number = 25;\n  pages:number = 0;\n\n\n  loadSeries(){\n    this.page = 1;\n    this.serieSvc.getSeriesWithSeasons(this.page, this.pageSize).subscribe({\n      next:(response:Paginated)=>{\n\n        const seriesWithSortedSeasons = response.data.map(serie => ({\n          ...serie,\n          seasons: serie.seasons?.sort((a, b) => \n            (a.name || '').localeCompare(b.name || '')\n          )\n        }));\n\n        this._series.next([...seriesWithSortedSeasons]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n  loadMoreSeries(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page )=>{\n\n          const seriesWithSortedSeasons = response.data.map(serie => ({\n            ...serie,\n            seasons: serie.seasons?.sort((a, b) => \n              (a.name || '').localeCompare(b.name || '')\n            )\n          }));\n\n          this._series.next([...this._series.value, ...seriesWithSortedSeasons]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n\n  loadSeasons(){\n    this.page=1;\n    this.seasonsSvc.getAll(this.page, this.pageSize).subscribe({\n      next:(response:Paginated)=>{\n        this._seasons.next([...response.data]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n\n  loadMoreSeasons(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page)=>{\n          this._seasons.next([...this._seasons.value, ...response.data]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n  async openSeasonDetail(season: any) {\n    await this.presentModalSeason(season);\n    this.selectedSeason = season;\n  }\n  private async presentModalSeason(season:Season|undefined=undefined){\n    const modal = await this.modalCtrl.create({\n      component: SeasonViewComponent,\n      componentProps: {\n        season: season\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async openSerieDetail(serie: any) {\n    await this.presentModalSerie(serie);\n    this.selectedSerie = serie;\n  }\n  private async presentModalSerie(serie:Serie|undefined=undefined){\n    const modal = await this.modalCtrl.create({\n      component: SerieViewComponent,\n      componentProps: {\n        serie: serie\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async readSerieTitle(serieTitle: string) {\n    await ScreenReader.speak({ value: serieTitle });\n  }\n  \n  onIonInfinite(ev:InfiniteScrollCustomEvent) {\n    this.loadMoreSeries(ev.target);\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country-1.html":{"url":"classes/Country-1.html","title":"class - Country-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/series/series.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                ports\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Port[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  AlertController,\n  AnimationController,\n  InfiniteScrollCustomEvent,\n  ModalController,\n  Platform,\n} from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SerieModalComponent } from 'src/app/shared/components/serie-modal/serie-modal.component';\nimport { SERIES_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { CollectionChange } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { FirebaseAuthenticationService } from 'src/app/core/services/impl/firebase-authentication.service';\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-series',\n  templateUrl: './series.page.html',\n  styleUrls: ['./series.page.scss'],\n})\nexport class SeriesPage implements OnInit {\n  isAdmin = false;\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _series: BehaviorSubject = new BehaviorSubject([]);\n  series$: Observable = this._series.asObservable();\n  _filteredSeries: BehaviorSubject = new BehaviorSubject([]);\n  filteredSeries$: Observable = this._filteredSeries.asObservable();\n  searchTerm: string = '';\n\n  public alertYesNoButtons = [\n    {\n      text: 'No',\n      role: 'no',\n    },\n    {\n      text: 'Yes',\n      role: 'yes',\n    },\n  ];\n  isWeb: boolean = false;\n  private loadedIds: Set = new Set();\n\n  constructor(\n    private animationCtrl: AnimationController,\n    private seasonsSvc: SeasonsService,\n    private serieSvc: SeriesService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: FirebaseAuthenticationService,\n    @Inject(SERIES_COLLECTION_SUBSCRIPTION_TOKEN)\n    private seriesSubscription: ICollectionSubscription\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeries();\n\n    this.authSvc\n      .getCurrentUser()\n      .then((user) => {\n        this.isAdmin = user.admin;\n      })\n      .catch(() => {\n        this.isAdmin = false;\n      });\n\n    this._series.subscribe((series) => {\n      this._filteredSeries.next(series);\n    });\n\n    this.seriesSubscription\n      .subscribe('series')\n      .subscribe((change: CollectionChange) => {\n        const currentSeries = [...this._series.value];\n\n        if (!this.loadedIds.has(change.id) && change.type !== 'added') {\n          return;\n        }\n\n        switch (change.type) {\n          case 'added':\n            this.loadedIds.add(change.id);\n\n            const existingIndex = currentSeries.findIndex(\n              (p) => p.id === change.id\n            );\n            if (existingIndex === -1) {\n              currentSeries.push(change.data!);\n              currentSeries.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'modified':\n            const index = currentSeries.findIndex((p) => p.id === change.id);\n            if (index >= 0) {\n              currentSeries[index] = change.data!;\n              currentSeries.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'removed':\n            const removeIndex = currentSeries.findIndex(\n              (p) => p.id === change.id\n            );\n            if (removeIndex >= 0) {\n              currentSeries.splice(removeIndex, 1);\n              this.loadedIds.delete(change.id);\n            }\n            break;\n        }\n\n        this._series.next(currentSeries);\n      });\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSerie: any = null;\n  isAnimating = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n\n    if (!searchTerm) {\n      this._filteredSeries.next(this._series.value);\n      return;\n    }\n\n    const filtered = this._series.value.filter((serie) =>\n      serie.name.toLowerCase().includes(searchTerm)\n    );\n\n    this._filteredSeries.next(filtered);\n  }\n\n  loadSeries() {\n    this.page = 1;\n    this.serieSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        response.data.forEach((serie) => this.loadedIds.add(serie.id));\n\n        const sortedSeries = response.data.sort((a, b) =>\n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._series.next([...sortedSeries]);\n        this._filteredSeries.next([...sortedSeries]);\n        this.page++;\n        this.pages = response.pages;\n      },\n    });\n  }\n\n  loadMoreSeries(notify: HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          response.data.forEach((serie) => this.loadedIds.add(serie.id));\n\n          const updatedSeries = [...this._series.value, ...response.data].sort(\n            (a, b) => (a.name || '').localeCompare(b.name || '')\n          );\n          this._series.next(updatedSeries);\n\n          if (this.searchTerm) {\n            const filtered = updatedSeries.filter((serie) =>\n              serie.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeries.next(filtered);\n          } else {\n            this._filteredSeries.next(updatedSeries);\n          }\n          this.page++;\n          notify?.complete();\n        },\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n\n  async openSerieDetail(serie: any, index: number) {\n    await this.presentModalSerie('edit', serie);\n    this.selectedSerie = serie;\n  }\n\n  onIonInfinite(ev: InfiniteScrollCustomEvent) {\n    this.loadMoreSeries(ev.target);\n  }\n\n  private async presentModalSerie(\n    mode: 'new' | 'edit',\n    serie: Serie | undefined = undefined\n  ) {\n    let _series: Serie[] = await lastValueFrom(this.serieSvc.getAll());\n    const modal = await this.modalCtrl.create({\n      component: SerieModalComponent,\n      componentProps:\n        mode == 'edit'\n          ? {\n              serie: serie,\n              series: _series,\n            }\n          : {\n              series: _series,\n            },\n    });\n    modal.onDidDismiss().then((response: any) => {\n      switch (response.role) {\n        case 'new':\n          this.serieSvc.add(response.data).subscribe({\n            next: (res) => {\n              this.loadSeries();\n            },\n            error: (err) => {},\n          });\n          break;\n        case 'edit':\n          this.serieSvc.update(serie!.id, response.data).subscribe({\n            next: (res) => {\n              this.loadSeries();\n            },\n            error: (err) => {},\n          });\n          break;\n        default:\n          break;\n      }\n    });\n    await modal.present();\n  }\n\n  async onAddSerie() {\n    await this.presentModalSerie('new');\n  }\n\n  async onDeleteSerie(serie: Serie) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate\n        .get('SERIES.MESSAGES.DELETE_CONFIRM')\n        .toPromise(),\n      cssClass: 'custom-delete-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'yes',\n          handler: () => {\n            this.serieSvc.delete(serie.id).subscribe({\n              next: (response) => {\n                this.loadSeries();\n              },\n              error: (err) => {},\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country-2.html":{"url":"classes/Country-2.html","title":"class - Country-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/seasons/seasons.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                ports\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Port[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  AlertController,\n  AnimationController,\n  InfiniteScrollCustomEvent,\n  ModalController,\n  Platform,\n} from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SeasonModalComponent } from 'src/app/shared/components/season-modal/season-modal.component';\nimport { SEASONS_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { CollectionChange } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { FirebaseAuthenticationService } from 'src/app/core/services/impl/firebase-authentication.service';\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-seasons',\n  templateUrl: './seasons.page.html',\n  styleUrls: ['./seasons.page.scss'],\n})\nexport class SeasonsPage implements OnInit {\n  isAdmin = false;\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _seasons: BehaviorSubject = new BehaviorSubject([]);\n  seasons$: Observable = this._seasons.asObservable();\n  _filteredSeasons: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  filteredSeasons$: Observable = this._filteredSeasons.asObservable();\n  searchTerm: string = '';\n\n  public alertYesNoButtons = [\n    {\n      text: 'No',\n      role: 'no',\n    },\n    {\n      text: 'Yes',\n      role: 'yes',\n    },\n  ];\n  isWeb: boolean = false;\n  private loadedIds: Set = new Set();\n\n  constructor(\n    private animationCtrl: AnimationController,\n    private seasonsSvc: SeasonsService,\n    private serieSvc: SeriesService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: FirebaseAuthenticationService,\n    @Inject(SEASONS_COLLECTION_SUBSCRIPTION_TOKEN)\n    private seasonsSubscription: ICollectionSubscription\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeasons();\n\n    this.authSvc\n      .getCurrentUser()\n      .then((user) => {\n        this.isAdmin = user.admin;\n      })\n      .catch(() => {\n        this.isAdmin = false;\n      });\n\n    this._seasons.subscribe((seasons) => {\n      this._filteredSeasons.next(seasons);\n    });\n\n    this.seasonsSubscription\n      .subscribe('seasons')\n      .subscribe((change: CollectionChange) => {\n        const currentSeasons = [...this._seasons.value];\n\n        // Solo procesar cambios de documentos que ya tenemos cargados\n        if (!this.loadedIds.has(change.id) && change.type !== 'added') {\n          return;\n        }\n\n        switch (change.type) {\n          case 'added':\n            // Registrar el nuevo ID en nuestro conjunto de IDs cargados\n            this.loadedIds.add(change.id);\n\n            // Verificar si ya existe en nuestro array local\n            const existingIndex = currentSeasons.findIndex(\n              (p) => p.id === change.id\n            );\n            if (existingIndex === -1) {\n              currentSeasons.push(change.data!);\n              currentSeasons.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'modified':\n            const index = currentSeasons.findIndex((p) => p.id === change.id);\n            if (index >= 0) {\n              currentSeasons[index] = change.data!;\n              currentSeasons.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'removed':\n            const removeIndex = currentSeasons.findIndex(\n              (p) => p.id === change.id\n            );\n            if (removeIndex >= 0) {\n              currentSeasons.splice(removeIndex, 1);\n              this.loadedIds.delete(change.id);\n            }\n            break;\n        }\n\n        this._seasons.next(currentSeasons);\n      });\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSeason: any = null;\n  isAnimating = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n\n    if (!searchTerm) {\n      this._filteredSeasons.next(this._seasons.value);\n      return;\n    }\n\n    const filtered = this._seasons.value.filter((season) =>\n      season.name.toLowerCase().includes(searchTerm)\n    );\n\n    this._filteredSeasons.next(filtered);\n  }\n\n  loadSeasons() {\n    this.page = 1;\n    this.seasonsSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        // Actualizar el registro de IDs cargados\n        response.data.forEach((season) => this.loadedIds.add(season.id));\n\n        const sortedSeasons = response.data.sort((a, b) =>\n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._seasons.next([...sortedSeasons]);\n        this._filteredSeasons.next([...sortedSeasons]);\n        this.page++;\n        this.pages = response.pages;\n      },\n    });\n  }\n\n  loadMoreSeasons(notify: HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          // Actualizar el registro de IDs cargados\n          response.data.forEach((season) => this.loadedIds.add(season.id));\n\n          const updatedSeasons = [\n            ...this._seasons.value,\n            ...response.data,\n          ].sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n          this._seasons.next(updatedSeasons);\n\n          if (this.searchTerm) {\n            const filtered = updatedSeasons.filter((season) =>\n              season.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeasons.next(filtered);\n          } else {\n            this._filteredSeasons.next(updatedSeasons);\n          }\n          this.page++;\n          notify?.complete();\n        },\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n\n  async openSeasonDetail(season: any, index: number) {\n    await this.presentModalSeason('edit', season);\n    this.selectedSeason = season;\n  }\n\n  onIonInfinite(ev: InfiniteScrollCustomEvent) {\n    this.loadMoreSeasons(ev.target);\n  }\n\n  private async presentModalSeason(\n    mode: 'new' | 'edit',\n    season: Season | undefined = undefined\n  ) {\n    let _series: Serie[] = await lastValueFrom(this.serieSvc.getAll());\n    const modal = await this.modalCtrl.create({\n      component: SeasonModalComponent,\n      componentProps:\n        mode == 'edit'\n          ? {\n              season: season,\n              series: _series,\n            }\n          : {\n              series: _series,\n            },\n    });\n    modal.onDidDismiss().then((response: any) => {\n      switch (response.role) {\n        case 'new':\n          this.seasonsSvc.add(response.data).subscribe({\n            next: (res) => {\n              this.loadSeasons();\n            },\n            error: (err) => {},\n          });\n          break;\n        case 'edit':\n          this.seasonsSvc.update(season!.id, response.data).subscribe({\n            next: (res) => {\n              this.loadSeasons();\n            },\n            error: (err) => {},\n          });\n          break;\n        default:\n          break;\n      }\n    });\n    await modal.present();\n  }\n\n  async onAddSeason() {\n    await this.presentModalSeason('new');\n  }\n\n  async onDeleteSeason(season: Season) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate\n        .get('SEASONS.MESSAGES.DELETE_CONFIRM')\n        .toPromise(),\n      cssClass: 'custom-delete-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'yes',\n          handler: () => {\n            this.seasonsSvc.delete(season.id).subscribe({\n              next: (response) => {\n                this.loadSeasons();\n              },\n              error: (err) => {},\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         SeasonAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SeasonAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data-1.html":{"url":"interfaces/Data-1.html","title":"interface - Data-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         SerieAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SerieAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data-2.html":{"url":"interfaces/Data-2.html","title":"interface - Data-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthMappingService.html":{"url":"injectables/FirebaseAuthMappingService.html","title":"injectable - FirebaseAuthMappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthMappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-auth-mapping.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signInPayload\n                            \n                            \n                                signUp\n                            \n                            \n                                signUpPayload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: FirebaseUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            FirebaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: FirebaseUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            FirebaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: FirebaseUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            FirebaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\nimport { User as FirebaseUser } from 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthMappingService implements IAuthMapping {\n  signInPayload(payload: SignInPayload): { email: string, password: string } {\n    return {\n      email: payload.email,\n      password: payload.password\n    };\n  }\n\n  signUpPayload(payload: SignUpPayload): { email: string, password: string } {\n    return {\n      email: payload.email,\n      password: payload.password\n      // No necesitamos username ya que Firebase nos lo maneja por defecto\n    };\n  }\n\n  signIn(response: FirebaseUser): User {\n    return {\n      id: response.uid,\n      username: response.displayName || response.email || '',\n      email: response.email || '',\n      name: '',\n      surname: '',\n      admin: false,\n      picture: response.photoURL || undefined\n    };\n  }\n\n  signUp(response: FirebaseUser): User {\n    return {\n      id: response.uid,\n      username: response.displayName || response.email || '',\n      email: response.email || '',\n      name: '',\n      surname: '',\n      admin: false,\n      picture: response.photoURL || undefined\n    };\n  }\n\n  me(response: FirebaseUser): User {\n    return {\n      id: response.uid,\n      username: response.displayName || response.email || '',\n      email: response.email || '',\n      name: '',\n      surname: '',\n      admin:false,\n      picture: response.photoURL || undefined\n    };\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthenticationService.html":{"url":"injectables/FirebaseAuthenticationService.html","title":"injectable - FirebaseAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAuthenticationService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _token\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                getToken\n                            \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, authMapping: IAuthMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:72\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-authentication.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:148\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:99\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:139\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:109\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(userId: string, userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:163\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:16\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { filter, map, Observable, of, tap, firstValueFrom, from, switchMap } from 'rxjs';\nimport { BaseAuthenticationService } from './base-authentication.service';\nimport { AUTH_MAPPING_TOKEN, FIREBASE_CONFIG_TOKEN } from '../../repositories/repository.tokens';\nimport { IAuthMapping } from '../interfaces/auth-mapping.interface';\nimport { User } from '../../models/auth.model';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getAuth, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword,\n  signOut as firebaseSignOut,\n  onAuthStateChanged\n} from 'firebase/auth';\nimport { \n  getFirestore, \n  doc, \n  setDoc,\n  collection,\n  Firestore,\n  getDoc,\n  updateDoc\n} from 'firebase/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthenticationService extends BaseAuthenticationService {\n\n  private db: Firestore;\n  private auth;\n  private _token: string | null = null;\n\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(AUTH_MAPPING_TOKEN) authMapping: IAuthMapping\n  ) {\n    super(authMapping);\n    const app = initializeApp(firebaseConfig);\n    this.auth = getAuth(app);\n    this.db = getFirestore(app);\n\n    onAuthStateChanged(this.auth, async (user) => {\n      if (user) {\n        this._token = await user.getIdToken();\n        // Obtener datos adicionales de Firestore\n        const userDoc = doc(this.db, 'users', user.uid);\n        const userSnap = await getDoc(userDoc);\n        \n        if (userSnap.exists()) {\n          const userData = userSnap.data();\n          this._user.next({\n            id: user.uid,\n            email: user.email || '',\n            name: userData['name'] || '',\n            surname: userData['surname'] || '',\n            username: userData['username'] || '',\n            admin: userData['admin'] || false,\n            picture: userData['picture']\n          });\n        }\n        this._authenticated.next(true);\n      } else {\n        this._token = null;\n        this._authenticated.next(false);\n        this._user.next(undefined);\n      }\n      this._ready.next(true);\n    });\n  }\n\n  async getCurrentUser(): Promise {\n    await firstValueFrom(this._ready.pipe(filter(ready => ready === true)));\n    const authUser = await firstValueFrom(this._user);\n    \n    if (!authUser) {\n      throw new Error('No authenticated user');\n    }\n\n    // Obtener datos extendidos del usuario desde Firestore\n    const userDoc = doc(this.db, 'users', authUser.id);\n    const userSnapshot = await getDoc(userDoc);\n    \n    if (userSnapshot.exists()) {\n      const userData = userSnapshot.data();\n      return {\n        ...authUser,\n        name: userData['name'] || '',\n        surname: userData['surname'] || '',\n        username: userData['username'] || '',\n        admin: userData['admin'] || false,\n        picture: userData['picture'] || undefined\n      };\n    }\n    \n    return authUser;\n  }\n\n  signIn(authPayload: any): Observable {\n    const { email, password } = this.authMapping.signInPayload(authPayload);\n    \n    return from(signInWithEmailAndPassword(this.auth, email, password)).pipe(\n      map(userCredential => {\n        return this.authMapping.signIn(userCredential.user);\n      })\n    );\n  }\n\n  signUp(signUpPayload: any): Observable {\n    return new Observable(observer => {\n      createUserWithEmailAndPassword(this.auth, signUpPayload.email, signUpPayload.password)\n        .then(async (userCredential) => {\n          try {\n            const userRef = doc(this.db, 'users', userCredential.user.uid);\n            await setDoc(userRef, {\n              name: signUpPayload.name,\n              surname: signUpPayload.surname,\n              username: signUpPayload.username,\n              email: signUpPayload.email,\n              picture: signUpPayload.picture || null,\n              admin: signUpPayload.admin || false,\n              createdAt: new Date(),\n              updatedAt: new Date()\n            });\n  \n            observer.next(this.authMapping.signUp(userCredential.user));\n            observer.complete();\n          } catch (error) {\n            await userCredential.user.delete();\n            observer.error(error);\n          }\n        })\n        .catch(error => {\n          observer.error(error);\n        });\n    });\n  }\n\n  signOut(): Observable {\n    return from(firebaseSignOut(this.auth)).pipe(\n      tap(() => {\n        this._authenticated.next(false);\n        this._user.next(undefined);\n      })\n    );\n  }\n\n  me(): Observable {\n    return of(this.auth.currentUser).pipe(\n      map(user => {\n        if (!user) {\n          throw new Error('No authenticated user');\n        }\n        return user;\n      })\n    );\n  }\n\n  getToken(): string | null {\n    return this._token;\n  }\n\n  updateUser(userId: string, userData: Partial): Observable {\n    const userRef = doc(this.db, 'users', userId);\n    \n    return from(updateDoc(userRef, {\n      ...userData,\n      updatedAt: new Date()\n    })).pipe(\n      switchMap(() => from(getDoc(userRef))),\n      map(docSnap => {\n        const data = docSnap.data();\n        return this.authMapping.me({ id: userId, ...data });\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseCollectionSubscriptionService.html":{"url":"injectables/FirebaseCollectionSubscriptionService.html","title":"injectable - FirebaseCollectionSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseCollectionSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-collection-subscription.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                    Private\n                                unsubscribeFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribeFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getFirestore, \n  collection, \n  onSnapshot,\n  QuerySnapshot,\n  DocumentData\n} from 'firebase/firestore';\nimport { Observable, Subject } from 'rxjs';\nimport { ICollectionSubscription } from '../interfaces/collection-subscription.interface';\nimport { FIREBASE_CONFIG_TOKEN, REPOSITORY_MAPPING_TOKEN } from '../../repositories/repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../../repositories/intefaces/base-mapping.interface';\nimport { CollectionChange } from '../interfaces/collection-subscription.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseCollectionSubscriptionService implements ICollectionSubscription {\n  private db;\n  private subscriptions: Map>> = new Map();\n  private unsubscribeFunctions: Map void> = new Map();\n\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n  }\n\n  subscribe(collectionName: string): Observable> {\n    if (this.subscriptions.has(collectionName)) {\n      return this.subscriptions.get(collectionName)!.asObservable();\n    }\n\n    const subject = new Subject>();\n    this.subscriptions.set(collectionName, subject);\n\n    const unsubscribe = onSnapshot(\n      collection(this.db, collectionName),\n      (snapshot: QuerySnapshot) => {\n        snapshot.docChanges().forEach(change => {\n          const changeData: CollectionChange = {\n            type: change.type as 'added' | 'modified' | 'removed',\n            id: change.doc.id\n          };\n          \n          if (change.type !== 'removed') {\n            changeData.data = this.mapping.getOne({\n              id: change.doc.id,\n              ...change.doc.data()\n            } as T);\n          }\n          \n          subject.next(changeData);\n        });\n      },\n      error => {\n        console.error(`Error en suscripción a ${collectionName}:`, error);\n        subject.error(error);\n      }\n    );\n\n    this.unsubscribeFunctions.set(collectionName, unsubscribe);\n    return subject.asObservable();\n  }\n\n  unsubscribe(collectionName: string): void {\n    const unsubscribe = this.unsubscribeFunctions.get(collectionName);\n    if (unsubscribe) {\n      unsubscribe();\n      this.unsubscribeFunctions.delete(collectionName);\n    }\n\n    const subject = this.subscriptions.get(collectionName);\n    if (subject) {\n      subject.complete();\n      this.subscriptions.delete(collectionName);\n    }\n  }\n\n  ngOnDestroy() {\n    // Limpiar todas las suscripciones al destruir el servicio\n    this.unsubscribeFunctions.forEach(unsubscribe => unsubscribe());\n    this.subscriptions.forEach(subject => subject.complete());\n    this.unsubscribeFunctions.clear();\n    this.subscriptions.clear();\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseComment.html":{"url":"interfaces/FirebaseComment.html","title":"interface - FirebaseComment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/comments-mapping-firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            reaction\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reaction:     \"like\" | \"dislike\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"like\" | \"dislike\" | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Comment } from \"../../models/comment.model\";\nimport { doc, DocumentReference, Firestore, getFirestore } from \"firebase/firestore\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\n\nexport interface FirebaseComment {\n  text: string;\n  reaction: 'like' | 'dislike' | null;\n  serieId: DocumentReference;\n  userId: string;\n  createdAt: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsMappingFirebaseService implements IBaseMapping {\n    \n  private db: Firestore;\n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig));\n  }\n\n  setAdd(data: Comment): FirebaseComment {\n    let dataMapping: FirebaseComment = {\n      text: data.text,\n      reaction: data.reaction,\n      serieId: doc(this.db, 'series', data.serieId),\n      userId: data.userId || '',\n      createdAt: data.createdAt || new Date().toISOString()\n    };\n    return dataMapping;\n  }\n  \n  setUpdate(data: Partial): Partial {\n    const result: any = {};\n    \n    if (data.text !== undefined) result.text = data.text;\n    if (data.reaction !== undefined) result.reaction = data.reaction;\n    if (data.serieId !== undefined) result.serieId = doc(this.db, 'series', data.serieId);\n    if (data.userId !== undefined) result.userId = data.userId;\n    \n    return result;\n  }\n  \n  getOne(data: { id: string } & FirebaseComment): Comment {\n    return {\n      id: data.id,\n      text: data.text,\n      reaction: data.reaction,\n      serieId: data.serieId?.id,\n      userId: data.userId,\n      createdAt: data.createdAt\n    };\n  }\n  \n  getPaginated(page: number, pageSize: number, total: number, data: ({id:string} & FirebaseComment)[]): Paginated {\n    return {\n      page,\n      pageSize,\n      pages: Math.ceil(total / pageSize),\n      data: data.map(item => this.getOne(item))\n    };\n  }\n  \n  getAdded(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n  \n  getUpdated(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n  \n  getDeleted(data: {id:string} & FirebaseComment): Comment {\n    return this.getOne(data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseMediaService.html":{"url":"injectables/FirebaseMediaService.html","title":"injectable - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseMediaService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, auth: IAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-media.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseMediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseMediaService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-media.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { \n  getStorage, \n  ref, \n  uploadBytes,\n  getDownloadURL,\n  StorageReference \n} from \"firebase/storage\";\nimport { from, map, Observable, switchMap } from \"rxjs\";\nimport { AUTH_TOKEN, FIREBASE_CONFIG_TOKEN } from \"../../repositories/repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\nimport { IAuthentication } from \"../interfaces/authentication.interface\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseMediaService extends BaseMediaService {\n  private storage;\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(AUTH_TOKEN) private auth: IAuthentication\n  ) {\n    super();\n    const app = initializeApp(firebaseConfig);\n    this.storage = getStorage(app);\n  }\n  public upload(blob: Blob): Observable {\n    return from(this.auth.getCurrentUser()).pipe(\n      switchMap(user => {\n        if (!user) throw new Error('Usuario no autenticado');\n        \n        const fileName = `series/${Date.now()}_${Math.random().toString(36).substring(2)}`;\n        const storageRef: StorageReference = ref(this.storage, fileName);\n        const metadata = {\n          contentType: blob.type,\n          customMetadata: {\n            'uploaded-by': user.id || 'anonymous'\n          }\n        };\n        return from(uploadBytes(storageRef, blob, metadata)).pipe(\n          switchMap(snapshot => getDownloadURL(snapshot.ref)),\n          map(url => [url])\n        );\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseSeason.html":{"url":"interfaces/FirebaseSeason.html","title":"interface - FirebaseSeason","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseSeason\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-season.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            serieId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebaseSeason{\n    name:string,\n    numSeason:string,\n    numEpisodes:number,\n    releaseDate:Date,\n    rating:number,\n    serieId?:DocumentReference,\n    user:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseSerie.html":{"url":"interfaces/FirebaseSerie.html","title":"interface - FirebaseSerie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseSerie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-serie.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FirebaseSerie{\n    name:string,\n    synopsis:string,\n    releaseYear:number,\n    rating:number,\n    picture?: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Formats.html":{"url":"interfaces/Formats.html","title":"interface - Formats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Formats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            large\n                                        \n                                \n                                \n                                        \n                                            medium\n                                        \n                                \n                                \n                                        \n                                            small\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        large:         Large\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Large\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medium:         Medium\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Medium\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        small:         Small\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Small\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         Thumbnail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thumbnail\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { HomePage } from './home.page';\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    HomePageRoutingModule,\n    MatCardModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [HomePage],\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthMapping.html":{"url":"interfaces/IAuthMapping.html","title":"interface - IAuthMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/auth-mapping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        me\n                                    \n                                \n                                \n                                    \n                                        signIn\n                                    \n                                \n                                \n                                    \n                                        signInPayload\n                                    \n                                \n                                \n                                    \n                                        signUp\n                                    \n                                \n                                \n                                    \n                                        signUpPayload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface IAuthMapping{\n    signInPayload(payload:SignInPayload):any;\n    signUpPayload(payload:SignUpPayload):any;\n    signIn(response:any):User;\n    signUp(response:any):User;\n    me(response:any):User;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthentication.html":{"url":"interfaces/IAuthentication.html","title":"interface - IAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/authentication.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurrentUser\n                                    \n                                \n                                \n                                    \n                                        me\n                                    \n                                \n                                \n                                    \n                                        signIn\n                                    \n                                \n                                \n                                    \n                                        signOut\n                                    \n                                \n                                \n                                    \n                                        signUp\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(registerPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface IAuthentication{\n    signIn(authPayload:any):Observable;\n    signUp(registerPayload:any):Observable;\n    signOut():Observable;\n    me():Observable;\n    getCurrentUser():Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseMapping.html":{"url":"interfaces/IBaseMapping.html","title":"interface - IBaseMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-mapping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAdded\n                                    \n                                \n                                \n                                    \n                                        getDeleted\n                                    \n                                \n                                \n                                    \n                                        getOne\n                                    \n                                \n                                \n                                    \n                                        getPaginated\n                                    \n                                \n                                \n                                    \n                                        getUpdated\n                                    \n                                \n                                \n                                    \n                                        setAdd\n                                    \n                                \n                                \n                                    \n                                        setUpdate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\n\nexport interface IBaseMapping {\n  getPaginated(page:number, pageSize: number, pages:number, data:any):Paginated;\n  getOne(data:any):T;\n  getAdded(data:any):T;\n  getUpdated(data:any):T;\n  getDeleted(data:any):T;\n  setAdd(data:T):any;\n  setUpdate(data:any):any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseRepository.html":{"url":"interfaces/IBaseRepository.html","title":"interface - IBaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nexport interface SearchParams {\n  [key: string]: string; // O el tipo que necesites para los valores\n}\nexport interface IBaseRepository {\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable; // Retorna el ID generado\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseService.html":{"url":"interfaces/IBaseService.html","title":"interface - IBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/base-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Paginated } from '../../models/paginated.model';\nimport { SearchParams } from '../../repositories/intefaces/base-repository.interface';\n\nexport interface IBaseService {\n  getAll():Observable;\n  getAll(page:number, pageSize:number): Observable>;\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionSubscription.html":{"url":"interfaces/ICollectionSubscription.html","title":"interface - ICollectionSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/collection-subscription.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/collection-subscription.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/collection-subscription.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Model } from \"../../models/base.model\";\n\nexport interface CollectionChange {\n  type: 'added' | 'modified' | 'removed';\n  data?: T;\n  id: string;\n}\n\nexport interface ICollectionSubscription {\n  subscribe(collectionName: string): Observable>;\n  unsubscribe(collectionName: string): void;\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommentsRepository.html":{"url":"interfaces/ICommentsRepository.html","title":"interface - ICommentsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommentsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/comments-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCommentsBySerieId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentsBySerieId\n                        \n                    \n                \n            \n            \n                \ngetCommentsBySerieId(serieId: string, page?: number, pageSize?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/comments-repository.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Comment } from \"../../models/comment.model\";\nimport { Observable } from \"rxjs\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface ICommentsRepository extends IBaseRepository {\n    getCommentsBySerieId(serieId: string, page?: number, pageSize?: number): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommentsService.html":{"url":"interfaces/ICommentsService.html","title":"interface - ICommentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/comments-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCommentsBySerieId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentsBySerieId\n                        \n                    \n                \n            \n            \n                \ngetCommentsBySerieId(serieId: string, page?: number, pageSize?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/comments-service.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Comment } from '../../models/comment.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ICommentsService extends IBaseService {\n  getCommentsBySerieId(serieId: string, page?: number, pageSize?: number): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeasonsRepository.html":{"url":"interfaces/ISeasonsRepository.html","title":"interface - ISeasonsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISeasonsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/seasons-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Season } from \"../../models/season.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface ISeasonsRepository extends IBaseRepository{\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeasonsService.html":{"url":"interfaces/ISeasonsService.html","title":"interface - ISeasonsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISeasonsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/seasons-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getByUserId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByUserId\n                        \n                    \n                \n            \n            \n                \ngetByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/seasons-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Season } from '../../models/season.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ISeasonsService extends IBaseService {\n  // Métodos específicos si los hay\n  getByUserId(userId: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeriesRepository.html":{"url":"interfaces/ISeriesRepository.html","title":"interface - ISeriesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISeriesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/series-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface ISeriesRepository extends IBaseRepository{\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeriesService.html":{"url":"interfaces/ISeriesService.html","title":"interface - ISeriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISeriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/series-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n\n\n\n    \n\n\n    \n        import { Serie } from '../../models/serie.model';\nimport { Season } from '../../models/season.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ISeriesService extends IBaseService {\n  // Métodos específicos si los hay\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStrapiAuthentication.html":{"url":"interfaces/IStrapiAuthentication.html","title":"interface - IStrapiAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStrapiAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/strapi-authentication.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IAuthentication\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/strapi-authentication.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { IAuthentication } from \"./authentication.interface\";\n\nexport interface IStrapiAuthentication extends IAuthentication{\n    getToken():string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITasksRepository.html":{"url":"interfaces/ITasksRepository.html","title":"interface - ITasksRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITasksRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/tasks-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { IBaseRepository } from \"./base-repository.interface\";\nimport { Task } from \"../../models/task.model\";\nexport interface ITasksRepository extends IBaseRepository{\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITasksService.html":{"url":"interfaces/ITasksService.html","title":"interface - ITasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/tasks-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n\n\n\n    \n\n\n    \n        import { Task } from '../../models/task.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ITasksService extends IBaseService {\n  // Métodos específicos si los hay\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonServerRepositoryService.html":{"url":"injectables/JsonServerRepositoryService.html","title":"injectable - JsonServerRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsonServerRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/json-server-repository.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepositoryHttpService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                delete\n                            \n                            \n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/json-server-repository.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:62\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\nexport interface PaginatedRaw {\n  first: number\n  prev: number|null\n  next: number|null\n  last: number\n  pages: number\n  items: number\n  data: T[]\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonServerRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(AUTH_TOKEN) auth: IAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `${k}_like=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}/?_page=${page}&_per_page=${pageSize}&${search}`)\n        .pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.pages, res.data);\n        }));\n    }\n    else{\n      return this.http.get(\n        `${this.apiUrl}/${this.resource}?&${search}`)\n        .pipe(map(res=>{\n          return res.map((elem:any)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n    \n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity)).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.patch(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity)).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/language.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultLang\n                            \n                            \n                                    Private\n                                    Readonly\n                                LANG_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getCurrentLang\n                            \n                            \n                                getStoredLanguage\n                            \n                            \n                                storeLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/language.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLang\n                        \n                    \n                \n            \n            \n                \ngetCurrentLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStoredLanguage\n                        \n                    \n                \n            \n            \n                \ngetStoredLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storeLanguage\n                        \n                    \n                \n            \n            \n                \nstoreLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'español'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/language.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        LANG_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'selectedLanguage'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/language.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  private readonly LANG_KEY = 'selectedLanguage';\n  private defaultLang = 'español';\n\n  constructor(private translate: TranslateService) {\n    translate.addLangs(['español', 'ingles']);\n    translate.setDefaultLang('español');\n    \n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang?.match(/español|ingles/) ? browserLang : 'español');\n\n    const storedLang = this.getStoredLanguage();\n    this.changeLanguage(storedLang);\n  }\n\n  changeLanguage(lang: string) {\n    this.translate.use(lang);\n  }\n\n  getCurrentLang(): string {\n    return this.translate.currentLang;\n  }\n\n  getStoredLanguage(): string {\n    return localStorage.getItem(this.LANG_KEY) || this.defaultLang;\n  }\n\n  storeLanguage(lang: string): void {\n    localStorage.setItem(this.LANG_KEY, lang);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Large.html":{"url":"interfaces/Large.html","title":"interface - Large","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Large\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                passwordFieldType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onForgotPassword\n                            \n                            \n                                onRegister\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, authSvc: BaseAuthenticationService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onForgotPassword\n                        \n                    \n                \n            \n            \n                \nonForgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentToast(message: string, color: \"success\" | \"danger\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                        \"success\" | \"danger\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/login/login.page.ts:81\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/login/login.page.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n  passwordFieldType: string = 'password';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route:ActivatedRoute,\n    private authSvc:BaseAuthenticationService,\n    private toastController: ToastController\n\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  async presentToast(message: string, color: 'success' | 'danger') {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n      position: 'bottom',\n      color: color,\n      buttons: [\n        {\n          icon: 'close-outline',\n          role: 'cancel'\n        }\n      ]\n    });\n    await toast.present();\n  }\n\n  togglePasswordVisibility() {\n    this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.authSvc.signIn(this.loginForm.value).subscribe({\n        next: async resp => {\n          await this.presentToast('¡Inicio de sesión exitoso!', 'success');\n          const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n          this.router.navigateByUrl(returnUrl);\n        },\n        error: err => {\n          let errorMessage = 'Error de inicio de sesión';\n          if (err.error?.error?.message) {\n            if (err.error.error.message === 'Invalid identifier or password') {\n              errorMessage = 'Email o contraseña incorrectos';\n            }\n          }\n          this.presentToast(errorMessage, 'danger');\n        }\n      });\n    }\n  }\n\n  onRegister(){\n    this.loginForm.reset();\n    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n    this.router.navigate(['/register'], {queryParams:{ returnUrl:returnUrl}, replaceUrl:true});\n  }\n\n  onForgotPassword(){\n\n  }\n\n  get email(){\n    return this.loginForm.controls['email'];\n  }\n\n  get password(){\n    return this.loginForm.controls['password'];\n  }\n}\n\n    \n\n    \n        \n  \n    Iniciar Sesión\n  \n\n\n\n  \n    \n      \n    \n    \n      \n        \n          \n            Iniciar sesión\n          \n        \n      \n      \n        \n          \n            ¿No tienes cuenta?\n            Regístrate\n          \n        \n      \n      \n        \n        \n      \n      \n        \n        \n        \n        \n      \n      \n        *Debe introducir un email\n        *Debe introducir un email correcto\n      \n      \n        *Debe introducir una contraseña\n      \n      \n        Iniciar sesión\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .logo-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 24px;\n  \n  .app-logo {\n    width: 120px;\n    height: 120px;\n    object-fit: contain;\n  }\n}\n\n.login-container,\n.register-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  height: 100%;\n  padding: 24px;\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  \n  form {\n    width: 100%;\n    max-width: 400px;\n    height: auto;\n    padding: 24px;\n    border-radius: 16px;\n    background: linear-gradient(145deg, #ffffff, #fff5f2);\n    border: 1px solid rgba(255, 87, 34, 0.1);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    \n    h1 {\n      margin-bottom: 0px;\n      font-size: 28px;\n      font-weight: 600;\n      color: #ff5722;\n    }\n  }\n\n  ion-item {\n    --padding-start: 12px;\n    --padding-end: 12px;\n    --border-radius: 8px;\n    --background: var(--ion-item-background);\n    margin-bottom: 16px;\n    --highlight-height: 2px;\n    \n    &:last-of-type {\n      margin-bottom: 24px;\n    }\n\n    ion-icon {\n      color: var(--ion-color-medium);\n      margin-right: 8px;\n      font-size: 20px;\n    }\n\n    ion-input {\n      --padding-start: 8px;\n      font-size: 16px;\n    }\n  }\n\n  ion-button {\n    --background: linear-gradient(45deg, #ff5722, #ff9800);\n    --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n    --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n    --color: #ffffff;\n  }\n\n  ion-text.input-error {\n    margin: -12px 0 16px 16px;\n    display: block;\n    \n    p {\n      margin: 4px 0;\n      font-size: 12px;\n      color: red;\n    }\n  }\n\n  ion-grid ion-col {\n    font-size: 14px;\n    color: var(--ion-color-medium);\n  }\n\n  @media (max-width: 576px) {\n    padding: 16px;\n    \n    form {\n      padding: 16px;\n      \n      h1 {\n        font-size: 24px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Iniciar Sesión                                                          Iniciar sesión                                                            ¿No tienes cuenta?            Regístrate                                                                                                              *Debe introducir un email        *Debe introducir un email correcto                    *Debe introducir una contraseña                    Iniciar sesión            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaRaw.html":{"url":"interfaces/MediaRaw.html","title":"interface - MediaRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiMedia\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMedia\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Medium.html":{"url":"interfaces/Medium.html","title":"interface - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Medium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta.html":{"url":"interfaces/Meta.html","title":"interface - Meta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta-1.html":{"url":"interfaces/Meta-1.html","title":"interface - Meta-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta-2.html":{"url":"interfaces/Meta-2.html","title":"interface - Meta-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/base.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Model{\n    id:string,\n    createdAt?:string,\n    updatedAt?:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MySeasonsService.html":{"url":"injectables/MySeasonsService.html","title":"injectable - MySeasonsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MySeasonsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-seasons.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/my-seasons.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/my-seasons.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://localhost:3000/seasons\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/my-seasons.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SeasonRaw {\n    id: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeasonsService{\n\n    private apiUrl:string = \"http://localhost:3000/seasons\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SeasonRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    numSeason:d.numSeason, \n                    numEpisodes:d.numEpisodes, \n                    releaseDate:d.releaseDate, \n                    rating:d.rating,\n                    serieId:d.serieId\n                    };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MySeriesService.html":{"url":"injectables/MySeriesService.html","title":"injectable - MySeriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MySeriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-series.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/my-series.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/my-series.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://localhost:3000/series\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/my-series.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\nimport { Serie } from \"../models/serie.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SerieRaw {\n    id: string\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeriesService{\n\n    private apiUrl:string = \"http://localhost:3000/series\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SerieRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    synopsis:d.synopsis, \n                    releaseYear:d.releaseYear, \n                    rating:d.rating, \n                };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OnlyAllowedCharactersDirective.html":{"url":"directives/OnlyAllowedCharactersDirective.html","title":"directive - OnlyAllowedCharactersDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OnlyAllowedCharactersDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/only-allowed-characters.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appOnlyAllowedCharacters]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appOnlyAllowedCharacters\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/only-allowed-characters.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appOnlyAllowedCharacters\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/only-allowed-characters.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/only-allowed-characters.directive.ts:11\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('input', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/directives/only-allowed-characters.directive.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyAllowedCharacters]'\n})\nexport class OnlyAllowedCharactersDirective {\n  @Input('appOnlyAllowedCharacters') allowedCharacters: string = '';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('input', ['$event']) onInput(event: Event): void {\n    const input = this.el.nativeElement as HTMLInputElement;\n    const regex = new RegExp(`[^${this.allowedCharacters}]`, 'g');\n    const filteredValue = input.value.replace(regex, '');\n\n    if (input.value !== filteredValue) {\n      input.value = filteredValue;\n      event.stopPropagation();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/paginated.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated{\n    data:T[];\n    page:number;\n    pages:number;\n    pageSize:number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw.html":{"url":"interfaces/PaginatedRaw.html","title":"interface - PaginatedRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-seasons.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SeasonRaw {\n    id: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeasonsService{\n\n    private apiUrl:string = \"http://localhost:3000/seasons\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SeasonRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    numSeason:d.numSeason, \n                    numEpisodes:d.numEpisodes, \n                    releaseDate:d.releaseDate, \n                    rating:d.rating,\n                    serieId:d.serieId\n                    };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw-1.html":{"url":"interfaces/PaginatedRaw-1.html","title":"interface - PaginatedRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-series.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\nimport { Serie } from \"../models/serie.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SerieRaw {\n    id: string\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeriesService{\n\n    private apiUrl:string = \"http://localhost:3000/series\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SerieRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    synopsis:d.synopsis, \n                    releaseYear:d.releaseYear, \n                    rating:d.rating, \n                };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw-2.html":{"url":"interfaces/PaginatedRaw-2.html","title":"interface - PaginatedRaw-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/json-server-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\nexport interface PaginatedRaw {\n  first: number\n  prev: number|null\n  next: number|null\n  last: number\n  pages: number\n  items: number\n  data: T[]\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonServerRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(AUTH_TOKEN) auth: IAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `${k}_like=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}/?_page=${page}&_per_page=${pageSize}&${search}`)\n        .pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.pages, res.data);\n        }));\n    }\n    else{\n      return this.http.get(\n        `${this.apiUrl}/${this.resource}?&${search}`)\n        .pipe(map(res=>{\n          return res.map((elem:any)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n    \n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity)).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.patch(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity)).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw-3.html":{"url":"interfaces/PaginatedRaw-3.html","title":"interface - PaginatedRaw-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Data[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers:[PICTURE_SELECTABLE_VALUE_ACCESSOR]\n})\nexport class PictureSelectableComponent  implements OnInit, ControlValueAccessor, OnDestroy {\n\n  private _picture = new BehaviorSubject(\"\");\n  public picture$ = this._picture.asObservable();\n  isDisabled:boolean = false;\n  hasValue:boolean = false;\n  constructor(\n    private pictureModal:ModalController\n  ) { }\n\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  ngOnInit() {}\n\n  propagateChange = (obj: any) => {\n  }\n\n  writeValue(obj: any): void {\n    if(obj){\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  changePicture(picture:string){\n    this.hasValue = picture!='';\n    this._picture.next(picture);\n    this.propagateChange(picture);\n  }\n\n  onChangePicture(event:Event, fileLoader:HTMLInputElement){\n    event.stopPropagation();\n    fileLoader.onchange = ()=>{\n      if(fileLoader.files && fileLoader.files?.length>0){\n        var file = fileLoader.files[0];\n        var reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string);\n        };\n        reader.onerror = (error) =>{\n          console.log(error);\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n    fileLoader.click();\n  }\n\n  onDeletePicture(event:Event){\n    event.stopPropagation();\n    this.changePicture('');\n  }\n\n  close(){\n    this.pictureModal?.dismiss();\n  }\n\n}\n\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            \n              \n            \n          \n        \n        \n            \n        \n      \n    \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture {\n    min-width: 300px;\n    height: 300px;\n    border-radius: 16px;\n    overflow: hidden;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n    \n    ion-img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      cursor: pointer;\n      transition: transform 0.3s ease;\n  \n      &:hover {\n        transform: scale(1.05);\n      }\n    }\n  \n    ion-button.picture-button {\n      margin: 0;\n      --padding-start: 0;\n      --padding-end: 0;\n      --background: linear-gradient(45deg, #ff5722, #ff9800);\n      \n      .button-native {\n        padding: 0 !important;\n      }\n    }\n  }\n  \n  ion-modal.auto-height {\n    &.bottom {\n      align-items: flex-end;\n    }\n  \n    --height: auto;\n    --background: rgba(255, 87, 34, 0.1);\n  \n    .ion-page {\n      position: relative;\n      display: block;\n      contain: content;\n      border-radius: 16px 16px 0 0;\n      overflow: hidden;\n  \n      .inner-content {\n        max-height: 80vh;\n        overflow: auto;\n        padding: 16px;\n        background: white;\n        \n        ion-list {\n          background: transparent;\n        }\n  \n        ion-item {\n          --background: transparent;\n          --border-color: rgba(255, 87, 34, 0.2);\n          margin-bottom: 8px;\n          border-radius: 8px;\n        }\n      }\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Port.html":{"url":"classes/Port.html","title":"class - Port","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Port\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Country\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { AlertController, AnimationController, InfiniteScrollCustomEvent, ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SeasonViewComponent } from 'src/app/shared/components/season-view/season-view.component';\nimport { SerieViewComponent } from 'src/app/shared/components/serie-view/serie-view.component';\nimport { ScreenReader } from '@capacitor/screen-reader';\n\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _series:BehaviorSubject = new BehaviorSubject([]);\n  series$:Observable = this._series.asObservable();\n  _seasons:BehaviorSubject = new BehaviorSubject([]);\n  seasons$:Observable = this._seasons.asObservable();\n\n  isWeb: boolean = false;\n\n  constructor(\n    private seasonsSvc:SeasonsService,\n    private serieSvc:SeriesService,\n    private platform: Platform,\n    private modalCtrl:ModalController,\n    private translate: TranslateService,\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeries();\n    this.loadSeasons();\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSeason: any = null;\n  selectedSerie: any = null;\n  isAnimating = false;\n  page:number = 1;\n  pageSize:number = 25;\n  pages:number = 0;\n\n\n  loadSeries(){\n    this.page = 1;\n    this.serieSvc.getSeriesWithSeasons(this.page, this.pageSize).subscribe({\n      next:(response:Paginated)=>{\n\n        const seriesWithSortedSeasons = response.data.map(serie => ({\n          ...serie,\n          seasons: serie.seasons?.sort((a, b) => \n            (a.name || '').localeCompare(b.name || '')\n          )\n        }));\n\n        this._series.next([...seriesWithSortedSeasons]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n  loadMoreSeries(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page )=>{\n\n          const seriesWithSortedSeasons = response.data.map(serie => ({\n            ...serie,\n            seasons: serie.seasons?.sort((a, b) => \n              (a.name || '').localeCompare(b.name || '')\n            )\n          }));\n\n          this._series.next([...this._series.value, ...seriesWithSortedSeasons]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n\n  loadSeasons(){\n    this.page=1;\n    this.seasonsSvc.getAll(this.page, this.pageSize).subscribe({\n      next:(response:Paginated)=>{\n        this._seasons.next([...response.data]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n\n  loadMoreSeasons(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page)=>{\n          this._seasons.next([...this._seasons.value, ...response.data]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n  async openSeasonDetail(season: any) {\n    await this.presentModalSeason(season);\n    this.selectedSeason = season;\n  }\n  private async presentModalSeason(season:Season|undefined=undefined){\n    const modal = await this.modalCtrl.create({\n      component: SeasonViewComponent,\n      componentProps: {\n        season: season\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async openSerieDetail(serie: any) {\n    await this.presentModalSerie(serie);\n    this.selectedSerie = serie;\n  }\n  private async presentModalSerie(serie:Serie|undefined=undefined){\n    const modal = await this.modalCtrl.create({\n      component: SerieViewComponent,\n      componentProps: {\n        serie: serie\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async readSerieTitle(serieTitle: string) {\n    await ScreenReader.speak({ value: serieTitle });\n  }\n  \n  onIonInfinite(ev:InfiniteScrollCustomEvent) {\n    this.loadMoreSeries(ev.target);\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Port-1.html":{"url":"classes/Port-1.html","title":"class - Port-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Port\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/series/series.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Country\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/series/series.page.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  AlertController,\n  AnimationController,\n  InfiniteScrollCustomEvent,\n  ModalController,\n  Platform,\n} from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SerieModalComponent } from 'src/app/shared/components/serie-modal/serie-modal.component';\nimport { SERIES_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { CollectionChange } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { FirebaseAuthenticationService } from 'src/app/core/services/impl/firebase-authentication.service';\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-series',\n  templateUrl: './series.page.html',\n  styleUrls: ['./series.page.scss'],\n})\nexport class SeriesPage implements OnInit {\n  isAdmin = false;\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _series: BehaviorSubject = new BehaviorSubject([]);\n  series$: Observable = this._series.asObservable();\n  _filteredSeries: BehaviorSubject = new BehaviorSubject([]);\n  filteredSeries$: Observable = this._filteredSeries.asObservable();\n  searchTerm: string = '';\n\n  public alertYesNoButtons = [\n    {\n      text: 'No',\n      role: 'no',\n    },\n    {\n      text: 'Yes',\n      role: 'yes',\n    },\n  ];\n  isWeb: boolean = false;\n  private loadedIds: Set = new Set();\n\n  constructor(\n    private animationCtrl: AnimationController,\n    private seasonsSvc: SeasonsService,\n    private serieSvc: SeriesService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: FirebaseAuthenticationService,\n    @Inject(SERIES_COLLECTION_SUBSCRIPTION_TOKEN)\n    private seriesSubscription: ICollectionSubscription\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeries();\n\n    this.authSvc\n      .getCurrentUser()\n      .then((user) => {\n        this.isAdmin = user.admin;\n      })\n      .catch(() => {\n        this.isAdmin = false;\n      });\n\n    this._series.subscribe((series) => {\n      this._filteredSeries.next(series);\n    });\n\n    this.seriesSubscription\n      .subscribe('series')\n      .subscribe((change: CollectionChange) => {\n        const currentSeries = [...this._series.value];\n\n        if (!this.loadedIds.has(change.id) && change.type !== 'added') {\n          return;\n        }\n\n        switch (change.type) {\n          case 'added':\n            this.loadedIds.add(change.id);\n\n            const existingIndex = currentSeries.findIndex(\n              (p) => p.id === change.id\n            );\n            if (existingIndex === -1) {\n              currentSeries.push(change.data!);\n              currentSeries.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'modified':\n            const index = currentSeries.findIndex((p) => p.id === change.id);\n            if (index >= 0) {\n              currentSeries[index] = change.data!;\n              currentSeries.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'removed':\n            const removeIndex = currentSeries.findIndex(\n              (p) => p.id === change.id\n            );\n            if (removeIndex >= 0) {\n              currentSeries.splice(removeIndex, 1);\n              this.loadedIds.delete(change.id);\n            }\n            break;\n        }\n\n        this._series.next(currentSeries);\n      });\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSerie: any = null;\n  isAnimating = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n\n    if (!searchTerm) {\n      this._filteredSeries.next(this._series.value);\n      return;\n    }\n\n    const filtered = this._series.value.filter((serie) =>\n      serie.name.toLowerCase().includes(searchTerm)\n    );\n\n    this._filteredSeries.next(filtered);\n  }\n\n  loadSeries() {\n    this.page = 1;\n    this.serieSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        response.data.forEach((serie) => this.loadedIds.add(serie.id));\n\n        const sortedSeries = response.data.sort((a, b) =>\n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._series.next([...sortedSeries]);\n        this._filteredSeries.next([...sortedSeries]);\n        this.page++;\n        this.pages = response.pages;\n      },\n    });\n  }\n\n  loadMoreSeries(notify: HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          response.data.forEach((serie) => this.loadedIds.add(serie.id));\n\n          const updatedSeries = [...this._series.value, ...response.data].sort(\n            (a, b) => (a.name || '').localeCompare(b.name || '')\n          );\n          this._series.next(updatedSeries);\n\n          if (this.searchTerm) {\n            const filtered = updatedSeries.filter((serie) =>\n              serie.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeries.next(filtered);\n          } else {\n            this._filteredSeries.next(updatedSeries);\n          }\n          this.page++;\n          notify?.complete();\n        },\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n\n  async openSerieDetail(serie: any, index: number) {\n    await this.presentModalSerie('edit', serie);\n    this.selectedSerie = serie;\n  }\n\n  onIonInfinite(ev: InfiniteScrollCustomEvent) {\n    this.loadMoreSeries(ev.target);\n  }\n\n  private async presentModalSerie(\n    mode: 'new' | 'edit',\n    serie: Serie | undefined = undefined\n  ) {\n    let _series: Serie[] = await lastValueFrom(this.serieSvc.getAll());\n    const modal = await this.modalCtrl.create({\n      component: SerieModalComponent,\n      componentProps:\n        mode == 'edit'\n          ? {\n              serie: serie,\n              series: _series,\n            }\n          : {\n              series: _series,\n            },\n    });\n    modal.onDidDismiss().then((response: any) => {\n      switch (response.role) {\n        case 'new':\n          this.serieSvc.add(response.data).subscribe({\n            next: (res) => {\n              this.loadSeries();\n            },\n            error: (err) => {},\n          });\n          break;\n        case 'edit':\n          this.serieSvc.update(serie!.id, response.data).subscribe({\n            next: (res) => {\n              this.loadSeries();\n            },\n            error: (err) => {},\n          });\n          break;\n        default:\n          break;\n      }\n    });\n    await modal.present();\n  }\n\n  async onAddSerie() {\n    await this.presentModalSerie('new');\n  }\n\n  async onDeleteSerie(serie: Serie) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate\n        .get('SERIES.MESSAGES.DELETE_CONFIRM')\n        .toPromise(),\n      cssClass: 'custom-delete-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'yes',\n          handler: () => {\n            this.serieSvc.delete(serie.id).subscribe({\n              next: (response) => {\n                this.loadSeries();\n              },\n              error: (err) => {},\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Port-2.html":{"url":"classes/Port-2.html","title":"class - Port-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Port\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/seasons/seasons.page.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Country\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/seasons/seasons.page.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  AlertController,\n  AnimationController,\n  InfiniteScrollCustomEvent,\n  ModalController,\n  Platform,\n} from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom, Observable, Subscription } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Season } from 'src/app/core/models/season.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\nimport { SeasonsService } from 'src/app/core/services/impl/seasons.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SeasonModalComponent } from 'src/app/shared/components/season-modal/season-modal.component';\nimport { SEASONS_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { CollectionChange } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { FirebaseAuthenticationService } from 'src/app/core/services/impl/firebase-authentication.service';\n\nexport class Country {\n  public id?: number;\n  public name?: string;\n  public ports?: Port[];\n}\nexport class Port {\n  public id?: number;\n  public name?: string;\n  public country?: Country;\n}\n@Component({\n  selector: 'app-seasons',\n  templateUrl: './seasons.page.html',\n  styleUrls: ['./seasons.page.scss'],\n})\nexport class SeasonsPage implements OnInit {\n  isAdmin = false;\n  ports: Port[] = [];\n  port!: Port;\n  page_ = 2;\n  portsSubscription!: Subscription;\n  _seasons: BehaviorSubject = new BehaviorSubject([]);\n  seasons$: Observable = this._seasons.asObservable();\n  _filteredSeasons: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  filteredSeasons$: Observable = this._filteredSeasons.asObservable();\n  searchTerm: string = '';\n\n  public alertYesNoButtons = [\n    {\n      text: 'No',\n      role: 'no',\n    },\n    {\n      text: 'Yes',\n      role: 'yes',\n    },\n  ];\n  isWeb: boolean = false;\n  private loadedIds: Set = new Set();\n\n  constructor(\n    private animationCtrl: AnimationController,\n    private seasonsSvc: SeasonsService,\n    private serieSvc: SeriesService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: FirebaseAuthenticationService,\n    @Inject(SEASONS_COLLECTION_SUBSCRIPTION_TOKEN)\n    private seasonsSubscription: ICollectionSubscription\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit(): void {\n    this.loadSeasons();\n\n    this.authSvc\n      .getCurrentUser()\n      .then((user) => {\n        this.isAdmin = user.admin;\n      })\n      .catch(() => {\n        this.isAdmin = false;\n      });\n\n    this._seasons.subscribe((seasons) => {\n      this._filteredSeasons.next(seasons);\n    });\n\n    this.seasonsSubscription\n      .subscribe('seasons')\n      .subscribe((change: CollectionChange) => {\n        const currentSeasons = [...this._seasons.value];\n\n        // Solo procesar cambios de documentos que ya tenemos cargados\n        if (!this.loadedIds.has(change.id) && change.type !== 'added') {\n          return;\n        }\n\n        switch (change.type) {\n          case 'added':\n            // Registrar el nuevo ID en nuestro conjunto de IDs cargados\n            this.loadedIds.add(change.id);\n\n            // Verificar si ya existe en nuestro array local\n            const existingIndex = currentSeasons.findIndex(\n              (p) => p.id === change.id\n            );\n            if (existingIndex === -1) {\n              currentSeasons.push(change.data!);\n              currentSeasons.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'modified':\n            const index = currentSeasons.findIndex((p) => p.id === change.id);\n            if (index >= 0) {\n              currentSeasons[index] = change.data!;\n              currentSeasons.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n              );\n            }\n            break;\n          case 'removed':\n            const removeIndex = currentSeasons.findIndex(\n              (p) => p.id === change.id\n            );\n            if (removeIndex >= 0) {\n              currentSeasons.splice(removeIndex, 1);\n              this.loadedIds.delete(change.id);\n            }\n            break;\n        }\n\n        this._seasons.next(currentSeasons);\n      });\n  }\n\n  @ViewChildren('avatar') avatars!: QueryList;\n  @ViewChild('animatedAvatar') animatedAvatar!: ElementRef;\n  @ViewChild('animatedAvatarContainer') animatedAvatarContainer!: ElementRef;\n\n  selectedSeason: any = null;\n  isAnimating = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n\n    if (!searchTerm) {\n      this._filteredSeasons.next(this._seasons.value);\n      return;\n    }\n\n    const filtered = this._seasons.value.filter((season) =>\n      season.name.toLowerCase().includes(searchTerm)\n    );\n\n    this._filteredSeasons.next(filtered);\n  }\n\n  loadSeasons() {\n    this.page = 1;\n    this.seasonsSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        // Actualizar el registro de IDs cargados\n        response.data.forEach((season) => this.loadedIds.add(season.id));\n\n        const sortedSeasons = response.data.sort((a, b) =>\n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._seasons.next([...sortedSeasons]);\n        this._filteredSeasons.next([...sortedSeasons]);\n        this.page++;\n        this.pages = response.pages;\n      },\n    });\n  }\n\n  loadMoreSeasons(notify: HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          // Actualizar el registro de IDs cargados\n          response.data.forEach((season) => this.loadedIds.add(season.id));\n\n          const updatedSeasons = [\n            ...this._seasons.value,\n            ...response.data,\n          ].sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n          this._seasons.next(updatedSeasons);\n\n          if (this.searchTerm) {\n            const filtered = updatedSeasons.filter((season) =>\n              season.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeasons.next(filtered);\n          } else {\n            this._filteredSeasons.next(updatedSeasons);\n          }\n          this.page++;\n          notify?.complete();\n        },\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n\n  async openSeasonDetail(season: any, index: number) {\n    await this.presentModalSeason('edit', season);\n    this.selectedSeason = season;\n  }\n\n  onIonInfinite(ev: InfiniteScrollCustomEvent) {\n    this.loadMoreSeasons(ev.target);\n  }\n\n  private async presentModalSeason(\n    mode: 'new' | 'edit',\n    season: Season | undefined = undefined\n  ) {\n    let _series: Serie[] = await lastValueFrom(this.serieSvc.getAll());\n    const modal = await this.modalCtrl.create({\n      component: SeasonModalComponent,\n      componentProps:\n        mode == 'edit'\n          ? {\n              season: season,\n              series: _series,\n            }\n          : {\n              series: _series,\n            },\n    });\n    modal.onDidDismiss().then((response: any) => {\n      switch (response.role) {\n        case 'new':\n          this.seasonsSvc.add(response.data).subscribe({\n            next: (res) => {\n              this.loadSeasons();\n            },\n            error: (err) => {},\n          });\n          break;\n        case 'edit':\n          this.seasonsSvc.update(season!.id, response.data).subscribe({\n            next: (res) => {\n              this.loadSeasons();\n            },\n            error: (err) => {},\n          });\n          break;\n        default:\n          break;\n      }\n    });\n    await modal.present();\n  }\n\n  async onAddSeason() {\n    await this.presentModalSeason('new');\n  }\n\n  async onDeleteSeason(season: Season) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate\n        .get('SEASONS.MESSAGES.DELETE_CONFIRM')\n        .toPromise(),\n      cssClass: 'custom-delete-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'yes',\n          handler: () => {\n            this.seasonsSvc.delete(season.id).subscribe({\n              next: (response) => {\n                this.loadSeasons();\n              },\n              error: (err) => {},\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/profile/profile.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminKeyHashed\n                            \n                            \n                                isUppercase\n                            \n                            \n                                registerForm\n                            \n                            \n                                selectedImage\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashString\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onImageSelected\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                toggleCase\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    name\n                                \n                                \n                                    surname\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: BaseAuthenticationService, mediaService: BaseMediaService, loadingController: LoadingController, toastController: ToastController, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/profile/profile.page.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaService\n                                                  \n                                                        \n                                                                        BaseMediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashString\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashString(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onImageSelected\n                        \n                    \n                \n            \n            \n                \n                        \n                    onImageSelected(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCase\n                        \n                    \n                \n            \n            \n                \ntoggleCase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminKeyHashed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUppercase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:208\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:212\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:216\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:220\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\nimport { User } from 'src/app/core/models/auth.model';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { BaseMediaService } from 'src/app/core/services/impl/base-media.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n  registerForm: FormGroup;\n  user?: User | null;\n  isUppercase: boolean = false;\n  selectedImage: string | null = null;\n  adminKeyHashed = 'a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825';\n\n  toggleCase() {\n    const usernameControl = this.registerForm.get('username');\n    if (usernameControl) {\n      const currentValue = usernameControl.value || '';\n      this.isUppercase = !this.isUppercase;\n      usernameControl.setValue(\n        this.isUppercase ? currentValue.toUpperCase() : currentValue.toLowerCase()\n      );\n    }\n  }\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: BaseAuthenticationService,\n    private mediaService: BaseMediaService,\n    private loadingController: LoadingController,\n    private toastController: ToastController,\n    private translateService: TranslateService,\n  ) {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      surname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      picture: [''],\n      adminKey: ['']\n    });\n  }\n\n  async onImageSelected(event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files[0]) {\n      const file = input.files[0];\n      const reader = new FileReader();\n      \n      reader.onload = (e) => {\n        this.selectedImage = e.target?.result as string;\n        this.registerForm.patchValue({\n          picture: this.selectedImage\n        });\n        this.registerForm.get('picture')?.markAsDirty();\n      };\n      \n      reader.readAsDataURL(file);\n    }\n  }\n\n  async hashString(str: string): Promise {\n    const buffer = new TextEncoder().encode(str);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  }\n\n  async ngOnInit() {\n    const loading = await this.loadingController.create({\n      spinner: 'circles',\n      message: 'Cargando perfil...'\n    });\n    await loading.present();\n\n    try {\n      // Obtener usuario con datos completos\n      const user = await this.authService.getCurrentUser();\n      \n      if (user) {\n        this.user = user;\n        this.registerForm.patchValue({\n          username: user.username,\n          name: user.name,\n          surname: user.surname,\n          email: user.email,\n          picture: user.picture\n        });\n      }\n    } catch (error) {\n      console.error('Error loading user:', error);\n      const toast = await this.toastController.create({\n        message: await lastValueFrom(this.translateService.get('COMMON.ERROR.LOAD')),\n        duration: 3000,\n        position: 'bottom',\n        color: 'danger'\n      });\n      await toast.present();\n    } finally {\n      await loading.dismiss();\n    }\n  }\n\n  async onSubmit() {\n    if (this.registerForm.valid && this.user) {\n      const loading = await this.loadingController.create({\n        spinner: 'circles',\n        duration: 2000\n      });\n      await loading.present();\n  \n      try {\n        // Verificar si el usuario NO es admin\n        if (!this.user.admin) {\n          const enteredKey = this.registerForm.value.adminKey?.trim();\n          if (enteredKey) {\n            const hashed = await this.hashString(enteredKey);\n            if (hashed === this.adminKeyHashed) {\n              this.user.admin = true;\n              const toast = await this.toastController.create({\n                message: await this.translateService.get('PROFILE.ADMIN_GRANTED').toPromise(),\n                duration: 3000,\n                position: 'bottom',\n                color: 'success'\n              });\n              await toast.present();\n              // Limpiar campo adminKey para no enviar al backend\n              this.registerForm.patchValue({ adminKey: '' });\n            } else {\n              const toast = await this.toastController.create({\n                message: await this.translateService.get('PROFILE.ADMIN_KEY_INVALID').toPromise(),\n                duration: 3000,\n                position: 'bottom',\n                color: 'danger'\n              });\n              await toast.present();\n              await loading.dismiss();\n              return; // Para no continuar si clave incorrecta\n            }\n          }\n        } else {\n          // Si ya es admin, mostrar mensaje\n          const toast = await this.toastController.create({\n            message: await this.translateService.get('PROFILE.ALREADY_ADMIN').toPromise(),\n            duration: 3000,\n            position: 'bottom',\n            color: 'primary'\n          });\n          await toast.present();\n        }\n  \n        const updatedUser: Partial = {};\n  \n        // Solo actualizar campos modificados excepto adminKey\n        Object.keys(this.registerForm.controls).forEach(key => {\n          if (key !== 'adminKey' && this.registerForm.get(key)?.dirty) {\n            updatedUser[key as keyof User] = this.registerForm.get(key)?.value;\n          }\n        });\n  \n        // Asegurarse de guardar el cambio de admin\n        if (this.user.admin) {\n          updatedUser.admin = true;\n        }\n  \n        // Manejo de imagen de perfil\n        if (this.selectedImage) {\n          const base64Response = await fetch(this.selectedImage);\n          const blob = await base64Response.blob();\n          const uploadResponse = await lastValueFrom(this.mediaService.upload(blob));\n          if (uploadResponse && uploadResponse.length > 0) {\n            updatedUser.picture = uploadResponse[0].toString();\n          }\n        }\n  \n        // Actualizar usuario en backend\n        await lastValueFrom(this.authService.updateUser(this.user.id, updatedUser));\n  \n        const toast = await this.toastController.create({\n          message: await this.translateService.get('COMMON.SUCCESS.SAVE').toPromise(),\n          duration: 3000,\n          position: 'bottom'\n        });\n        await toast.present();\n  \n      } catch (error) {\n        console.error(error);\n        const toast = await this.toastController.create({\n          message: await lastValueFrom(this.translateService.get('COMMON.ERROR.SAVE')),\n          duration: 3000,\n          position: 'bottom'\n        });\n        await toast.present();\n      } finally {\n        await loading.dismiss();\n      }\n    }\n  }\n  \n\n  get username() {\n    return this.registerForm.controls['username'];\n  }\n\n  get name(){\n    return this.registerForm.controls['name'];\n  }\n\n  get surname(){\n    return this.registerForm.controls['surname'];\n  }\n\n  get email(){\n    return this.registerForm.controls['email'];\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    {{ 'PROFILE.TITLE' | translate }}\n  \n\n\n\n  \n    \n      \n        \n          \n            \n          \n          \n        \n        \n          \n            \n              \n              \n                \n                \n                \n              \n              \n                \n                  {{ 'PERSON.ERRORS.NAME_REQUIRED' | translate }}\n                \n                \n                  {{ 'PERSON.ERRORS.NAME_MIN_LENGTH' | translate }}\n                \n              \n\n              \n              \n                \n                \n                \n              \n              \n                \n                  {{ 'PERSON.ERRORS.SURNAME_REQUIRED' | translate }}\n                \n                \n                  {{ 'PERSON.ERRORS.SURNAME_MIN_LENGTH' | translate }}\n                \n              \n\n              \n              \n                \n                \n                \n                \n                  {{ isUppercase ? 'Aa' : 'AA' }}\n                \n              \n              \n                \n                  {{ 'PERSON.ERRORS.USERNAME_REQUIRED' | translate }}\n                \n                \n                  {{ 'PERSON.ERRORS.USERNAME_MIN_LENGTH' | translate }}\n                \n              \n\n              \n              \n                \n                \n                \n              \n              \n                \n                  {{ 'PERSON.ERRORS.EMAIL_REQUIRED' | translate }}\n                \n                \n                  {{ 'PERSON.ERRORS.EMAIL_INVALID' | translate }}\n                \n              \n              \n                \n                \n                \n              \n\n              \n                {{ 'PROFILE.ALREADY_ADMIN' | translate }}\n              \n\n              \n                \n                  {{ 'PROFILE.UPDATE' | translate }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                .profile-container {\n    background-image: url('/assets/background-pattern.svg');\n    background-size: cover;\n    background-position: center;\n    min-height: 100%;\n    padding: 16px;\n\n    .profile-image-container {\n      display: flex;\n      justify-content: center;\n      margin: 8px;\n    }\n\n    .profile-avatar {\n      width: 150px;\n      height: 150px;\n      margin-bottom: 16px;\n      border: 3px solid #ff5722;\n      overflow: hidden;\n      cursor: pointer;\n      transition: transform 0.2s ease;\n  \n      &:hover {\n        transform: scale(1.05);\n      }\n  \n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n\n    .profile-header {\n      ion-toolbar {\n        --background: transparent;\n        \n        ion-title {\n          color: #ff5722;\n          font-weight: 600;\n        }\n        \n        .profile-subtitle {\n          color: rgba(0, 0, 0, 0.6);\n          margin: 8px 16px;\n        }\n      }\n    }\n  \n    .profile-content {\n      justify-content: center;\n      .profile-picture-card {\n        background: rgba(255, 255, 255, 0.9);\n        border-radius: 16px;\n        padding: 16px;\n        margin-bottom: 16px;\n        box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n      }\n  \n      .profile-form {\n        background: rgba(255, 255, 255, 0.9);\n        border-radius: 16px;\n        padding: 16px;\n        box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n  \n        .form-item {\n          --background: transparent;\n          --border-color: rgba(255, 87, 34, 0.2);\n          --border-radius: 8px;\n          margin-bottom: 16px;\n          \n          ion-icon {\n            color: #ff5722;\n            margin-right: 8px;\n          }\n  \n          ion-input {\n            --padding-start: 8px;\n            --color: #333;\n            \n            &.ion-valid {\n              --highlight-color: #ff5722;\n            }\n          }\n          \n          &:hover {\n            --background: rgba(255, 87, 34, 0.05);\n          }\n        }\n  \n        .error-message {\n          margin: -12px 0 16px 16px;\n          display: block;\n          \n          p {\n            margin: 4px 0;\n            font-size: 12px;\n            color: var(--ion-color-danger);\n          }\n        }\n      }\n    }\n  \n    .submit-button-container {\n      margin-top: 24px;\n      padding: 0 16px;\n  \n      .update-button {\n        --background: linear-gradient(45deg, #ff5722, #ff9800);\n        --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n        --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n        --border-radius: 8px;\n        --box-shadow: 0 4px 12px rgba(255, 87, 34, 0.2);\n        font-weight: 500;\n        height: 48px;\n      }\n    }\n  }\n\n  .admin-message{\n    margin-left: 3rem;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'PROFILE.TITLE\\' | translate }}                                                                                                                                                                                                                                                {{ \\'PERSON.ERRORS.NAME_REQUIRED\\' | translate }}                                                  {{ \\'PERSON.ERRORS.NAME_MIN_LENGTH\\' | translate }}                                                                                                                                                                        {{ \\'PERSON.ERRORS.SURNAME_REQUIRED\\' | translate }}                                                  {{ \\'PERSON.ERRORS.SURNAME_MIN_LENGTH\\' | translate }}                                                                                                                                            {{ isUppercase ? \\'Aa\\' : \\'AA\\' }}                                                                              {{ \\'PERSON.ERRORS.USERNAME_REQUIRED\\' | translate }}                                                  {{ \\'PERSON.ERRORS.USERNAME_MIN_LENGTH\\' | translate }}                                                                                                                                                                        {{ \\'PERSON.ERRORS.EMAIL_REQUIRED\\' | translate }}                                                  {{ \\'PERSON.ERRORS.EMAIL_INVALID\\' | translate }}                                                                                                                                        {{ \\'PROFILE.ALREADY_ADMIN\\' | translate }}                                                              {{ \\'PROFILE.UPDATE\\' | translate }}                                                                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nOnlyAllowedCharactersDirective\n\nOnlyAllowedCharactersDirective\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nOnlyAllowedCharactersDirective->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OnlyAllowedCharactersDirective\n                        \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { OnlyAllowedCharactersDirective } from 'src/app/directives/only-allowed-characters.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [ProfilePage, OnlyAllowedCharactersDirective ]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProviderMetadata.html":{"url":"interfaces/ProviderMetadata.html","title":"interface - ProviderMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProviderMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            public_id\n                                        \n                                \n                                \n                                        \n                                            resource_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminKeyFieldType\n                            \n                            \n                                    Private\n                                adminKeyHash\n                            \n                            \n                                isAdmin\n                            \n                            \n                                passwordFieldType\n                            \n                            \n                                passwordFieldType2\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashString\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                setAdmin\n                            \n                            \n                                toggleAdminKeyVisibility\n                            \n                            \n                                togglePasswordVisibility\n                            \n                            \n                                togglePasswordVisibility2\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    name\n                                \n                                \n                                    surname\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    adminKey\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, authSvc: BaseAuthenticationService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/register/register.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashString\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashString(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentToast(message: string, color: \"success\" | \"danger\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                        \"success\" | \"danger\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdmin\n                        \n                    \n                \n            \n            \n                \nsetAdmin(value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAdminKeyVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleAdminKeyVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility2\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility2()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminKeyFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adminKeyHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordFieldType2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:153\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:157\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:161\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:165\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:169\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        adminKey\n                    \n                \n\n                \n                    \n                        getadminKey()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:177\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/core/models/auth.model';\nimport { ToastController } from '@ionic/angular';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport {\n  passwordsMatchValidator,\n  passwordValidator,\n} from 'src/app/core/utils/validators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  registerForm: FormGroup;\n  passwordFieldType: string = 'password';\n  passwordFieldType2: string = 'password';\n  isAdmin: boolean = false;\n  adminKeyFieldType: string = 'password';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private authSvc: BaseAuthenticationService,\n    private toastController: ToastController\n  ) {\n    this.registerForm = this.fb.group(\n      {\n        username: ['', [Validators.required, Validators.minLength(2)]],\n        name: ['', [Validators.required, Validators.minLength(2)]],\n        surname: ['', [Validators.required, Validators.minLength(2)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, passwordValidator]],\n        confirmPassword: ['', [Validators.required]],\n        adminKey: [''],\n      },\n      {\n        validators: passwordsMatchValidator,\n      }\n    );\n  }\n\n  private adminKeyHash =\n    'a595ad2f4500de5469d684bbbc62562456ff6990cf32231610b3deff162ce825'; //adminSecret123\n\n  ngOnInit(): void {\n    this.registerForm.get('adminKey')?.clearValidators();\n  }\n\n  setAdmin(value: boolean) {\n    this.isAdmin = value;\n    const adminKeyControl = this.registerForm.get('adminKey');\n    if (value) {\n      adminKeyControl?.setValidators([Validators.required]);\n    } else {\n      adminKeyControl?.clearValidators();\n      adminKeyControl?.setValue('');\n    }\n    adminKeyControl?.updateValueAndValidity();\n  }\n\n  togglePasswordVisibility() {\n    this.passwordFieldType =\n      this.passwordFieldType === 'password' ? 'text' : 'password';\n  }\n\n  togglePasswordVisibility2() {\n    this.passwordFieldType2 =\n      this.passwordFieldType2 === 'password' ? 'text' : 'password';\n  }\n\n  toggleAdminKeyVisibility() {\n    this.adminKeyFieldType =\n      this.adminKeyFieldType === 'password' ? 'text' : 'password';\n  }\n\n  async presentToast(message: string, color: 'success' | 'danger') {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n      position: 'bottom',\n      color: color,\n      buttons: [\n        {\n          icon: 'close-outline',\n          role: 'cancel',\n        },\n      ],\n    });\n    await toast.present();\n  }\n\n  async onSubmit() {\n    if (this.registerForm.valid) {\n      const formValue = this.registerForm.value;\n      const wantsAdmin = this.isAdmin;\n\n      if (wantsAdmin) {\n        const enteredKey = formValue.adminKey?.trim() || '';\n        const enteredKeyHash = await this.hashString(enteredKey);\n        console.log(enteredKeyHash)\n\n        if (enteredKeyHash !== this.adminKeyHash) {\n          this.presentToast('Clave de admin incorrecta', 'danger');\n          return;\n        }\n      }\n\n\n      const signUpData = {\n        username: formValue.username,\n        email: formValue.email,\n        password: formValue.password,\n        name: formValue.name,\n        surname: formValue.surname,\n        admin: wantsAdmin,\n        adminKey: wantsAdmin ? formValue.adminKey : undefined,\n      };\n\n      this.authSvc.signUp(signUpData).subscribe({\n        next: (resp: User) => {\n          this.presentToast('¡Registro exitoso!', 'success');\n          this.router.navigate(['/home']);\n        },\n        error: (err) => {\n          console.error(err);\n          this.presentToast('Error al registrarse', 'danger');\n        },\n      });\n    }\n  }\n\n  onLogin() {\n    this.registerForm.reset();\n    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n    this.router.navigate(['/login'], {\n      queryParams: { returnUrl: returnUrl },\n      replaceUrl: true,\n    });\n  }\n\n  async hashString(str: string): Promise {\n    const buffer = new TextEncoder().encode(str);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  }\n\n  get username() {\n    return this.registerForm.controls['username'];\n  }\n\n  get name() {\n    return this.registerForm.controls['name'];\n  }\n\n  get surname() {\n    return this.registerForm.controls['surname'];\n  }\n\n  get email() {\n    return this.registerForm.controls['email'];\n  }\n\n  get password() {\n    return this.registerForm.controls['password'];\n  }\n\n  get confirmPassword() {\n    return this.registerForm.controls['confirmPassword'];\n  }\n\n  get adminKey() {\n    return this.registerForm.controls['adminKey'];\n  }\n}\n\n    \n\n    \n        \n  \n    Crear cuenta\n  \n\n\n\n  \n    \n      \n    \n    \n      \n        \n          \n            Crear un cuenta\n          \n        \n      \n      \n        \n          \n            ¿Tienes una cuenta?\n            Inicia sesión\n          \n        \n      \n      \n        \n        \n      \n      \n        \n        \n      \n      \n        \n        \n      \n      \n        \n        \n      \n      \n        \n        \n        \n        \n      \n      \n        \n        \n        \n        \n      \n      \n        ¿Eres administrador?\n        \n          \n            Sí\n          \n          \n            No\n          \n        \n      \n\n      \n        \n        \n        \n      \n\n      \n        \n          *Debe introducir la clave de administrador\n        \n      \n\n      \n        *Debe introducir su nombre\n        \n          *El nombre debe tener al menos dos caracteres\n        \n      \n      \n        \n          *Debe introducir su/s apellido/s\n        \n        \n          *Su/s apellido/s debe/n tener al menos dos caracteres\n        \n      \n      \n        *Debe introducir su usuario\n        \n          *El usuario debe tener al menos dos caracteres\n        \n      \n      \n        *Debe introducir un email\n        \n          *Debe introducir un email correcto\n        \n      \n      \n        \n          *Debe introducir una contraseña\n        \n        \n          *Al menos 8 caracteres, una mayúscula, una minúscula, un dígito y un\n          caracter especial (&#64;$!%*?&.)\n        \n      \n      \n        *Las contraseñas no coinciden\n      \n      \n        Crear cuenta\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                .logo-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 24px;\n\n  .app-logo {\n    width: 120px;\n    height: 120px;\n    object-fit: contain;\n  }\n}\n\n.login-container,\n.register-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  min-height: 100vh;\n  padding: 24px;\n  background-image: url(\"/assets/background-pattern.svg\");\n  background-size: cover;\n  background-position: center;\n  background-attachment: fixed;\n\n  form {\n    width: 100%;\n    max-width: 400px;\n    height: auto;\n    padding: 24px;\n    border-radius: 16px;\n    background: linear-gradient(145deg, #ffffff, #fff5f2);\n    border: 1px solid rgba(255, 87, 34, 0.1);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n\n    h1 {\n      margin-bottom: 0px;\n      font-size: 28px;\n      font-weight: 600;\n      color: #ff5722;\n    }\n  }\n\n  ion-item {\n    --padding-start: 12px;\n    --padding-end: 12px;\n    --border-radius: 8px;\n    --background: var(--ion-item-background);\n    margin-bottom: 16px;\n    --highlight-height: 2px;\n\n    &:last-of-type {\n      margin-bottom: 24px;\n    }\n\n    ion-icon {\n      color: var(--ion-color-medium);\n      margin-right: 8px;\n      font-size: 20px;\n    }\n\n    ion-input {\n      --padding-start: 8px;\n      font-size: 16px;\n    }\n  }\n\n  ion-button {\n    --background: linear-gradient(45deg, #ff5722, #ff9800);\n    --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n    --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n    --color: #ffffff;\n  }\n\n  ion-text.input-error {\n    margin: -12px 0 16px 16px;\n    display: block;\n\n    p {\n      margin: 4px 0;\n      font-size: 12px;\n      color: red;\n    }\n  }\n\n  ion-grid ion-col {\n    font-size: 14px;\n    color: var(--ion-color-medium);\n  }\n\n  @media (max-width: 576px) {\n    padding: 16px;\n\n    form {\n      padding: 16px;\n\n      h1 {\n        font-size: 24px;\n      }\n    }\n  }\n}\n\n#admin-toggle-row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin: 16px 0;\n\n  ion-label {\n    font-size: 16px;\n    margin-right: 12px;\n  }\n\n  ion-checkbox {\n    margin: 0 12px;\n    transform: scale(1.1);\n  }\n\n  .checkbox-group {\n    display: flex;\n    align-items: center;\n    gap: 24px;\n  }\n}\n\n#admin-key-field {\n  margin-bottom: 16px;\n\n  ion-input {\n    font-size: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Crear cuenta                                                          Crear un cuenta                                                            ¿Tienes una cuenta?            Inicia sesión                                                                                                                                                                                                                                              ¿Eres administrador?                              Sí                                No                                                                                    *Debe introducir la clave de administrador                            *Debe introducir su nombre                  *El nombre debe tener al menos dos caracteres                                      *Debe introducir su/s apellido/s                          *Su/s apellido/s debe/n tener al menos dos caracteres                            *Debe introducir su usuario                  *El usuario debe tener al menos dos caracteres                            *Debe introducir un email                  *Debe introducir un email correcto                                      *Debe introducir una contraseña                          *Al menos 8 caracteres, una mayúscula, una minúscula, un dígito y un          caracter especial (@$!%*?&.)                            *Las contraseñas no coinciden                    Crear cuenta            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    TranslateModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageRoutingModule.html":{"url":"modules/RegisterPageRoutingModule.html","title":"module - RegisterPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchParams.html":{"url":"interfaces/SearchParams.html","title":"interface - SearchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nexport interface SearchParams {\n  [key: string]: string; // O el tipo que necesites para los valores\n}\nexport interface IBaseRepository {\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable; // Retorna el ID generado\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Season.html":{"url":"interfaces/Season.html","title":"interface - Season","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Season\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/season.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            serieId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Season extends Model{\n    name:string,\n    numSeason:string,\n    numEpisodes:number,\n    releaseDate:Date,\n    rating:number,\n    serieId?:string,\n    userId?:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonAttributes.html":{"url":"interfaces/SeasonAttributes.html","title":"interface - SeasonAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     UserRaw | number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRaw | number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonData.html":{"url":"interfaces/SeasonData.html","title":"interface - SeasonData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         SeasonAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SeasonAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonModalComponent.html":{"url":"components/SeasonModalComponent.html","title":"component - SeasonModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeasonModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/season-modal/season-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-season-modal\n            \n\n\n\n            \n                styleUrls\n                ./season-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./season-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _series\n                            \n                            \n                                formGroup\n                            \n                            \n                                isMobile\n                            \n                            \n                                mode\n                            \n                            \n                                    Public\n                                series$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                series\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    series\n                                \n                                \n                                    season\n                                \n                                \n                                    name\n                                \n                                \n                                    numSeason\n                                \n                                \n                                    numEpisodes\n                                \n                                \n                                    releaseDate\n                                \n                                \n                                    rating\n                                \n                                \n                                    serieId\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        season\n                    \n                \n                \n                    \n                        Type :         Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        series\n                    \n                \n                \n                    \n                        Type :         Serie[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-modal/season-modal.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-modal/season-modal.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-modal/season-modal.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-modal/season-modal.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _series\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        series$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._series.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-modal/season-modal.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        series\n                    \n                \n\n\n                \n                    \n                        setseries(series: Serie[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            series\n                                                    \n                                                            \n                                                                            Serie[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        season\n                    \n                \n\n\n                \n                    \n                        setseason(_season: Season)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _season\n                                                    \n                                                            \n                                                                            Season\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        numSeason\n                    \n                \n\n                \n                    \n                        getnumSeason()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:59\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        numEpisodes\n                    \n                \n\n                \n                    \n                        getnumEpisodes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        releaseDate\n                    \n                \n\n                \n                    \n                        getreleaseDate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rating\n                    \n                \n\n                \n                    \n                        getrating()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serieId\n                    \n                \n\n                \n                    \n                        getserieId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/season-modal/season-modal.component.ts:75\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Season } from 'src/app/core/models/season.model';\n\n@Component({\n  selector: 'app-season-modal',\n  templateUrl: './season-modal.component.html',\n  styleUrls: ['./season-modal.component.scss'],\n})\nexport class SeasonModalComponent  implements OnInit {\n  formGroup:FormGroup;\n  mode:'new'|'edit' = 'new';\n  isMobile: boolean = false;\n  private _series:BehaviorSubject = new BehaviorSubject([]);\n  public series$:Observable = this._series.asObservable();\n\n  @Input() set series(series:Serie[]){\n    this._series.next(series);\n  }\n\n  @Input() set season(_season:Season){\n    if(_season && _season.id)\n      this.mode = 'edit';\n    \n    this.formGroup.controls['name'].setValue(_season.name);\n    this.formGroup.controls['numSeason'].setValue(_season.numSeason);\n    this.formGroup.controls['numEpisodes'].setValue(_season.numEpisodes);\n    this.formGroup.controls['releaseDate'].setValue(_season.releaseDate);\n    this.formGroup.controls['rating'].setValue(_season.rating);\n    this.formGroup.controls['serieId'].setValue(_season.serieId);\n  }\n\n  constructor(\n    private fb:FormBuilder,\n    private modalCtrl:ModalController,\n    private platform: Platform,\n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.formGroup = this.fb.group({\n      name:['', [Validators.required, Validators.minLength(2)]],\n      numSeason:['', [Validators.required]],\n      numEpisodes:['', [Validators.required]],\n      releaseDate:['', [Validators.required]],\n      rating:['', [Validators.required]],\n      serieId:['', [Validators.required]]\n    });\n  }\n  \n\n  ngOnInit() {} \n\n  get name(){\n    return this.formGroup.controls['name'];\n  }\n\n  get numSeason(){\n    return this.formGroup.controls['numSeason'];\n  }\n\n  get numEpisodes(){\n    return this.formGroup.controls['numEpisodes'];\n  }\n\n  get releaseDate(){\n    return this.formGroup.controls['releaseDate'];\n  }\n\n  get rating(){\n    return this.formGroup.controls['rating'];\n  }\n\n  get serieId(){\n    return this.formGroup.controls['serieId'];\n  }\n  \n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n  \n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        dirtyValues[key] = control.value;\n      }\n    });\n  \n    return dirtyValues;\n  }\n\n  onSubmit(){\n    if (this.formGroup.valid) {\n      this.modalCtrl.dismiss(\n          (this.mode=='new'?\n            this.formGroup.value:\n            this.getDirtyValues(this.formGroup)), this.mode\n      );\n    } else {\n      console.log('Formulario inválido');\n    }\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      @if (mode=='edit') {\n        {{ 'SEASON.EDIT' | translate }}\n      }\n      @else {\n        {{ 'SEASON.NEW' | translate }}\n      }\n    \n    @if (isMobile) {\n      \n        \n          \n        \n      \n    }\n  \n\n\n\n  \n    \n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.NAME_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.NAME_MIN_LENGTH' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.NUMSEASON_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.NUMSEASON_MIN_LENGTH' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.NUMEPISODES_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.NUMEPISODES_INVALID' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.RELEASEDATE_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.RELEASEDATE_INVALID' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SEASON.ERRORS.RATING_REQUIRED' | translate }}\n          {{ 'SEASON.ERRORS.RATING_INVALID' | translate }}\n        \n      \n\n      \n      \n        \n          \n          {{ 'SEASON.SERIE' | translate }}\n          \n        \n      \n      \n      \n      \n        \n          {{ 'SEASON.SUBMIT' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./season-modal.component.scss\n                \n                ion-toolbar {\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  --color: white;\n\n  .header-icon {\n    margin-left: 16px;\n    font-size: 24px;\n  }\n\n  .close-button {\n    --color: white;\n  }\n}\n\n.season-form-container {\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100%;\n  padding: 24px;\n\n  form {\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 16px;\n    padding: 24px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n\n    .form-group {\n      margin-bottom: 16px;\n\n      .form-item {\n        --background: transparent;\n        --border-color: rgba(255, 87, 34, 0.2);\n        --border-radius: 8px;\n        --highlight-height: 2px;\n        \n        ion-icon {\n          color: #ff5722;\n          margin-right: 8px;\n          font-size: 20px;\n        }\n\n        ion-input, ion-label {\n          --color: #333;\n          font-size: 16px;\n        }\n\n        &:hover {\n          --background: rgba(255, 87, 34, 0.05);\n        }\n      }\n\n      .error-message {\n        margin: 4px 0 0 16px;\n        \n        p {\n          color: var(--ion-color-danger);\n          font-size: 12px;\n          margin: 4px 0;\n        }\n      }\n    }\n\n    .submit-button-container {\n      margin-top: 24px;\n\n      .submit-button {\n        --background: linear-gradient(45deg, #ff5722, #ff9800);\n        --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n        --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n        --border-radius: 8px;\n        --box-shadow: 0 4px 12px rgba(255, 87, 34, 0.2);\n        height: 48px;\n        \n      }\n    }\n  }\n}\n\n@media (max-width: 576px) {\n  .season-form-container {\n    padding: 16px;\n\n    form {\n      padding: 16px;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @if (mode==\\'edit\\') {        {{ \\'SEASON.EDIT\\' | translate }}      }      @else {        {{ \\'SEASON.NEW\\' | translate }}      }        @if (isMobile) {                                          }                                                                                    {{ \\'SEASON.ERRORS.NAME_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.NAME_MIN_LENGTH\\' | translate }}                                                                                          {{ \\'SEASON.ERRORS.NUMSEASON_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.NUMSEASON_MIN_LENGTH\\' | translate }}                                                                                          {{ \\'SEASON.ERRORS.NUMEPISODES_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.NUMEPISODES_INVALID\\' | translate }}                                                                                          {{ \\'SEASON.ERRORS.RELEASEDATE_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.RELEASEDATE_INVALID\\' | translate }}                                                                                          {{ \\'SEASON.ERRORS.RATING_REQUIRED\\' | translate }}          {{ \\'SEASON.ERRORS.RATING_INVALID\\' | translate }}                                                      {{ \\'SEASON.SERIE\\' | translate }}                                                            {{ \\'SEASON.SUBMIT\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SeasonModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonRaw.html":{"url":"interfaces/SeasonRaw.html","title":"interface - SeasonRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-seasons.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SeasonRaw {\n    id: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeasonsService{\n\n    private apiUrl:string = \"http://localhost:3000/seasons\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SeasonRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    numSeason:d.numSeason, \n                    numEpisodes:d.numEpisodes, \n                    releaseDate:d.releaseDate, \n                    rating:d.rating,\n                    serieId:d.serieId\n                    };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonRaw-1.html":{"url":"interfaces/SeasonRaw-1.html","title":"interface - SeasonRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-json-server.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\n\n\nexport interface SeasonRaw {\n    id?: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating:number\n    serieId: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingJsonServer implements IBaseMapping {\n\n    setAdd(data: Season):SeasonRaw {\n        return {\n            name:data.name,\n            numSeason:data.numSeason,\n            numEpisodes:data.numEpisodes,\n            releaseDate:data.releaseDate,\n            rating:data.rating,\n            serieId:data.serieId??''\n        };\n    }\n    setUpdate(data: Season):SeasonRaw {\n        let toReturn:any = {};  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn['name']=data[key];\n                break;\n                case 'numSeason': toReturn['numSeason']=data[key];\n                break;\n                case 'numEpisodes': toReturn['numEpisodes']=data[key];\n                break;\n                case 'releaseDate': toReturn['releaseDate']=data[key];\n                break;\n                case 'rating': toReturn['rating']=data[key];\n                break;\n                case 'serieId': toReturn['serieId']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:SeasonRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SeasonRaw):Season {\n        return {\n            id:data.id!, \n            name:data.name, \n            numSeason:data.numSeason, \n            numEpisodes:data.numEpisodes, \n            releaseDate:data.releaseDate, \n            rating:data.rating,\n            serieId: data.serieId,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonRaw-2.html":{"url":"interfaces/SeasonRaw-2.html","title":"interface - SeasonRaw-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numEpisodes\n                                        \n                                \n                                \n                                        \n                                            numSeason\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            serieId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numEpisodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numEpisodes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numSeason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSeason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\ninterface SeasonRaw{\n    id:string,\n    name:string,\n    numSeason:string,\n    numEpisodes:number,\n    releaseDate:Date,\n    rating:number,\n    serieId: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Season) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: SeasonRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SeasonRaw):Season {\n        return {\n            id:data.id, \n            name:data.name, \n            numSeason:data.numSeason, \n            numEpisodes:data.numEpisodes,\n            releaseDate:data.releaseDate,\n            rating:data.rating,\n            serieId: data.serieId,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeasonRaw-3.html":{"url":"interfaces/SeasonRaw-3.html","title":"interface - SeasonRaw-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeasonRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonViewComponent.html":{"url":"components/SeasonViewComponent.html","title":"component - SeasonViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeasonViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/season-view/season-view.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-season-view\n            \n\n\n\n            \n                styleUrls\n                ./season-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./season-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/season-view/season-view.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        season\n                    \n                \n                \n                    \n                        Type :         Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/season-view/season-view.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/season-view/season-view.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/season-view/season-view.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { Season } from 'src/app/core/models/season.model';\n\n@Component({\n  selector: 'app-season-view',\n  templateUrl: './season-view.component.html',\n  styleUrls: ['./season-view.component.scss'],\n})\nexport class SeasonViewComponent {\n  @Input() season!: Season;\n  isMobile: boolean = false;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private platform: Platform,\n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n    \n\n    \n        \n  \n    \n      \n      {{ 'SEASON.VIEW' | translate }}\n    \n    @if (isMobile) {\n      \n        \n          \n        \n      \n    }\n  \n\n\n\n  \n    \n      \n        {{ season.name }}\n        \n          \n          {{ season.rating }}\n        \n      \n\n      \n        \n          \n          \n            {{ 'SEASON.NAME' | translate }}\n            {{ season.name }}\n          \n        \n\n        \n          \n          \n            {{ 'SEASON.NUMSEASON' | translate }}\n            {{ season.numSeason }}\n          \n        \n\n        \n          \n          \n            {{ 'SEASON.NUMEPISODES' | translate }}\n            {{ season.numEpisodes }}\n          \n        \n\n        \n          \n          \n            {{ 'SEASON.RELEASEDATE' | translate }}\n            {{ season.releaseDate }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./season-view.component.scss\n                \n                // Estilos del toolbar\nion-toolbar {\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  --color: white;\n\n  ion-title {\n    display: flex;\n    align-items: center;\n    \n    .header-icon {\n      margin-right: 8px;\n      font-size: 24px;\n    }\n  }\n\n  .close-button {\n    --color: white;\n  }\n}\n\n.season-details-container {\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100%;\n  padding: 24px;\n\n  .details-card {\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 16px;\n    padding: 24px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n\n    .season-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 24px;\n      padding-bottom: 16px;\n      border-bottom: 2px solid rgba(255, 87, 34, 0.1);\n\n      h1 {\n        color: #333;\n        font-size: 24px;\n        font-weight: 600;\n        margin: 0;\n      }\n\n      .rating-badge {\n        display: flex;\n        align-items: center;\n        background: linear-gradient(45deg, #ff5722, #ff9800);\n        color: white;\n        padding: 8px 16px;\n        border-radius: 20px;\n\n        ion-icon {\n          margin-right: 4px;\n          color: #fff;\n        }\n      }\n    }\n\n    .details-list {\n      .detail-item {\n        display: flex;\n        align-items: flex-start;\n        padding: 16px;\n        margin-bottom: 12px;\n        border-radius: 12px;\n\n        &:hover {\n          background: rgba(255, 87, 34, 0.05);\n          transform: translateX(8px);\n        }\n\n        ion-icon {\n          color: #ff5722;\n          font-size: 24px;\n          margin-right: 16px;\n          margin-top: 4px;\n        }\n\n        .detail-content {\n          flex: 1;\n\n          h2 {\n            color: #666;\n            font-size: 14px;\n            margin: 0 0 4px 0;\n          }\n\n          p {\n            color: #333;\n            font-size: 16px;\n            margin: 0;\n          }\n        }\n      }\n    }\n  }\n}\n\n@media (max-width: 576px) {\n  .season-details-container {\n    padding: 16px;\n\n    .details-card {\n      padding: 16px;\n\n      .season-header {\n        flex-direction: column;\n        align-items: flex-start;\n        \n        h1 {\n          margin-bottom: 12px;\n        }\n      }\n\n      .detail-item {\n        padding: 12px;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'SEASON.VIEW\\' | translate }}        @if (isMobile) {                                          }                      {{ season.name }}                            {{ season.rating }}                                                            {{ \\'SEASON.NAME\\' | translate }}            {{ season.name }}                                                          {{ \\'SEASON.NUMSEASON\\' | translate }}            {{ season.numSeason }}                                                          {{ \\'SEASON.NUMEPISODES\\' | translate }}            {{ season.numEpisodes }}                                                          {{ \\'SEASON.RELEASEDATE\\' | translate }}            {{ season.releaseDate }}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SeasonViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsLocalStorageMapping.html":{"url":"injectables/SeasonsLocalStorageMapping.html","title":"injectable - SeasonsLocalStorageMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsLocalStorageMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: SeasonRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        SeasonRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\ninterface SeasonRaw{\n    id:string,\n    name:string,\n    numSeason:string,\n    numEpisodes:number,\n    releaseDate:Date,\n    rating:number,\n    serieId: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Season) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: SeasonRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SeasonRaw):Season {\n        return {\n            id:data.id, \n            name:data.name, \n            numSeason:data.numSeason, \n            numEpisodes:data.numEpisodes,\n            releaseDate:data.releaseDate,\n            rating:data.rating,\n            serieId: data.serieId,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsMappingFirebaseService.html":{"url":"injectables/SeasonsMappingFirebaseService.html","title":"injectable - SeasonsMappingFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsMappingFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseSeason\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseSeason\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/seasons-mapping-firebase.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { doc, DocumentReference, Firestore, getFirestore } from \"firebase/firestore\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\nimport { FirebaseSeason } from '../../models/firebase/firebase-season.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonsMappingFirebaseService implements IBaseMapping {\n    \n  private db: Firestore;\n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n        this.db = getFirestore(initializeApp(firebaseConfig));\n  }\n  setAdd(data: Season): FirebaseSeason {\n    let dataMapping:FirebaseSeason = {\n      name: data.name,\n      numSeason: data.numSeason,\n      numEpisodes: data.numEpisodes,\n      releaseDate: data.releaseDate,\n      rating: data.rating,\n      user: data.userId || '',\n      serieId: data.serieId ? doc(this.db, 'series', data.serieId) : undefined\n    };\n    return dataMapping;\n  }\n  setUpdate(data: Partial): FirebaseSeason {\n    const result: any = {};\n    \n    if (data.name) result.name = data.name;\n    if (data.numSeason) result.numSeason = data.numSeason;\n    if (data.numEpisodes) result.numEpisodes = data.numEpisodes;\n    if (data.releaseDate) result.releaseDate = data.releaseDate;\n    if (data.rating) result.rating = data.rating;\n    if (data.serieId) result.serieId = doc(this.db, 'series', data.serieId || '');\n    if (data.userId) result.user = data.userId || '';\n    return result;\n  }\n  getOne(data: { id: string } & FirebaseSeason): Season {\n    return {\n      id: data.id,\n      name: data.name,\n      numSeason: data.numSeason,\n      numEpisodes: data.numEpisodes,\n      releaseDate: data.releaseDate,\n      rating: data.rating,\n      serieId: data.serieId?.id,\n      userId: data.user || '',\n    };\n  }\n  getPaginated(page: number, pageSize: number, total: number, data: ({id:string} & FirebaseSeason)[]): Paginated {\n    return {\n      page,\n      pageSize,\n      pages: Math.ceil(total / pageSize),\n      data: data.map(item => this.getOne(item))\n    };\n  }\n  getAdded(data: {id:string} & FirebaseSeason): Season {\n    return this.getOne(data);\n  }\n  getUpdated(data: {id:string} & FirebaseSeason): Season {\n    return this.getOne(data);\n  }\n  getDeleted(data: {id:string} & FirebaseSeason): Season {\n    return this.getOne(data);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsMappingJsonServer.html":{"url":"injectables/SeasonsMappingJsonServer.html","title":"injectable - SeasonsMappingJsonServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsMappingJsonServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-json-server.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: SeasonRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        SeasonRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SeasonRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-json-server.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SeasonRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\n\n\nexport interface SeasonRaw {\n    id?: string\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating:number\n    serieId: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingJsonServer implements IBaseMapping {\n\n    setAdd(data: Season):SeasonRaw {\n        return {\n            name:data.name,\n            numSeason:data.numSeason,\n            numEpisodes:data.numEpisodes,\n            releaseDate:data.releaseDate,\n            rating:data.rating,\n            serieId:data.serieId??''\n        };\n    }\n    setUpdate(data: Season):SeasonRaw {\n        let toReturn:any = {};  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn['name']=data[key];\n                break;\n                case 'numSeason': toReturn['numSeason']=data[key];\n                break;\n                case 'numEpisodes': toReturn['numEpisodes']=data[key];\n                break;\n                case 'releaseDate': toReturn['releaseDate']=data[key];\n                break;\n                case 'rating': toReturn['rating']=data[key];\n                break;\n                case 'serieId': toReturn['serieId']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:SeasonRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SeasonRaw):Season {\n        return {\n            id:data.id!, \n            name:data.name, \n            numSeason:data.numSeason, \n            numEpisodes:data.numEpisodes, \n            releaseDate:data.releaseDate, \n            rating:data.rating,\n            serieId: data.serieId,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsMappingStrapi.html":{"url":"injectables/SeasonsMappingStrapi.html","title":"injectable - SeasonsMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: Data | SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Data | SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: Data[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Data[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SeasonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SeasonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Season\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Season)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Season\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SeasonData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/seasons-mapping-strapi.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SeasonData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeasonsPageModule.html":{"url":"modules/SeasonsPageModule.html","title":"module - SeasonsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SeasonsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeasonsPageModule\n\n\n\ncluster_SeasonsPageModule_imports\n\n\n\ncluster_SeasonsPageModule_declarations\n\n\n\n\nSeasonsPage\n\nSeasonsPage\n\n\n\nSeasonsPageModule\n\nSeasonsPageModule\n\nSeasonsPageModule -->\n\nSeasonsPage->SeasonsPageModule\n\n\n\n\n\nSeasonsPageRoutingModule\n\nSeasonsPageRoutingModule\n\nSeasonsPageModule -->\n\nSeasonsPageRoutingModule->SeasonsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/seasons/seasons.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SeasonsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SeasonsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { SeasonsPage } from './seasons.page';\nimport { SeasonsPageRoutingModule } from './seasons-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SeasonsPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [SeasonsPage]\n})\nexport class SeasonsPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeasonsPageRoutingModule.html":{"url":"modules/SeasonsPageRoutingModule.html","title":"module - SeasonsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SeasonsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/seasons/seasons-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SeasonsPage } from './seasons.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SeasonsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SeasonsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonsService.html":{"url":"injectables/SeasonsService.html","title":"injectable - SeasonsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeasonsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/seasons.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getByUserId\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ISeasonsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/seasons.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ISeasonsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByUserId\n                        \n                    \n                \n            \n            \n                \ngetByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/seasons.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { ISeasonsService } from '../../services/interfaces/seasons-service.interface';\nimport { Season } from '../../models/season.model';\nimport { SEASONS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ISeasonsRepository } from '../../repositories/intefaces/seasons-repository.interface';\nimport { map, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonsService extends BaseService implements ISeasonsService {\n  constructor(\n    @Inject(SEASONS_REPOSITORY_TOKEN) repository: ISeasonsRepository\n  ) {\n    super(repository);\n  }\n  \n  getByUserId(userId: string): Observable {\n    return this.repository.getAll(1, 1, {user: userId}).pipe(\n      map(res => Array.isArray(res) ? res[0] || null : res.data[0] || null)\n    );\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Serie.html":{"url":"interfaces/Serie.html","title":"interface - Serie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Serie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/serie.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            seasons\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seasons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seasons:         Season[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Season[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\nimport { Season } from \"./season.model\";\n\nexport interface Serie extends Model{\n    name:string,\n    synopsis:string,\n    releaseYear:number,\n    rating:number,\n    picture?:{\n        url:string | undefined,\n        large:string | undefined,\n        medium:string | undefined,\n        small:string | undefined,\n        thumbnail:string | undefined\n    },\n    seasons?: Season[]\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieAttributes.html":{"url":"interfaces/SerieAttributes.html","title":"interface - SerieAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieAttributes-1.html":{"url":"interfaces/SerieAttributes-1.html","title":"interface - SerieAttributes-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieData.html":{"url":"interfaces/SerieData.html","title":"interface - SerieData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         SerieAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SerieAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SerieModalComponent.html":{"url":"components/SerieModalComponent.html","title":"component - SerieModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SerieModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/serie-modal/serie-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-serie-modal\n            \n\n\n\n            \n                styleUrls\n                ./serie-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./serie-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                isGeneratingSynopsis\n                            \n                            \n                                isMobile\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                    Async\n                                generateSynopsis\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                showErrorToast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                serie\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    serie\n                                \n                                \n                                    name\n                                \n                                \n                                    synopsis\n                                \n                                \n                                    releaseYear\n                                \n                                \n                                    rating\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, platform: Platform, cohereService: CohereService, loadingCtrl: LoadingController, toastCtrl: ToastController, languageService: LanguageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cohereService\n                                                  \n                                                        \n                                                                        CohereService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        serie\n                    \n                \n                \n                    \n                        Type :         Serie\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateSynopsis\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateSynopsis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showErrorToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showErrorToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGeneratingSynopsis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        serie\n                    \n                \n\n\n                \n                    \n                        setserie(_serie: Serie)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _serie\n                                                    \n                                                            \n                                                                            Serie\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:106\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        synopsis\n                    \n                \n\n                \n                    \n                        getsynopsis()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        releaseYear\n                    \n                \n\n                \n                    \n                        getreleaseYear()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:114\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rating\n                    \n                \n\n                \n                    \n                        getrating()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/serie-modal/serie-modal.component.ts:118\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, Platform, LoadingController, ToastController } from '@ionic/angular';\nimport { CohereService } from 'src/app/core/services/impl/ai.service';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { LanguageService } from 'src/app/core/services/language.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-serie-modal',\n  templateUrl: './serie-modal.component.html',\n  styleUrls: ['./serie-modal.component.scss'],\n})\nexport class SerieModalComponent  implements OnInit {\n  formGroup:FormGroup;\n  mode:'new'|'edit' = 'new';\n  isMobile: boolean = false;\n  isGeneratingSynopsis: boolean = false;\n\n  @Input() set serie(_serie:Serie){\n    if(_serie && _serie.id)\n      this.mode = 'edit';\n    \n    this.formGroup.controls['name'].setValue(_serie.name);\n    this.formGroup.controls['synopsis'].setValue(_serie.synopsis);\n    this.formGroup.controls['releaseYear'].setValue(_serie.releaseYear);\n    this.formGroup.controls['rating'].setValue(_serie.rating);\n    if (_serie.picture) {\n      this.formGroup.controls['picture'].setValue(_serie.picture.url);\n    }\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private modalCtrl: ModalController,\n    private platform: Platform,\n    private cohereService: CohereService,\n    private loadingCtrl: LoadingController,\n    private toastCtrl: ToastController,\n    private languageService: LanguageService,\n    private translateService: TranslateService\n    \n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.formGroup = this.fb.group({\n      name:['', [Validators.required, Validators.minLength(2)]],\n      synopsis:['', [Validators.required]],\n      releaseYear:['', [Validators.required]],\n      rating:['', [Validators.required]],\n      picture: ['']\n      \n    });\n  }\n  \n  async generateSynopsis() {\n    const title = this.formGroup.get('name')?.value;\n    const languague = this.languageService.getStoredLanguage();\n    \n    if (!title) {\n      const toast = await this.toastCtrl.create({\n        message: await lastValueFrom(this.translateService.get('IA.NAME_REQUIRED')),\n        duration: 2000,\n        color: 'warning'\n      });\n      await toast.present();\n      return;\n    }\n\n    const loading = await this.loadingCtrl.create({\n      message: await lastValueFrom(this.translateService.get('IA.GENERATING')),\n      spinner: 'circles'\n    });\n    await loading.present();\n\n    this.isGeneratingSynopsis = true;\n    \n    this.cohereService.generateSynopsis(title, languague).subscribe({\n      next: (synopsis) => {\n        this.formGroup.get('synopsis')?.setValue(synopsis);\n        this.formGroup.get('synopsis')?.markAsDirty();\n        loading.dismiss();\n        this.isGeneratingSynopsis = false;\n      },\n      error: async (error) => {\n        console.error('Error al generar sinopsis:', error);\n        const errorMessage = await lastValueFrom(this.translateService.get('IA.ERROR'));\n        this.showErrorToast(errorMessage);\n        loading.dismiss();\n        this.isGeneratingSynopsis = false;\n      }\n    });\n  }\n\n  async showErrorToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: 3000,\n      color: 'danger'\n    });\n    await toast.present();\n  }\n\n  ngOnInit() {} \n\n  get name(){\n    return this.formGroup.controls['name'];\n  }\n\n  get synopsis(){\n    return this.formGroup.controls['synopsis'];\n  }\n\n  get releaseYear(){\n    return this.formGroup.controls['releaseYear'];\n  }\n\n  get rating(){\n    return this.formGroup.controls['rating'];\n  }\n  \n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n  \n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        if (key === 'picture' && control.value) {\n          dirtyValues[key] = {\n            url: control.value\n          };\n        } else {\n          dirtyValues[key] = control.value;\n        }\n      }\n    });\n  \n    return dirtyValues;\n  }\n\n  onSubmit(){\n    if (this.formGroup.valid) {\n      const formData = this.mode === 'new' ? \n        {\n          ...this.formGroup.value,\n          picture: this.formGroup.get('picture')?.value ? {\n            url: this.formGroup.get('picture')?.value\n          } : undefined\n        } : \n        this.getDirtyValues(this.formGroup);\n  \n      this.modalCtrl.dismiss(formData, this.mode);\n    }\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      @if (mode=='edit') {\n        {{ 'SERIE.EDIT' | translate }}\n      }\n      @else {\n        {{ 'SERIE.NEW' | translate }}\n      }\n    \n    @if (isMobile) {\n      \n        \n          \n        \n      \n    }\n  \n\n\n\n  \n    \n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SERIE.ERRORS.NAME_REQUIRED' | translate }}\n          {{ 'SERIE.ERRORS.NAME_MIN_LENGTH' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n          \n            \n          \n        \n        \n          {{ 'SERIE.ERRORS.SYNOPSIS_REQUIRED' | translate }}\n          {{ 'SERIE.ERRORS.SYNOPSIS_MIN_LENGTH' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SERIE.ERRORS.RELEASEYEAR_REQUIRED' | translate }}\n          {{ 'SERIE.ERRORS.RELEASEYEAR_INVALID' | translate }}\n        \n      \n\n      \n      \n        \n          \n          \n          \n        \n        \n          {{ 'SERIE.ERRORS.RATING_REQUIRED' | translate }}\n          {{ 'SERIE.ERRORS.RATING_INVALID' | translate }}\n        \n      \n\n      \n        \n          \n          {{ '' | translate }}\n          \n        \n      \n      \n      \n      \n        \n          {{ 'SERIE.SUBMIT' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./serie-modal.component.scss\n                \n                // Estilos del toolbar\nion-toolbar {\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  --color: white;\n\n  .header-icon {\n    margin-left: 16px;\n    font-size: 24px;\n  }\n\n  .close-button {\n    --color: white;\n  }\n}\n\n.serie-form-container {\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100%;\n  padding: 24px;\n\n  form {\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 16px;\n    padding: 24px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n\n    .form-group {\n      margin-bottom: 16px;\n\n      .form-item {\n        --background: transparent;\n        --border-color: rgba(255, 87, 34, 0.2);\n        --border-radius: 8px;\n        --highlight-height: 2px;\n        \n        ion-icon {\n          color: #ff5722;\n          margin-right: 8px;\n          font-size: 20px;\n        }\n\n        ion-input, ion-textarea {\n          --color: #333;\n          font-size: 16px;\n          \n          &.ion-valid {\n            --highlight-color: #ff5722;\n          }\n        }\n\n        &:hover {\n          --background: rgba(255, 87, 34, 0.05);\n        }\n\n      }\n\n      .error-message {\n        margin: 4px 0 0 16px;\n        \n        p {\n          color: var(--ion-color-danger);\n          font-size: 12px;\n          margin: 4px 0;\n        }\n      }\n    }\n\n    .submit-button-container {\n      margin-top: 24px;\n\n      .submit-button {\n        --background: linear-gradient(45deg, #ff5722, #ff9800);\n        --background-activated: linear-gradient(45deg, #f4511e, #fb8c00);\n        --background-hover: linear-gradient(45deg, #f4511e, #fb8c00);\n        --border-radius: 8px;\n        --box-shadow: 0 4px 12px rgba(255, 87, 34, 0.2);\n        height: 48px;\n      }\n    }\n  }\n}\n\n@media (max-width: 576px) {\n  .serie-form-container {\n    padding: 16px;\n\n    form {\n      padding: 16px;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @if (mode==\\'edit\\') {        {{ \\'SERIE.EDIT\\' | translate }}      }      @else {        {{ \\'SERIE.NEW\\' | translate }}      }        @if (isMobile) {                                          }                                                                                    {{ \\'SERIE.ERRORS.NAME_REQUIRED\\' | translate }}          {{ \\'SERIE.ERRORS.NAME_MIN_LENGTH\\' | translate }}                                                                                                                          {{ \\'SERIE.ERRORS.SYNOPSIS_REQUIRED\\' | translate }}          {{ \\'SERIE.ERRORS.SYNOPSIS_MIN_LENGTH\\' | translate }}                                                                                          {{ \\'SERIE.ERRORS.RELEASEYEAR_REQUIRED\\' | translate }}          {{ \\'SERIE.ERRORS.RELEASEYEAR_INVALID\\' | translate }}                                                                                          {{ \\'SERIE.ERRORS.RATING_REQUIRED\\' | translate }}          {{ \\'SERIE.ERRORS.RATING_INVALID\\' | translate }}                                                {{ \\'\\' | translate }}                                                            {{ \\'SERIE.SUBMIT\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SerieModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw.html":{"url":"interfaces/SerieRaw.html","title":"interface - SerieRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/my-series.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { Season } from \"../models/season.model\";\nimport { Paginated } from \"../models/paginated.model\";\nimport { Serie } from \"../models/serie.model\";\n\nexport interface PaginatedRaw {\n    first: number\n    prev: number|null\n    next: number|null\n    last: number\n    pages: number\n    items: number\n    data: T[]\n  };\n\n  export interface SerieRaw {\n    id: string\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn:'root'\n})\nexport class MySeriesService{\n\n    private apiUrl:string = \"http://localhost:3000/series\"\n    constructor(\n        private http:HttpClient\n    ){\n\n    }\n\n    getAll(page:number, pageSize:number): Observable> {\n        return this.http.get>(`${this.apiUrl}/?_page=${page}&_per_page=${pageSize}`).pipe(map(res=>{\n            return {page:page, pageSize:pageSize, pages:res.pages, data:res.data.map((d:SerieRaw)=>{\n                return {\n                    id:d.id, \n                    name:d.name, \n                    synopsis:d.synopsis, \n                    releaseYear:d.releaseYear, \n                    rating:d.rating, \n                };\n            })};\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-1.html":{"url":"interfaces/SerieRaw-1.html","title":"interface - SerieRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-2.html":{"url":"interfaces/SerieRaw-2.html","title":"interface - SerieRaw-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-json-server.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { Serie } from \"../../models/serie.model\";\n\nexport interface SerieRaw {\n    id: string\n    nombre: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingJsonServer implements IBaseMapping {\n    setAdd(data: Serie) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:SerieRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SerieRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SerieRaw):Serie {\n        return {\n            id:data.id, \n            name:data.nombre, \n            synopsis:data.synopsis, \n            releaseYear:data.releaseYear, \n            rating:data.rating\n        };\n    }\n    getAdded(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n    getUpdated(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n    getDeleted(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-3.html":{"url":"interfaces/SerieRaw-3.html","title":"interface - SerieRaw-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-local-storage.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            releaseYear\n                                        \n                                \n                                \n                                        \n                                            synopsis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\ninterface SerieRaw{\n    id:string,\n    name:string,\n    synopsis:string,\n    releaseYear:number,\n    rating:number,\n    picture:{\n        url:string,\n        large:string,\n        medium:string,\n        small:string,\n        thumbnail:string\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Serie) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: SerieRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SerieRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SerieRaw):Serie {\n        return {\n            id:data.id, \n            name:data.name, \n            synopsis:data.synopsis, \n            releaseYear:data.releaseYear, \n            rating:data.rating,\n            picture:{\n                url:data.picture.url,\n                large:data.picture.large, \n                medium:data.picture.medium,\n                small:data.picture.small,\n                thumbnail:data.picture.thumbnail\n            }\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-4.html":{"url":"interfaces/SerieRaw-4.html","title":"interface - SerieRaw-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SerieRaw-5.html":{"url":"interfaces/SerieRaw-5.html","title":"interface - SerieRaw-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SerieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SerieSelectableComponent.html":{"url":"components/SerieSelectableComponent.html","title":"component - SerieSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SerieSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/serie-selectable/serie-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SerieSelectableComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                app-serie-selectable\n            \n\n\n\n            \n                styleUrls\n                ./serie-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./serie-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _filteredSeries\n                            \n                            \n                                    Private\n                                _series\n                            \n                            \n                                disabled\n                            \n                            \n                                filteredSeries$\n                            \n                            \n                                page\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                    \n                                popover\n                            \n                            \n                                propagateChange\n                            \n                            \n                                searchTerm\n                            \n                            \n                                    Public\n                                series$\n                            \n                            \n                                serieSelected\n                            \n                            \n                                    Public\n                                seriesSvc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deselect\n                            \n                            \n                                handleImageError\n                            \n                            \n                                loadMoreSeries\n                            \n                            \n                                loadSeries\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLoadSeries\n                            \n                            \n                                onMoreSeries\n                            \n                            \n                                onSearch\n                            \n                            \n                                onSerieClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectSerie\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seriesSvc: SeriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seriesSvc\n                                                  \n                                                        \n                                                                        SeriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleImageError\n                        \n                    \n                \n            \n            \n                \nhandleImageError(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMoreSeries\n                        \n                    \n                \n            \n            \n                \nloadMoreSeries(notify: HTMLIonInfiniteScrollElement | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                notify\n                                            \n                                                        HTMLIonInfiniteScrollElement | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSeries\n                        \n                    \n                \n            \n            \n                \nloadSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoadSeries\n                        \n                    \n                \n            \n            \n                \nonLoadSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoreSeries\n                        \n                    \n                \n            \n            \n                \nonMoreSeries(ev: InfiniteScrollCustomEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                        InfiniteScrollCustomEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSerieClicked\n                        \n                    \n                \n            \n            \n                \nonSerieClicked(popover: IonPopover, serie: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                serie\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectSerie\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectSerie(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _filteredSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _series\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredSeries$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._filteredSeries.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        popover\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonPopover | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('popover', {read: IonPopover})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        series$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._series.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serieSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Serie | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        seriesSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SeriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-selectable/serie-selectable.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InfiniteScrollCustomEvent, IonInput, IonPopover } from '@ionic/angular';\nimport { BehaviorSubject, Observable, Subscription, last, lastValueFrom } from 'rxjs';\nimport { Serie } from 'src/app/core/models/serie.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { SeriesService } from 'src/app/core/services/impl/series.service';\n\n\n@Component({\n  selector: 'app-serie-selectable',\n  templateUrl: './serie-selectable.component.html',\n  styleUrls: ['./serie-selectable.component.scss'],\n  providers:[{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SerieSelectableComponent),\n    multi: true\n  }]\n})\nexport class SerieSelectableComponent  implements OnInit, ControlValueAccessor, OnDestroy {\n\n  serieSelected:Serie | null = null;\n  disabled:boolean = true;\n  private _series:BehaviorSubject = new BehaviorSubject([]);\n  public series$ = this._series.asObservable();\n  _filteredSeries: BehaviorSubject = new BehaviorSubject([]);\n  filteredSeries$: Observable = this._filteredSeries.asObservable();\n  searchTerm: string = '';\n\n  propagateChange = (obj: any) => {}\n\n  @ViewChild('popover', { read: IonPopover }) popover: IonPopover | undefined;\n\n  page:number = 1;\n  pageSize:number = 25;\n  pages:number = 0;\n  constructor(\n    public seriesSvc:SeriesService\n  ) { \n  }\n  ngOnDestroy(): void {\n    this.popover?.dismiss();\n  }\n  \n  onLoadSeries(){\n    this.loadSeries();\n  }\n\n  onSearch(event: any) {\n    const searchTerm = event.target.value.toLowerCase();\n    this.searchTerm = searchTerm;\n    \n    if (!searchTerm) {\n      this._filteredSeries.next(this._series.value);\n      return;\n    }\n\n    const filtered = this._series.value.filter(serie => \n      serie.name.toLowerCase().includes(searchTerm) \n    );\n\n    this._filteredSeries.next(filtered);\n  }\n\n  loadSeries() {\n    this.page = 1;\n    this.seriesSvc.getAll(this.page, this.pageSize).subscribe({\n      next:(response: Paginated)=>{\n\n        const sortedSeries = response.data.sort((a, b) => \n          (a.name || '').localeCompare(b.name || '')\n        );\n\n        this._series.next([...sortedSeries]);\n        this._filteredSeries.next([...sortedSeries]); \n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n\n  loadMoreSeries(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if (this.page ) => {\n          const updatedSeries = [...this._series.value, ...response.data].sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n          this._series.next(updatedSeries);\n          \n          if (this.searchTerm) {\n            const filtered = updatedSeries.filter(serie => \n              serie.name.toLowerCase().includes(this.searchTerm)\n            );\n            this._filteredSeries.next(filtered);\n          } else {\n            this._filteredSeries.next(updatedSeries);\n          }\n          this.page++;\n          notify?.complete();\n        }\n      });\n    } else {\n      notify?.complete();\n    }\n  }\n  \n  onMoreSeries(ev:InfiniteScrollCustomEvent){\n    this.loadMoreSeries(ev.target);\n  }\n\n  private async selectSerie(id:string|undefined, propagate:boolean=false){\n    if(id){\n      this.serieSelected  = await lastValueFrom(this.seriesSvc.getById(id));\n    }\n    else\n      this.serieSelected = null;\n    if(propagate && this.serieSelected)\n      this.propagateChange(this.serieSelected.id);\n  }\n  \n  writeValue(obj: any): void {\n    this.selectSerie(obj);\n      \n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    \n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit() {}\n\n  onSerieClicked(popover:IonPopover, serie:Serie){\n    this.selectSerie(serie.id, true);\n    popover.dismiss();\n  }\n\n  deselect(popover:IonPopover|null=null){\n    this.selectSerie(undefined, true);\n    if(popover)\n      popover.dismiss();\n  }\n\n  handleImageError(event: Event) {\n    const imgElement = event.target as HTMLImageElement;\n    imgElement.src = 'assets/icon/fav.png'; // Imagen por defecto\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ (disabled ? 'SERIE_SELECTABLE.NONE' : 'SERIE_SELECTABLE.SELECT_SERIE') | translate }}\n        \n      \n      \n      \n        \n          \n        \n        {{serieSelected.name}}\n      \n    \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n\n          \n            \n                    \n                      \n                    \n              {{serie.name}}\n            \n\n            \n              \n                {{ 'SERIES.NO_RESULTS' | translate }}\n              \n            \n\n            \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./serie-selectable.component.scss\n                \n                .custom-searchbar {\n  --background: rgba(255, 255, 255, 0.9);\n  --box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n  --border-radius: 16px;\n  --placeholder-color: rgba(255, 87, 34, 0.6);\n  --icon-color: #ff5722;\n  --color: #333;\n  \n  &.focused {\n    --background: white;\n  }\n}\n\n.no-results {\n  text-align: center;\n  color: white;\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  \n  --border-radius: 16px;\n  margin: 15px;\n}\n\n.serie-selector {\n  width: 100%;\n  border-radius: 8px;\n\n  .selector-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 16px;\n    cursor: pointer;\n\n    &:hover {\n      background: rgba(255, 87, 34, 0.05);\n    }\n\n    .serie-avatar {\n      width: 48px;\n      height: 48px;\n      border: 2px solid #ff5722;\n      overflow: hidden;\n      \n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n\n    .selector-content {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n\n      .placeholder-text {\n        color: gray;\n      }\n\n      .serie-avatar {\n        width: 32px;\n        height: 32px;\n        border: 2px solid #ff5722;\n      }\n\n      .selected-text {\n        color: #333;\n        font-weight: 500;\n      }\n    }\n\n    .chevron-icon {\n      color: #ff5722;\n      font-size: 20px;\n      transition: transform 0.2s ease;\n    }\n  }\n}\n\n.series-popover {\n  --width: 100%;\n  --max-width: 500px;\n  \n  .popover-container {\n    background: white;\n    border-radius: 16px;\n    overflow: hidden;\n\n    .search-header {\n      position: sticky;\n      top: 0;\n      z-index: 2;\n      background: linear-gradient(45deg, #ff5722, #ff9800);\n      padding: 12px;\n\n      .search-item {\n        --background: rgba(255, 255, 255, 0.9);\n        --border-radius: 8px;\n        --padding-start: 12px;\n        --padding-end: 12px;\n        margin: 0;\n\n        ion-icon {\n          color: #ff5722;\n        }\n\n        ion-input {\n          --placeholder-color: rgba(255, 87, 34, 0.6);\n          --color: #333;\n        }\n\n        .clear-button {\n          --color: #ff5722;\n          margin: 0;\n        }\n      }\n    }\n\n    .series-list {\n      max-height: 400px;\n      overflow-y: auto;\n      padding: 8px;\n\n      .serie-option {\n        --background: transparent;\n        --background-hover: rgba(255, 87, 34, 0.05);\n        --ripple-color: rgba(255, 87, 34, 0.1);\n        border-radius: 8px;\n        margin-bottom: 4px;\n\n        ion-avatar {\n          width: 40px;\n          height: 40px;\n          border: 2px solid #ff5722;\n        }\n\n        ion-text {\n          color: #333;\n        }\n\n        &.none-option {\n          border-bottom: 1px solid rgba(255, 87, 34, 0.1);\n          margin-bottom: 8px;\n          padding-bottom: 8px;\n        }\n      }\n    }\n  }\n}\n\nion-infinite-scroll {\n  ion-infinite-scroll-content {\n    --color: #ff5722;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ (disabled ? \\'SERIE_SELECTABLE.NONE\\' : \\'SERIE_SELECTABLE.SELECT_SERIE\\') | translate }}                                                            {{serieSelected.name}}                                                                                                                                                                      {{serie.name}}                                                      {{ \\'SERIES.NO_RESULTS\\' | translate }}                                                                                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SerieSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SerieViewComponent.html":{"url":"components/SerieViewComponent.html","title":"component - SerieViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SerieViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/serie-view/serie-view.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-serie-view\n            \n\n\n\n            \n                styleUrls\n                ./serie-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./serie-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                serie\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/serie-view/serie-view.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        serie\n                    \n                \n                \n                    \n                        Type :         Serie\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/serie-view/serie-view.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/serie-view/serie-view.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/serie-view/serie-view.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { Serie } from 'src/app/core/models/serie.model';\n\n@Component({\n  selector: 'app-serie-view',\n  templateUrl: './serie-view.component.html',\n  styleUrls: ['./serie-view.component.scss'],\n})\nexport class SerieViewComponent {\n  @Input() serie!: Serie;\n  isMobile: boolean = false;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private platform: Platform,\n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n    \n\n    \n        \n  \n    \n      \n      {{ 'SERIE.VIEW' | translate }}\n    \n    @if (isMobile) {\n      \n        \n          \n        \n      \n    }\n  \n\n\n\n  \n    \n      \n        \n      \n      \n        {{ serie.name }}\n        \n          \n          {{ serie.rating }}\n        \n      \n\n      \n        \n          \n          \n            {{ 'SERIE.NAME' | translate }}\n            {{ serie.name }}\n          \n        \n\n        \n          \n          \n            {{ 'SERIE.SYNOPSIS' | translate }}\n            {{ serie.synopsis }}\n          \n        \n\n        \n          \n          \n            {{ 'SERIE.RELEASEYEAR' | translate }}\n            {{ serie.releaseYear }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./serie-view.component.scss\n                \n                // Estilos del toolbar\nion-toolbar {\n  --background: linear-gradient(45deg, #ff5722, #ff9800);\n  --color: white;\n\n  ion-title {\n    display: flex;\n    align-items: center;\n    \n    .header-icon {\n      margin-right: 8px;\n      font-size: 24px;\n    }\n  }\n\n  .close-button {\n    --color: white;\n  }\n}\n\n.serie-image-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  \n  .serie-cover-image {\n    width: 200px;\n    height: 300px;\n    object-fit: cover;\n    border-radius: 16px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.2);\n    transition: transform 0.3s ease;\n    margin-bottom: 15px;\n    \n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n}\n\n.season-details-container {\n  background-image: url('/assets/background-pattern.svg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100%;\n  padding: 24px;\n\n  .details-card {\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 16px;\n    padding: 24px;\n    box-shadow: 0 4px 12px rgba(255, 87, 34, 0.1);\n\n    .season-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 24px;\n      padding-bottom: 16px;\n      border-bottom: 2px solid rgba(255, 87, 34, 0.1);\n\n      h1 {\n        color: #333;\n        font-size: 24px;\n        font-weight: 600;\n        margin: 0;\n      }\n\n      .rating-badge {\n        display: flex;\n        align-items: center;\n        background: linear-gradient(45deg, #ff5722, #ff9800);\n        color: white;\n        padding: 8px 16px;\n        border-radius: 20px;\n\n        ion-icon {\n          margin-right: 4px;\n          color: #fff;\n        }\n      }\n    }\n\n    .details-list {\n      .detail-item {\n        display: flex;\n        align-items: flex-start;\n        padding: 16px;\n        margin-bottom: 12px;\n        border-radius: 12px;\n\n        &:hover {\n          background: rgba(255, 87, 34, 0.05);\n          transform: translateX(8px);\n        }\n\n        ion-icon {\n          color: #ff5722;\n          font-size: 24px;\n          margin-right: 16px;\n          margin-top: 4px;\n        }\n\n        .detail-content {\n          flex: 1;\n\n          h2 {\n            color: #666;\n            font-size: 14px;\n            margin: 0 0 4px 0;\n          }\n\n          p {\n            color: #333;\n            font-size: 16px;\n            margin: 0;\n          }\n        }\n      }\n    }\n  }\n}\n\n@media (max-width: 576px) {\n  .season-details-container {\n    padding: 16px;\n\n    .details-card {\n      padding: 16px;\n\n      .season-header {\n        flex-direction: column;\n        align-items: flex-start;\n        \n        h1 {\n          margin-bottom: 12px;\n        }\n      }\n\n      .detail-item {\n        padding: 12px;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'SERIE.VIEW\\' | translate }}        @if (isMobile) {                                          }                                          {{ serie.name }}                            {{ serie.rating }}                                                            {{ \\'SERIE.NAME\\' | translate }}            {{ serie.name }}                                                          {{ \\'SERIE.SYNOPSIS\\' | translate }}            {{ serie.synopsis }}                                                          {{ \\'SERIE.RELEASEYEAR\\' | translate }}            {{ serie.releaseYear }}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SerieViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesLocalStorageMapping.html":{"url":"injectables/SeriesLocalStorageMapping.html","title":"injectable - SeriesLocalStorageMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesLocalStorageMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: SerieRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        SerieRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-local-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\ninterface SerieRaw{\n    id:string,\n    name:string,\n    synopsis:string,\n    releaseYear:number,\n    rating:number,\n    picture:{\n        url:string,\n        large:string,\n        medium:string,\n        small:string,\n        thumbnail:string\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Serie) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: SerieRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SerieRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SerieRaw):Serie {\n        return {\n            id:data.id, \n            name:data.name, \n            synopsis:data.synopsis, \n            releaseYear:data.releaseYear, \n            rating:data.rating,\n            picture:{\n                url:data.picture.url,\n                large:data.picture.large, \n                medium:data.picture.medium,\n                small:data.picture.small,\n                thumbnail:data.picture.thumbnail\n            }\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesMappingFirebaseService.html":{"url":"injectables/SeriesMappingFirebaseService.html","title":"injectable - SeriesMappingFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesMappingFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseSerie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Partial\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/series-mapping-firebase.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Serie } from '../../models/serie.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { FirebaseSerie } from '../../models/firebase/firebase-serie.model';\nimport { Firestore, getFirestore } from 'firebase/firestore';\nimport { FIREBASE_CONFIG_TOKEN } from '../repository.tokens';\nimport { initializeApp } from 'firebase/app';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeriesMappingFirebaseService implements IBaseMapping {\n  \n  private db: Firestore;\n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n        this.db = getFirestore(initializeApp(firebaseConfig));\n  }\n  getOne(data: { id: string } & FirebaseSerie): Serie {\n    return {\n      id: data.id,\n      name: data.name,\n      synopsis: data.synopsis,\n      releaseYear: data.releaseYear,\n      rating: data.rating,\n      picture: data.picture ? {\n        url: data.picture,\n        large: data.picture,\n        medium: data.picture,\n        small: data.picture,\n        thumbnail: data.picture\n      } : undefined\n    };\n  }\n  getPaginated(page: number, pageSize: number, pages: number, data: ({ id: string } & FirebaseSerie)[]): Paginated {\n    return {\n      page,\n      pageSize,\n      pages,\n      data: data.map(item => this.getOne(item))\n    };\n  }\n  setAdd(data: Serie): FirebaseSerie {\n    return {\n      name: data.name,\n      synopsis: data.synopsis,\n      releaseYear: data.releaseYear,\n      rating: data.rating,\n      picture: data.picture?.url || ''\n    };\n  }\n  setUpdate(data: Partial): Partial {\n    const mappedData: Partial = {};\n    \n    if (data.name !== undefined) mappedData.name = data.name;\n    if (data.synopsis !== undefined) mappedData.synopsis = data.synopsis;\n    if (data.releaseYear !== undefined) mappedData.releaseYear = data.releaseYear;\n    if (data.rating !== undefined) mappedData.rating = data.rating;\n    if (data.picture !== undefined) mappedData.picture = data.picture.url || '';\n    \n    return mappedData;\n  }\n\n  getAdded(data: { id: string } & FirebaseSerie): Serie {\n    return this.getOne(data);\n  }\n\n  getUpdated(data: { id: string } & FirebaseSerie): Serie {\n    return this.getOne(data);\n  }\n\n  getDeleted(data: { id: string } & FirebaseSerie): Serie {\n    return this.getOne(data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesMappingJsonServer.html":{"url":"injectables/SeriesMappingJsonServer.html","title":"injectable - SeriesMappingJsonServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesMappingJsonServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-json-server.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: SerieRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        SerieRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-json-server.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { Serie } from \"../../models/serie.model\";\n\nexport interface SerieRaw {\n    id: string\n    nombre: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingJsonServer implements IBaseMapping {\n    setAdd(data: Serie) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:SerieRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:SerieRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: SerieRaw):Serie {\n        return {\n            id:data.id, \n            name:data.nombre, \n            synopsis:data.synopsis, \n            releaseYear:data.releaseYear, \n            rating:data.rating\n        };\n    }\n    getAdded(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n    getUpdated(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n    getDeleted(data: any):Serie {\n        throw new Error(\"Method not implemented.\");\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesMappingStrapi.html":{"url":"injectables/SeriesMappingStrapi.html","title":"injectable - SeriesMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/series-mapping-strapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: Data | SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Data | SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: Data[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Data[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: SerieRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SerieRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Serie\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SerieData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Serie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/series-mapping-strapi.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Serie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SerieData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Serie } from \"../../models/serie.model\";\nimport { Season } from \"../../models/season.model\";\n\nexport interface SerieRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SerieAttributes\n}\nexport interface SerieData {\n    data: SerieAttributes;\n}\n\nexport interface SerieAttributes {\n    name: string\n    synopsis: string\n    releaseYear: number\n    rating: number\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeriesMappingStrapi implements IBaseMapping {\n    \n\n    setAdd(data: Serie):SerieData {\n        return {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear:data.releaseYear,\n                rating:data.rating\n            }\n        };\n    }\n    setUpdate(data: Serie):SerieData {\n        let toReturn:SerieData = {\n            data:{\n                name:data.name,\n                synopsis:data.synopsis,\n                releaseYear: data.releaseYear,\n                rating: data.rating\n            }\n        };  \n        Object.keys(data).forEach(key=>{\n            switch(key){\n                case 'name': toReturn.data['name']=data[key];\n                break;\n                default:\n            }\n        });\n        return toReturn;\n    }\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SerieRaw): Serie {\n        const isSerieRaw = (data: Data | SerieRaw): data is SerieRaw => 'meta' in data;\n        \n        const attributes = isSerieRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSerieRaw(data) ? data.data.id : data.id;\n\n        return {\n            id: id.toString(),\n            name: attributes.name,\n            synopsis: attributes.synopsis,\n            releaseYear: attributes.releaseYear,\n            rating: attributes.rating\n        };\n    }\n    getAdded(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SerieRaw):Serie {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeriesPageModule.html":{"url":"modules/SeriesPageModule.html","title":"module - SeriesPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SeriesPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeriesPageModule\n\n\n\ncluster_SeriesPageModule_imports\n\n\n\ncluster_SeriesPageModule_declarations\n\n\n\n\nSeriesPage\n\nSeriesPage\n\n\n\nSeriesPageModule\n\nSeriesPageModule\n\nSeriesPageModule -->\n\nSeriesPage->SeriesPageModule\n\n\n\n\n\nSeriesPageRoutingModule\n\nSeriesPageRoutingModule\n\nSeriesPageModule -->\n\nSeriesPageRoutingModule->SeriesPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/series/series.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SeriesPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SeriesPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { SeriesPage } from './series.page';\nimport { SeriesPageRoutingModule } from './series-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SeriesPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [SeriesPage]\n})\nexport class SeriesPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeriesPageRoutingModule.html":{"url":"modules/SeriesPageRoutingModule.html","title":"module - SeriesPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SeriesPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/series/series-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SeriesPage } from './series.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SeriesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SeriesPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesService.html":{"url":"injectables/SeriesService.html","title":"injectable - SeriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/series.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                delete\n                            \n                            \n                                getSeriesWithSeasons\n                            \n                            \n                                add\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ISeriesRepository, seasonsSvc: SeasonsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/series.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ISeriesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonsSvc\n                                                  \n                                                        \n                                                                        SeasonsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:49\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSeriesWithSeasons\n                        \n                    \n                \n            \n            \n                \ngetSeriesWithSeasons(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/series.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { Season } from '../../models/season.model';\nimport { SERIES_REPOSITORY_TOKEN, SEASONS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ISeriesService } from '../../services/interfaces/series-service.interface';\nimport { Serie } from '../../models/serie.model';\nimport { ISeriesRepository } from '../../repositories/intefaces/series-repository.interface';\nimport { Observable, forkJoin, map, switchMap } from 'rxjs';\nimport { Paginated } from '../../models/paginated.model';\nimport { SeasonsService } from './seasons.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeriesService extends BaseService implements ISeriesService {\n  constructor(\n    @Inject(SERIES_REPOSITORY_TOKEN) repository: ISeriesRepository,\n    private seasonsSvc: SeasonsService\n  ) {\n    super(repository);\n  }\n\n  getSeriesWithSeasons(page: number, pageSize: number): Observable> {\n    return this.getAll(page, pageSize).pipe(\n      switchMap((seriesPaginated: Paginated) => {\n        const seriesWithSeasons$ = seriesPaginated.data.map(serie =>\n          this.seasonsSvc.getAll(1, pageSize).pipe(\n            map(seasonsPaginated => {\n              const serieSeasons = seasonsPaginated.data.filter(season => season.serieId === serie.id);\n              return {\n                ...serie,\n                seasons: serieSeasons\n              };\n            })\n          )\n        );\n  \n        return forkJoin(seriesWithSeasons$).pipe(\n          map(seriesWithSeasons => ({\n            ...seriesPaginated,\n            data: seriesWithSeasons\n          }))\n        );\n      })\n    );\n  }\n\n  // Sobrescribir el método delete para eliminar también las temporadas asociadas\n  override delete(id: string): Observable {\n    return this.seasonsSvc.getAll(-1, 100).pipe(\n      switchMap((seasonsData: any) => {\n        let seasons: Season[];\n        \n        if (Array.isArray(seasonsData)) {\n          seasons = seasonsData.filter((season: Season) => season.serieId === id);\n        } else {\n          seasons = seasonsData.data.filter((season: Season) => season.serieId === id);\n        }\n        \n        const deleteOperations = seasons.map(season => \n          this.seasonsSvc.delete(season.id)\n        );\n        \n        if (deleteOperations.length === 0) {\n          return this.repository.delete(id);\n        }\n        \n        return forkJoin(deleteOperations).pipe(\n          switchMap(() => this.repository.delete(id))\n        );\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nSeasonModalComponent\n\nSeasonModalComponent\n\nSharedModule -->\n\nSeasonModalComponent->SharedModule\n\n\n\n\n\nSeasonViewComponent\n\nSeasonViewComponent\n\nSharedModule -->\n\nSeasonViewComponent->SharedModule\n\n\n\n\n\nSerieModalComponent\n\nSerieModalComponent\n\nSharedModule -->\n\nSerieModalComponent->SharedModule\n\n\n\n\n\nSerieSelectableComponent\n\nSerieSelectableComponent\n\nSharedModule -->\n\nSerieSelectableComponent->SharedModule\n\n\n\n\n\nSerieViewComponent\n\nSerieViewComponent\n\nSharedModule -->\n\nSerieViewComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nSeasonModalComponent \n\nSeasonModalComponent \n\nSeasonModalComponent  -->\n\nSharedModule->SeasonModalComponent \n\n\n\n\n\nSeasonViewComponent \n\nSeasonViewComponent \n\nSeasonViewComponent  -->\n\nSharedModule->SeasonViewComponent \n\n\n\n\n\nSerieModalComponent \n\nSerieModalComponent \n\nSerieModalComponent  -->\n\nSharedModule->SerieModalComponent \n\n\n\n\n\nSerieSelectableComponent \n\nSerieSelectableComponent \n\nSerieSelectableComponent  -->\n\nSharedModule->SerieSelectableComponent \n\n\n\n\n\nSerieViewComponent \n\nSerieViewComponent \n\nSerieViewComponent  -->\n\nSharedModule->SerieViewComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            SeasonModalComponent\n                        \n                        \n                            SeasonViewComponent\n                        \n                        \n                            SerieModalComponent\n                        \n                        \n                            SerieSelectableComponent\n                        \n                        \n                            SerieViewComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            SeasonModalComponent\n                        \n                        \n                            SeasonViewComponent\n                        \n                        \n                            SerieModalComponent\n                        \n                        \n                            SerieSelectableComponent\n                        \n                        \n                            SerieViewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SerieSelectableComponent } from './components/serie-selectable/serie-selectable.component';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { SeasonModalComponent } from './components/season-modal/season-modal.component';\nimport { SerieModalComponent } from './components/serie-modal/serie-modal.component';\nimport { SeasonViewComponent } from './components/season-view/season-view.component';\nimport { SerieViewComponent } from './components/serie-view/serie-view.component';\nimport { IonicModule } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n\n@NgModule({\n  declarations: [\n    SeasonModalComponent, \n    SerieModalComponent, \n    SerieSelectableComponent, \n    SeasonViewComponent,\n    SerieViewComponent,\n    PictureSelectableComponent\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    TranslateModule.forChild()\n  ],\n  exports: [\n    SeasonModalComponent, \n    SerieModalComponent,\n    SerieSelectableComponent,\n    SeasonViewComponent,\n    SerieViewComponent, \n    PictureSelectableComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignInPayload.html":{"url":"interfaces/SignInPayload.html","title":"interface - SignInPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignInPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload {\n  email: string;\n  password: string;\n}\n\nexport interface SignUpPayload {\n  username: string;\n  email: string;\n  password: string;\n  name: string;\n  surname: string;\n  user: string;\n  admin: boolean;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  name: string;\n  surname: string;\n  admin: boolean;\n  picture?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpPayload.html":{"url":"interfaces/SignUpPayload.html","title":"interface - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload {\n  email: string;\n  password: string;\n}\n\nexport interface SignUpPayload {\n  username: string;\n  email: string;\n  password: string;\n  name: string;\n  surname: string;\n  user: string;\n  admin: boolean;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  name: string;\n  surname: string;\n  admin: boolean;\n  picture?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Small.html":{"url":"interfaces/Small.html","title":"interface - Small","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Small\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SplashPage.html":{"url":"components/SplashPage.html","title":"component - SplashPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SplashPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/splash/splash.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-splash\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            LottieComponent\n                \n            \n\n            \n                styleUrls\n                ./splash.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./splash.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAnimationCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authSvc: BaseAuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/splash/splash.page.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAnimationCreated\n                        \n                    \n                \n            \n            \n                \nonAnimationCreated(animationItem: AnimationItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animationItem\n                                            \n                                                        AnimationItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnimationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    path: '/assets/lotties/splash.json', // Ruta a tu archivo de animación\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/splash/splash.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { AnimationOptions, LottieComponent, provideLottieOptions } from 'ngx-lottie';\nimport { IonicModule } from '@ionic/angular';\nimport player, { AnimationItem } from 'lottie-web';\n\n\n@Component({\n  selector: 'app-splash',\n  templateUrl: './splash.page.html',\n  styleUrls: ['./splash.page.scss'],\n  standalone:true,\n  imports: [IonicModule, LottieComponent]\n})\nexport class SplashPage implements OnInit {\n\n  options: AnimationOptions = {\n    path: '/assets/lotties/splash.json', // Ruta a tu archivo de animación\n  };\n\n  onAnimationCreated(animationItem: AnimationItem): void {\n    console.log('Animación creada:', animationItem);\n  }\n  constructor(\n    private router:Router,\n    private authSvc:BaseAuthenticationService\n  ) { }\n\n  ngOnInit() {\n    timer(5000).subscribe(_=>{\n      this.router.navigate(['/home']);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./splash.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsPage', 'selector': 'app-comments-page'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SeasonModalComponent', 'selector': 'app-season-modal'},{'name': 'SeasonsPage', 'selector': 'app-seasons'},{'name': 'SeasonViewComponent', 'selector': 'app-season-view'},{'name': 'SerieModalComponent', 'selector': 'app-serie-modal'},{'name': 'SerieSelectableComponent', 'selector': 'app-serie-selectable'},{'name': 'SeriesPage', 'selector': 'app-series'},{'name': 'SerieViewComponent', 'selector': 'app-serie-view'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'OnlyAllowedCharactersDirective', 'selector': '[appOnlyAllowedCharacters]'}];\n    var ACTUAL_COMPONENT = {'name': 'SplashPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SplashPageRoutingModule.html":{"url":"modules/SplashPageRoutingModule.html","title":"module - SplashPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SplashPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/splash/splash-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SplashPage } from './splash.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SplashPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SplashPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiAuthMappingService.html":{"url":"injectables/StrapiAuthMappingService.html","title":"injectable - StrapiAuthMappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiAuthMappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signInPayload\n                            \n                            \n                                signUp\n                            \n                            \n                                signUpPayload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: StrapiMeResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiMeResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: StrapiSignInResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiSignInResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StrapiSignIn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: StrapiSignUpResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiSignUpResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StrapiSignUp\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiAuthenticationService.html":{"url":"injectables/StrapiAuthenticationService.html","title":"injectable - StrapiAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAuthenticationService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                jwt_token\n                            \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                getToken\n                            \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInUrl: string, signUpUrl: string, meUrl: string, authMapping: IAuthMapping, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:52\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-authentication.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:107\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:87\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpPayload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpPayload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(userId: string, userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:95\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwt_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:16\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { filter, firstValueFrom, map, Observable, of, switchMap, take, tap } from 'rxjs';\nimport { BaseAuthenticationService } from './base-authentication.service';\nimport { AUTH_MAPPING_TOKEN, AUTH_ME_API_URL_TOKEN, AUTH_SIGN_IN_API_URL_TOKEN, AUTH_SIGN_UP_API_URL_TOKEN } from '../../repositories/repository.tokens';\nimport { HttpClient } from '@angular/common/http';\nimport { IAuthMapping } from '../interfaces/auth-mapping.interface';\nimport { StrapiMeResponse, StrapiSignInResponse, StrapiSignUpResponse, StrapiUser } from './strapi-auth-mapping.service';\nimport { IStrapiAuthentication } from '../interfaces/strapi-authentication.interface';\nimport { User, SignUpPayload } from '../../models/auth.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiAuthenticationService extends BaseAuthenticationService implements IStrapiAuthentication {\n\n  private jwt_token:string|null = null;\n  private apiUrl: string;\n  constructor(\n    @Inject(AUTH_SIGN_IN_API_URL_TOKEN) protected signInUrl: string,\n    @Inject(AUTH_SIGN_UP_API_URL_TOKEN) protected signUpUrl: string,\n    @Inject(AUTH_ME_API_URL_TOKEN) protected meUrl: string,\n    @Inject(AUTH_MAPPING_TOKEN) authMapping: IAuthMapping,\n    private httpClient:HttpClient\n  ) {\n    super(authMapping);\n    this.apiUrl = meUrl.replace('/users/me', '');\n    this.jwt_token = localStorage.getItem('seasons-jwt-token');\n    if (this.jwt_token) {\n      this.me().subscribe({\n        next:(resp) => {\n          this._authenticated.next(true);\n          this._user.next(this.authMapping.me(resp));\n        },\n        error: (err) => {\n          this._authenticated.next(false);\n          this._user.next(undefined);\n        },\n        complete:() => {\n          this._ready.next(true);\n        }\n      });\n    } else {\n      this._ready.next(true);\n    }\n    \n  }\n  getToken(): string | null {\n    return this.jwt_token;\n  }\n\n  async getCurrentUser(): Promise {\n    await firstValueFrom(this._ready.pipe(filter(ready => ready === true)));\n    return firstValueFrom(this._user);\n  }\n\n  signIn(authPayload: any): Observable {\n    return this.httpClient.post(\n      `${this.signInUrl}`, \n      this.authMapping.signInPayload(authPayload)).pipe(map((resp:StrapiSignInResponse)=>{\n      localStorage.setItem(\"seasons-jwt-token\",resp.jwt);\n      this.jwt_token = resp.jwt;\n      this._authenticated.next(true);\n      this._user.next(this.authMapping.signIn(resp));\n      return this.authMapping.signIn(resp);\n    }));\n  }\n\n  signUp(signUpPayload: SignUpPayload): Observable {    \n    return this.httpClient.post(\n        `${this.signUpUrl}`, \n        {\n            username: signUpPayload.username,\n            email: signUpPayload.email,\n            password: signUpPayload.password,\n            name: signUpPayload.name,\n            surname: signUpPayload.surname\n        }\n    ).pipe(map((resp:StrapiSignUpResponse)=>{\n        localStorage.setItem(\"seasons-jwt-token\",resp.jwt);\n        this.jwt_token = resp.jwt;\n        this._authenticated.next(true);\n        return this.authMapping.signUp(resp);\n    }));\n}\n\n  signOut(): Observable {\n    return of(true).pipe(tap(_=>{\n      localStorage.removeItem('seasons-jwt-token');\n      this._authenticated.next(false);\n      this._user.next(undefined);\n    }));\n  }\n\n  updateUser(userId: string, userData: Partial): Observable {\n    const updateUrl = `${this.apiUrl}/users/${userId}`;\n    \n    return this.httpClient.put(\n      updateUrl,\n      userData,\n      { headers: { Authorization: `Bearer ${this.jwt_token}` } }\n    ).pipe(\n      map((response: StrapiUser) => this.authMapping.me(response))\n    );\n  }\n\n  me():Observable{\n    return this.httpClient.get(\n      `${this.meUrl}`,{headers:{Authorization: `Bearer ${this.jwt_token}`}});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMeResponse.html":{"url":"interfaces/StrapiMeResponse.html","title":"interface - StrapiMeResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMeResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMedia.html":{"url":"interfaces/StrapiMedia.html","title":"interface - StrapiMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         StrapiMediaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMediaData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMediaData.html":{"url":"interfaces/StrapiMediaData.html","title":"interface - StrapiMediaData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMediaData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alternativeText\n                                        \n                                \n                                \n                                        \n                                            caption\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            previewUrl\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternativeText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alternativeText:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caption:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:         Formats\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Formats\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previewUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previewUrl:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrapiMediaService.html":{"url":"classes/StrapiMediaService.html","title":"class - StrapiMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrapiMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseMediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadUrl: string, auth: IStrapiAuthentication, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/strapi-media.service.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IStrapiAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-media.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { headers: { Authorization: string; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseMediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseMediaService:116\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiRepositoryService.html":{"url":"injectables/StrapiRepositoryService.html","title":"injectable - StrapiRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepositoryHttpService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IStrapiAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/strapi-repository.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IStrapiAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:81\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:97\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/strapi-repository.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { headers: { Authorization: string; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:89\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=user,serie,picture`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignIn.html":{"url":"interfaces/StrapiSignIn.html","title":"interface - StrapiSignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            identifier\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignInResponse.html":{"url":"interfaces/StrapiSignInResponse.html","title":"interface - StrapiSignInResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignInResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignUp.html":{"url":"interfaces/StrapiSignUp.html","title":"interface - StrapiSignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignUpResponse.html":{"url":"interfaces/StrapiSignUpResponse.html","title":"interface - StrapiSignUpResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignUpResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiUser.html":{"url":"interfaces/StrapiUser.html","title":"interface - StrapiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string,\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n    picture?: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    name: string\n    surname: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    username: string,\n    name: string,\n    surname: string,\n    email: string,\n    password: string,\n    \n}\nexport interface SerieRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            username: payload.username,\n            email: payload.email,\n            password: payload.password,\n            name: payload.name,\n            surname: payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username: response.user.username,\n            name:response.user.name,\n            surname:response.user.surname,\n            admin: false,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username: response.username,\n            name:response.name,\n            surname:response.surname,\n            email:response.email,\n            admin: false,\n            picture: response.picture\n        };\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/task.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\nimport { Season } from \"./season.model\";\n\nexport interface Task extends Model{\n    owner:Season,\n    date:Date\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/tasks.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ITasksRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/tasks.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ITasksRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { Task } from '../../models/task.model';\nimport { TASKS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ITasksRepository } from '../../repositories/intefaces/tasks-repository.interface';\nimport { ITasksService } from '../interfaces/tasks-service.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService extends BaseService implements ITasksService {\n  constructor(\n    @Inject(TASKS_REPOSITORY_TOKEN) repository: ITasksRepository\n  ) {\n    super(repository);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thumbnail.html":{"url":"interfaces/Thumbnail.html","title":"interface - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TogglePasswordPipe.html":{"url":"pipes/TogglePasswordPipe.html","title":"pipe - TogglePasswordPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TogglePasswordPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Pipes/toggle-password.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        togglePassword\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(showPassword: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pipes/toggle-password.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                showPassword\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'togglePassword'\n})\nexport class TogglePasswordPipe implements PipeTransform {\n  transform(showPassword: boolean): string {\n    return showPassword ? 'text' : 'password';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload {\n  email: string;\n  password: string;\n}\n\nexport interface SignUpPayload {\n  username: string;\n  email: string;\n  password: string;\n  name: string;\n  surname: string;\n  user: string;\n  admin: boolean;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  name: string;\n  surname: string;\n  admin: boolean;\n  picture?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRaw.html":{"url":"interfaces/UserRaw.html","title":"interface - UserRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Season } from \"../../models/season.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\nimport { NumericValueAccessor } from \"@ionic/angular\";\n\n\nexport interface MediaRaw{\n    data: StrapiMedia\n}\nexport interface UserRaw{\n    data: any\n}\nexport interface SerieRaw{\n    data: any\n}\n\nexport interface SeasonRaw {\n    data: Data\n    meta: Meta\n  }\n  \nexport interface Data {\n    id: number\n    attributes: SeasonAttributes\n}\nexport interface SeasonData {\n    data: SeasonAttributes;\n}\n\nexport interface SeasonAttributes {\n    name: string\n    numSeason: string\n    numEpisodes: number\n    releaseDate: Date\n    rating: number\n    serieId: string\n    user:UserRaw | number | null,\n}\n\nexport interface SerieAttributes {\n    name: string\n}\n\nexport interface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class SeasonsMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Season):SeasonData {\n        return {\n            data:{\n                name:data.name,\n                numSeason:data.numSeason,\n                numEpisodes:data.numEpisodes,\n                releaseDate:data.releaseDate,\n                rating:data.rating,\n                serieId:data.serieId??'',\n                user:data.userId?Number(data.userId):null,\n            }\n        };\n    }\n    setUpdate(data: Partial): SeasonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'numSeason': mappedData.numSeason = data[key];\n                break;\n                case 'numEpisodes': mappedData.numEpisodes = data[key];\n                break;\n                case 'releaseDate': mappedData.releaseDate = data[key];\n                break;\n                case 'rating': mappedData.rating = data[key];\n                break;\n                case 'serieId': mappedData.serieId = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as SeasonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|SeasonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | SeasonRaw): Season {\n        const isSeasonRaw = (data: Data | SeasonRaw): data is SeasonRaw => 'meta' in data;\n\n        const attributes = isSeasonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isSeasonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            numSeason: attributes.numSeason,\n            numEpisodes: attributes.numEpisodes,\n            releaseDate: attributes.releaseDate,\n            rating: attributes.rating,\n            serieId: attributes.serieId,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n        };\n    }\n    getAdded(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: SeasonRaw):Season {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Pipes/capitalize.pipe.ts\n            \n            pipe\n            CapitalizePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Pipes/toggle-password.pipe.ts\n            \n            pipe\n            TogglePasswordPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/logged.guard.ts\n            \n            variable\n            loggedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/models/auth.model.ts\n            \n            interface\n            SignInPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/auth.model.ts\n            \n            interface\n            SignUpPayload\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/auth.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/base.model.ts\n            \n            interface\n            Model\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/comment.model.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-season.model.ts\n            \n            interface\n            FirebaseSeason\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-serie.model.ts\n            \n            interface\n            FirebaseSerie\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/models/paginated.model.ts\n            \n            interface\n            Paginated\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/season.model.ts\n            \n            interface\n            Season\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/serie.model.ts\n            \n            interface\n            Serie\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/base-repository-firebase.service.ts\n            \n            injectable\n            BaseRepositoryFirebaseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/base-repository-http.service.ts\n            \n            injectable\n            BaseRepositoryHttpService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/base-repository-local-storage.service.ts\n            \n            injectable\n            BaseRespositoryLocalStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/comments-mapping-firebase.service.ts\n            \n            injectable\n            CommentsMappingFirebaseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/comments-mapping-firebase.service.ts\n            \n            interface\n            FirebaseComment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/comments-repository-firebase.service.ts\n            \n            injectable\n            CommentsRepositoryFirebaseService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/json-server-repository.service.ts\n            \n            injectable\n            JsonServerRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/json-server-repository.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-firebase.service.ts\n            \n            injectable\n            SeasonsMappingFirebaseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-json-server.service.ts\n            \n            injectable\n            SeasonsMappingJsonServer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-json-server.service.ts\n            \n            interface\n            SeasonRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts\n            \n            injectable\n            SeasonsLocalStorageMapping\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-local-storage.service.ts\n            \n            interface\n            SeasonRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            injectable\n            SeasonsMappingStrapi\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            MediaRaw\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            Meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SeasonAttributes\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SeasonData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SeasonRaw\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SerieAttributes\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/seasons-mapping-strapi.service.ts\n            \n            interface\n            UserRaw\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-firebase.service.ts\n            \n            injectable\n            SeriesMappingFirebaseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-json-server.service.ts\n            \n            injectable\n            SeriesMappingJsonServer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-json-server.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-local-storage.service.ts\n            \n            injectable\n            SeriesLocalStorageMapping\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-local-storage.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            injectable\n            SeriesMappingStrapi\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            Meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            SerieAttributes\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            SerieData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/series-mapping-strapi.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            injectable\n            StrapiRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            Meta\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-mapping.interface.ts\n            \n            interface\n            IBaseMapping\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-repository.interface.ts\n            \n            interface\n            IBaseRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-repository.interface.ts\n            \n            interface\n            SearchParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/comments-repository.interface.ts\n            \n            interface\n            ICommentsRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/seasons-repository.interface.ts\n            \n            interface\n            ISeasonsRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/series-repository.interface.ts\n            \n            interface\n            ISeriesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/tasks-repository.interface.ts\n            \n            interface\n            ITasksRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createBaseAuthMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createBaseMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createBaseRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createCollectionSubscriptionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            AuthenticationServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            AuthMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            CommentsCollectionSubscriptionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            CommentsMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            CommentsRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            MediaServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeasonsCollectionSubscriptionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeasonsMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeasonsRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeriesCollectionSubscriptionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeriesMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SeriesRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_ME_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_SIGN_IN_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_SIGN_UP_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            BACKEND_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COLLECTION_SUBSCRIPTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_COLLECTION_SUBSCRIPTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COMMENTS_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            FIREBASE_COLLECTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            FIREBASE_CONFIG_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_COLLECTION_SUBSCRIPTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SEASONS_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_COLLECTION_SUBSCRIPTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SERIES_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            STRAPI_AUTH_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            TASKS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            TASKS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            UPLOAD_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/ai.service.ts\n            \n            injectable\n            CohereService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/base-authentication.service.ts\n            \n            injectable\n            BaseAuthenticationService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/base-media.service.ts\n            \n            class\n            BaseMediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/base-service.service.ts\n            \n            injectable\n            BaseService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/comments.service.ts\n            \n            injectable\n            CommentsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-auth-mapping.service.ts\n            \n            injectable\n            FirebaseAuthMappingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-authentication.service.ts\n            \n            injectable\n            FirebaseAuthenticationService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-collection-subscription.service.ts\n            \n            injectable\n            FirebaseCollectionSubscriptionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-media.service.ts\n            \n            injectable\n            FirebaseMediaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/seasons.service.ts\n            \n            injectable\n            SeasonsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/series.service.ts\n            \n            injectable\n            SeriesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            injectable\n            StrapiAuthMappingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiMeResponse\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignInResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignUp\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignUpResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiUser\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-authentication.service.ts\n            \n            injectable\n            StrapiAuthenticationService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            class\n            StrapiMediaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Formats\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Large\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Medium\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            ProviderMetadata\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Small\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            StrapiMedia\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            StrapiMediaData\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Thumbnail\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/core/services/impl/strapi-media.service.ts\n            \n            type alias\n            StrapiUploadResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/auth-mapping.interface.ts\n            \n            interface\n            IAuthMapping\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/authentication.interface.ts\n            \n            interface\n            IAuthentication\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/base-service.interface.ts\n            \n            interface\n            IBaseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/collection-subscription.interface.ts\n            \n            interface\n            CollectionChange\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/collection-subscription.interface.ts\n            \n            interface\n            ICollectionSubscription\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/comments-service.interface.ts\n            \n            interface\n            ICommentsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/seasons-service.interface.ts\n            \n            interface\n            ISeasonsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/series-service.interface.ts\n            \n            interface\n            ISeriesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/strapi-authentication.interface.ts\n            \n            interface\n            IStrapiAuthentication\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/tasks-service.interface.ts\n            \n            interface\n            ITasksService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/my-seasons.service.ts\n            \n            injectable\n            MySeasonsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/my-seasons.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/my-seasons.service.ts\n            \n            interface\n            SeasonRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/my-series.service.ts\n            \n            injectable\n            MySeriesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/my-series.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/my-series.service.ts\n            \n            interface\n            SerieRaw\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/utils/blob.ts\n            \n            function\n            dataURLtoBlob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/utils/validators.ts\n            \n            function\n            passwordsMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/utils/validators.ts\n            \n            function\n            passwordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/directives/only-allowed-characters.directive.ts\n            \n            directive\n            OnlyAllowedCharactersDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/comments/comments.page.ts\n            \n            component\n            CommentsPage\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            class\n            Port\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/pages/seasons/seasons.page.ts\n            \n            component\n            SeasonsPage\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/pages/seasons/seasons.page.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/seasons/seasons.page.ts\n            \n            class\n            Port\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/series/series.page.ts\n            \n            component\n            SeriesPage\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/pages/series/series.page.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/series/series.page.ts\n            \n            class\n            Port\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/splash/splash.page.ts\n            \n            component\n            SplashPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/season-modal/season-modal.component.ts\n            \n            component\n            SeasonModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/season-view/season-view.component.ts\n            \n            component\n            SeasonViewComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/serie-modal/serie-modal.component.ts\n            \n            component\n            SerieModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/serie-selectable/serie-selectable.component.ts\n            \n            component\n            SerieSelectableComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/shared/components/serie-view/serie-view.component.ts\n            \n            component\n            SerieViewComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/material : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @apollo/client : ^3.11.8\n        \n            @capacitor/android : 7.0.1\n        \n            @capacitor/cli : ^7.0.1\n        \n            @capacitor/core : ^7.0.1\n        \n            @capacitor/screen-reader : ^7.0.0\n        \n            @google/generative-ai : ^0.24.0\n        \n            @ionic/angular : ^8.0.0\n        \n            @ngx-translate/core : ^16.0.3\n        \n            @ngx-translate/http-loader : ^16.0.0\n        \n            angular : ^1.8.3\n        \n            firebase : ^11.2.0\n        \n            http-proxy-middleware : ^3.0.3\n        \n            ionicons : ^7.0.0\n        \n            lottie-web : ^5.12.2\n        \n            ngx-lottie : ^12.0.0\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^17.18.12\n        \n            pusher-js : ^8.4.0-rc2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBaseAuthMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createBaseMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createBaseRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/repositories/repository.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBaseAuthMappingFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseAuthMappingFactory(token: InjectionToken, dependencies)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBaseMappingFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseMappingFactory(token: InjectionToken, dependencies, modelType)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                modelType\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBaseRepositoryFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseRepositoryFactory(token: InjectionToken, dependencies)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCollectionSubscriptionFactory\n                        \n                    \n                \n            \n            \n                \ncreateCollectionSubscriptionFactory(collectionName: string, mappingToken: InjectionToken, collectionSubscriptionToken: InjectionToken)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mappingToken\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                collectionSubscriptionToken\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/utils/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/utils/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator(serie: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serie\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMy Series\nMy Series esta desarrollada con Angular e Ionic y permite a los usuarios gestionar sus series de TV favoritas y sus temporadas.\nCaracterísticas principales\n\nCreación de Series: Crea tus series favoritas con su información relevante.\nCreación de Temporadas: Crea las temporadas de estas series creadas.\nPestaña about: Pagina con información relevante del creador.\nPestaña perfil: Pagina donde se puede ver y actualizar la información del usuario.\nInterfaz amigable: Diseñada con Ionic para una experiencia optimizada.\n\n\nVideo del proyecto del primer trimestre: https://youtu.be/mQuYNdEqhjQ \nVideo del proyecto del segundo trimestre: https://youtu.be/ZyZX6fsG_Wc \nNetlify del proyecto del segundo trimestre: angular2trimestre.netlify.app \n¡Gracias por usar My Series! Si tienes alguna pregunta o sugerencia, no dudes en contactarme.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeasonsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeasonsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeriesPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeriesPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SplashPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_SeasonsPageModule\n\n\n\ncluster_SeasonsPageModule_declarations\n\n\n\ncluster_SeasonsPageModule_imports\n\n\n\ncluster_SeriesPageModule\n\n\n\ncluster_SeriesPageModule_declarations\n\n\n\ncluster_SeriesPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nSeasonModalComponent \n\nSeasonModalComponent \n\nSeasonModalComponent  -->\n\nSharedModule->SeasonModalComponent \n\n\n\n\n\nSeasonViewComponent \n\nSeasonViewComponent \n\nSeasonViewComponent  -->\n\nSharedModule->SeasonViewComponent \n\n\n\n\n\nSerieModalComponent \n\nSerieModalComponent \n\nSerieModalComponent  -->\n\nSharedModule->SerieModalComponent \n\n\n\n\n\nSerieSelectableComponent \n\nSerieSelectableComponent \n\nSerieSelectableComponent  -->\n\nSharedModule->SerieSelectableComponent \n\n\n\n\n\nSerieViewComponent \n\nSerieViewComponent \n\nSerieViewComponent  -->\n\nSharedModule->SerieViewComponent \n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nOnlyAllowedCharactersDirective\n\nOnlyAllowedCharactersDirective\n\nProfilePageModule -->\n\nOnlyAllowedCharactersDirective->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nSeasonsPage\n\nSeasonsPage\n\n\n\nSeasonsPageModule\n\nSeasonsPageModule\n\nSeasonsPageModule -->\n\nSeasonsPage->SeasonsPageModule\n\n\n\n\n\nSeasonsPageRoutingModule\n\nSeasonsPageRoutingModule\n\nSeasonsPageModule -->\n\nSeasonsPageRoutingModule->SeasonsPageModule\n\n\n\n\n\nSeriesPage\n\nSeriesPage\n\n\n\nSeriesPageModule\n\nSeriesPageModule\n\nSeriesPageModule -->\n\nSeriesPage->SeriesPageModule\n\n\n\n\n\nSeriesPageRoutingModule\n\nSeriesPageRoutingModule\n\nSeriesPageModule -->\n\nSeriesPageRoutingModule->SeriesPageModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nSeasonModalComponent\n\nSeasonModalComponent\n\nSharedModule -->\n\nSeasonModalComponent->SharedModule\n\n\n\n\n\nSeasonViewComponent\n\nSeasonViewComponent\n\nSharedModule -->\n\nSeasonViewComponent->SharedModule\n\n\n\n\n\nSerieModalComponent\n\nSerieModalComponent\n\nSharedModule -->\n\nSerieModalComponent->SharedModule\n\n\n\n\n\nSerieSelectableComponent\n\nSerieSelectableComponent\n\nSharedModule -->\n\nSerieSelectableComponent->SharedModule\n\n\n\n\n\nSerieViewComponent\n\nSerieViewComponent\n\nSharedModule -->\n\nSerieViewComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    31 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    71 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StrapiUploadResponse   (src/.../strapi-media.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/impl/strapi-media.service.ts\n    \n    \n        \n            \n                \n                    \n                    StrapiUploadResponse\n                \n            \n            \n                \n                        StrapiMediaData[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_ME_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_SIGN_IN_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_SIGN_UP_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AuthenticationServiceFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            AuthMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            BACKEND_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COMMENTS_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            CommentsCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            CommentsMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            CommentsRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FIREBASE_COLLECTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            FIREBASE_CONFIG_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            loggedGuard   (src/.../logged.guard.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                        \n                            REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SEASONS_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SeasonsCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SeasonsMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SeasonsRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SERIES_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SERIES_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SERIES_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SERIES_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SERIES_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SeriesCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SeriesMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SeriesRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            STRAPI_AUTH_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TASKS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TASKS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            UPLOAD_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/repositories/repository.tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IAuthMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ME_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthMeApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SIGN_IN_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthSignInApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SIGN_UP_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthSignUpApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IAuthentication')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BACKEND_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Backend')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('CollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('CommentsApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('CommentsCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('ICommentsRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ICommentsRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMMENTS_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('CommentsResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIREBASE_COLLECTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FIREBASE_COLLECTION_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIREBASE_CONFIG_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FIREBASE_CONFIG_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IBaseRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('REPOSITORY_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SeasonsApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('SeasonsCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('ISeasonsRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ISeasonsRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEASONS_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SeasonsResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SeriesApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('SeriesCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('ISeriesRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ISeriesRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERIES_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SeriesResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRAPI_AUTH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IStrapiAuthentication')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TASKS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('TasksApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TASKS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ITasksRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UploadApiUrl')\n                    \n                \n\n\n        \n    \n\n    src/app/core/repositories/repository.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthenticationServiceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: BaseAuthenticationService,\n  useFactory: (backend:string, firebaseConfig:any, signIn:string, signUp:string, meUrl:string, mapping:IAuthMapping, http:HttpClient) => {\n    switch(backend){\n      case 'http':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'local-storage':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'json-server':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'strapi':\n        return new StrapiAuthenticationService(signIn, signUp, meUrl, mapping, http);\n      case 'firebase':\n        return new FirebaseAuthenticationService(firebaseConfig, mapping);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n    }\n    \n  },\n  deps: [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN, AUTH_SIGN_IN_API_URL_TOKEN, AUTH_SIGN_UP_API_URL_TOKEN, AUTH_ME_API_URL_TOKEN, AUTH_MAPPING_TOKEN, HttpClient]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseAuthMappingFactory(AUTH_MAPPING_TOKEN, [BACKEND_TOKEN])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CommentsCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'comments',\n  COMMENTS_REPOSITORY_MAPPING_TOKEN,\n  COMMENTS_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CommentsMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  COMMENTS_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'comment'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CommentsRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: COMMENTS_REPOSITORY_TOKEN,\n  useFactory: (backend: string, http: HttpClient, auth: BaseAuthenticationService, apiURL: string, resource: string, mapping: IBaseMapping, firebaseConfig?: any) => {\n    switch (backend) {\n      case 'firebase':\n        return new CommentsRepositoryFirebaseService(firebaseConfig, mapping);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED FOR COMMENTS\");\n    }\n  },\n  deps: [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    COMMENTS_API_URL_TOKEN, \n    COMMENTS_RESOURCE_NAME_TOKEN, \n    COMMENTS_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: BaseMediaService,\n  useFactory: (backend:string, firebaseConfig:any, upload:string, auth:IAuthentication, http:HttpClient) => {\n    switch(backend){\n      case 'http':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'local-storage':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'json-server':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'firebase':\n        return new FirebaseMediaService(firebaseConfig, auth);\n      case 'strapi':\n        return new StrapiMediaService(upload, auth as IStrapiAuthentication, http);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n    }\n    \n  },\n  deps: [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN, UPLOAD_API_URL_TOKEN, BaseAuthenticationService, HttpClient]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeasonsCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'seasons',\n  SEASONS_REPOSITORY_MAPPING_TOKEN,\n  SEASONS_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeasonsMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  SEASONS_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'season'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeasonsRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(SEASONS_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    SEASONS_API_URL_TOKEN, \n    SEASONS_RESOURCE_NAME_TOKEN, \n    SEASONS_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'series',\n  SERIES_REPOSITORY_MAPPING_TOKEN,\n  SERIES_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  SERIES_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'serie'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SeriesRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(SERIES_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    SERIES_API_URL_TOKEN, \n    SERIES_RESOURCE_NAME_TOKEN, \n    SERIES_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n    const authService = inject(BaseAuthenticationService);\n    const router = inject(Router);\n  \n    return authService.ready$.pipe(\n        filter(isReady => isReady), // Esperar a que `ready$` sea true\n        take(1), // Solo tomar el primer valor true\n        switchMap(() => authService.authenticated$), // Obtener el valor actual de autenticación\n        map(isLoggedIn => {\n          if (isLoggedIn) {\n            return true; // Usuario autenticado, permitir acceso\n          } else {\n            // Usuario no autenticado, redirigir al login\n            router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n            return false;\n          }\n        })\n    );\n  }\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'repositorios',\n  webDir: 'www'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl:\"https://seasons-z1gv.onrender.com\",\n  ApiKey: \"daULRgtqSX0mbYOLSxCpLlhNnRZl1JmdTZlnDCUH\",\n  firebaseConfig: {\n    apiKey: \"AIzaSyAUTcuiHsVee1mi3AbMamWx5BJJ_N2mWFw\",\n    authDomain: \"mi-serie-15fb6.firebaseapp.com\",\n    projectId: \"mi-serie-15fb6\",\n    storageBucket: \"mi-serie-15fb6.firebasestorage.app\",\n    messagingSenderId: \"282424850144\",\n    appId: \"1:282424850144:web:a72ef0bae5e4fcecec4285\",\n    measurementId: \"G-9L59HYRS5X\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl:\"http://localhost:1337\",\n  ApiKey: \"daULRgtqSX0mbYOLSxCpLlhNnRZl1JmdTZlnDCUH\",\n  firebaseConfig: {\n    apiKey: \"AIzaSyAUTcuiHsVee1mi3AbMamWx5BJJ_N2mWFw\",\n    authDomain: \"mi-serie-15fb6.firebaseapp.com\",\n    projectId: \"mi-serie-15fb6\",\n    storageBucket: \"mi-serie-15fb6.firebasestorage.app\",\n    messagingSenderId: \"282424850144\",\n    appId: \"1:282424850144:web:a72ef0bae5e4fcecec4285\",\n    measurementId: \"G-9L59HYRS5X\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/logged.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n    const authService = inject(BaseAuthenticationService);\n    const router = inject(Router);\n  \n    return authService.ready$.pipe(\n        filter(isReady => isReady), // Esperar a que `ready$` sea true\n        take(1), // Solo tomar el primer valor true\n        switchMap(() => authService.authenticated$), // Obtener el valor actual de autenticación\n        map(isLoggedIn => {\n            if (!isLoggedIn) {\n                // Usuario no autenticado, permitir acceso a rutas públicas\n                return true;\n            } else {\n                // Usuario ya autenticado, redirigir al home\n                router.navigate(['/home']);\n                return false;\n            }\n        })\n    );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
